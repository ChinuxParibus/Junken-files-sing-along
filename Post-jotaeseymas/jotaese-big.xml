<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress.com" created="2020-11-16 23:42"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>JOTA ESE (Y MÁS...)</title>
	<link>https://jotaeseymas.wordpress.com</link>
	<description>Mi laboratorio de Javascript y sus herramientas derivadas (que son muchas...)</description>
	<pubDate>Mon, 16 Nov 2020 23:42:50 +0000</pubDate>
	<language></language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
	<wp:base_blog_url>https://jotaeseymas.wordpress.com</wp:base_blog_url>

	<wp:author><wp:author_id>79130303</wp:author_id><wp:author_login><![CDATA[ch1nux]]></wp:author_login><wp:author_email><![CDATA[grilletjhony@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[ch1nux]]></wp:author_display_name><wp:author_first_name><![CDATA[Jhony Alberto]]></wp:author_first_name><wp:author_last_name><![CDATA[Grillet Medina]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.com/</generator>
<image>
		<url>http://1.gravatar.com/blavatar/5d361aefff1cb8183af67cbbf2ec0329?s=96&#038;d=http%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title>JOTA ESE (Y MÁS&#8230;)</title>
		<link>https://jotaeseymas.wordpress.com</link>
	</image>
		
	<item>
		<title>DICEN QUE EL UNIVERSO...</title>
		<link>https://jotaeseymas.wordpress.com/2015/01/18/dicen-que-el-universo/</link>
		<pubDate>Sun, 18 Jan 2015 19:31:21 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=3</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="Dicen que el universo..."&gt;
<p style="text-align:justify;">En matemáticas, existe todo un universo que cabe enteramente entre un "0" y un "1". También existe todo un universo entre esas dos etiquetas HTML... O sea, las que encabeza este blog, que de eso va esta entrada y las entradas siguientes...</p>
<p style="text-align:justify;">Espero que sea considerablemente recibido este micro-esfuerzo (vale, que aparte de ser autodidacta, no dejo de ser aficionado y curioso) por enseñar algunas cosas experimentadas de las locuras que salen de esta cabeza...</p>
<p style="text-align:justify;">Si, porque en mi cabeza también hay todo un universo... Pero enfocándome en lo que quiero enseñar, Javascript es de lo que va este blog (lo aclaro porque hay gente que no sabe ni que es eso y lo usa como quien usa un sombrero... ¬¬').</p>
<p style="text-align:justify;">No soy un gurú de la programación, pero si me gusta aprender. De todo lo poco o mucho que sepa (según el ojo con que se mire...) se los comparto ;)</p>
Disfrútenlo...

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date>2015-01-18 15:01:21</wp:post_date>
		<wp:post_date_gmt>2015-01-18 19:31:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dicen-que-el-universo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="category" nicename="sin-categoria"><![CDATA[Sin categoría]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¿QUIERES UN CAFÉ?</title>
		<link>https://jotaeseymas.wordpress.com/2015/01/20/quieres-un-cafe/</link>
		<pubDate>Tue, 20 Jan 2015 16:38:54 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=10</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="\¿quieres un caf&amp;eacute;\?"&gt;
<p style="text-align:justify;">En este momento si, gracias...</p>
<p style="text-align:justify;">Pero no voy a hablar del café, sino de la gente que hizo cosas inspirados en muchas tazas de café que se tomaron en muchas noches de sueño y desvelo...<!--more--></p>
<p style="text-align:justify;">Javascript, como cualquier lenguaje de programación, requiere tiempo y dedicación para aprenderlo, más en estos tiempos cuando la innovación está a la orden del día. Veamos tres ejemplos de esto:</p>

<ol>
<ul>
	<li><a title="CoffeeScript" href="http://coffeescript.org/" target="_blank">CoffeeScript.</a></li>
</ul>
</ol>
<p style="text-align:justify;">¡Se me olvidó el punto y coma! Casi puedo asegurar que este es el karma de la mayoría de los programadores en Javascript. Afortunadamente, CoffeeScript resuelve en gran medida este problema.</p>
<p style="text-align:justify;">CoffeeScript es un "compilador" de JavaScript, que permite reescribirlo de forma más simple, por ejemplo, una típica llamada a una función en Javascript sería:</p>


[code language="javascript"]
var escape = function(value) {
  if (value) {
    return alert(value);
  }
}
[/code]

<p style="text-align:justify;">Reescrita en CoffeeScript sería:</p>


[code language="javascript"]
escape = (value) -&gt; return alert(value) if value
[/code]

Interesante, ¿verdad?
<ol>
<ul>
	<li><a title="Mocha.js" href="http://mochajs.org/" target="_blank">Mocha.js</a></li>
</ul>
</ol>
<p style="text-align:justify;">Mocha.js pretende ser un framework de pruebas unitarias orientado a aplicaciones web escritas (obviamente) en Javascript. Corre sobre <a title="Node.js" href="http://nodejs.org" target="_blank">Node.js</a> (del cual haré varios posts más adelante)</p>
<p style="text-align:justify;">La facilidad de este framework consiste en escribir las pruebas en lenguaje (más o menos) natural, con la finalidad de hacer entender las funcionalidas. Tambien provée un componente de estadísticas para hacer (en primera instancia) pruebas de rendimiento. A continuación un ejemplo, extraído de su página web:</p>


[code language="javascript"]
var assert = require(&quot;assert&quot;)
describe('Array', function(){
  describe('#indexOf()', function(){
    it('should return -1 when the value is not present', function(){
      assert.equal(-1, [1,2,3].indexOf(5));
      assert.equal(-1, [1,2,3].indexOf(0));
    })
  })
})
[/code]

<p style="text-align:justify;">Para usar el lenguaje natural, debe complementarse con otras librerías, consulten la página del proyecto para más información. Personalmente no me tomo ese "mocaccino" (sólo porque aún no he aprendido a automatizar las pruebas unitarias :P )</p>

<ol>
<ul>
	<li><a title="Cappucccino Project" href="http://www.cappuccino-project.org/" target="_blank">Cappuccino Project</a></li>
</ul>
</ol>
<p style="text-align:justify;">Como si reinventar la rueda no fuera suficiente, Cappuccino Project es un framework web que le da una "vuelta de tuerca" a Javascript. Su filosofía se centra en escribir aplicaciones web basadas en datos y no en interacciones con las vistas (como el caso típico de <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a>).</p>
<p style="text-align:justify;">Cappuccino Project abstrae las interacciones con el DOM, con HTML y con CSS, teniendo una sintaxis similar al lenguaje de programación Objective-C (el que usan en iOS y MacOSX).</p>
<p style="text-align:justify;">De hecho, en este framework lo llaman "Objective-J" (¿?)</p>


[code language="javascript"]
@implementation Person : CPObject
{
  CPString name;
}
@end
[/code]

<p style="text-align:justify;">Digamos que está bien de vez en cuando reinventar la rueda, por el simple hecho de conocer algo nuevo, pero en mi opinión personal, ese capuccino está muy sobrecargado :(</p>
<p style="text-align:justify;">La idea no es descartar ninguna tecnología de plano, sino que, como siempre, el sentido común debe imperar por encima de lo "nuevo" (a pesar del cliente, eso si). Pero como decía mi abuelita: "no digas nunca de esta agua no beberé".</p>
<p style="text-align:justify;">Yo le cambiaría: "no digas nunca de este café no beberé"... ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2015-01-20 12:08:54</wp:post_date>
		<wp:post_date_gmt>2015-01-20 16:38:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quieres-un-cafe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SELECTS DEPENDIENTES CON ANGULAR JS</title>
		<link>https://jotaeseymas.wordpress.com/2015/01/22/selects-dependientes-con-angular-js/</link>
		<pubDate>Thu, 22 Jan 2015 21:25:21 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=17</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script title="selects dependientes con angular js" src="other pages"&gt;
<p style="text-align:justify;">Vale, que eso de los selects dependientes se puede hacer de miles de maneras y con miles de frameworks diferentes. Pero como a mi me gusta reinventar la rueda, pues...</p>
<p style="text-align:justify;">Esta es una forma ridículamente absurda (por lo fácil de implementar) de como realizar los tan mencionados selects dependientes, pero con una vuelta de tuerca (si, en Javascript)...
<!--more--></p>


[code lang="html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.10/angular.min.js&quot;&gt;&lt;/script&gt;
	&lt;title&gt;Select dependientes&lt;/title&gt;
&lt;/head&gt;
&lt;body ng-app=&quot;selects&quot;&gt;
	&lt;script&gt;
		var selects = angular.module('selects', []);
		selects.controller('UbicacionCtrl', ['$scope', function($scope) {
			$scope.ubicacion = {
				'Dtto. Capital': {
					'Libertador': ['La Vega', 'Antimano']
				},
				'Miranda': {
					'Plaza': ['Guarenas'],
					'Zamora': ['Guatire']
				}
			};
		}]);
	&lt;/script&gt;
	&lt;div ng-controller=&quot;UbicacionCtrl&quot; &gt;
		&lt;select ng-model=&quot;model_estado&quot; ng-options=&quot;estado for (estado, municipios) in ubicacion&quot;&gt;
			&lt;option value=&quot;&quot;&gt;- Seleccione -&lt;/option&gt;
		&lt;/select&gt;
		&lt;select ng-model=&quot;model_municipio&quot; ng-disabled=&quot;!model_estado&quot; ng-options=&quot;municipio for (municipio, parroquias) in model_estado&quot;&gt;
			&lt;option value=&quot;&quot;&gt;- Seleccione -&lt;/option&gt;
		&lt;/select&gt;
		&lt;select ng-model=&quot;model_parroquia&quot; ng-disabled=&quot;!model_estado || !model_municipio&quot; ng-options=&quot;parroquia for parroquia in model_municipio&quot;&gt;
			&lt;option value=&quot;&quot;&gt;- Seleccione -&lt;/option&gt;
		&lt;/select&gt;
	&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">Me parece que el ejemplo es claro en cuanto a la forma en la que implementa la acción, ahora bien, para los que no entienden ni papa, bueh, ya será para otro post en el que explicaré la potencia de este front-end framework MVW.</p>
<p style="text-align:justify;">Siento no explicar las acciones que ejecuta este código. Debería explicarlas, pero estoy escribiendo este post con una premura que ni les cuento, la misma premura con la que me pidieron este requerimiento para un sistema. Pues, la vida es así, no la he inventado yo :( ...</p>
<p style="text-align:justify;">Tengo que organizar este blog, o no van a caber las ideas que tengo en la cabeza...</p>
<p style="text-align:justify;"><strong>Actualizado: </strong>profundizaré en este tema en el <a title="Angular.js" href="https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/" target="_blank">Tutorial de Angular.js</a>, lo prometo ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2015-01-22 16:55:21</wp:post_date>
		<wp:post_date_gmt>2015-01-22 21:25:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selects-dependientes-con-angular-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[cubeandcolors]]></wp:comment_author>
			<wp:comment_author_email>info@cubeandcolors.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cubeandcolors.com</wp:comment_author_url>
			<wp:comment_author_IP>174.61.105.20</wp:comment_author_IP>
			<wp:comment_date>2015-03-04 12:37:43</wp:comment_date>
			<wp:comment_date_gmt>2015-03-04 17:07:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reblogueó esto en <a href="https://cubeandcolors.wordpress.com/2015/03/04/selects-dependientes-con-angular-js/" rel="nofollow">Cube and Colors Solutions blog</a>y comentado: 
#ImCubeandColors]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>80043698</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1425488864.4609611034393310546875;s:7:"message";s:30:"Akismet borró este comentario";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"cubeandcolors";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1425515860]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>reblog_ping</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1425515860]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1425493197.740355014801025390625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"cubeandcolors";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1425515861.635868072509765625;s:7:"message";s:53:"ch1nux ha cambiado su estado de comentario a approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[urKh]]></wp:comment_author>
			<wp:comment_author_email>gust989@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/gust989</wp:comment_author_url>
			<wp:comment_author_IP>190.78.29.2</wp:comment_author_IP>
			<wp:comment_date>2015-03-11 08:23:08</wp:comment_date>
			<wp:comment_date_gmt>2015-03-11 12:53:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chamo y ya decía yo, ¿dónde está el código?? No habia visto el expand source jejej

Gracias por el post man, saludos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426078389.075252056121826171875;s:7:"message";s:30:"Akismet borró este comentario";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"gust989";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1426078390]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[7941127495]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426083686.85192203521728515625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"gust989";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1426085742]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1426085742]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426085743.419043064117431640625;s:7:"message";s:53:"ch1nux ha cambiado su estado de comentario a approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[ch1nux]]></wp:comment_author>
			<wp:comment_author_email>grilletjhony@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jotaeseymas.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.109.233.62</wp:comment_author_IP>
			<wp:comment_date>2015-03-11 10:30:27</wp:comment_date>
			<wp:comment_date_gmt>2015-03-11 15:00:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[llur güercom... Aunque estoy seguro que me falta, lo tengo pendiente en la lista de borradores... ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5</wp:comment_parent>
			<wp:comment_user_id>79130303</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1426086028]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426086029.27913188934326171875;s:7:"message";s:30:"Akismet borró este comentario";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[7941304057]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1426086030]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Raul Alexander]]></wp:comment_author>
			<wp:comment_author_email>bremer_co@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/1751545248</wp:comment_author_url>
			<wp:comment_author_IP>190.233.8.163</wp:comment_author_IP>
			<wp:comment_date>2015-04-09 01:57:15</wp:comment_date>
			<wp:comment_date_gmt>2015-04-09 06:27:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tengo un problema, cuando visualizo el valor de "model_estado" me visualiza todo lo que está dentro, osea, por ejemplo, cuando elijo "Dtto. Capital" me muestra ---&gt; { 'Libertador': ['La Vega', 'Antimano']},  cómo hago para que solo me muestre "Libertador"???]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>hc_post_as</wp:meta_key>
				<wp:meta_value><![CDATA[facebook]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_avatar</wp:meta_key>
				<wp:meta_value><![CDATA[http://graph.facebook.com/v2.2/1751545248/picture?type=large&_md5=3780195cda28cf2fd20cd35a016c8349]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_foreign_user_id</wp:meta_key>
				<wp:meta_value><![CDATA[1751545248]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[9367398486]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1428675963]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1428675963]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428565676.553452968597412109375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428675964.552310943603515625;s:7:"message";s:53:"ch1nux ha cambiado su estado de comentario a approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428560835.8662741184234619140625;s:7:"message";s:30:"Akismet borró este comentario";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[ch1nux]]></wp:comment_author>
			<wp:comment_author_email>grilletjhony@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jotaeseymas.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>201.249.200.89</wp:comment_author_IP>
			<wp:comment_date>2015-04-10 09:57:02</wp:comment_date>
			<wp:comment_date_gmt>2015-04-10 14:27:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mmm, no deberìa, revisa la sintaxis de tu còdigo, si lo copiaste tal cual, funciona :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>79130303</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428676024.2065179347991943359375;s:7:"message";s:30:"Akismet borró este comentario";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1428676023]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[9367434282]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1428676025]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>A CELEBRAR...!!</title>
		<link>https://jotaeseymas.wordpress.com/2015/01/23/a-celebrar/</link>
		<pubDate>Fri, 23 Jan 2015 16:56:36 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="a celebrar..."&gt;

Alegraos, criaturitas del Señor...
<p style="text-align:justify;">Javascript ha sido nombrado el lenguaje de programación del 2014, según el índice <a title="TIOBE Index" href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html" target="_blank">TIOBE</a>, que es una compañía que realiza estudios relacionados con la popularidad de lenguajes de programación con propósitos estadísticos ($$$).</p>
<p style="text-align:justify;">Según este índice, que no mide el <strong>mejor</strong> lenguaje de programación ni aquel en el que más <strong>líneas de código</strong> se ha escrito, Javascript ha ganado 1,70 puntos porcentuales de popularidad respecto al año pasado, esto es debido a la cantidad de tecnologías, frameworks y demás innovaciones basadas en Javascript (tales como <a title="Node.js" href="http://nodejs.org" target="_blank">Node.js</a>, <a title="Angular.js" href="http://angularjs.org" target="_blank">Angular.js</a> y <a title="MEAN.JS" href="http://meanjs.org/" target="_blank">MEAN.js</a>, entre otros) que han repuntado durante los últimos meses del 2014.</p>
<p style="text-align:justify;">Vamos a ver, seamos honestos, ningún lenguaje de programación es la "<a title="Panacea universal" href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panacea</a>" que va a resolver todos los problemas del mundo. En lo personal, pienso que el mejor lenguaje de programación es en el que te sientas más cómodo programando. Personalmente, me siento feliz con Javascript, otros se sienten felices con Python, <a title="La libertad de aprender..." href="http://blog.crespo.org.ve" target="_blank">por ejemplo</a>.</p>
<p style="text-align:justify;">Pero estar en el número 7 de los 10 más populares, motiva un poco, ¿no creen?</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2015-01-23 12:26:36</wp:post_date>
		<wp:post_date_gmt>2015-01-23 16:56:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-celebrar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DIBUJANDO GRAFOS EN JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/01/26/dibujando-grafos-en-javascript/</link>
		<pubDate>Mon, 26 Jan 2015 19:14:05 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=21</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="dibujando grafos en javascript"&gt;
<p style="text-align:justify;">Que onda! Ando en una de investigador privado, chambeando un poco para acá y para allá, con los que saben, ya saben, y la neta que (ok, suficiente "mejicano" por hoy)...</p>
<p style="text-align:justify;">En esa de investigar, me he encontrado con un tutorial de los panas de <a title="Dibujar Grafos con Vis.js" href="http://geekytheory.com/dibuja-grafos-en-javascript-con-vis-js/" target="_blank">Geeky Theory</a>, en el que prueban un poco la librería <a title="Vis.js" href="http://visjs.org/" target="_blank">Vis.js</a> que sirve para dibujar nodos y grafos.
<!--more--></p>
<p style="text-align:justify;">Basta con descargarla (son 2MB aprox.), y referenciarla estáticamente en nuestras páginas, o buscar el RAW en el <a title="Github" href="https://github.com/" target="_blank">Octocat</a> y usarlo así. Otra opción es usar gestores de tareas automáticos como <a title="Bower" href="http://bower.io/" target="_blank">Bower</a> o <a title="NPM" href="https://www.npmjs.com/" target="_blank">NPM</a> (el gestor de paquetes de <a title="Node.js" href="http://nodejs.org" target="_blank">Node.js</a> (OMG, cuantas ideas para otros posts :)</p>
<p style="text-align:justify;">La idea de este código de ejemplo es: Tres nodos (el array "n") y tres conexiones (el array "c"). En el caso de las conexiones, quizá con un poco de lógica y creatividad, podríamos hacer magia, pero sólo quiero ilustrar la sencillez del código para elaborar grafos y nodos...</p>


[code language="html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;Ejemplo de Grafos&lt;/title&gt;
	&lt;link rel=&quot;stylesheet&quot; href=&quot;https://raw.githubusercontent.com/almende/vis/master/dist/vis.css&quot;&gt;
	&lt;script src=&quot;https://raw.githubusercontent.com/almende/vis/master/dist/vis.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;div id=&quot;dibujo&quot;&gt;&lt;/div&gt;
	&lt;script&gt;
  // Arreglo de nodos
  var n = [
    {id: 1, label: 'Nodo 1'},
    {id: 2, label: 'Nodo 2'},
    {id: 3, label: 'Nodo 3'},
  ];

  // Arreglo de conexiones
  var c = [
    {from: 1, to: 2},
    {from: 2, to: 3},
    {from: 3, to: 1}
  ];

  // Creando el contenedor para el canvas
  var contenedor = document.getElementById('dibujo');
  var datos_dibujo = {
    nodes: n,
    edges: c
  };
  var config = {}; //Se puede personalizar
  var dibujo = new vis.Network(contenedor, datos_dibujo, config);

	&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">Tomen en cuenta que los atributos de cada objeto elemento en cada arreglo se deben respetar para que la librería haga su "magia". Y he aquí la magia...</p>


[caption id="attachment_22" align="aligncenter" width="205"]<a href="https://jotaeseymas.files.wordpress.com/2015/01/captura-de-pantalla-de-2015-01-26-142628.png"><img class="wp-image-22 size-full" src="https://jotaeseymas.files.wordpress.com/2015/01/captura-de-pantalla-de-2015-01-26-142628.png" alt="Captura de pantalla de 2015-01-26 14:26:28" width="205" height="171" /></a> <strong style="font-size:14px;">Bonito, ¿no?</strong>[/caption]
<p style="text-align:justify;">Vale decir que esta librería no se limita solo a dibujar nodos y grafos, también pueden ver otros ejemplos más completos en su <a title="Vis.js" href="http://visjs.org/" target="_blank">página web</a> y su documentación asociada.</p>
<p style="text-align:justify;">Cuantas ideas... Me esta gustando esto de escribir, o ¿mejor lo dibujo? ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2015-01-26 14:44:05</wp:post_date>
		<wp:post_date_gmt>2015-01-26 19:14:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dibujando-grafos-en-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FILTRO DE BUSQUEDA EN ANGULAR JS</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/01/filtro-de-busqueda-en-angular-js/</link>
		<pubDate>Mon, 02 Feb 2015 00:08:05 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="filtro de busqueda en angular js"&gt;
<p style="text-align:justify;">Quizás existan otros métodos de búsqueda avanzada basados en <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a>, pero particularmente me inclino por este que es (en mi opinión) más sencillo de implementar. Sólo un campo <a title="Search Field HTML Markup" href="http://www.w3.org/TR/html-markup/input.search.html" target="_blank">search</a> y en este ejemplo, una tabla.
<!--more--></p>
<p style="text-align:justify;">La lógica para presentar los datos puede ser cualquiera (una tabla, párrafos, etcétera), y manejada por cualquier backend (datos en <a title="Javascript Object Notation" href="http://json.org" target="_blank">JSON</a>, una BD o un servicio web).</p>

[code language="html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;Busqueda Angular&lt;/title&gt;
	&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js&quot;&gt;&lt;/script&gt;
	&lt;script&gt;
		angular.module('busquedaAvanzada', [])
		.controller('busquedaController', ['$scope', function($scope){
			$scope.lista = [
				{nombre: 'Pepe', apellido: 'Trueno'},
				{nombre: 'Kava', apellido: 'Zorro'},
				{nombre: 'Rosa', apellido: 'Melo'},
				{nombre: 'Elmo', apellido: 'Jones'},
				{nombre: 'Gato', apellido: 'Negro'}
			];
		}]);
	&lt;/script&gt;
&lt;/head&gt;
&lt;body ng-app=&quot;busquedaAvanzada&quot;&gt;
	&lt;input type=&quot;text&quot; ng-model=&quot;busqueda&quot;&gt;
	&lt;table ng-controller=&quot;busquedaController&quot;&gt;
		&lt;thead&gt;
			&lt;tr&gt;
				&lt;th&gt;Nombre&lt;/th&gt;
				&lt;th&gt;Apellido&lt;/th&gt;
			&lt;/tr&gt;
		&lt;/thead&gt;
		&lt;tbody&gt;
			&lt;tr ng-repeat=&quot;item in lista | filter: busqueda&quot;&gt;
				&lt;td&gt;{{item.nombre}}&lt;/td&gt;
				&lt;td&gt;{{item.apellido}}&lt;/td&gt;
			&lt;/tr&gt;
		&lt;/tbody&gt;
	&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">El campo <a title="Search Field HTML Markup" href="http://www.w3.org/TR/html-markup/input.search.html" target="_blank">search</a> puede ser cualquier tipo de input que acepte texto, sólo es una cuestión de presentación, que vale decir que éste puede ser más específico. Pueden ver un ejemplo sencillo <a title="Directiva filter" href="https://code.angularjs.org/1.3.10/docs/api/ng/filter/filter" target="_blank">aquí</a>.</p>
<p style="text-align:justify;">En este caso particular, elegí servir los datos de ejemplo como un arreglo sencillo de objetos con dos atributos por objeto. La "magia" la realiza la directiva <em>filter</em> que se encarga de coincidir la ocurrencia de la iteración con lo contenido en el modelo <em>busqueda</em>.</p>
<p style="text-align:justify;">Independientemente de la forma en la que se sirvan los datos, <a title="Angular JS" href="http://angularjs.org" target="_blank">Angular.js</a> permite una fácil presentación de los datos mediante controladores y directivas.</p>
<p style="text-align:justify;">Tengo pendiente hacer un tutorial de <a title="Angular JS" href="http://angularjs.org" target="_blank">Angular.js</a> y uno de <a title="Node.js" href="http://nodejs.org" target="_blank">Node.js</a>, porque creo que ya he hablado bastante de ellos y me entusiasma seguir hablando.</p>
<p style="text-align:justify;">Lo anotaré en mi lista de cosas por hacer, luego la filtro jejeje ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2015-02-01 19:38:05</wp:post_date>
		<wp:post_date_gmt>2015-02-02 00:08:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>filtro-de-busqueda-en-angular-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_facebook</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¿DONDE INVESTIGAR JAVASCRIPT?</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/06/donde-investigar-javascript/</link>
		<pubDate>Fri, 06 Feb 2015 13:53:25 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="\¿donde investigar javascript\?"&gt;
<p style="text-align:justify;">Que onda, criaturitas del Señor. Continuo en la onda de mis investigaciones (y <a title="Ehm, si..." href="https://en.wikipedia.org/wiki/Fume" target="_blank">fumes</a>). En esa tónica, ando buscando material para investigar lo nuevo de este lenguaje de programación, etcétera. He encontrado tres sitios espectaculares para investigar y empezar (si quieres) a apasionarte por este interesante mundo.
<!--more--></p>

<ul>
	<li><a title="CodeSchool. Path: Javascript" href="https://www.codeschool.com/paths/javascript" target="_blank">Code School. Path: Javascript</a></li>
</ul>
<p style="text-align:justify;"><a title="CodeSchool" href="https://www.codeschool.com" target="_blank">CodeSchool</a> es una plataforma de cursos online (gratuitos y de pago) que se especializa en formar desarrolladores de tecnologías web desde cero. Tiene diferentes "paths" o areas de influencia dependiendo del lenguaje de programación que desees aprender. Personalmente me ubico aprendiendo Javascript (obviamente :P ), de hecho, estoy en ese "path" actualmente.</p>
<p style="text-align:justify;"><span style="color:#7cbbbb;">Pros</span>: Los cursos son desde cero, tanto si tienes experiencia en el lenguaje de programación como si no la tienes.
<span style="color:#d25349;">Contras</span>: Está en inglés... :/</p>

<ul>
	<li><a title="JS Books" href="http://jsbooks.revolunet.com/" target="_blank">JS Books</a></li>
</ul>
<p style="text-align:justify;">Es una página que posee una cantidad importante de libros descargables de forma gratuita (en formato PDF, ePub y otros) de Javascript. Deliré cuando vi esta página, ya que tiene realmente una amplia variedad de libros, tutos, cursos, y otras tecnologías basadas en Javascript. En la variedad está el gusto...</p>
<p style="text-align:justify;"><span style="color:#7cbbbb;">Pros</span>: Variedad, tienen desde como hacer un "hola mundo" en Javascript, hasta como hacer un "transpilador" con <a title="Node.js" href="http://nodejs.org">Node.js</a>.
<span style="color:#d25349;">Contras</span>: Aunque abarcan muchas tecnologías, hay muchos más libros que esos, y éstos no son los más nuevos (y están en inglés)... :/</p>

<ul>
	<li><a title="5JS" href="https://fivejs.codeschool.com/episodes" target="_blank">5 minutes of Javascript</a></li>
</ul>
<p style="text-align:justify;">Más que una página para investigar, es una página para mantenerse muy bien informado. Se trata de un magazine con podcasts donde conversan muchísimo sobre la actualidad de Javascript, nuevas tecnologías, librerías y publicidad sobre todo lo relacionado con Javascript. Por poner un ejemplo, allí me enteré de la "reciente" (para mí) aparición de <a title="ECMAScript versión 6" href="http://es6rocks.com/" target="_blank">ES6</a> o ECMAScript 6 (a.k.a. Javascript 6), pensada más o menos para mayo de este año (¡que emoción! :) )</p>
<p style="text-align:justify;"><span style="color:#7cbbbb;">Pros</span>: No tenía ni idea de la complejidad del ecosistema Javascript. Son muy concisos y entretenidos los podcasts. Aunque son cortos, referencian las páginas que sustentan la información, y eso es invaluable.
<span style="color:#d25349;">Contras</span>: Si, tal vez lo intuyeron, ¡Están en inglés! :(</p>

Sigo investigando, sigo programando, sigo Javascripteando... ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2015-02-06 09:23:25</wp:post_date>
		<wp:post_date_gmt>2015-02-06 13:53:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>donde-investigar-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="libros"><![CDATA[libros]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1</wp:comment_id>
			<wp:comment_author><![CDATA[LIBRERIA ANGULAR. PARTE -1. PRIMERO LO PRIMERO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.201</wp:comment_author_IP>
			<wp:comment_date>2015-02-18 10:27:23</wp:comment_date>
			<wp:comment_date_gmt>2015-02-18 14:57:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] ¿DONDE INVESTIGAR JAVASCRIPT? [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424271443.7099568843841552734375;s:7:"message";s:30:"Akismet borró este comentario";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1424272579]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424272580.9609611034393310546875;s:7:"message";s:53:"ch1nux ha cambiado su estado de comentario a approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[¿DONDE APRENDER JAVASCRIPT? | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/05/21/donde-aprender-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.193</wp:comment_author_IP>
			<wp:comment_date>2015-05-21 10:51:51</wp:comment_date>
			<wp:comment_date_gmt>2015-05-21 15:21:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] este post, publicaba algunas fuentes de información en las que se podía investigar Javascript para [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1432221711.9372909069061279296875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1432221760]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1432221761.6053779125213623046875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>LIBRERIA ANGULAR. PARTE -1. PRIMERO LO PRIMERO</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/</link>
		<pubDate>Wed, 18 Feb 2015 14:57:14 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="primero lo primero" &gt;
<p style="text-align:justify;">En mi país, y creo que en toda latinoamérica se celebra el carnaval por estas fechas. ¡Feliz retorno de las <a title="Ehm, si..." href="https://es.wiktionary.org/wiki/carnestolendas" target="_blank">carnestolendas</a>! Me había tardado considerablemente con este tuto, preparando detalles, ya saben :) ). Así que me he puesto por disciplina (siempre que el trabajo me lo permita), publicar un post de este tuto un miércoles a la semana.</p>
<!--more-->
<h2>Genial, ¿de qué va?</h2>
<p style="text-align:justify;">Vamos a construir una librería, llamada Librería Angular (que original :P ). Algo parecido al estilo de <a title="JS Books" href="http://jsbooks.revolunet.com/" target="_blank">JS Books</a> (el cual mencioné en <a title="¿Dónde investigar JavaScript?" href="https://jotaeseymas.wordpress.com/2015/02/06/donde-investigar-javascript/" target="_blank">un post anterior</a>). Usaremos en este caso un poco de las api's para el navegador de almacenamiento de datos (<a title="API para una RDBMS en el navegador" href="https://developer.mozilla.org/es/docs/IndexedDB-840092-dup" target="_blank">IndexedDB</a> para ser más específicos), principios de <a title="Single Page Application" href="https://en.wikipedia.org/wiki/Single-page_application" target="_blank">SPA</a> y <a title="Patrón de desarrollo modular" href="http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html" target="_blank">patrones de desarrollo modular</a>.</p>

<h2>Lo que contiene</h2>
<p style="text-align:justify;">Este tuto consta de 6 partes, y este post preliminar. La parte 0 intenta explicar la terminología usada en este tuto, porque escribir cada cosa en la medida que voy incluyendo código, es como que engorroso, me parece :P</p>

<ol>
 	<li><del>Parte 0. Angular 101</del></li>
 	<li><del>Parte 1. Controlando y dirigiendo</del></li>
 	<li><del>Parte 2. Enrutando</del></li>
 	<li><del>Parte 3. Fabricando</del></li>
 	<li><del>Parte 4. Validando</del></li>
 	<li>Parte 5. Personalizando</li>
</ol>
<h2>Lo que necesitamos</h2>
<ul>
 	<li><a title="Versión 1.3.10" href="https://code.angularjs.org/1.3.10/angular.min.js" target="_blank">Angular.js</a></li>
 	<li>Algunas librerías de <a title="las que se requieran..." href="https://code.angularjs.org/1.3.10/" target="_blank">Angular.js</a></li>
 	<li><a title="Dexie.js" href="http://www.dexie.org/" target="_blank">Dexie.js</a>, un "wrapper" para IndexedDB</li>
 	<li><a title="NO quiero nada con Chrome :p" href="https://www.mozilla.org/es-ES/firefox/new/" target="_blank">Mozilla Firefox</a></li>
 	<li><a title="Font Awesome 4.3" href="http://fontawesome.io/" target="_blank">Font Awesome</a>, <a title="Bootstrap 3" href="http://getbootstrap.com/" target="_blank">Bootstrap</a>, y su amigo inseparable <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a> ¬¬'</li>
</ul>
<h2>¿y si quiero hacer mis propias pruebas?</h2>
<p style="text-align:justify;">Bueno, supongo que subiré el código a un repo en el <a title="Github" href="https://github.com/ChinuxParibus/libreria-angular" target="_blank">Gato-Pulpo</a>. Soy algo neófito en esto de subir cosas al Gato-Pulpo :P , así que de antemano pido disculpas si no está con la frecuencia que desean.</p>
Paso a sumar +1 a la cuenta ;) ¡Que Dios me ayude!

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2015-02-18 10:27:14</wp:post_date>
		<wp:post_date_gmt>2015-02-18 14:57:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-1-primero-lo-primero</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="js-books"><![CDATA[JS Books]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[SELECTS DEPENDIENTES CON ANGULAR JS | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/01/22/selects-dependientes-con-angular-js/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.87</wp:comment_author_IP>
			<wp:comment_date>2015-02-19 14:34:24</wp:comment_date>
			<wp:comment_date_gmt>2015-02-19 19:04:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] LIBRERIA ANGULAR. PARTE -1. PRIMERO LO&nbsp;PRIMERO [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424372665.2684209346771240234375;s:7:"message";s:30:"Akismet borró este comentario";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1424374601]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424374603.1358559131622314453125;s:7:"message";s:53:"ch1nux ha cambiado su estado de comentario a approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>¡VAYA LIO CON LOS TIPOS!</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/10/vaya-lio-con-los-tipos/</link>
		<pubDate>Tue, 10 Feb 2015 15:25:11 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="\¡vaya lio con los tipos\!"&gt;
<p style="text-align:justify;">El título del post es simplemente hacer mención a uno de los problemas más comunes de Javascript, y es que sus tipos de datos suelen confundirse constantemente, pese a que sólo sean <del>seis</del> tres: <a title="Datatype: String" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FString" target="_blank">String</a>, <a title="Datatype: Number" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FNumber" target="_blank">Number</a>, y <a title="Datatype: Boolean" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FBoolean" target="_blank">Boolean</a>, sin incluir al tipo <a title="Datatype: Object" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank">Object</a> que es la "superclase" de casi todos (¿o todos?) los tipos de datos de Javascript, o <del>el primitivo</del> a los primitivos <a title="Datatype: null" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null" target="_blank">null </a>y <a title="Datatype: undefined" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2Fundefined" target="_blank">undefined</a>. El punto es que casi siempre ocurre que un valor "32" es pasado como String pero debe ser validado como Number y cosas así, ¡menudo lío!...
<!--more--></p>
<p style="text-align:justify;">Por fortuna existe una libreria que ayuda mucho en este aspecto, pues permite validar todos los tipos de datos conocidos de Javascript (a.k.a. ECMAScript 5) y algunas cosillas más, esta librería se llama <a title="is.js" href="http://arasatasaygin.github.io/is.js/">is.js</a> y básicamente lo que realiza es una validación con el método is(), retornando true si corresponde con el valor consultado. He aquí algunos ejemplos:</p>


[code language="javascript" collapse="true"]
var dato = {'arreglo':[1, 3, 6],'cadena': &quot;cadena de texto&quot;, 'numero': 32 , 'fecha' : new Date()};
	function validarValor(valor){
		if (is.number(valor))
			alert('es un numero');
		else if (is.string(valor))
			alert('es un string');
		else if (is.array(valor))
			alert('es un array');
		else if (is.date(valor))
			alert('es una fecha');
		else if (is.object(valor))
			alert('es un object');
		else if (is.undefined(valor))
			alert('no existe ese valor');
	}
[/code]

Y su respectivo HTML...

[code language="html" collapse="true"]
	&lt;script src=&quot;is.js&quot;&gt;&lt;/script&gt;
	&lt;button id=&quot;dato1&quot; onclick=&quot;validarValor(dato)&quot;&gt;Validar dato&lt;/button&gt;
	&lt;button id=&quot;dato2&quot; onclick=&quot;validarValor(dato.arreglo)&quot;&gt;Validar &quot;dato.arreglo&quot;&lt;/button&gt;
	&lt;button id=&quot;dato3&quot; onclick=&quot;validarValor(dato.cadena)&quot;&gt;Validar &quot;dato.cadena&quot;&lt;/button&gt;
	&lt;button id=&quot;dato4&quot; onclick=&quot;validarValor(dato.numero)&quot;&gt;Validar &quot;dato.numero&quot;&lt;/button&gt;
	&lt;button id=&quot;dato5&quot; onclick=&quot;validarValor(dato.fecha)&quot;&gt;Validar &quot;dato.fecha&quot;&lt;/button&gt;
	&lt;button id=&quot;dato6&quot; onclick=&quot;validarValor(dato.desconocido)&quot;&gt;Validar &quot;dato.desconocido&quot;&lt;/button&gt;
[/code]

<p style="text-align:justify;">Cada botón va a incluir una validación dentro del objeto que se pasa como parámetro a la función. ¿interesante, no?</p>
<p style="text-align:justify;">Pero esta librería no se limita a validar tipos de dato, sino que además puede validar <span title="is.function(funcion)">si un elemento es una función</span>, <span title="is.past(fecha)">si es una fecha del pasado</span>, <span title="is.positive(numero)">si un número es entero positivo</span>, <span title="is.any.even([2, 4, 6])">si todos los elementos de un arreglo son pares</span> o <span title="is.ie(6)">si el navegador usado es Internet Explorer 6</span>. Pueden ver su página oficial para más detalles.</p>
<p style="text-align:justify;">Lo que si es cierto es que es una interesante forma de validar tipos de datos y otras cosas para no volverse un lío con los tipos de dato en Javascript. Buena alternativa, ¿no?... ;)</p>
&lt;/script&gt;
<p style="text-align:justify;"><strong>Actualizado 20-05-2015: </strong>¡Uy! Yo mismo me hice un lío con los tipos de datos primitivos y sus <em>envoltorios... </em>Es lo bueno de investigar :D</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2015-02-10 10:55:11</wp:post_date>
		<wp:post_date_gmt>2015-02-10 15:25:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vaya-lio-con-los-tipos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[ALGUNAS PECULIARIDADES DE JAVASCRIPT | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/05/20/algunas-peculiaridades-de-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.212</wp:comment_author_IP>
			<wp:comment_date>2015-05-20 12:43:54</wp:comment_date>
			<wp:comment_date_gmt>2015-05-20 17:13:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] este post hablé (y corregí :D ) un poco sobre los tipos de datos primitivos en Javascript, así como una [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1432142034.6442430019378662109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1432142087]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1432142088.3564569950103759765625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>DR. JEKYLL Y MR. HYDE (...O EL OTRO LADO DE JQUERY)</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/10/dr-jekyll-y-mr-hyde-o-el-otro-lado-de-jquery/</link>
		<pubDate>Tue, 10 Feb 2015 20:33:08 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[

Decir que <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a> es lo máximo es como decir que no se necesita del aire para respirar, o lo que llamamos en español, una <a title="Definición de Falacia" href="https://es.wikipedia.org/wiki/Falacia" target="_blank">falacia</a>.

Y es que <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a> también tiene su lado oscuro...
<!--more-->
<p style="text-align:justify;">Vamos a ver, que si bien es cierto que <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a> te facilita la vida demasiado, no deja de ser algo opcional, aunque en algunos casos, la <a href="https://es.wikipedia.org/w/index.php?title=Pereza&redirect=no" target="_blank">flojera</a> es tanta que no nos atrevemos a escribir en Javascript puro, una función para cambiarle el color a un elemento:</p>
[code language="javascript" collapse="true"]
function cambiarColor(color){
	var elemento = document.getElementById('cambio');
	elemento.style.background = color;
}
[/code]

¡No! Sino que ya nos acostumbramos a:

[code language="javascript" collapse="true"]
function cambiarColor(color){
	$('#cambio').css('background', color);
}
[/code]

Punto a favor de jQuery, por ahora...
<p style="text-align:justify;">La sintaxis es técnicamente más limpia de lo que pudieramos esperar, y sus métodos y selectores son bastante útiles al momento de hacer manipulaciones impulsivas-compulsivas del <a title="Document Object Model" href="http://www.w3.org/TR/DOM-Level-2-Core/introduction.html" target="_blank">DOM</a> (como el método <code><a title=".closest()" href="http://api.jquery.com/closest/" target="_blank">.closest()</a></code> o el selector <code><a title=":nth-child()" href="http://api.jquery.com/nth-child-selector/" target="_blank">:nth-child()</a></code>, por ejemplo).</p>
<p style="text-align:justify;">Sin embargo, jQuery se vuelve un dolor de cabeza cuando se trata de escalar aplicaciones, cuando se usan o se necesitan una excesiva cantidad de validaciones abusando del objeto $(), cuando se requieren usar aplicaciones de otras librerías, como <a title="Prototype.js" href="http://prototypejs.org/" target="_blank">Prototype.js</a> o <a title="Angular.js" href="http://angularjs.org" target="_blank">Angular.js</a>. La consecuencia más visible es el rendimiento de carga de la página.</p>
<p style="text-align:justify;">En <a title="VanillaJS" href="http://vanilla-js.com/" target="_blank">VanillaJS</a>, pueden ver una comparación de rendimiento respecto a usar Javascript puro frente otras librerías (no sólo jQuery). A fin de cuentas, el lenguaje se creó para usarlo, no para "<a title="si, dije machucarlo" href="https://en.wiktionary.org/wiki/machucar#Spanish" target="_blank">machucarlo</a>". Más allá de las ventajas en sintaxis, nos trae desventajas importantes.</p>
<p style="text-align:justify;">En principio, al acceder a todo el árbol del <a title="Document Object Model" href="http://www.w3.org/TR/DOM-Level-2-Core/introduction.html" target="_blank">DOM</a> a través del objeto $(), crea una especie de <a title="Cuello de Botella" href="https://es.wikipedia.org/wiki/Cuello_de_botella_%28inform%C3%A1tica%29" target="_blank">cuello de botella</a>, luego está el hecho de que para alguien que no esté familiarizado con la sintaxis arriba descrita pueda resultar confusa, y amén de eso, creas una dependencia de librerías (en algunos casos, irremplazable como el caso de <a title="Bootstrap 3" href="http://getbootstrap.com/" target="_blank">Bootstrap</a>), algo que en lo personal no estoy de acuerdo.</p>
<p style="text-align:justify;">Ninguna tecnología es la <a title="Panacea universal" href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panacea</a> que va a resolver todos los problemas, siempre lo he dicho, tampoco digo que la librería en cuestión sea mala o desagradable, de hecho trabajo extensivamente con ella, el problema está cuando te pones las <a title="...para no ver nada de nada" href="http://www.dontpaniconline.com/media/magazine/604x/a986a6c6e9e09eca77c8d9516d50052a.jpg" target="_blank">gríngolas</a> sin probar otras alternativas (que sí las hay)... :p</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2015-02-10 16:03:08</wp:post_date>
		<wp:post_date_gmt>2015-02-10 20:33:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dr-jekyll-y-mr-hyde-o-el-otro-lado-de-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_path</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>UN JARDIN PARA RELAJARSE</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/13/un-jardin-para-relajarse/</link>
		<pubDate>Fri, 13 Feb 2015 12:53:41 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="un jardin para relajarse"&gt;
<p style="text-align:justify;">Un jardín es un lugar para relajarse, recostarse, y también para inspeccionar sobre los errores y los aciertos de nuestra vida, y además para descansar (que vamos a ver, no todo en la vida es código :) ). Pero hay jardines que se frecuentan para aprender y para renovarse, especialmente si lo que necesitas es una referencia concisa para enfocarte en lo que realmente importa: en lo que no sabes y deseas aprender.</p>
<p style="text-align:justify;">El <a title="Javascript Garden" href="http://bonsaiden.github.io/JavaScript-Garden/es" target="_blank">Jardín de JavaScript</a> es una guía de documentación acerca de las partes más peculiares de este lenguaje de programación. Brinda consejos para evitar los errores más comunes y sutiles, así como problemas de rendimiento y de malas prácticas que los programadores menos experimentados en JavaScript pueden resolver en sus esfuerzos por profundizar en el lenguaje.</p>
<p style="text-align:justify;">Por ejemplo, cuando visité ese jardín, lo primero que vi fue el <a title="Uso de this" href="http://bonsaiden.github.io/JavaScript-Garden/es/#function.this" target="_blank">uso de <code>this</code></a> y su ámbito de aplicación con ejemplos bien gráficos para que sea comprensible tanto para un novato como yo, hasta la gente más experta en este lenguaje, como por ejemplo <a title="Gente que sabe..." href="http://stackoverflow.com/users/170224/ivo-wetzel" target="_blank">Ivo Wetzel</a>, uno de los escritores de esta página.</p>
<p style="text-align:justify;">Si bien el Jardín no prentende enseñar JavaScript, es una referencia importante, disponible en todos los idiomas, para conocer ciertas peculiaridades que no se encuentran muy a menudo en <a title="...respecto a otros lenguajes" href="http://www.google.com/trends/explore#q=javascript%2C%20php%2C%20python%2C%20java&amp;cmpt=q&amp;tz=" target="_blank">San Google</a>. Aún así, es muy recomendable tener un conocimiento un poco más profundo sobre el lenguaje para entender los temas tratados en la referencia. Un buen comienzo podría ser la guía de la gente de <a title="Mozilla Developer Network" href="https://developer.mozilla.org/es/docs/Web/JavaScript" target="_blank">MDN</a>.</p>
<p style="text-align:justify;">¡Disfruten su estadía en el jardín! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2015-02-13 08:23:41</wp:post_date>
		<wp:post_date_gmt>2015-02-13 12:53:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>un-jardin-para-relajarse</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="ivo-wetzel"><![CDATA[Ivo Wetzel]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_457a1fb8cca8b716b24ab6dab5594f28</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>BASE DE DATOS ¿EN EL NAVEGADOR?. PARTE 1. LA TEORIA</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/05/base-de-datos-en-el-navegador-parte-1-la-teoria/</link>
		<pubDate>Thu, 05 Mar 2015 14:57:33 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="base de datos en el navegador. parte 1. la teoria"&gt;
<p style="text-align:justify;">Como lo están leyendo, criaturitas del Señor. Ya las cosas se están poniendo algo extrañas en el sub-mundo de los <a title="Relational DataBase Management System" href="http://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_bases_de_datos_relacionales" target="_blank">RDBMS</a>. Claro, salvando las diferencias con Oracle (del cual no voy a hablar :P ) o PostgreSQL (mi segundo favorito, pero de él tampoco voy a hablar :P ), una base de datos en el navegador tiene varios usos prácticos y mucha rapidez si se considera trabajar con pequeños volúmenes de datos.<!--more--></p>
<p style="text-align:justify;">Básicamente, existen 3 API's de navegador para bases de datos, pero yo voy a hablar de aquellas compatibles con <a title="...es el navegador que me gusta!" href="https://www.mozilla.org/es-ES/firefox/new/" target="_blank">Mozilla Firefox</a>:</p>

<ol>
	<li style="text-align:justify;"><a title="API para acceso a archivos locales" href="https://developer.mozilla.org/en-US/docs/Web/API/File" target="_blank">File</a>: Bueno, no necesariamente debe ser una base de datos esto de acceder a archivos, pero si la pensamos bien, puede resultar efectivo leer archivos tipo <code>clave:valor</code> como se hace en el estándar de facto <a title="Javascript Object Notation" href="http://json.org" target="_blank">JSON</a>. Podría funcionar, ¿no?</li>
	<li style="text-align:justify;"><a title="API para almacenar pequeñas cantidades de datos noSQL" href="https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage" target="_blank">localStorage</a>: Usado para almacenar pequeñas cantidades de datos (&lt;= 5MB) de forma persistente, por ejemplo, en formularios en los que se hayan guardado datos o almacenar un historial de cookies o de peticiones desde la misma máquina.</li>
	<li style="text-align:justify;"><a title="API para almacenar grandes cantidades de datos" href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API" target="_blank">IndexedDB</a>: La diferencia con la API anterior, es que ésta posee mayor capacidad de almacenamiento en el navegador (de acuerdo a lo máximo permisado por el cliente), y lo mejor de esta API es que permite soporte a transacciones SQL, ¡genial!</li>
</ol>
<p style="text-align:justify;">Existe otra API llamada <a title="estándar desactualizado por la W3C" href="http://www.w3.org/TR/webdatabase/" target="_blank">WebSQL</a>, pero no quise incluirla pues se desconoce su estado de desarrollo actual y su compatibilidad con Firefox. Aún así, puedes consultar más información y ejemplos respecto a este tema en la página de los chicos de <a title="Web API's en español" href="https://developer.mozilla.org/es/docs/Web/Reference/API" target="_blank">MDN</a>. Ahora bien, la idea no es hablar <a title="mucha palabrería..." href="http://buscon.rae.es/drae/srv/search?val=ch%E1chara" target="_blank">cháchara</a> sino dar ejemplos prácticos ¿no?</p>

<blockquote>
<p style="text-align:justify;">Hay varias razones por las que puede ser recomendable utilizar el almacenamiento en el cliente. En primer lugar, el almacenamiento en el cliente permite que una aplicación funcione cuando el usuario no está conectado, posiblemente sincronizando datos cuando vuelve a establecer conexión. En segundo lugar, aumenta el rendimiento, por lo que se puede mostrar una gran cantidad de datos en cuanto el usuario hace clic en el sitio en lugar de esperar a que vuelvan a descargarse. En tercer lugar, es un modelo de programación más sencillo que no requiere infraestructura de servidor. <strong><em>
- HTML5rocks.com</em></strong></p>
</blockquote>
<p style="text-align:justify;">Coincido completamente con el último punto de los chicos de <a title="HTML5 Rocks!" href="http://html5rocks.com" target="_blank">HTML5rocks.com</a>. De hecho, podríamos tener un <a title="Create, Read, Update and Delete" href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete" target="_blank">CRUD</a> completo contra el navegador para ilustrar esta afirmación (aunque no sea <strong>práctico en la práctica</strong>, valga la "rebuznancia", pero no más por inventar :P ). Sin embargo, los chicos también hacen una alerta importante sobre estas API's.</p>

<blockquote>
<p style="text-align:justify;">Por supuesto, los datos son más vulnerables y el usuario no puede acceder a ellos desde varios clientes, por lo que solo se debe utilizar para datos que no sean muy importantes, concretamente en versiones almacenadas en caché de datos específicos que también se encuentren "en la nube".
<strong><em>- HTML5rocks.com</em></strong></p>
</blockquote>
<p style="text-align:justify;">A pesar de esta recomendación de seguridad, las API's de almacenamiento local siguen teniendo una importante utilidad práctica, por ejemplo en el caso de aplicaciones que usan <a title="OpenGL en el navegador" href="http://es.wikipedia.org/wiki/WebGL" target="_blank">WebGL</a>, simulaciones en 3D, renderización de gráficos <a title="API Canvas para HTML5" href="https://developer.mozilla.org/es/docs/Web/HTML/Canvas" target="_blank">HTML5</a><a title="API Canvas para HTML5" href="https://developer.mozilla.org/es/docs/Web/HTML/Canvas" target="_blank">Canvas</a> o de gráficos vectoriales tipo <a title="...está muy interesante!" href="http://fabricjs.com/" target="_blank">SVG-to-Canvas</a> (del cual haré un post más adelante). ¡Dios mio, cuantas ideas! :D .</p>
<p style="text-align:justify;">Existen en el Gato-Pulpo diferentes "wrappers" que soportan API's de almacenamiento. Particularmente me decanté por uno llamado <a title="Dexie.js" href="http://www.dexie.org/" target="_blank">Dexie.js</a> que es bastante interesante, permite soporte a IndexedDB y tiene una sintaxis bastante sencilla. A efectos de complementar este post, el siguiente será con ejemplos de uso de esta librería, construyendo un CRUD completo para datos en el navegador.</p>
<p style="text-align:justify;">¡A programar se ha dicho! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2015-03-05 10:27:33</wp:post_date>
		<wp:post_date_gmt>2015-03-05 14:57:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>base-de-datos-en-el-navegador-parte-1-la-teoria</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VALIDANDO ANDO Y YA NO ME VOY QUEJANDO (PARTE 4. JQUERY VALIDATION Y FINAL)</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/24/validando-ando-y-no-me-voy-quejando-parte-4-jquery-validation/</link>
		<pubDate>Tue, 24 Feb 2015 16:49:33 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 4 jquery validation"&gt;
<p style="text-align:justify;">En el <a title="Parte 3. Validate.js" href="http://wp.me/p5CTtO-2d" target="_blank">post anterior</a>, se usó la librería <a title="Validate.js" href="https://rickharrison.github.io/validate.js/" target="_blank">Validate.js</a> para validar nuestro formulario del primer post. Esta vez voy a usar la librería <a title="jQuery Validation" href="http://jqueryvalidation.org/" target="_blank">jQuery Validation</a>, para ello necesitamos (obviamente) de <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a>, ya que esta librería se usa como una extensión de este framework.</p>
<!--more-->

<p style="text-align:justify;">Descargamos las librerías requeridas y las incluímos como normalmente se haría, primero jQuery y luego jQuery Validation:</p>

[code language="html"]
&lt;script src=&quot;jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;jquery.validate.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;additional-methods.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;localization/messages_es.js&quot;&gt;&lt;/script&gt;
[/code]

<p style="text-align:justify;">El archivo <em>additional-methods.js</em> contiene algunos métodos agregados por otras personas que desarrollaron diferentes implementaciones de esta librería, como por ejemplo el método <code>digits</code> y el método <code>lettersonly.</code></p>
<p style="text-align:justify;">El archivo <em>messages_es.js</em> contiene los mensajes localizados para el idioma español. Una vez incluídos, se escriben las reglas de validación respectivas para cada campo. Consulta los posts anteriores para ver los requerimientos de validación:</p>


[code language="javascript" collapse="true"]
$(document).ready(function() {
	$.validator.addMethod(&quot;texto&quot;, function(value, element) {
		return /[a-z0-9\s]+/ig.test(value);
	}, $.validator.format(&quot;Caracteres especiales no son permitidos&quot;));

	$('#formulario').validate({
		rules: {
			nombre: {required: true, lettersonly: true},
			apellido: {required: true, lettersonly: true},
			direccion: {required: true, texto: true},
			correo: {required: true, email: true},
			edad: {required: true, digits: true},
			sexo: &quot;required&quot;,
			cine: {require_from_group: [1, &quot;:checkbox&quot;]},
			radio: {require_from_group: [1, &quot;:checkbox&quot;]},
			teatro: {require_from_group: [1, &quot;:checkbox&quot;]}
		}
	});
});
[/code]

<p style="text-align:justify;">En el método <code>texto</code> se verifica que el valor en el campo contenga sólo letras, números y espacios, agregando un mensaje (en español) en caso de no ser válido. Por su parte, el método <code>require_from_group</code> verifica por medio de un selector de jQuery, que se seleccionen al menos uno de los campos marcados por el selector (¡dolor de cabeza resuelto :D !). Pueden ver más ejemplos de esta librería en la documentación de su página oficial. ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2015-02-24 12:19:33</wp:post_date>
		<wp:post_date_gmt>2015-02-24 16:49:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validando-ando-y-no-me-voy-quejando-parte-4-jquery-validation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VALIDANDO ANDO Y NO ME VOY QUEJANDO (PARTE 2. JAVASCRIPT)</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/20/validando-ando-y-no-me-voy-quejando-parte-2-javascript/</link>
		<pubDate>Fri, 20 Feb 2015 19:56:10 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 2 javascript"&gt;
<p style="text-align:justify;">En el <a title="Parte 1. Javascript" href="http://wp.me/p5CTtO-1r" target="_blank">post anterior</a>, había creado un ejemplo de formulario típico que requería ser validado. He aquí el código:</p>


[code language="html" collapse="true"]
&lt;h3&gt;Ingrese sus datos&lt;/h3&gt;
&lt;form action=&quot;#&quot; name=&quot;datosPersonales&quot; id=&quot;formulario&quot; onsubmit=&quot;validarFormulario(this)&quot;&gt;
	&lt;label for=&quot;nombre&quot;&gt;Nombre:&lt;/label&gt;
	&lt;input type=&quot;text&quot; name=&quot;nombre&quot; id=&quot;nombre&quot;&gt;
	&lt;label for=&quot;apellido&quot;&gt;Apellido:&lt;/label&gt;
	&lt;input type=&quot;text&quot; name=&quot;apellido&quot; id=&quot;apellido&quot;&gt;
	&lt;label for=&quot;direccion&quot;&gt;Dirección:&lt;/label&gt;
	&lt;textarea style=&quot;resize: none;&quot; name=&quot;direccion&quot; id=&quot;direccion&quot;&gt;&lt;/textarea&gt;
	&lt;label for=&quot;correo&quot;&gt;Email: &lt;/label&gt;
	&lt;input type=&quot;email&quot; name=&quot;correo&quot; id=&quot;correo&quot;&gt;
	&lt;label for=&quot;edad&quot;&gt;Edad:&lt;/label&gt;
	&lt;input type=&quot;number&quot; name=&quot;edad&quot; id=&quot;edad&quot;&gt;
	&lt;label for=&quot;Sexo&quot;&gt;Sexo:&lt;/label&gt;
	&lt;input type=&quot;radio&quot; name=&quot;sexo&quot; id=&quot;sexo_M&quot; value=&quot;M&quot;&gt;Masculino
	&lt;input type=&quot;radio&quot; name=&quot;sexo&quot; id=&quot;sexo_F&quot; value=&quot;F&quot;&gt;Femenino
	&lt;label for=&quot;actividades&quot;&gt;Actividades:&lt;/label&gt;
	&lt;input type=&quot;checkbox&quot; name=&quot;cine&quot; id=&quot;cine&quot; value=&quot;cine&quot;&gt;Cine
	&lt;input type=&quot;checkbox&quot; name=&quot;teatro&quot; id=&quot;teatro&quot; value=&quot;teatro&quot;&gt;Teatro
	&lt;input type=&quot;checkbox&quot; name=&quot;radio&quot; id=&quot;radio&quot; value=&quot;radio&quot;&gt;Radio
	&lt;input type=&quot;submit&quot; value=&quot;Confirmar&quot; id=&quot;confirmar&quot;&gt;
&lt;/form&gt;
[/code]

<p style="text-align:justify;">No voy a enfocarme en el CSS, sólo en las formas en las que pueden validarse los campos. Revisa el post señalado al inicio.<!--more--></p>

<h2>Manos a la ubre...</h2>
<p style="text-align:justify;">Podemos validar campo por campo usando <code>name</code>, <code>id</code> o <code>value</code> dentro del método <code>validarFormulario()</code>, sin embargo, una forma fácil sería usar una pequeña rutina y usar los mensajes de error por defecto del navegador:</p>


[code language="javascript" collapse="true"]
function validarFormulario(form){
	for (var i = 0; i &lt; form.length; i++) {
		if (!form[i].checkValidity()){
			return;
		}
	}
}
[/code]

<p style="text-align:justify;">El método <code>checkValidity()</code> tiene implementados una serie de constraints para validar la mayoria de los campos del tipo <code>&lt;input&gt;</code>. La idea es simple: se itera sobre toda la longitud del arreglo y se llama al método antes mencionado, y éste retornará <code>true</code> o <code>false</code> dependiendo del constraint asignado al elemento HTML como atributo. Puedes ver los constraints de validación para cada elemento <code>&lt;input&gt;</code> <a title="MDN Validation-relate Attributes" href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation#Validation-related_attributes" target="_blank">en este enlace</a>.</p>
Aquí van algunos ejemplos puntuales del uso de estos constraints:
<ul>
	<li>Un campo requerido (no puede estar vacío):
<code>&lt;input type="text" <strong>required</strong>&gt;</code></li>
	<li>Un campo que sólo acepte caracteres alfanuméricos y espacios:
<code>&lt;input type="text" <strong>pattern="\w+"</strong>&gt;</code> (usamos nuestras amigas, las <a title="MDN Regular Expressions" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank">Expresiones Regulares</a> :)</li>
	<li>Un campo que acepte sólo números entre 1 y 10:
<code>&lt;input type="number" <strong>pattern="\d+"</strong> <strong>min="1" max="10"</strong>&gt;</code></li>
	<li>Un campo de tipo <code>email</code> ya genera un constraint para validar emails:
<code>&lt;input <strong>type="email"</strong>&gt;</code></li>
</ul>
<p style="text-align:justify;">Ahora bien, esta es una forma sencilla de validar campos, pero tal vez sea poco óptima para la práctica. Por desgracia, el método <code>checkValidity()</code> <strong>NO</strong> afecta a los elementos de tipo <code>checkbox</code>, para ello podríamos tomar dichos elementos por separado e ir validando cada uno de ellos usando la referencia absoluta al nombre del formulario, al nombre del elemento y a la bandera <code>checked</code>, por ejemplo.</p>


[code language="javascript" collapse="true"]
if (	!document.datosPersonales.cine.checked &amp;&amp;
	!document.datosPersonales.teatro.checked &amp;&amp;
	!document.datosPersonales.radio.checked) {
		alert('debe seleccionar al menos una opción');
		return;
	}
[/code]

<p style="text-align:justify;">Este código iría antes del bucle <code>for</code> que valida el resto de los <code>&lt;input&gt;</code>. Ahora bien, con tan sólo ver el código, se entiende que esta sea una de las razones por las que algunos (muchos) desarrolladores prefieren validar los campos de formulario con librerías externas, tales como jQuery Validation o validate.js, de las cuales hablaré en un próximo post.</p>
<p style="text-align:justify;">¡Gracias por su paciencia! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2015-02-20 15:26:10</wp:post_date>
		<wp:post_date_gmt>2015-02-20 19:56:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validando-ando-y-no-me-voy-quejando-parte-2-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VALIDANDO ANDO Y NO ME VOY QUEJANDO (PARTE 1. JAVASCRIPT)</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/18/validando-ando-y-no-me-voy-quejando-parte-1-javascript/</link>
		<pubDate>Wed, 18 Feb 2015 20:42:39 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 1 validacion nativa"&gt;
<p style="text-align:justify;">La validación de campos de formulario, es un dolor de cabeza típico en un desarrollo web (y en Javascript :( ). ¿Que tanto debe validarse o "restringirse" los datos que deben ser ingresados para "asegurar" una entrada limpia de datos? Aparte del sentido común, existen diferentes criterios que dependerán de la velocidad de la carga de la página, extensión de los campos del formulario, tipos de datos correspondientes en base de datos, seguridad de la aplicación, y un sinnúmero de etcéteras...
<!--more--></p>
<p style="text-align:justify;">Un formulario típico de una página de internet, es un formulario de registro como el que sigue (CSS más, CSS menos):</p>
<a href="https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-140245.png"><img class=" size-medium wp-image-90 aligncenter" src="https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-140245.png?w=300" alt="formulario de registro ejemplo" width="300" height="289" /></a>Típicas condiciones de ingreso de los datos:
<ul>
	<li>Todos los campos son requeridos, es decir, no debe haber campos vacíos o sin seleccionar.</li>
	<li>Los campos "Nombre" y "Apellido" sólo deben aceptar letras y espacios en blanco (pues yo aún no he visto a nadie llamarse "Juan12").</li>
	<li>El campo "Dirección" debe aceptar letras, números y espacios.</li>
	<li>El campo "Email" debe ser un email válido.</li>
	<li>El campo "Edad" sólo debe aceptar números (dolor de cabeza número 1!!).</li>
	<li>En el campo "Sexo" debe seleccionarse un ítem. (dolor de cabeza número 2!).</li>
	<li>En el campo "Actividades" debe haber seleccionada al menos una opción (dolor de cabeza número 3!).</li>
	<li>El botón "Confirmar" no debe dejar pasar datos a la aplicación si algunas de las condiciones anteriores no se cumple.</li>
</ul>
<p style="text-align:justify;">Adicionalmente, ningún campo debe aceptar caracteres especiales (como los corchetes angulares "&gt;&lt;" por seguridad). En este ejemplo, es "sencillo" saber las condiciones de ingreso de los datos, sin embargo existen cosas "monstruosas" y "enfermizas".</p>
<p style="text-align:justify;"><a href="https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-143437.png"><img class="  wp-image-91 aligncenter" src="https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-143437.png?w=300" alt="Formularios como estos dan asco..." width="463" height="307" /></a>Lamentablemente, hay mucha gente que no conoce que es <a title="Don't Repeat Yourself" href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank">DRY</a> o <a title="Keep It Simple, Stupid!" href="https://en.wikipedia.org/wiki/KISS_principle" target="_blank">KISS</a>, y luego inician los problemas para ellos en etapas posteriores del desarrollo.</p>
<p style="text-align:justify;">Para que exista una validación efectiva, en principio debería estar del lado del cliente, acompañada (si la arquitectura del sistema lo permite) de una <a title="Remoción de caracteres no deseados" href="https://en.wikipedia.org/wiki/Code_injection#Preventing_code_injection" target="_blank">sanitización</a> (llámenlo paranoia, si lo desean) de los datos en los campos del formulario. En este post, intento utilizar los recursos nativos de Javascript y un poco de lógica de programación para validar este formulario del lado del cliente.</p>

<h2>La API <em>forms</em> de Javascript</h2>
<p style="text-align:justify;">La API <a title="Document.forms" href="https://developer.mozilla.org/en-US/docs/Web/API/document.forms?redirectlocale=en-US&amp;redirectslug=DOM%2Fdocument.forms" target="_blank">forms</a> de Javascript indexa todos los formularios dentro de un documento HTML, en el orden en el que fueron codificados. Así, si existen dos o más formularios, el primero puede ser llamado por la sentencia <code>document.forms[0]</code>, y así para el resto. Una vez ubicado el formulario a ser validado, pues se acceden a los atributos del campo para realizar las respectivas validaciones, he aquí algunos de los más usados:</p>

<ul>
	<li style="text-align:justify;">El atributo <code>name</code> para identificar el nombre del campo dentro del objeto <code>document.forms[0]</code>.</li>
	<li style="text-align:justify;">El atributo <code>id</code> para identificar un campo de forma única, y acceder a él via consultas de selectores (usando el método <a title="Realiza desplazamientos transversales del DOM" href="https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelector?redirectlocale=en-US&amp;redirectslug=DOM%2FDocument.querySelector" target="_blank">querySelector()</a>, por ejemplo).</li>
	<li style="text-align:justify;">El atributo <code>value</code> para identificar el valor que posee un elemento en el momento en que éste es instanciado.</li>
</ul>
<p style="text-align:justify;">Existen además ciertos atributos que permiten conocer el estado general de un elemento (si está seleccionado, si está vacío, si tiene el cursor encima o si tiene el foco de atención). Volviendo al ejemplo anterior, se podría mandar el formulario entero: <code>&lt;form action="POST" name="datosPersonales" id="formulario" onsubmit="validarFormulario(this)"&gt;</code>, referenciar el elemento por su nombre directamente: <code>document.datosPersonales</code>, obtenerlo mediante el identificador único: <code>document.getElementById("formulario")</code> o realizar una consulta mediante selectores: <code>document.querySelector("#formulario")</code>.</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2015-02-18 16:12:39</wp:post_date>
		<wp:post_date_gmt>2015-02-18 20:42:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validando-ando-y-no-me-voy-quejando-parte-1-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PROMESAS... PROMESAS...</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/</link>
		<pubDate>Sun, 08 Mar 2015 00:23:08 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="promesas promesas"&gt;

[youtube https://www.youtube.com/watch?v=llDikI2hTtk]

No, este post no va de dubstep ni del video de arriba (¿pero si que <a title="Ehm, si..." href="http://que-significa.com/significado.php?termino=mola" target="_blank">mola</a>, no? ;) )<!--more-->
<h2>¿Qué es eso de las "Promesas"?</h2>
<p style="text-align:justify;">Una <em>promesa </em>es un encapsulamiento de una operación invocada de forma asíncrona. Para ilustrar esto, digamos que se requiere hacer la siguiente operación:</p>


[code language="javascript"]
var arreglo = [...]; //10000 elementos
for (var i = 0; i &lt; arreglo.length; i++) {
	//hacer otras cosas con el arreglo
	if (i == 4000){
		return i;
	}
};
	//...
	//hacer más cosas
var otraFuncion = function(i){
	//hacer otras cosas con i
};

otraFuncion(i);
[/code]

<p style="text-align:justify;">Tal vez este ejemplo sea un poco rebuscado pero es para aclarar el comportamiento de Javascript cuando la mayor parte del tiempo se programa de forma síncrona. Básicamente, lo que sucede en este caso, es que la función <code>otraFuncion</code> no va a ejecutarse hasta que no se haya terminado el ciclo <code>for.</code> En este caso, se requiere recorrer el arreglo por lo menos unas 4000 veces, lo cual en términos de CPU, representa un consumo importante y un retraso en la ejecución del programa.</p>
<p style="text-align:justify;">Afortunadamente, Javascript cuenta con los <a title="Llamadas de retorno" href="https://en.wikipedia.org/wiki/Callback_%28computer_programming%29" target="_blank">callbacks</a>, cuya funcionalidad principal consiste en ser pasados como argumentos a funciones del flujo principal del programa. Mientras que en el primer caso, <code>otraFuncion</code> espera a que el ciclo <code>for</code> sea ejecutado para llamarse, en el mecanismo de callbacks, la espera no es necesaria para el flujo principal del programa:</p>


[code language="javascript" collapse="true"]
var arreglo = [...]; //10000 elementos
var cicloFor = function(arreglo){
	for (var i = 0; i &lt; arreglo.length; i++) {
		//hacer otras cosas con el arreglo
		if (i == 4000){
			return i;
		}
	};
};
var otraFuncion = function(i){
	//hacer otras cosas con el indice y ejecutarla
};
var miPrograma = function(cicloFor, otraFuncion){
	var indice = cicloFor();
	if(indice != 4000) {
		otraFuncion();
	} else {
		//hacer algo más...
	}
};

miPrograma(cicloFor, otraFuncion);
[/code]

<p style="text-align:justify;">El programa se ejecutará ligeramente más rápido que el primer caso, ya que no hay que esperar a que el ciclo <code>for</code> termine. Adicionalmente se encapsula la lógica de la aplicación en una sola funcion y no en dos. Sin embargo, este "acercamiento" presenta al menos tres inconvenientes:</p>

<ul>
	<li style="text-align:justify;">Funciones como parámetros, es algo que generalmente causa confusión a los programadores novatos (como yo :P ) en Javascript.</li>
	<li style="text-align:justify;">La lógica de programación no siempre puede ser encapsulada de este modo (a veces es obligatorio trabajar de forma síncrona.</li>
	<li style="text-align:justify;">Es muy probable que algunos errores generados por los callbacks no sean capturados.</li>
</ul>
<p style="text-align:justify;">Personalmente, cuando escribí este ejemplo, se me hizo bastante complicado presentar un ejemplo claro en el que pudieran trabajar, sin mencionar que es seguro que este código arroje errores impredecibles, bien sea no capturar los errores en el flujo "secundario" que generan los callbacks o por la lógica de la aplicación en sí. Para esto son las promesas.</p>

<h2 style="text-align:justify;">¿Qué facilita las "Promesas"?</h2>
<p style="text-align:justify;">Las "promesas" pueden ser encadenadas a cualquier objeto en Javascript, permiten manejo asíncrono de errores y una sintaxis más limpia en cuanto a llamadas asíncronas de funciones se refiere. Digamos que una función retorna una Promesa (en inglés, <code>Promise</code>) cuando el objeto requiere de un flujo alternativo, por ejemplo, en el caso de un flujo condicional típico:</p>


[code language="javascript" collapse="true"]
if(condicion_1){
	//ejecutar una funcion o algo
} else if(condicion_2){
	//hacer otra cosa
} else if(condicion_3){
	//ejecutar otra funcion
} else if (...){
	//...
} else if (condicion_N){
	//hacer algo más
}
[/code]

<p style="text-align:justify;">Este flujo condicional puede ser reescrito como Promesas:</p>


[code language="javascript" collapse="true"]
return new Promise(
    function(){
        //callback que encapsula la Promesa
    }
).then(
    function(valores){
        //comportamiento si callback es exitoso
    },
    function(err){
        //comportamiento si callback es erróneo
    }
).then(
    //otros comportamientos alternativos...
);
[/code]

<h2>¿Y cómo se comporta una "Promesa"?</h2>
Un objeto de tipo <code>Promise</code> tiene tres estados básicos:
<ul>
	<li style="text-align:justify;">Se dice que <code></code>está <code>pending</code> (<em>pendiente</em>) si el objeto no ha utilizado ninguno de los callbacks anclados a si mismo. Este es el estado inicial de todo objeto <code>Promise</code>.</li>
	<li style="text-align:justify;">Se dice que está <code>fullfilled</code> cuando el objeto utilizó el callback que encapsula, e informa que dicho callback fue realizado de manera exitosa.</li>
	<li style="text-align:justify;">Se dice que está <code>rejected</code> cuando el objeto no utilizó el callback que encapsula, e informa que dicho callback generó un error.</li>
</ul>
<p style="text-align:justify;">Una vez que el objeto informó que el callback fue utilizado (sea la llamada exitosa o errónea), no se puede cambiar su estado, es decir, debe generarse un nuevo objeto <code>Promise</code> si se necesita. Un ejemplo más claro de la utilidad de una Promesa, es cuando se poseen llamadas <a title="Asyncronous Javascript and XML" href="https://en.wikipedia.org/wiki/Ajax_%28programming%29" target="_blank">AJAX</a> a rutas de recursos:</p>


[code language="javascript" collapse="true"]
get('data.json').then(function(response) {
	console.log(&quot;Success!&quot;, response); //Éxito!
}, function(error) {
	console.log(&quot;Failed!&quot;, error); //Error!
});
[/code]

<p style="text-align:justify;">Puedes ver más información sobre la API Promises de Javascript <a title="MDN: Promises" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank">aquí</a>, o ver un tuto bien <a title="Ehm, si..." href="http://www.spanish-only.com/2008/11/spanish-word-day-chvere/" target="_blank">chévere</a> <a title="HTML5 Rocks!" href="http://www.html5rocks.com/en/tutorials/es6/promises/" target="_blank">aquí</a>.</p>
<p style="text-align:justify;">Por lo pronto, y de mi parte, <strong>prometo usar las promesas</strong> (valga la "rebuznancia" :P ) en alguna parte de los tutos de mi blog... Más adelante ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2015-03-07 19:53:08</wp:post_date>
		<wp:post_date_gmt>2015-03-08 00:23:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>promesas-promesas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[LIBRERÍA ANGULAR. PARTE 3,5. SIRVIENDO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.87</wp:comment_author_IP>
			<wp:comment_date>2015-06-09 13:13:38</wp:comment_date>
			<wp:comment_date_gmt>2015-06-09 17:43:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] global $q y su método $q.defer() forman parte de la API Promises propia de Angular.js. En este post hablaba sobre Promises en Javascript, pero no dije que fuera la única forma de implementarlas [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1433940944]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1433876635.43758392333984375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1433940944.863872051239013671875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1433871819.248416900634765625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[SEÑORAS Y SEÑORES. ¡EL FUTURO ESTÁ AQUÍ! | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.150</wp:comment_author_IP>
			<wp:comment_date>2015-06-18 09:54:55</wp:comment_date>
			<wp:comment_date_gmt>2015-06-18 14:24:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] oficial jejeje :mrgreen: . De hecho, venía hablando de eso someramente hace tiempo por aquí y por aquí. Pero la verdad, la esperaba en [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434637496.28553104400634765625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434637739]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434637740.1366589069366455078125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>VALIDANDO ANDO Y NO ME VOY QUEJANDO (PARTE 3. VALIDATE.JS)</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/22/validando-ando-y-no-me-voy-quejando-parte-3-validate-js/</link>
		<pubDate>Sun, 22 Feb 2015 21:44:35 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 3 validate.js"&gt;
<p style="text-align:justify;">Para que no se pierda la secuencia, en el post anterior había realizado las validaciones de <a title="Parte 2. Javascript" href="http://wp.me/p5CTtO-1c" target="_blank">éste</a> formulario con Javascript trocho y mocho. Siempre es bueno volver a lo básico, dicen que es bueno para el alma del programador, dicen...</p>
<!--more-->
<p style="text-align:justify;">Suele suceder que hay una gran cantidad de librerías que validan formularios. vía Javascript o son "wrappers" o extensiones de otras librerías. Sin embargo, estas librerías casi siempre están atadas a un framework (como el caso de jQuery Validate, que de ella hablaré en un próximo post), pero existen algunas como la librería <a title="Validate.js" href="https://rickharrison.github.io/validate.js/" target="_blank">Validate.js</a> que esta bastante <a title="Ehm, si..." href="http://www.urbandictionary.com/define.php?term=chido" target="_blank">chida</a> porque utiliza <a title="Javascript Object Notation" href="http://json.org/" target="_blank">JSON</a> para escribir las validaciones y personalizarlas al máximo.</p>
<p style="text-align:justify;">Para el caso que cabe, en nuestro formulario, basta con descargar la librería e incluirla en nuestra página como se haría normalmente:</p>


[code language="html"]
&lt;script src=&quot;validate.min.js&quot;&gt;&lt;/script&gt;
[/code]

<p style="text-align:justify;">Luego escribimos las validaciones de acuerdo a los parámetros de la librería. Revisa los post anteriores para saber a que corresponden estas validaciones:</p>


[code language="javascript" collapse="true"]
var validacion = new FormValidator('datosPersonales', [
	{ name: 'nombre', rules: 'required|alpha'},
	{ name: 'apellido', rules: 'required|alpha'},
	{ name: 'direccion', rules: 'required|callback_verificarDireccion'},
	{ name: 'correo', rules: 'required|valid_email'},
	{ name: 'edad', rules: 'required|integer'},
	{ name: 'sexo', rules: 'required'},
	{ name: 'cine', rules: 'callback_verificarActividades'},
	{ name: 'teatro', rules: 'callback_verificarActividades'},
	{ name: 'radio', rules: 'callback_verificarActividades'}
], function(errors, event){
	if (errors.length &gt; 0){
	//muestra el primer mensaje de error encontrado
		alert(errors[0].message);
	}
});
validacion.registerCallback('verificarDireccion', function(value){
	return value.match(/[a-z 0-9]+/ig) ? true : false;
});
validacion.registerCallback('verificarActividades', function(value){
	return (!document.datosPersonales.cine.checked &amp;&amp; !document.datosPersonales.teatro.checked &amp;&amp; !document.datosPersonales.radio.checked) ? false : true;
});
validacion.setMessage('verificarDireccion', 'Debe introducir sólo letras, números o espacios en el campo %s');
validacion.setMessage('verificarActividades', 'Debe seleccionar al menos una actividad');
[/code]

<p style="text-align:justify;">Estas validaciones deben escribirse después de la codificación del formulario (etiqueta de cierre de formulario), ya que la librería necesita saber que el formulario está cargado antes de validarlo, es bastante código, pero afortunadamente se explica muy bien. Al constructor <code>FormValidator()</code> de la librería se le pasan tres parámetros: el nombre del formulario (el valor en el atributo <code>name</code>), el objeto JSON con las validaciones a realizar y una función anónima que es la que va a manejar los errores si los hubiere, junto con el evento <code>onsubmit</code> (de forma obligatoria). La lógica de dicha función anónima es bastante sencilla, puesto que la librería tiene un arreglo llamado <code>errors</code> que almacena todos los errores encontrados en el proceso de validación (uno por cada campo validado).</p>
<p style="text-align:justify;">Los métodos <code>registerCallback()</code> y <code>setMessage()</code> se utilizan para manejar validaciones personalizadas y los mensajes que deben retornar dichas validaciones, respectivamente. Es necesario destacar que las funciones pasadas como parámetro, deben tener el prefijo <code>'callback_'</code> mas el nombre de la función personalizada, y debe retornar <code>true</code> o <code>false</code> dependiendo de si la lógica para validar el campo, cumple con lo programado o no.</p>
<p style="text-align:justify;">¿Recuerdan el dolor de cabeza al validar los checkboxes? Pues acá se usa el método <code>registerCallback()</code> para encapsular la lógica de nuestra validación realizada anteriormente. Esta librería cuenta con mensajes predefinidos en inglés para cada regla, personalizables con el método <code>setMessage()</code>. Para más información pueden consultar la documentación de la librería en su página oficial.</p>
¡A validar se ha dicho! ;)
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2015-02-22 17:14:35</wp:post_date>
		<wp:post_date_gmt>2015-02-22 21:44:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validando-ando-y-no-me-voy-quejando-parte-3-validate-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LA INCOMPRENDIDA CONSOLA DE JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/27/la-incomprendida-consola-de-javascript/</link>
		<pubDate>Fri, 27 Feb 2015 15:18:48 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="la incomprendida consola de javascript"&gt;
<p style="text-align:justify;">Es extraño que siendo desarrolladores, la opción de <a title="...en todas sus formas verbales" href="https://en.wikipedia.org/wiki/Debugging" target="_blank">debug</a> más común sea la de colocar un <code>alert()</code> o un <code>return</code> en contextos donde requerimos el resultado de una función determinada.</p>
Hay cada cosa en este mundo en la que uno no tiene ni idea...<!--more-->
<p style="text-align:justify;">Aunque a veces, y siendo exquisitos, se suele usar el <code>console.log()</code> para saber que emite el código Javascript en un determinado contexto, lo cual técnicamente (y también a nivel de debug) está bien, pero en realidad el objeto <code>console</code> de Javascript posee más elementos de los que se conocen normalmente. Por ejemplo, los hermanos de <code>console.log()</code>, <code>console.info()</code>, <code>console.warn()</code> y <code>console.error()</code>.</p>
<p style="text-align:justify;">Los ejemplos a continuación, son para ejecutarse línea por línea en la consola de Javascript (la cual se muestra en cualquier navegador excepto IE como siempre, presionando F12 o Ctrl+Shitf+I si tienes <em>Firefox</em> con la extensión <em>Firebug</em> o <em>Firefox for Developers</em>).</p>

<h2>Sustitución de cadenas</h2>
<p style="text-align:justify;">Se puede formatear el código Javascript como si una función <code>printf()</code> se tratara:</p>


[code language="javascript"]
var intentos = 3, cuenta = micuenta@cuenta.com;
console.log('Tiene %d intentos para confirmar la cuenta %s', intentos, cuenta);
[/code]

<code>%s</code> para cadenas, <code>%d</code> o <code>%i</code> para enteros, <code>%o</code> para objetos Javascript y <code>%f</code> para valores decimales.
<h2>Agrupamiento de mensajes</h2>
<p style="text-align:justify;">Se pueden agrupar los mensajes de la consola con el método <code>console.group()</code>, incluso estos grupos se pueden anidar. El "grupo" de mensajes saldrá como título en la consola:</p>


[code language="javascript"]
for(var i = 1; i &lt; 3; i++){
	console.group('Grupo '+i);
	for(var j = 1; j &lt; 5; j++){
		console.log('Mensaje '+j+' del grupo '+i);
	}
	console.groupEnd();
}
[/code]

<p style="text-align:justify;">Si la información que se debe mostrar es muy extensa, también puedes colapsar los mensajes dentro del título con el método <code>console.groupCollapsed().</code></p>

<h2>Tablas ¿¡en la consola!?</h2>
<p style="text-align:justify;">Es posible imprimir datos en la consola de Javascript de forma tabular. Básicamente esta funcionalidad depende del navegador y de los datos que se deseen imprimir, y es muy útil cuando se desean imprimir arrays de objetos Javascript:</p>


[code language="javascript"]
var Mascota = function(nombre, edad, esPerro){
	this.nombre = nombre;
	this.edad = edad;
	this.esPerro = esPerro;
};
var lista_mascotas = [
	new Mascota('Pepe', 2, true),
	new Mascota('Zato', 1, false),
	new Mascota('Loco', 3, false),
	new Mascota('Mino', 1, true)
];
console.table(lista_mascotas, ['nombre', 'edad', 'esPerro']);
[/code]

<p style="text-align:justify;">El navegador decide que array va a formatearse como tabla, basándose en los datos dentro del array, por lo que probablemente la sentencia <code>console.table([1, 2, 3])</code> no producirá ningún efecto :P .</p>
<p style="text-align:justify;">Puedes ver más ejemplos de usos desconocidos de la consola de Javascript en <a title="...está muy interesante!" href="https://medium.com/@c2c/javascript-console-lesser-known-features-9fe3852ce48b" target="_blank">este enlace</a>. Particularmente me gustó una parte de <a title="Análisis de Rendimiento de Software" href="http://es.wikipedia.org/wiki/An%C3%A1lisis_de_rendimiento_de_software" target="_blank">Profiling</a> y <a title="Pruebas unitarias" href="http://es.wikipedia.org/wiki/Prueba_unitaria" target="_blank">Unit Testing</a> básico que puede realizarse en la consola de Javascript. Lo dicho, no lo sabía ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2015-02-27 10:48:48</wp:post_date>
		<wp:post_date_gmt>2015-02-27 15:18:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>la-incomprendida-consola-de-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LIBRERIA ANGULAR. PARTE 0. ANGULAR 101</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/04/libreria-angular-parte-0-angular-101/</link>
		<pubDate>Wed, 04 Mar 2015 14:38:50 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="angular 101"&gt;
<p style="text-align:justify;">Os saludo, Criaturitas del Señor, esperando que no se hayan molestado por no continuar el post el miércoles pasado (andaba de fuerte <a title="trabajo" href="etimologias.dechile.net/?laburo" target="_blank">laburo</a>), de antemano me disculpo por la tardanza, pero vamos que lo bueno se hace esperar, ¿no? :P</p>
<!--more-->
<h2>Con algo hay que empezar</h2>
<p style="text-align:justify;"><a title="Angular.js" href="https://angularjs.org" target="_blank">Angular.js</a> es un framework orientado al <a title="desarrollo web del lado del cliente" href="http://es.wikipedia.org/wiki/Front-end_y_back-end" target="_blank">front-end</a> que posee componentes para contextualizar las páginas web de forma semántica. Es decir, que este framework es capaz de permitirnos escribir nuestras páginas HTML con un significado propio:</p>


[code language="html"]
&lt;libreria&gt;
	&lt;galeria seleccionable=&quot;true&quot; slider=&quot;false&quot;&gt;
		&lt;libro nombre=&quot;Lo que el viento se llevó&quot; precio=&quot;Bs. 240&quot; comprable=&quot;true&quot;&gt;&lt;/libro&gt;
		&lt;libro nombre=&quot;Riesgo Calculado&quot; precio=&quot;Bs. 210&quot; comprable=&quot;false&quot;&gt;&lt;/libro&gt;
		&lt;libro nombre=&quot;Desarrollo con Angular.js&quot; precio=&quot;Bs. 310&quot; comprable=&quot;true&quot;&gt;&lt;/libro&gt;
	&lt;/galeria&gt;
&lt;/libreria&gt;
[/code]

<p style="text-align:justify;">Antes de llegar a este nivel de especificidad, requerimos aprender algunos conceptos básicos para ir por partes, como <a title="Por partes..." href="http://es.wikipedia.org/wiki/Jack_el_Destripador" target="_blank">Jack el Destripador</a>, que es de lo que va este primer post, pero el objetivo principal es éste.</p>

<h2>Arquitectura</h2>
<p style="text-align:justify;"><a title="Angular.js" href="https://angularjs.org" target="_blank">Angular.js</a> es un framework con una arquitectura similar a <a href="http://es.wikipedia.org/wiki/Modelo%E2%80%93vista%E2%80%93controlador">MVC</a> (Modelo-Vista-Controlador) pero, ¿sólo en la vista? Viéndolo así, es verdad que debería ser definido con otras características.</p>
<p style="text-align:justify;">Hablando en términos de generalización de la arquitectura, un <strong>modelo</strong> representa una abstracción de los datos de la aplicación, que para efectos de la interfaz bien podría representar un campo de formulario, mientras que una <strong>vista</strong> contiene la presentación al usuario final, pero en este caso, pudieramos decir que no existe. Por otro lado, un <strong>controlador</strong> representa el encapsulamiento de un comportamiento determinado de los datos respecto al sistema en general, que en nuestro caso puede representar un <a title="'escuchador' de un evento" href="https://developer.mozilla.org/en-US/docs/Web/API/EventListener" target="_blank">listener</a>.</p>


[caption id="attachment_173" align="aligncenter" width="244"]<img class="wp-image-173 size-full" src="https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-03-151718.png" alt="" width="244" height="187" /> <span style="font-size:13px;font-weight:bold;text-align:center;">Separa la lógica de presentación con la lógica de los datos</span>[/caption]
<p style="text-align:justify;">Dicho esto, se puede dejar en términos generales que entre el modelo y la vista puede existir cualquier tipo de interacción (no necesariamente que defina o encapsule comportamientos). De ese modo podemos definir un tipo de arquitectura MV* o <a title="Modelo-Vista-Cualquier Cosa" href="http://blog.orbitone.com/post/Angularjs-the-Model-View-Whatever-javascript-framework1" target="_blank">MVW</a> (acrónimo en inglés para Model-View-Whatever), en la que los datos modifican interfaces y las interacciones modifican datos. De este comportamiento se hablará más adelante.</p>

<h2>Componentes</h2>
<p style="text-align:justify;">Angular.js cuenta con <strong>Directivas</strong>, <strong>Controladores</strong>, <strong>Módulos</strong>, <strong>Fábricas</strong> y <strong>Servicios</strong>, <strong>Filtros</strong> y otras <strong>Utilidades Globales</strong> que complementan la funcionalidad de este framework para definir comportamientos, interacciones, validaciones y todo lo relacionado con interfaces de páginas web. A continuación se explican en forma sencilla los conceptos involucrados con estos componentes:</p>

<ul>
	<li style="text-align:justify;"><span style="color:#7cbbbb;font-weight:bold;">Módulo</span>: La pieza central de Angular.js. (Casi) Todo en Angular es un módulo o un encapsulamiento de un determinado comportamiento, sólo que se utiliza en contextos distintos a lo largo de la aplicación.</li>
	<li style="text-align:justify;"><span style="color:#7cbbbb;font-weight:bold;">Directivas</span>: Son módulos de Angular.js orientados a establecer patrones de comportamiento dentro de las etiquetas HTML.</li>
	<li style="text-align:justify;"><span style="color:#7cbbbb;font-weight:bold;">Controladores</span>: Un controlador es un módulo que actúa como supervisor del comportamiento entre los diferentes modelos o componentes de la aplicación.</li>
	<li style="text-align:justify;"><span style="color:#7cbbbb;font-weight:bold;">Fábricas</span>: Son módulos que sirven datos comunes a componentes específicos de la aplicación (requerida por ejemplo para el paso de parámetros entre controladores).</li>
	<li style="text-align:justify;"><span style="color:#7cbbbb;font-weight:bold;">Servicios</span>: Son módulos que sirven datos comunes a toda la aplicación (generalmente requerido cuando se desea obtener datos via <a href="http://es.wikipedia.org/wiki/Front-end_y_back-end">back-end</a>).</li>
	<li style="text-align:justify;"><span style="color:#7cbbbb;font-weight:bold;">Filtros</span>: Son módulos que se encargan de dar formato a los datos presentados en la aplicación, tales como: fechas, cadenas de texto, números decimales entre otros.</li>
	<li style="text-align:justify;"><span style="color:#7cbbbb;font-weight:bold;">Utilidades Globales</span>: Consta de una API de módulos con utilidades para diferentes tipos de estructuras de datos (validaciones, iteraciones, mapeo no-relacional, algoritmos map-reduce, animaciones, etc.)</li>
</ul>
<p style="text-align:justify;">Existen otros conceptos que serán tratados en la medida que se vaya desarrollando la aplicación. ¡Nos vemos pronto en el próximo post! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2015-03-04 10:08:50</wp:post_date>
		<wp:post_date_gmt>2015-03-04 14:38:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-0-angular-101</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[cubeandcolors]]></wp:comment_author>
			<wp:comment_author_email>info@cubeandcolors.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cubeandcolors.com</wp:comment_author_url>
			<wp:comment_author_IP>174.61.105.20</wp:comment_author_IP>
			<wp:comment_date>2015-03-04 12:35:06</wp:comment_date>
			<wp:comment_date_gmt>2015-03-04 17:05:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reblogueó esto en <a href="https://cubeandcolors.wordpress.com/2015/03/04/libreria-angular-parte-0-angular-101/" rel="nofollow">Cube and Colors Solutions blog</a>.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>80043698</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_user_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1425569651.45740795135498046875;s:7:"message";s:45:"ch1nux no considera este comentario como spam";s:5:"event";s:11:"report-spam";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_user</wp:meta_key>
				<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1425569659]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1425569659]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1425569660.592072010040283203125;s:7:"message";s:53:"ch1nux ha cambiado su estado de comentario a approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1425488707.7146680355072021484375;s:7:"message";s:45:"Akismet considera que este comentario es spam";s:5:"event";s:10:"check-spam";s:4:"user";s:13:"cubeandcolors";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>reblog_ping</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>BASE DE DATOS ¿EN EL NAVEGADOR?. PARTE 2. LA PRÁCTICA</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/16/base-de-datos-en-el-navegador-parte-2-la-practica/</link>
		<pubDate>Mon, 16 Mar 2015 15:27:46 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="base de datos en el navegador. parte 2. la practica"&gt;
<p style="text-align:justify;">Uf... Como me costó escribir este post...</p>
<p style="text-align:justify;">Después de una semana de locura por el fuerte <a title="Ehm, si..." href="http://www.wordreference.com/es/en/translation.asp?spen=laburo" target="_blank">laburo</a>, por fín pude sacar un tiempo para completar el <a title="Parte 1. La Teoría" href="http://wp.me/p5CTtO-16" target="_blank">post anterior</a>. <!--more-->Es un ejemplo básico de una lista de tareas, quedando pendiente subir este código al Gato-Pulpo:</p>
<p style="text-align:justify;">Código HTML:</p>


[code language="html"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;Uso de Dexie.js con IndexedDB&lt;/title&gt;
	&lt;style&gt; li{margin-bottom: 10px;} &lt;/style&gt;
	&lt;script src=&quot;jquery-1.11.1.min.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;Dexie.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;crud.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;Lista de Tareas&lt;/h1&gt;
  &lt;form&gt;
  	&lt;input type=&quot;text&quot; size=&quot;30&quot; placeholder=&quot;Agrega una nueva tarea&quot; id=&quot;tarea&quot;&gt;
  &lt;/form&gt;
  &lt;ul id=&quot;listaTareas&quot;&gt;&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">Código de <code>crud.js</code> (comentado):</p>


[code language="javascript" collapse="true"]
$(function() {

	//Estructura de datos del objeto global Tarea
	var Tarea = function(descripcion){
		this.descripcion = descripcion;
		this.fecha = new Date().toString().substring(3,16);
	};

	//Variables globales: instancia de base de datos y &quot;cacheado&quot; de elementos DOM
	var db = new Dexie(&quot;TodoAPP&quot;),
			tarea = $(&quot;#tarea&quot;),
			listaTareas = $('#listaTareas');

	//Creación del esquema de Base de Datos (en SQL sería una tabla)
	db.version(1)
		.stores({
			tareas: '++id, tarea, fecha' //++id simula autoincremento
		});

	//Apertura de la base de datos, encadenando la promesa de refrescar la página
	db.open()
		.then(refrescar);

	//Añadir listener para añadir registros a la Base de Datos
	$(&quot;form&quot;).on('submit', agregarTarea);

	//Añade listeners del evento click de forma asíncrona
	function escucharBotones(){
		$(&quot;button&quot;).each(function(){
			$(this).click(function(){
				db.tareas.where('id')
					.equals(parseInt($(this).attr(&quot;id&quot;), 10)) //attr(&quot;id&quot;) devuelve String
					.delete()
					.then(refrescar);
			});
		});
	}

	//Nuevo registro es añadido a la Base de Datos
	function agregarTarea(event) {
		event.preventDefault();
		db.tareas.put(new Tarea(tarea.val()))
			.then(function() {
				tarea.val('');	//Se vacia el &quot;input&quot;
			})
			.then(refrescar);
	}

	function refrescar() {
		return db.tareas.toArray() //retorna todos los registros como un Array
			.then(listarTareas)
			.then(escucharBotones);
	}

	//Agrega a la lista todos los elementos actualizados
	function listarTareas(tareas) {
		var html = '';
		listaTareas.html('');
		tareas.forEach(function(tarea) {
			html += nuevaTarea(tarea);
		});
		listaTareas.append(html);
	}

	//Cada elemento de la Base de Datos es asignado como elementos HTML
	function nuevaTarea(Tarea) {
		return '&lt;li&gt;'+Tarea.descripcion+' &lt;em&gt;--Creada: '+Tarea.fecha+'&lt;/em&gt;&lt;button id=&quot;'+Tarea.id+'&quot;&gt;Completada&lt;/button&gt;&lt;/li&gt;';
	}

});
[/code]

Este código así descrito, usa la <a title="para más información" href="https://www.promisejs.org/" target="_blank">API Promises</a> de Javascript ES6. Visita el enlace para más información. Adicionalmente, basé este código en esta <a title="TODO-offline in GitHub" href="https://github.com/matthew-andrews/offline-todo-dexie/blob/gh-pages/application.js" target="_blank">implementación</a>.

Me retiro, de vuelta al laburo ;) .
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2015-03-16 10:57:46</wp:post_date>
		<wp:post_date_gmt>2015-03-16 15:27:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>base-de-datos-en-el-navegador-parte-2-la-practica</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PROGRAMACION MODULAR CON JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/14/programacion-modular-con-javascript/</link>
		<pubDate>Tue, 14 Apr 2015 17:08:27 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="programacion modular con javascript"&gt;
<p style="text-align:justify;">Javascript es un lenguaje de <a title="Lenguaje de Script" href="https://en.wikipedia.org/wiki/Scripting_language" target="_blank">scripting</a>, útil para hacer ciertas tareas que corresponden a un contexto determinado, que en este caso corresponde al Navegador Web. Las páginas y aplicaciones web dependen en mayor o menor medida de él, pero [casi] siempre lo vamos a necesitar (por ahora...). Pero, al ser un lenguaje de script, una arquitectura modular era impensable en Javascript.</p>
<!--more-->

[caption id="attachment_329" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/04/arquitectura.gif"><img class="wp-image-329 size-medium" src="https://jotaeseymas.files.wordpress.com/2015/04/arquitectura.gif?w=300" alt="" width="300" height="201" /></a> <strong style="text-align:center;font-size:13px;">¿módulos en Javascript? Imposible...</strong>[/caption]
<p style="text-align:justify;">Afortunadamente, los tiempos cambian, y con la implementación actual de Javascript 5.1 (y futuras implementaciones como <a title="ECMAScript 6 Next" href="http://wiki.ecmascript.org/doku.php?id=harmony:harmony" target="_blank">Harmony</a> <del>a finales de Mayo</del> en Junio de este año :D ) es posible tener una arquitectura modular como flujo de trabajo en aplicaciones Web. El ejemplo más común de esto es el ecosistema de aplicaciones y librerias que conviven bajo <a title="Node.js" href="https://nodejs.org/" target="_blank">Node.js</a>. Aún sin depender tanto de él, podemos escribir nuestros propios módulos en Javascript, pero ¿qué es un módulo? Veamos:</p>

<blockquote>
<p style="text-align:justify;">"En software, un <strong>módulo</strong> [puede ser] parte de un <strong>programa</strong>. Dichos programas [pueden estar] compuestos por uno o más módulos desarrollados independientemente, pero éstos no son conocidos por el programa hasta que son [combinados o] enlazados. Un módulo puede contener una u varias <strong>rutinas</strong> de código"</p>
<p style="text-align:justify;">-- <em>Traducido desde webopedia.com</em></p>
</blockquote>
<p style="text-align:justify;">Para ejemplificar esto, es típico en las páginas o aplicaciones web que los scripts estén instanciados uno a uno en orden para realizar determinadas funcionalidades:</p>


[code language="html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Ejemplo&lt;/title&gt;
        &lt;script src=&quot;assets/js/uno.js&quot;&gt;&lt;/script&gt;
        &lt;script src=&quot;assets/js/dos.js&quot;&gt;&lt;/script&gt;
        &lt;script src=&quot;assets/js/tres.js&quot;&gt;&lt;/script&gt;
        &lt;script src=&quot;assets/js/cuatro.js&quot;&gt;&lt;/script&gt;
        &lt;script src=&quot;assets/js/cinco.js&quot;&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;!--Cuerpo de la página--&gt;
    &lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">Cada vez que un <code>&lt;script&gt;&lt;/script&gt;</code> aparezca en el código (que generalmente aparece dentro de <code>&lt;head&gt;&lt;/head&gt;</code>) es una petición HTTP que debe ser resuelta desde el servidor hacia el navegador. El ahorro en ancho de banda puede ser una muy buena razón para usar módulos en Javascript (pero no es la única razón).</p>
<p style="text-align:justify;">En VanillaJS (o Javascript trocho y mocho, como yo le digo :P ), podemos escribir módulos de la siguiente forma:</p>


[code language="javascript" collapse="true"]
(function(){
    //hacer cosas de manera global para todos
    //los módulos que instancien este script
}());
[/code]

<p style="text-align:justify;">Este envoltorio (llamado <a title="Manera anónima de desarrollar módulos" href="http://bonsaiden.github.io/JavaScript-Garden/es/#function.closures" target="_blank">closure</a>, en inglés) sirve para unificar varias rutinas generales pero no maneja dependencias de otros scripts, y tampoco <a title="Herencia en Javascript" href="http://www.glowind.com/herencia-en-javascript/" target="_blank">herencia</a> de módulos. Además de que el módulo es cargado cada vez que se necesite o que aparezca referenciado en una página (<em>carga síncrona</em>).</p>
<p style="text-align:justify;">Pero existen librerías externas que hacen el trabajo por nosotros (gracias a Dios :D ), tal es el caso de <a title="Require.js" href="http://www.requirejs.org" target="_blank">RequireJS</a> y <a title="Melchior.js" href="http://labs.voronianski.com/melchior.js/" target="_blank">MelchiorJS</a>, que trabajan con <em>carga asíncrona</em> o <a title="AMD Review" href="http://addyosmani.com/writing-modular-js/" target="_blank">AMD</a> (Asyncronous Module Definition).</p>
<p style="text-align:justify;">El principio de AMD se basa en que en vez de resolver una petición HTTP por cada módulo, se pretenda resolver las dependencias necesarias con una sola petición HTTP de la cual se deriven las dependencias de otros módulos, rutinas y variables y se instancien según se necesiten.</p>
<p style="text-align:justify;">En RequireJS, y usando el ejemplo anterior podemos hacer uso de AMD de esta forma:</p>


[code language="html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Ejemplo&lt;/title&gt;
        &lt;!--
        &quot;data-main&quot; es usado por RequireJS para determinar
        la ubicación del script que tiene las dependencias
        a ser cargadas de forma asíncrona por la app
        --&gt;
        &lt;script data-main=&quot;assets/js&quot; src=&quot;/ruta/absoluta/a/require.js&quot;&gt;&lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;!--Cuerpo de la página--&gt;
    &lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">En MelchiorJS es exactamente igual. La diferencia de ambas librerías está en la definición del script de dependencias que manejarán. En RequiereJS se definen los módulos así:</p>


[code language="javascript" collapse="true"]
require([&quot;uno&quot;, &quot;dos&quot;, &quot;tres&quot;, &quot;cuatro&quot;, &quot;cinco&quot;],
function(uno, dos, tres, cuatro, cinco){
    //hacer cosas con las dependencias directamente
    //uno.metodo() o cinco.atributo según se necesite
    //todos los scripts se cargan desde assets/js
    //definido en el atributo data-main
});
[/code]

En MelchiorJS:

[code language="javascript" collapse="true"]
melchiorjs.module(&quot;mi modulo&quot;)
.require(&quot;uno&quot;)
.require(&quot;dos&quot;)
.require(&quot;tres&quot;)
.require(&quot;cuatro&quot;)
.require(&quot;cinco&quot;)
.body(function(){
    //hacer cosas con las dependencias directamente
    //uno.metodo() o cinco.atributo según se necesite
    //todos los scripts se cargan desde assets/js
    //definido en el atributo data-main
});
[/code]

<p style="text-align:justify;">Mientras que RequireJS coloca las dependencias en un Array y se van cargando según se necesiten, en MelchiorJS se encadenan, similar a como si fueran <a title="API Promises" href="https://www.promisejs.org/" target="_blank">Promesas</a>. Personalmente me inclino por MelchiorJS, porque tiene una aproximación más limpia (en cuanto a sintaxis) de un comportamiento asíncrono de Javascript, sin embargo, el estándar de facto ha sido hasta ahora RequireJS.</p>
<p style="text-align:justify;">Para la nueva versión de Javascript (a.k.a. Harmony) hay varias propuestas de una API que soporte AMD de forma nativa, dichas propuestas están en <a title="CommonJS" href="http://www.commonjs.org" target="_blank">CommonJS</a>. Pero más allá de ser nuevo, lo importante es que el código sea mantenible, escalable y configurable en la medida de lo posible, sin <a title="Panacea Universal" href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panaceas</a> ni magia vudú ;)</p>
<p style="text-align:justify;"><strong>BTW</strong>: Más info sobre <a title="By Addi Osmani" href="http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html" target="_blank">patrones de desarrollo modular</a> y una comparación entre <a title="CommonJS vs. RequireJS" href="http://jsmodules.io/cjs.html" target="_blank">CommonJS vs. RequireJS</a></p>
<strong>Actualizado 22/06/2015:</strong> <a href="https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/" target="_blank">¡Señoras y señores, el futuro está aquí!</a>

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2015-04-14 12:38:27</wp:post_date>
		<wp:post_date_gmt>2015-04-14 17:08:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>programacion-modular-con-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: LOWDB | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/22/typico-de-lowdb-2/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.13</wp:comment_author_IP>
			<wp:comment_date>2015-06-22 11:10:34</wp:comment_date>
			<wp:comment_date_gmt>2015-06-22 15:40:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] como Node.js llama a sus dependencias usando el formato AMD de RequireJS, del cual hablé en este post. Mientras que en la línea 6, aunque se instancia la variable de acceso de ese modo, no tiene nada [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434987634.99880695343017578125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434987647]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434987647.884603023529052734375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>MANIPULANDO FECHAS, LA VIA FÁCIL</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/30/manipulando-fechas-la-via-facil/</link>
		<pubDate>Mon, 30 Mar 2015 16:29:47 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="manipulando fechas la via facil"&gt;
<p style="text-align:justify;">Tanto en Javascript como en otros lenguajes, siempre ha sido un "karma" (al menos para mí ¬¬') ser capaz de manipular fechas y horas de forma efectiva. Que pueda sumar horas y minutos, saber si un año es bisiesto, o la clásica de "calcular la edad de una persona con su fecha de nacimiento". ¿a que les suena, verdad?</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a title="Moment.js" href="http://momentjs.com/" target="_blank">Moment.js</a> es una librería que hace este "karma" más llevadero, y simplifica el <span title="transformación">parseo</span> de fechas a su mínima expresión. No sólo es muy ùtil para realizar todo lo arriba descrito, sino que además proporciona la interfaz (con algo de magia vudú y <a title="jQuery 1.11" href="http://jquery.com/" target="_blank">jQuery</a>) para hacer cosas tan chidas como el reloj blanco que muestra en su página web inicial.</p>
<p style="text-align:justify;">Se pueden descargar cualquiera de las dos versiones: la minificada que pesa sólo 11KB o la minificada con localizaciones o idiomas que pesa 42KB (o pueden ser tan <a title="Ehm, si..." href="http://www.oxforddictionaries.com/translate/spanish-english/ladillado" target="_blank">ladillados</a> como yo y hacer copy-paste de la parte local en español e incluirla :D ). Usarla nunca había sido tan fácil:</p>


[code language="html"]
&lt;script src=&quot;moment.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;moment-es.min.js&quot;&gt;&lt;/script&gt;
[/code]

<p style="text-align:justify;">El archivo moment-es.min.js con la localización en Español está en el <a title="Mis Gists :D" href="https://gist.github.com/ChinuxParibus/9c1a0643bfa0fc86f520" target="_blank">Gato-Pulpo</a>. A continuación algunos ejemplos:</p>

<ul>
	<li style="text-align:justify;">Saber si un año es bisiesto:</li>
</ul>

[code language="javascript"]
console.log(moment().isLeapYear()); //&quot;false&quot;
console.log(moment([2000]).isLeapYear()); //&quot;true&quot;
[/code]

<ul>
	<li style="text-align:justify;">Sumar horas y minutos (en formato humano):</li>
</ul>

[code language="javascript"]
//crea una duración específica
var lapso = moment.duration({hours: 1, minutes: 30});
//añadir el tiempo y mostrarlo en formato entendible
console.log(moment().add(lapso).format('hh:mm:ssA'));
[/code]

<ul>
	<li style="text-align:justify;">Saber la edad de la persona con su fecha de nacimiento:</li>
</ul>

[code language="javascript"]
//diferencia de edad desde la fecha dada hasta hoy y localizada
console.log(moment(&quot;1986-06-30&quot;).fromNow(&quot;L&quot;)); //&quot;29 años&quot;
[/code]

Estoy viejo :'(
<p style="text-align:justify;">El potencial de esta librería es muy útil, ya que contrarresta una de las debilidades de Javascript que es precisamente el formato y parseo de fechas, siempre llegando a tiempo ;) .</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2015-03-30 11:59:47</wp:post_date>
		<wp:post_date_gmt>2015-03-30 16:29:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manipulando-fechas-la-via-facil</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="localizacion"><![CDATA[localización]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_02b03b5ae3dcf9565528c3142d401c9d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JUNTOS PODEMOS HACER MÁS</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/15/juntos-podemos-hacer-mas/</link>
		<pubDate>Wed, 15 Apr 2015 23:07:34 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="juntos podemos hacer m&amp;aacute;s"&gt;
<p style="text-align:justify;">Las plataformas colaborativas de desarrollo, son ampliamente conocidas y utilizadas en estos tiempos, especialmente para crear ambientes de teletrabajo baratos, multiplataforma y seguros. Como el caso de TeamViewer y otros.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">La gente de Mozilla Labs, creó una librería llamada <a title="TogetherJS" href="https://togetherjs.com/" target="_blank">TogetherJS</a> (de ahí el nombre de este post :) ) que consiste en una plataforma colaborativa escrita nativamente en HTML5, Canvas y, por supuesto, ¡Javascript! Es una librería bastante interesante, ya que permite:</p>

<ul>
	<li>Uso de Chat y Audio Chat, este último basado en el protocolo <a title="WebRTC Protocol" href="http://www.webrtc.org/" target="_blank">WebRTC</a>.</li>
	<li style="text-align:justify;">Multiples usuarios en concurrencia.</li>
	<li style="text-align:justify;">Sincronización de contenidos, un usuario puede ver las modificaciones de otros usuarios en la página.</li>
	<li style="text-align:justify;">Multiples usuarios siguiendo diferentes enlaces desde un mismo dominio.</li>
	<li style="text-align:justify;">Observar las interacciones con el mouse de cada usuario conectado.</li>
</ul>
¡Y es GRATIS!
<p style="text-align:justify;">Para usarla, ni siquiera debemos descargar nada. Podemos incluirla directamente en nuestros proyectos de desarrollo web incluyendo la librería:</p>


[code language="html"]
&lt;script src=&quot;https://togetherjs.com/togetherjs-min.js&quot;&gt;&lt;/script&gt;
[/code]

<p style="text-align:justify;">Luego, agregamos un snippet de código para referenciar a un botón que activará la plataforma colaborativa en nuestra página:</p>


[code language="html"]
&lt;button onclick=&quot;TogetherJS(this); return false;&quot;&gt;Iniciar TogetherJS&lt;/button&gt;
[/code]

<p style="text-align:justify;"><em>¡Voilá!</em> Tenemos una plataforma colaborativa de desarrollo, gratuita y que hace el trabajo necesario y suficiente para el desarrollo Web. Librerías como esta, son las que motivan a continuar haciendo investigaciones. A que mola, ¿no? ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2015-04-15 18:37:34</wp:post_date>
		<wp:post_date_gmt>2015-04-15 23:07:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>juntos-podemos-hacer-mas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="mozilla-labs"><![CDATA[Mozilla Labs]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a57125d4f2369093d343fd408bd0bc50</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>INTERACCIONES EN ELEMENTOS JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/interacciones-en-elementos-javascript/</link>
		<pubDate>Tue, 31 Mar 2015 16:49:55 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=166</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="interacciones en elementos javascript"&gt;
<p style="text-align:justify;">En el diseño front-end, se busca que exista la mayor cantidad de interacciones entre el usuario y la interfaz para garantizar una experiencia de usuario satisfactoria, sin sacrificar funcionalidades (<em>look and feel</em>, le dicen).<!--more--></p>
<p style="text-align:justify;">Con "experiencias de usuario" (o <a title="Experiencia de Usuario" href="https://en.wikipedia.org/wiki/User_experience" target="_blank">UX</a> por <em>User Experience</em>) quiero decir que existan interacciones consistentes, o elementos de énfasis entre los elementos que se desarrollan, así como una armonía necesaria entre todos los elementos. El color, el contraste, las sombras y las formas son importantes, pero el dinamismo y las interacciones de los elementos también deben serlo.</p>
<p style="text-align:justify;"><a title="Interact.js" href="http://interactjs.io/" target="_blank">Interact.js</a> es una librería Javascript que permite (a golpe de Javascript trocho y mocho y un poco de magia vudú :P ) diseñar interacciones entre los elementos gráficos de una página web y algunos "gestos" táctiles para diseño responsivo sin necesidad de recurrir a otros recursos o frameworks como <a title="jQuery User Interfaces" href="http://jqueryui.com/" target="_blank">jQuery UI</a>, eliminando así las dependencias.</p>
<p style="text-align:justify;">Pueden ver los eventos, elementos y utilidades con ejemplos prácticos en la página de la librería. Está interesante, de no ser porque se me hace un tanto complejo todo ese rollo de estar pendientes de las coordenadas, que vamos a ver, algunas veces no estamos para poner muchos periquitos y queremos que los programas nos hagan el café mientras hacemos otras cosas...</p>
<p style="text-align:justify;">Pero la realidad supera a la ficción. Tendrías que interactuar con ella ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2015-03-31 12:19:55</wp:post_date>
		<wp:post_date_gmt>2015-03-31 16:49:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>interacciones-en-elementos-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="drag"><![CDATA[drag]]></category>
		<category domain="post_tag" nicename="drop"><![CDATA[drop]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TAL VEZ NO NECESITES JQUERY</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/27/tal-vez-no-necesites-jquery/</link>
		<pubDate>Fri, 27 Mar 2015 16:29:00 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:justify;">&lt;script src="other pages" title="tal vez no necesites jquery"&gt;</p>
<p style="text-align:justify;">En [casi] todos mis posts, siempre resalto que ninguna tecnología es la <a title="Panacea Universal" href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">panacea</a> que va a resolver todos los problemas o retos que se presenten en el desarrollo de aplicaciones. Independientemente de las habilidades, recursos, flujo de trabajo y equipo que utilices, lo básico, siempre será lo más simple (y tal vez lo mejor :) ).</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">La librería <a title="jQuery" href="http://jquery.com/" target="_blank">jQuery</a>, se ha vuelto [casi] un estándar de referencia (y de facto ¬¬') en el desarrollo de aplicaciones web. Dada la "facilidad" de sus sintaxis y la "naturalidad" con la que se puede manipular el <a title="Document Object Model" href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" target="_blank">DOM</a> en un documento HTML, está siendo utilizado por millones de personas alrededor del mundo.</p>
<p style="text-align:justify;">No conforme con eso, jQuery cuenta con una amplia gama de tecnologías asociadas que se integran a esta librería, tales como <a title="jQuery User Interfaces" href="http://jqueryui.com/" target="_blank">jQuery UI</a>, <a title="QUnit Testing JS" href="http://qunitjs.com/" target="_blank">QUnit</a>, <a title="Bootstrap 3" href="http://getbootstrap.com" target="_blank">Bootstrap</a> y más recientemente <a title="Materialize CSS Framework" href="http://materializecss.com/" target="_blank">MaterializeCSS</a>.</p>
<p style="text-align:justify;">No me sorprendería que tenga igual número de detractores...</p>
<p style="text-align:justify;">Mediante esta <a title="You Might Not Need jQuery" href="http://youmightnotneedjquery.com/" target="_blank"><strong>página</strong></a>, <a title="@zackbloom" href="https://twitter.com/zackbloom" target="_blank">Zack Bloom</a> y <a title="@adamfschwartz" href="https://twitter.com/adamfschwartz" target="_blank">Adam Schwartz</a> más que generar controversia, intentan demostrar lo dicho al principio de este post, que jQuery y cualquier tecnología es sustituible (incluso ha sido desmitificado la dependencia de AutoCAD en Software Libre, pero esa es otra historia).</p>
<p style="text-align:justify;">En el enlace arriba publicado, se encuentran diferentes ejemplos, entre los más utilizados popularmente por los desarrolladores web (neófitos como yo y con experiencia como los arriba descritos) y su correspondiente sustituto en Javascript trocho y mocho.</p>
<p style="text-align:justify;">Pero si no les gusta usar Javascript trocho y mocho, y tampoco les gusta jQuery, usen <a title="The aero-gel cousin of jQuery" href="http://zeptojs.com/" target="_blank">Zepto.js</a>, es una buena y confiable alternativa :D</p>
<p style="text-align:justify;"><strong>Prometo: </strong>proximamente hacer un post sobre Zepto ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2015-03-27 11:59:00</wp:post_date>
		<wp:post_date_gmt>2015-03-27 16:29:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tal-vez-no-necesites-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="adam-schwartz"><![CDATA[Adam Schwartz]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<category domain="post_tag" nicename="zack-bloom"><![CDATA[Zack Bloom]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f2ed42364094f9d655787ec5fe6a0c92</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LIBRERIA ANGULAR. PARTE 1. CONTROLANDO Y DIRIGIENDO</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/25/libreria-angular-parte-1-controlando-y-dirigiendo/</link>
		<pubDate>Wed, 25 Mar 2015 16:07:29 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 1. controlando y dirigiendo"&gt;
<p style="text-align:justify;">¡Puf! como está de fuerte el <a title="Ehm, si..." href="http://www.wordreference.com/es/en/translation.asp?spen=laburo" target="_blank">laburo</a> que ahora es cuando voy a publicar el post con los tutos de Angular.js que me correspondía publicar la semana pasada :'( .</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">En este post vamos a empezar a darle forma a nuestra Librería Angular e ir tocando temas relacionados con el flujo de trabajo que normalmente se establece en <a title="Angular.js" href="https://angularjs.org" target="_blank">Angular.js</a>.</p>
<p style="text-align:justify;">Incluí un estilo de <a title="Bootstrap 3" href="http://getbootstrap.com" target="_blank">Bootstrap</a> bastante popular y que personalmente me agrada, lo cual no quiere decir que no sea reemplazable, amén de los iconos de <a title="Font Awesome 4.3" href="http://fontawesome.io/" target="_blank">Font Awesome 4</a> y <a title="jQuery 1.11" href="http://jquery.com/" target="_blank">jQuery</a>, necesario para la ejecución correcta de las interacciones de Bootstrap (dropdowns, forms y ventanas modales).</p>


[code language="css"]
.libro {
	margin: 5px; padding: 2px;
	display: block; height: 240px;
	border: 2px solid #1673A9;
}
[/code]

<p style="text-align:justify;">Este estilo está dentro de un archivo <code>index.html.</code></p>
<p style="text-align:justify;">Una cosa importante que se me olvidó mencionar (ups, lo siento :( ) es que <strong>es importante para estos ejemplos, tener un servidor HTTP (no necesariamente Web como Apache) para que todos los módulos de Angular puedan funcionar adecuadamente. </strong>Podríamos utilizar <code>SimpleHTTPServer</code> que viene con cualquier instalación de <em>Python</em>.</p>
<p style="text-align:justify;">Usamos <em>directivas</em> para describir comportamientos, <em>controladores</em> para definir esos comportamientos y <em>módulos</em> para encapsularlos, aunque todo en el fondo sea un módulo. Empezamos a definir nuestro módulo central de la aplicación y lo colocamos en un archivo <code>controllers.js</code> (donde estarán todos los controladores necesarios):</p>


[code language="javascript"]
var libreria = angular.module('LibreriaApp', []);
[/code]

<p style="text-align:justify;">Puntos importantes a resaltar:</p>

<ul>
	<li style="text-align:justify;"><code>angular.module</code> es un método de Angular que devuelve la referencia a un módulo general.</li>
	<li style="text-align:justify;"><code>'LibreriaApp'</code> va a ser el nombre de nuestra aplicación</li>
	<li style="text-align:justify;">Los corchetes <code>[] </code>representan un arreglo donde se debe incluir (de requerirse) cada una de las dependencias del módulo, sean módulos externos de Angular o módulos creados con Angular. A este patrón de diseño, se le conoce como <a title="Dependency Injection" href="https://code.angularjs.org/1.3.10/docs/guide/di" target="_blank">Inyección de Dependencias</a>. Pero lo dejaré vacío (por ahora ;) ).</li>
</ul>
<h2>Dirigiendo</h2>
<ul>
	<li style="text-align:justify;">Las dobles llaves <strong><span style="color:#7cbbbb;">{{}}</span></strong> representan una <em>expresión</em> de Angular; segmentos en los que se evalua código Javascript.</li>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">ng-model</span></strong> es una directiva que define un modelo o un almacén de datos a ser observado por un módulo.</li>
	<li style="text-align:justify;">El símbolo <strong><span style="color:#7cbbbb;">|</span></strong> representa un <em>filtro;</em> da formato a un modelo observado.</li>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">$scope</span></strong> es el objeto global de Angular que define el alcance (global o local) de una directiva dentro de la aplicación.</li>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">ng-app</span></strong> es una directiva que define el nombre y el alcance de una aplicación de Angular. En nuestro caso se llama <code>LibreriaApp</code>.</li>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">ng-controller</span></strong> es una directiva que define el alcance de un controlador. Todos los atributos y métodos sólo tiene sentido dentro del alcance.</li>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">ng-repeat</span></strong> es una directiva que define la iteración de la escritura de elementos dentro del alcance de un controlador.</li>
</ul>
Una visión general de la interfaz de nuestra aplicación es esta:

[caption id="attachment_239" align="aligncenter" width="527"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png"><img class="wp-image-239 " src="https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png?w=300" alt="" width="527" height="186" /></a> <span style="text-align:center;font-size:13px;font-weight:bold;">Tiene pinta de librería, ¿no? Se nota que me encanta el azul... juejuejue </span>[/caption]
<h2>Controlando</h2>
<p style="text-align:justify;">El archivo <code>controllers.js</code> y el archivo <code>index.html</code> están en mi repo en el <a title="Mi primer repo... :D" href="https://github.com/ChinuxParibus/libreria-angular" target="_blank">Gato-Pulpo</a>, y pueden revisarlos a gusto <del>pero los demás archivos me resta incluirlos (por mi "neofitez" de no saber como subir archivos al Gato-Pulpo)</del>. No obstante, voy a usar uno de los controladores para determinar la sintaxis dentro del archivo <code>controllers.js</code>.</p>


[code language="javascript" collapse="true"]
//Controller para las categorías
libreria.controller('CategoriasCtrl', ['$scope', function($scope) {
	$scope.categorias = [
		{categoria: 1, nombre: &quot;Ciencia-Ficción&quot;},
		{categoria: 2, nombre: &quot;Romance&quot;},
		{categoria: 3, nombre: &quot;Histórica&quot;},
		{categoria: 4, nombre: &quot;Misterio&quot;},
	];
	$scope.nombrarCategoria = function(id){
		return $scope.categorias[id-1].nombre;
	};
}]);
[/code]

<ul>
	<li style="text-align:justify;"><code>.controller</code> es un método de angular para referenciar un controlador</li>
	<li style="text-align:justify;"><code>'CategoriasCtrl'</code> es el nombre del controlador.</li>
	<li style="text-align:justify;"><code>'$scope'</code> es "inyectado" como dependencia para definir el alcance de este controlador.</li>
	<li style="text-align:justify;"><code>function($scope){...}</code> es la función anónima de que determina el comportamiento del controlador. Todos los atributos y métodos tienen el mismo alcance determinado por <code>$scope</code>.</li>
</ul>
<p style="text-align:justify;">Todos los controladores se definen de la misma manera :D .</p>
<p style="text-align:justify;">El atributo <code>categorias</code> se define como local dentro del alcance del controlador, como un arreglo con la lista de categorías como objetos:</p>


[caption id="attachment_242" align="aligncenter" width="188"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/categorias_angular.png"><img class="wp-image-242 size-full" src="https://jotaeseymas.files.wordpress.com/2015/03/categorias_angular.png" alt="" width="188" height="199" /></a> <span style="font-size:13px;text-align:center;font-weight:bold;">Lista de categorías</span>[/caption]
<p style="text-align:justify;">Seguimos sacando partido, contando +1 al tuto... De vuelta al laburo ;)</p>
<p style="text-align:justify;"><strong>Actualización 23-04-2015:</strong> Los archivos ya están en el Gato-Pulpo :D</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2015-03-25 11:37:29</wp:post_date>
		<wp:post_date_gmt>2015-03-25 16:07:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-1-controlando-y-dirigiendo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[REESCRIBIENDO CONTROLADORES EN ANGULAR.JS | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/12/reescribiendo-controladores-en-angular-js/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.49</wp:comment_author_IP>
			<wp:comment_date>2015-06-12 12:02:14</wp:comment_date>
			<wp:comment_date_gmt>2015-06-12 16:32:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Nada milagroso ni holístico, incluímos la librería (después de Angular.js, claro) y la &#8220;inyectamos&#8221; como dependencia en la aplicación. Bueno, ya que estamos en ese plan, y como para echarle un vistazo a la librería (aparte de quitarme un poco el prejuicio :twisted: ), vamos a &#8220;reescribir&#8221; los controladores que llevamos hasta ahora en mi tutorial: [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434126735.01056194305419921875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434130634]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434130634.4174339771270751953125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>¿QUEEZEPTO?</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/01/queezepto/</link>
		<pubDate>Wed, 01 Apr 2015 16:34:11 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=194</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="que es esto"&gt;
<p style="text-align:justify;">Ehm, si... Así debería decir, pero a veces es bueno escribir con mala <em>hortografía </em>para hacer énfasis y que le paren a uno. Pero no quiero que me <span title="presten atención">paren</span> a mí, párenle a <strong>Zepto.js</strong>.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a title="Zepto.js" href="http://zeptojs.com/" target="_blank">Zepto.js</a> es una librería similar a <a title="jQuery" href="http://jquery.com/" target="_blank">jQuery</a>, pero se describe a si misma como "el primo ligero y rápido de jQuery". La idea no es reemplazar a la librería, sino demostrar lo que siempre digo, que ninguna tecnología es la <a title="Panacea Universal" href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panacea</a> que va a resolver todos los problemas del mundo, siempre es bueno probar alternativas.</p>
<p style="text-align:justify;">Zepto se perfila como una librería <a title="Aumentar producción-calidad y Reducir esfuerzo-costo" href="http://www.lean.org/whatslean/" target="_blank">Lean</a>, desarrollada a un tercio del peso en KB de jQuery pero corriendo 3 veces más rápido, optimizado para móviles por defecto y una de las características que más me agradan de esta librería es que <strong><span style="color:#d25349;">NO</span></strong> provee soporte para Internet Explorer menor a la versión 10+ (yujuuuu!!! :D )</p>


[caption id="attachment_282" align="aligncenter" width="362"]<a href="https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png"><img class=" wp-image-282" src="https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png?w=300" alt="juasjuasjuas..." width="362" height="180" /></a> <strong style="font-size:13px;">juas juas juas juas...</strong>[/caption]
<p style="text-align:justify;">La granularidad con la que Zepto está desarrollada me sorprende, en especial porque algunas funcionalidades que están por defecto incluidas en jQuery, tales como llamadas asíncronas via AJAX y manejo de eventos, están en módulos separados (bien específicados en su documentación) que pueden estar opcionales en un desarrollo con Zepto.</p>
<p style="text-align:justify;">Es decir que nos deja la manipulación <a title="Document Object Model" href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" target="_blank">DOM</a> no transversal de un documento HTML nada más descargar e incluir la librería <code>zepto.js</code> o <code>zepto.min.js</code> en nuestros proyectos. La buena noticia es que [casi] todas las funciones que posee jQuery para manipulación del DOM funcionan del mismo modo con Zepto.</p>
<p style="text-align:justify;">La ¿mala? noticia es que hay "detalles" que la hacen diferente:</p>

<ul>
	<li style="text-align:justify;"><strong>Zepto NO itera sobre atributos id</strong> (<code>'#'</code>), lo cual no es malo si se supone que un atributo id debe ser ÚNICO en el DOM, es decir que debes utilizar otra forma de iterar sobre elementos (usar clases CSS o elementos de lista como <code>'li'</code> pueden ser opciones válidas y saludables para el código :)</li>
	<li style="text-align:justify;"><strong>Zepto NO posee soporte a pseudo-selectores CSS </strong>(del tipo <code>':visible'</code> o <code>':checked'</code>), lo que quiere decir que debes ingeniarte una forma diferente de verificar si un <code>checkbox</code> está <code>checked</code> (usar eventos, por ejemplo). Aunque hay un <a title="Zepto-selector.js" href="https://github.com/madrobby/zepto/blob/master/src/selector.js#files" target="_blank">módulo</a> de Zepto que provee soporte parcial a algunos pseudo-selectores.</li>
	<li style="text-align:justify;"><strong>Zepto NO soporta formas abreviadas de campos input</strong> (como <code>'input:text'</code> o <code>'input:number'</code>), esto es consecuencia de no soportar pseudo-selectores completamente, entonces para seleccionar a todos los <code>input</code> de tipo <code>text</code> se debe usar la forma larga: <code>'input[type=text]'</code> para referenciarlos.</li>
</ul>
<p style="text-align:justify;">Y es sólo el comienzo <em>*risa malvada*</em> ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2015-04-01 12:04:11</wp:post_date>
		<wp:post_date_gmt>2015-04-01 16:34:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>queezepto</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LOS FANTASMAS PELEAN EN EL NAVEGADOR. PHANTOMJS VS. SLIMERJS</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/06/los-fantasmas-pelean-en-el-navegador-phantomjs-vs-slimerjs/</link>
		<pubDate>Wed, 06 May 2015 13:14:03 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="phantomjs vs\. slimerjs"&gt;

¡Es enserio! Aquí está la prueba ;)

https://www.youtube.com/watch?v=Fe93CLbHjxQ

Ehm, no, no era eso (a pesar de que no supero el <a title="Ehm, si..." href="https://en.wikipedia.org/wiki/Chroma_key" target="_blank">chroma-key</a> del video, ni la época)...

<!--more-->
<p style="text-align:justify;">En realidad, los fantasmas se pelean por el control del navegador web. Particularmente hay dos que "pelean" bastante fuerte, pero que tienen conceptos similares en cuanto a utilidad. Se tratan de <a title="PhantomJS" href="http://phantomjs.org/" target="_blank">PhantomJS</a> y de <a title="SlimerJS" href="http://slimerjs.org/index.html" target="_blank">SlimerJS</a>.</p>

<h2>UNA RÁPIDA COMPARACIÓN</h2>
<table border="1">
<thead>
<tr>
<th><span style="color:#d25349;">ITEM</span></th>
<th><span style="color:#16bec6;">PhantomJS</span></th>
<th><span style="color:#019739;">SlimerJS</span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"><span style="color:#d25349;"><strong>Logo</strong></span></td>
<td><span style="color:#16bec6;"><a href="https://jotaeseymas.files.wordpress.com/2015/05/phantomjs.png"><img class="alignnone wp-image-466" src="https://jotaeseymas.files.wordpress.com/2015/05/phantomjs.png" alt="phantomjs" width="200" height="200" /></a></span></td>
<td><a href="https://jotaeseymas.files.wordpress.com/2015/05/slimerjs1.png"><img class="alignnone wp-image-469" src="https://jotaeseymas.files.wordpress.com/2015/05/slimerjs1.png" alt="slimerjs" width="200" height="200" /></a></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Versión Actual</strong></span></td>
<td style="text-align:center;"><span style="color:#16bec6;">2.0.0</span></td>
<td style="text-align:center;"><span style="color:#019739;">0.9.5</span></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Motor</strong></span></td>
<td style="text-align:center;"><span style="color:#16bec6;">Chrome / WebKit</span></td>
<td style="text-align:center;"><span style="color:#019739;">Firefox / Gecko</span></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Lenguaje de Programación</strong></span></td>
<td style="text-align:center;"><span style="color:#16bec6;">C + Javascript</span></td>
<td style="text-align:center;"><span style="color:#019739;">Xul + Javascript</span></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Headless (sin cabeceras)</strong></span></td>
<td style="text-align:center;"><span style="color:#16bec6;">Si</span></td>
<td style="text-align:center;"><span style="color:#019739;">No</span></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Estándar AMD</strong></span></td>
<td style="text-align:center;"><span style="color:#16bec6;">RequireJS</span></td>
<td style="text-align:center;"><span style="color:#019739;">CommonJS</span></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Requiere compilación (*)</strong></span></td>
<td style="text-align:center;"><strong><span style="color:#16bec6;">SI</span></strong></td>
<td style="text-align:center;"><strong><span style="color:#019739;">NO</span></strong></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Peso (en MB) (*)
</strong></span></td>
<td style="text-align:center;"><strong><span style="color:#16bec6;">150</span></strong></td>
<td style="text-align:center;"><strong><span style="color:#019739;">20</span></strong></td>
</tr>
<tr>
<td><span style="color:#d25349;"><strong>Características</strong></span></td>
<td colspan="2">
<ul>
	<li><span style="color:#458b74;">Manipulación del DOM</span></li>
	<li><span style="color:#458b74;">Automatización de Eventos del Navegador</span></li>
	<li><span style="color:#458b74;">Workflow para Pruebas</span></li>
	<li><span style="color:#458b74;">Rendimiento y Estadísticas</span></li>
	<li><span style="color:#458b74;">Webscraping</span></li>
	<li><span style="color:#458b74;">Monitoreo de Red</span></li>
	<li><span style="color:#458b74;">Capturas de Pantalla</span></li>
</ul>
</td>
</tr>
</tbody>
</table>
<p style="text-align:justify;">¡<a title="¡Caray!" href="https://jotaeseymas.files.wordpress.com/2015/05/8c6c8-mono.jpg" target="_blank">Changos</a>! Había olvidado lo importante que es explicar de que va este post antes de lanzar la tabla. ¡Niños, no intenten eso en casa! :(</p>
<p style="text-align:justify;">A ver... Aunque mi experiencia es poca con los <a title="Navegador sin GUI" href="http://blog.arhg.net/2009/10/what-is-headless-browser.html" target="_blank"><em>headless-browsers</em></a>, de investigar por aquí y por allá, me di cuenta que son muy útiles para todo lo que describo arriba, especialmente para aplicaciones web. Ambos poseen una API Javascript muy rica en funcionalidades que permiten al toolkit, realizar la automatización de pruebas, capturas de pantalla, monitoreo, y un largo etcétera.</p>
<p style="text-align:justify;">Un <em>headless-browser,</em> permite manipular eventos del navegador sin necesidad de la interacción de un usuario, pues por medio del script desarrollado a nuestro gusto, podemos simular dicha interacción con nuestra aplicación web.</p>
<p style="text-align:justify;">Dicho esto, y considerando los <span style="color:#d25349;"><strong>(*)</strong></span> allá arriba, mi decisión es <span style="color:#0f9635;">SlimerJS</span>, porque me gusta mucho más mi navegador <a title="FIrefox for Developers" href="https://www.mozilla.org/es-ES/firefox/developer/" target="_blank">Mozilla Firefox</a> (uso la versión Aurora para desarrolladores) sobre Google Chrome y su harto consumo de memoria, además no requiere compilación.</p>
<p style="text-align:justify;">Hablé un poco sobre ellos, pero en adelante, espero continuar probando ambos <em>headless-browser  </em>cual fantasma que camina... ¡Boo! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2015-05-06 08:44:03</wp:post_date>
		<wp:post_date_gmt>2015-05-06 13:14:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>los-fantasmas-pelean-en-el-navegador-phantomjs-vs-slimerjs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[ch1nux]]></wp:comment_author>
			<wp:comment_author_email>grilletjhony@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jotaeseymas.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.109.233.62</wp:comment_author_IP>
			<wp:comment_date>2015-05-06 10:55:41</wp:comment_date>
			<wp:comment_date_gmt>2015-05-06 15:25:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muchísimas gracias amigo... Sigo investigando y aprendiendo, esa es la idea :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10</wp:comment_parent>
			<wp:comment_user_id>79130303</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1430925941]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1430925942]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1430925942.3698139190673828125;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[THernandez03]]></wp:comment_author>
			<wp:comment_author_email>tomas.hernandez03@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/thernandez03</wp:comment_author_url>
			<wp:comment_author_IP>190.215.76.178</wp:comment_author_IP>
			<wp:comment_date>2015-05-06 08:57:23</wp:comment_date>
			<wp:comment_date_gmt>2015-05-06 13:27:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Estimado, acabo de encontrar este blog y tengo que felicitarte por el excelente trabajo que haces. Todo está muy bien explicado, sigue así que ya estás en mis marcadores :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1430925855]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1430925855]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1430922800.5019199848175048828125;s:5:"event";s:9:"check-ham";s:4:"user";s:12:"thernandez03";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1430925856.2591459751129150390625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1430918843.2756130695343017578125;s:5:"event";s:9:"check-ham";s:4:"user";s:12:"thernandez03";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>VIAJANDO EN EL TIEMPO</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/viajando-en-el-tiempo/</link>
		<pubDate>Tue, 31 Mar 2015 16:25:40 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="viajando en el tiempo"&gt;
<p style="text-align:justify;">Las líneas de tiempo son importantes para gestión de proyectos, control, cronogramas de planificación, sistemas <a title="Enterprise Resource Planning" href="https://en.wikipedia.org/wiki/Enterprise_resource_planning" target="_blank">ERP</a>, entre otros. Permiten una visualización de actividades que se han venido desarrollando en un proyecto, un sistema, etc. Bien usadas, puede ser un recurso versátil (una de las que se me ocurre es una línea de tiempo para la duración de actividades de un proyecto en un <a title="Tablero Kanban" href="https://en.wikipedia.org/wiki/Kanban_board" target="_blank">tablero kanban</a>).</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a title="Timesheet.js" href="sbstjn.github.io/timesheet.js/" target="_blank">Timesheet.js</a> es una de esas librerías que me "encontré por ahí <a title="Ehm, si..." href="https://es.wikipedia.org/wiki/Googlear" target="_blank">googleando</a>". Es un proyecto prototipo, un envoltorio de un proyecto más grande usando <a title="Deploy Static Apps or webpages." href="https://middlemanapp.com/" target="_blank">Middleman</a>. Esta librería fue creada por <a title="Blog de Sebastian Müller" href="http://sbstjn.com/" target="_blank">Sebastian Müller</a> como parte de un proyeto más grande, pero que por su aplicación práctica lo liberó aparte en el Gato-Pulpo.</p>
<p style="text-align:justify;">La librería está en fase <em>omega</em> (tal cosa no existe, sólo es un sarcasmo para decir que <strong>NO</strong> es viable usarla en producción ¬¬'), pero así como viene la librería podemos usarla en proyectos "académicos", tras unas cuantas modificaciones al código, principalmente del CSS que trae por defecto. Nada más descargarla, la incluímos en un HTML junto con su CSS y trabajamos con ella.</p>


[code language="html"]
&lt;script src=&quot;timesheet.js&quot;&gt;&lt;/script&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;timesheet.css&quot;&gt;
[/code]

La sintaxis no es gran cosa :P

[code language="html" collapse="true"]
&lt;div id=&quot;timesheet&quot;&gt;
	&lt;script&gt;
		new Timesheet('timesheet', 2002, 2015, [
  		  ['2002', '09/2002', 'A freaking awesome time', 'lorem'],
    		  ['06/2002', '09/2003', 'Some great memories', 'ipsum'],
		  ['2003', 'Had very bad luck'],
		  ['10/2003', '2006', 'At least had fun', 'dolor'],
		  ['02/2005', '05/2006', 'Enjoyed those times as well', 'ipsum'],
		  ['07/2005', '09/2005', 'Bad luck again', 'default'],
		  ['10/2005', '2008', 'For a long time, nothing!', 'dolor'],
		  ['04/2003', '04/2009', 'It happens!', 'lorem']
		]);
	&lt;/script&gt;		
&lt;/div&gt;
[/code]

El constructor acepta cuatro parámetros obligatorios:
<ul>
	<li>El <code>id</code> del contenedor de la data.</li>
	<li><strong>Años</strong> de inicio y fin (sólamente los años).</li>
	<li>Un <code>Array</code> con la data específicada en cada ìtem:
<ul>
	<li>Fechas de inicio y fin (en formato MM/AAAA o el año).</li>
	<li>Breve descripcion.</li>
	<li>Atributo <code>class</code> que determina el color de la barra.</li>
</ul>
</li>
</ul>
Y nos da un bonito resultado <span title="de fábrica, por defecto"><em>out of the box</em></span>:
<p style="text-align:justify;"><a href="https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-31-115034.png"><img class=" size-medium wp-image-264 aligncenter" src="https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-31-115034.png?w=300" alt="Captura de pantalla de 2015-03-31 11:50:34" width="300" height="122" /></a>A pesar de todas las modificaciones que eventualmente hubiera que hacerle a esta librería, sigue siendo una buena opción para elaborar líneas de tiempo, y considerando que su propio autor insta a <span title="modificar su código fuente en GitHub"><em>forkear</em></span> su proyecto en el <a title="Repositorio de Sebastian Müller para Timesheet.js" href="https://github.com/sbstjn/timesheet.js" target="_blank">Gato-Pulpo</a>, veré si lo incluyo en uno de mis proyectos que tengo en mente, espero que me de tiempo ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2015-03-31 11:55:40</wp:post_date>
		<wp:post_date_gmt>2015-03-31 16:25:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>viajando-en-el-tiempo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="sebastian-muller"><![CDATA[Sebastian Müller]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EXPRESIONES REGULARES, UNA PELÍCULA DE TERROR. PARTE 1</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-1/</link>
		<pubDate>Tue, 31 Mar 2015 16:40:13 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=236</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="expresiones regulares una pel&amp;iacute;cula de terror\. parte 1"&gt;

[caption id="attachment_307" align="aligncenter" width="365"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png"><img class="  wp-image-307" src="https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png?w=300" alt="email-validation-regex" width="365" height="240" /></a> <strong style="font-size:13px;text-align:center;">Asusta, ¿no?</strong>[/caption]

Si esto no les asusta, entonces tienen más estómago que yo... A mi me aterra... :'(
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Hay una frase que es aún más aterradora que la imagen anterior:</p>

<blockquote>
<p style="text-align:justify;">"Algunos desarrolladores cuando se enfrentan a un problema piensan que la solución es usar expresiones regulares. En ese momento, ya tienen dos problemas." -- <em>Jamie Zawinski</em></p>
</blockquote>
<p style="text-align:justify;">Y sin atisbo de esperanza, nos decepcionamos y nos vamos así no más... Pero basta de <a title="Ehm, si..." href="http://www.wordreference.com/es/en/translation.asp?spen=cháchara" target="_blank">chácharas</a>...</p>
<p style="text-align:justify;">Básicamente, una expresión regular es un patrón utilizado para búsqueda de caracteres en un texto. Sin embargo la definición real va más allá de eso. Una expresión regular se puede usar para reemplazar cadenas en textos largos, hacer recorridos de árboles, nodos y grafos, y ¡hasta pueden programarse <a title="Autómatas Finitos" href="https://es.wikipedia.org/wiki/Autómata_finito" target="_blank">autómatas</a>!</p>
<p style="text-align:justify;">En Javascript, las expresiones regulares son objetos derivados de la clase <code>RegExp</code>, la cual permite utilizar un constructor de expresiones regulares y una serie de métodos que discutiremos a lo largo de este post. Una expresión regular en Javascript se puede construir:</p>

<ul>
	<li style="text-align:justify;">De la forma <code>var exp = /expresion/;</code></li>
	<li style="text-align:justify;">De la forma <code>var exp = new RegExp("expresion");</code></li>
</ul>
<p style="text-align:justify;">La <a title="Cheat Sheet Javascript" href="http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/" target="_blank">laaa...aaarga</a> lista de elementos que pueden compararse y buscarse en una expresión regular pueden consultarla en el enlace. Yo voy a hablar de los métodos Javascript de <code>RegExp</code>:</p>

<ul>
	<li style="text-align:justify;">El método <code>test()</code> prueba una expresión regular, devolviendo <code>true</code> o <code>false</code> si la expresión coincide con el texto pasado como parámetro. Ejemplo:

[code language="javascript"]
console.log(/\w+/.test(&quot;Esta es una cadena de prueba&quot;));
[/code]

devolverá <code>true.</code></li>
	<li style="text-align:justify;">El método <code>exec()</code> hace lo mismo que <code>test()</code>, pero éste devuelve un array de información pertinente a la comparación. Ejemplo:

[code language="javascript"]
console.log(/\w+/.exec(&quot;Esta es una cadena de prueba&quot;));
[/code]

devolverá <code>["Esta", index: 0, input: "Esta es una cadena de prueba"]</code> donde:
<ul>
	<li>La posición 0 es la primera ocurrencia de la cadena encontrada.</li>
	<li>La posición 1 (tambien la posición <code>index</code>) es la posición del primer caracter encontrado.</li>
	<li>La posición 2 (también la posición <code>input</code>) es la cadena evaluada.</li>
</ul>
</li>
</ul>
<p style="text-align:justify;">Cabe destacar que se pueden tener banderas (llamadas <code>flags</code>) para hacer la comparación más o menos precisa, a saber:</p>

<ul>
	<li style="text-align:justify;">El flag <code>i</code> determina que la comparación debe hacerse ignorando mayúsculas y minúsculas.</li>
	<li style="text-align:justify;">El flag <code>g</code> determina que la comparación debe hacerse en toda la frase y no sólo la primera ocurrencia (en el caso de textos largos de una línea).</li>
	<li style="text-align:justify;">El flag <code>m</code> determina que la comparación debe hacerse para todas las lineas del texto (en el caso de textos de un párrafo que hayan sido separados por caracteres de fín de línea \n). Ejemplo:

[code language="javascript"]
console.log(/esta/i.test(&quot;ESTA ES UNA CADENA&quot;));
[/code]

devolverá <code>true.</code></li>
</ul>
Sólo un abrebocas de lo que vendrá... muahahaha *risa malvada* ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2015-03-31 12:10:13</wp:post_date>
		<wp:post_date_gmt>2015-03-31 16:40:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expresiones-regulares-una-pelicula-de-terror-parte-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EXPRESIONES REGULARES, UNA PELÍCULA DE TERROR. PARTE 2</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-2/</link>
		<pubDate>Tue, 31 Mar 2015 16:41:09 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="expresiones regulares una pel&amp;iacute;cula de terror\. parte 2"&gt;

[caption id="attachment_307" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png"><img class="size-medium wp-image-307" src="https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png?w=300" alt="Asusta, ¿no?" width="300" height="197" /></a> <strong style="font-size:13px;text-align:center;">Asusta, ¿no?</strong>[/caption]

Si esto no les asusta, entonces tienen más tripas que yo… A mi me sigue aterrando… <span class="wp-smiley wp-emoji wp-emoji-cry" title=":'(">:'(</span>

<!--more-->
<p style="text-align:justify;">Poco a poco, e investigando un tanto más, sin <a title="Ehm, si..." href="http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara" target="_blank">chácharas</a> ni desánimos, existen herramientas web que hacen parecer a las expresiones regulares un juego de niños. Por supuesto, entendiendo que la complejidad de estas últimas puede llegar a ser tan monstruosa como la imagen del inicio de este post. Algunas de estas herramientas son:</p>

<h3 style="text-align:justify;">Regexr</h3>
<p style="text-align:justify;"><a title="Regexr" href="http://www.regexr.com/" target="_blank">Regexr</a> es una herramienta para construir expresiones regulares que funciona bastante rápido. Construída por <a title="@gskinner" href="https://twitter.com/gskinner/" target="_blank">Grant Skinner</a>, esta herramienta permite validar, a medida que escribimos la expresión regular Javascript, ir validando al vuelo, probando con un texto específico.</p>

<ul>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">Ventajas: </span></strong>Permite validar al vuelo la expresión regular y tiene una ayuda contextual bastante completa.</li>
	<li style="text-align:justify;"><strong><span style="color:#d25349;">Desventajas: </span></strong>Está en inglés y no permite <code title="arrastrar y soltar">drag&amp;drop</code> de expresiones regulares (lo cual sería genial :( ).</li>
</ul>
<h3>Regexpal</h3>
<p style="text-align:justify;"><a title="Regexpal.com" href="http://regexpal.com/" target="_blank">Regexpal</a> es una herramienta sencilla que hace el trabajo sucio de la forma más simple posible: escribes la expresión regular Javascript (sin las barras"/"), escribes el texto en el recuadro de abajo, luego notarás que las ocurrencias encontradas alternan entre amarillo (ocurrencia encontrada) y azul (próxima ocurrencia encontrada), simple, ¿no?</p>

<ul>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">Ventajas:</span></strong> Simple, muy simple, y tiene una versión de la aplicación para sistemas Android.</li>
	<li style="text-align:justify;"><strong><span style="color:#d25349;">Desventajas:</span></strong> No tiene una ayuda contextual muy buena, de hecho, es tan simple como la aplicación (también está en inglés).</li>
</ul>
<h3>Debuggex</h3>
<p style="text-align:justify;"><a title="Debuggex" href="https://www.debuggex.com/" target="_blank">Debuggex</a> es una herramienta que pretende hacer las cosas diferentes. En vez de tener simplemente un recuadro de texto donde pruebas la fuente y otro recuadro donde escribes la expresión regular, tiene otro recuadro adicional que valida el flujo de la expresión regular ¡graficamente! Lo cual ayuda significativamente a comprender lo que se escribe.</p>

<ul>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">Ventajas:</span></strong> La herramienta te analiza la expresión regular mientras la escribes, y el gráfico del flujo de la expresión regular tiene un desempeño formidable.</li>
	<li style="text-align:justify;"><strong><span style="color:#d25349;">Desventajas:</span></strong> A pesar de ser intuitiva, carece de una ayuda contextual que te diga que debes hacer, pues al estar en inglés, puede parecer difícil.</li>
</ul>
Aunque existan herramientas como estas, la película no se ha acabado *risa malvada* ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2015-03-31 12:11:09</wp:post_date>
		<wp:post_date_gmt>2015-03-31 16:41:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expresiones-regulares-una-pelicula-de-terror-parte-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_330540f74b60e02aa93ef77e6fd53d9c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_de86d55dfc1dbb488fa037c1615a5376</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4acd150652d3af556e8d9ca4418cc48d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EXPRESIONES REGULARES, UNA PELÍCULA DE TERROR. PARTE 3</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-3/</link>
		<pubDate>Tue, 31 Mar 2015 16:46:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=270</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="expresiones regulares una pel&amp;iacute;cula de terror\. parte 3"&gt;

[caption id="attachment_307" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png"><img class="size-medium wp-image-307" src="https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png?w=300" alt="Asusta, ¿no?" width="300" height="197" /></a> <strong style="font-size:13px;text-align:center;">Asusta, ¿no?</strong>[/caption]
<p style="text-align:justify;">No se si les asuste todavía… A mi me sigue causando pánico… <span class="wp-smiley wp-emoji wp-emoji-cry" title=":'(">:'(</span></p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Aunque, si le cojo el <a title="Ehm, si..." href="http://significado.de/tranquillo" target="_blank">tranquillo</a>, se que puedo superar ese miedo, así, sin tanta <a title="Ehm, si..." href="http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara" target="_blank">cháchara</a> pues...</p>
<p style="text-align:justify;">Me puse a inventar y a curucutear <strong><span style="color:#7cbbbb;">#porai</span></strong> e hice tres expresiones regulares para compartir con vosotros. A lo mejor se encuentren optimizadas <strong><span style="color:#7cbbbb;">#porai</span></strong> pero estas las hice yo (cabe destacar que estos patrones sólo aplican para Venezuela, después no digan que no les dije... :P</p>

<h3 style="text-align:justify;">Patrón para validar cédula / RIF:</h3>

[code lang="text"]/[VEPGJ]-?\d{6,9}-?\d?/gi[/code]

<p style="text-align:justify;">Básicamente se traduce así: selecciona al menos uno de todos los caracteres entre [], seguido de un guión (-) opcional, luego un grupo de 6 a 9 digitos numéricos, seguido de otro guión opcional y finalmente un digito opcional. el flag <em>"g"</em> para toda la cadena y el flag <em>"i"</em> para case insensitive.</p>
<p style="text-align:justify;"><strong>Justificación: </strong>Los caracteres "V" y "E" son para cédulas (y algunos RIFs de personas naturales). "P" de pasaporte, "G" de personas gubernamentales y "J" para personas jurídicas. Algunas veces las cédulas y los RIFs pueden venir con guiones (J-12345678-6) o sin ellos (V12345678).</p>
<p style="text-align:justify;">Puedes ver a <a title="Regexpal.com" href="http://regexpal.com/" target="_blank">Regexpal</a> en acción, como no pueden escribirse <em>flags</em>, se marcan en la barra superior:</p>


[caption id="attachment_353" align="aligncenter" width="184"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/regexpal.png"><img class="size-full wp-image-353" src="https://jotaeseymas.files.wordpress.com/2015/03/regexpal.png" alt="Regexpal en acción" width="184" height="178" /></a> <strong style="font-size:13px;text-align:center;">Regexpal en acción</strong>[/caption]
<h3>Patrón para validar números de cuenta bancaria:</h3>

[code lang="text"]/(\d{4})-(\d{4})-(\d{2})-(\d{10})/g[/code]

<p style="text-align:justify;">Traduciendo el <a title="Ehm, si..." href="https://es.wiktionary.org/wiki/galimat%C3%ADas" target="_blank">galimatías</a>: un grupo de 4 dígitos, guión y otro grupo de 4 dígitos, guión y otro grupo de 2 dígitos, guión y otro grupo de 10 dígitos.</p>
<p style="text-align:justify;"><strong>Justificación:</strong> Aunque esta expresión regular pudo reescribirse de la forma <code>(\d{4}){2}-</code> etcétera, personalmente, y con fines académicos, considero necesario validar <a title="Agrupamiento" href="https://es.wikipedia.org/wiki/Expresi%C3%B3n_regular#Los_par.C3.A9ntesis_.22.28.29.22" target="_blank">grupos de captura</a> que permitan hacer una separación lógica de los datos, y en este caso particular, cada grupo de 4 dígitos representa algo diferente, significado que adquiere sentido cuando probamos esta expresión regular en <a title="Regexr.com" href="http://regexr.com/" target="_blank">Regexr</a> usando grupos de sustitución:</p>


[caption id="attachment_357" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/regexpr.png"><img class="size-medium wp-image-357" src="https://jotaeseymas.files.wordpress.com/2015/03/regexpr.png?w=300" alt="Regexr en acción" width="300" height="90" /></a> <strong style="font-size:13px;text-align:center;">Regexr en acción</strong>[/caption]

Usando este código...

[code lang="text"]# estado y municipio: $1\n# código de agencia: $2\n# tipo de cuenta producto: $3\n# número de cuenta cliente: $4[/code]

... en el recuadro S<em>ubstitution, </em>podemos distinguir la siguiente separación:

[caption id="attachment_358" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/separacion.png"><img class="size-medium wp-image-358" src="https://jotaeseymas.files.wordpress.com/2015/03/separacion.png?w=300" alt="Substitution de Regexr en acción" width="300" height="94" /></a> <strong style="font-size:13px;text-align:center;"><em>Substitution</em> de Regexr en acción</strong>[/caption]
<h3>Patrón para validar códigos de área y teléfonos locales y celulares:</h3>

[code lang="text"]/0(2(12|3[4589]|4[0-9]|[5-8][1-9]|9[1-5])|(4(12|14|16|24|26)))-?\d{7}/g[/code]

Traducción: ni de coña... :P
<p style="text-align:justify;"><strong>Justificación:</strong> Una expresión regular tan compleja, no puede ser estudiada sino gráficamente para una mejor comprensión del patrón que valida, es por eso que la explicación puede verse [un poco] mejor en herramientas como <a title="Debuggex.com" href="https://www.debuggex.com/" target="_blank">Debuggex</a>:</p>


[caption id="attachment_362" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/debuggex.png"><img class="size-medium wp-image-362" src="https://jotaeseymas.files.wordpress.com/2015/03/debuggex.png?w=300" alt="Debuggex en acción" width="300" height="93" /></a> <strong style="font-size:13px;text-align:center;">Debuggex en acción</strong>[/caption]

Y la expresión regular queda ¿simplificada? gráficamente de la siguiente forma:

[caption id="attachment_364" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/debuggex-grafica.png"><img class="size-medium wp-image-364" src="https://jotaeseymas.files.wordpress.com/2015/03/debuggex-grafica.png?w=300" alt="gGráfico generado por Debuggex en acción" width="300" height="182" /></a> <strong style="font-size:13px;text-align:center;">Gráfico generado por Debuggex<br /></strong>[/caption]
<p style="text-align:justify;">Variando el indicador <em>POSITION</em> a la posición <em>START</em>, podemos verificar el flujo de trabajo de la expresión regular, y certificar que valida tanto los códigos de operadores móviles como los códigos de área local que puedes consultar <a title="Discado Directo Nacional en Venezuela" href="http://www.a-venezuela.com/ciudades/codigosddn/index.shtml" target="_blank">aquí</a>.</p>
<p style="text-align:justify;">Fin de la película de terror... ¿ven que no da miedo? ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2015-03-31 12:16:32</wp:post_date>
		<wp:post_date_gmt>2015-03-31 16:46:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expresiones-regulares-una-pelicula-de-terror-parte-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_330540f74b60e02aa93ef77e6fd53d9c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_de86d55dfc1dbb488fa037c1615a5376</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4acd150652d3af556e8d9ca4418cc48d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DRAG &#038; DROP CON ZEPTO</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/05/drag-drop-con-zepto/</link>
		<pubDate>Sun, 05 Apr 2015 22:35:37 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=292</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="drag &amp;amp; drop con zepto"&gt;

¡Al fin! Después de tanto indagar (y sufrir :'( ) puedo escribo este post...

<!--more-->
<p style="text-align:justify;"><a title="jQuery" href="http://jquery.com/" target="_blank">jQuery</a> ha hecho que el Drag &amp; Drop (arrastrar y soltar) sea sencillo y fácil de manejar, entonces ¿para qué complicarse la vida con otra cosa? Jejeje, no es complicarse, pues siempre he dicho que ninguna tecnología es la <a title="Panacea universal" href="http://es.wikipedia.org/wiki/Panacea_universal" target="_blank">panacea</a> que va a resolver todos los problemas, además, siempre es bueno tener otras alternativas, ¿no? En la variedad está el gusto :P</p>
<p style="text-align:justify;">En mi campaña de "desapego" por esa librería, y después de encontrar <a title="Zepto.js" href="http://zeptojs.com/" target="_blank">Zepto</a>, explicado en este <a title="¿Que es Zepto?" href="http://wp.me/p5CTtO-38" target="_blank">post</a>, y usada en este otro <a title="Colorea tu vida... y tus páginas Web" href="http://wp.me/p5CTtO-7l" target="_blank">post</a>, investigué una librería que funciona para la clase de interacciones de arrastrar y soltar, así como ordenar elementos.</p>
<p style="text-align:justify;"><a title="Zepto-dnd" href="http://ma.rkusa.st/zepto-dnd/" target="_blank">Zepto-dnd</a> es una librería fácil de usar, y proporciona, de forma razonablemente sencilla, esta interacción para crear páginas con bastante elementos de UI. Para reforzar este ejemplo, hice una prueba sencilla con tres contenedores en HTML y CSS, y un cuadro que se desplaza entre ellos. Para esto incluimos las librerias necesarias en orden:</p>


[code lang="html" collapse="true"]
    &lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;event.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;data.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;zepto-dnd.js&quot;&gt;&lt;/script&gt;
[/code]

<p style="text-align:justify;">Luego el esquema de nuestra aplicación...</p>


[code lang="html" collapse="true"]
    &lt;div class=&quot;recipiente&quot;&gt;
        &lt;h2&gt;Recipiente 1&lt;/h2&gt;
        &lt;div class=&quot;cuadro&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;recipiente&quot;&gt;
        &lt;h2&gt;Recipiente 2&lt;/h2&gt;
    &lt;/div&gt;
    &lt;div class=&quot;recipiente&quot;&gt;
        &lt;h2&gt;Recipiente 3&lt;/h2&gt;
    &lt;/div&gt;
[/code]

Un poco de estilo...

[code lang="css" collapse="true"]
.cuadro{
    float: left; margin: 3px;
    width: 50px; height: 50px;
    background-color: #7CBBBB;
    border: 5px solid #D25349;
}
.recipiente{
    float: left; margin: 5px;
    width: 200px; height: 300px;
    background-color: white;
    border: 5px solid #7cbbbb;
}
[/code]

...y el código que importa :)

[code lang="javascript" collapse="true"]
$(document).ready(function() {
   $('.cuadro').draggable();
   $('.recipiente').droppable();
});
[/code]

<p style="text-align:justify;">Sencillo, ¿no? Pues ¡no!, ya que para lograr el efecto deseado, tuve que <del>modificar</del> comentar una<del>s</del> línea<del>s</del> del núcleo de la librería Zepto-dnd, específicamente la línea 381 así como sigue:</p>


[code lang="javascript" collapse="true" firstline="380" highlight="381"]
...
    // e.dataTransfer.effectAllowed = 'copy'
...
[/code]

<p style="text-align:justify;">Lo hice, porque investigando un poco sobre la API Drag &amp; Drop de HTML5 en este <a title="HTML5 Rocks Drag &amp; Drop" href="http://www.html5rocks.com/en/tutorials/dnd/basics/" target="_blank">artículo</a>, descubrí que los eventos necesarios para lograr el efecto de arrastrar y soltar son muchos, y la librería, por desgracia, solo maneja un efecto a la vez, aunque éste pudiera ser personalizado por medio de su API, la librería no ofrece muchas opciones para personalizar esto.</p>
<p style="text-align:justify;">Aún así sigue siendo una opción interesante, digna de arrastrar ¿verdad? ;)</p>
&lt;/script&gt;

<strong>Actualizado 22-05-2015:</strong> Basta con comentar la linea 381 y funciona del mismo modo :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2015-04-05 18:05:37</wp:post_date>
		<wp:post_date_gmt>2015-04-05 22:35:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>drag-drop-con-zepto</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="drag"><![CDATA[drag]]></category>
		<category domain="post_tag" nicename="drop"><![CDATA[drop]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9e014611c0f19c74f4bdc1f38cc3055e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HACER UN &quot;MOCKUP&quot; CON INKSCAPE Y JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/06/hacer-un-mockup-con-inkscape-y-javascript/</link>
		<pubDate>Mon, 06 Apr 2015 15:01:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=294</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="hacer un mockup con inkscape y javascript"&gt;
<p style="text-align:justify;">Un <a title="Traducción: &quot;cosa agrandada&quot;" href="https://en.wikipedia.org/wiki/Mockup" target="_blank"><em>mockup</em></a> es un prototipo (generalmente de la interfaz) de un sistema, que permite a los clientes ver, en cierto grado, la funcionalidad de la aplicación, antes de que se inicie el desarrollo. También sirve para definir los requerimientos del cliente cuando no están muy claros y evitar cosas indebidas como la tragedia del <a title="..." href="https://es.wikipedia.org/wiki/Vasa" target="_blank">Barco de Vasa</a>.
<!--more--></p>
<p style="text-align:justify;">No voy a explicar que es ni como se trabaja con la herramienta <a title="Herramienta para diseño de gráficos vectoriales (SVG)" href="https://inkscape.org/es/" target="_blank">Inkscape</a>, mucho menos como y donde se descarga o se instala en las diferentes plataformas (¬¬' busquen en <a title="Ehm, si..." href="https://www.youtube.com/watch?v=P5nS_GbBsB0" target="_blank">Youtube</a> o <em><a title="Ehm, si..." href="https://www.google.co.ve/#q=instalar%20inkscape" target="_blank">Googléenlo</a></em>), que este blog va de Javascript ¡caramba! Lo que si voy a explicar es que cuando crean un objeto (¡y en Inkscape, todo es un objeto!) pueden añadirle interacciones:</p>


[caption id="attachment_299" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/04/propiedades.png"><img class="wp-image-299 size-medium" src="https://jotaeseymas.files.wordpress.com/2015/04/propiedades.png?w=300" alt="¿los nombres les parecen familiares?" width="300" height="247" /></a> <strong style="font-size:13px;">¿los nombres les parecen familiares?</strong>[/caption]
<p style="text-align:justify;">Una vez guardada su imagen (en formato *.svg) pueden abrirla en el navegador de su preferencia (el mío es <a title="¡Awante zorro!" href="https://www.mozilla.org/es-ES/firefox/new/" target="_blank">Mozilla Firefox</a>). Dentro de los campos de entrada pueden ingresar código Javascript trocho y mocho como si nada, como si de un <a title="What You See Is What You Get" href="https://en.wikipedia.org/wiki/WYSIWYG" target="_blank">WYSIWYG</a> se tratara...</p>
<p style="text-align:justify;">Lo más simple, puede ser usar el evento <code>onclick</code> con la función <code>window.alert()</code> o la propiedad <code>window.location.href</code> del <a title="Document Object Model" href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" target="_blank">DOM</a> para "simular" la navegación entre páginas (que vendrían a ser otras imágenes *svg u otros recursos), las posibilidades son [casi] infinitas y muy sencillas, eso sí.</p>
<p style="text-align:justify;">Hacer un <em>mockup</em> como punto de partida para el desarrollo de aplicaciones no es trabajo en vano. Grandes corporaciones como Mozilla y Google se benefician de esta tecnología reduciendo el tiempo en un 20 y 30% en fases superiores del desarrollo web. Nada despreciable comparado con un desarrollo simple en el que pudiera existir cambio de requerimientos de último minuto. Dicha práctica debería ser penada :P</p>
<p style="text-align:justify;">Si te decides a usar herramientas automatizadas porque esta solución propuesta te parece muy <a title="Ehm, si..." href="https://es.wikipedia.org/wiki/Espa%C3%B1ol_chileno" target="_blank">charcha</a>, puedes revisar este <a title="Herramientas para hacer Mockups" href="http://mashable.com/2012/06/07/mockup-tools/" target="_blank">enlace</a>. Mientras tanto, el Barco de Vasa sigue navegando en los mares de la incertidumbre... ;)</p>
<p style="text-align:justify;"><strong title="By The Way: Por cierto...">BTW: </strong>El crédito por esta información no es mío, sino de un post que conseguí por <a href="http://eclipsesource.com/blogs/2012/07/03/wireframing-inkscape-javascript/" target="_blank">aquí</a>.</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2015-04-06 10:31:53</wp:post_date>
		<wp:post_date_gmt>2015-04-06 15:01:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hacer-un-mockup-con-inkscape-y-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SEEK AND DESTROY (ELEMENTOS DUPLICADOS)</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/05/seek-and-destroy-elementos-duplicados/</link>
		<pubDate>Sun, 05 Apr 2015 22:49:11 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="algoritmos de b&amp;uacute;squeda y eliminaci&amp;oacute;n de elementos num&amp;eacute;ricos repetidos"&gt;
<p style="text-align:justify;">Algo tan sencillo en la programación, como tener un <code>Array</code> con elementos repetidos es tan común como tener acné o ir al baño...</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Veamos, hay muchísimas formas de eliminar elementos duplicados en un Array, pero para no hacer el post tan largo, voy a irme por tres vías: usar VanillaJS (a.k.a. Javascript <em>trocho y mocho</em>), usar funciones propias de Javascript  prototipadas como <a title="Map function" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2Fmap" target="_blank">map()</a> o <a title="Reduce function" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FReduce" target="_blank">reduce()</a>, o usar una librería externa.</p>

<h2 style="text-align:justify;">Caso de estudio</h2>
Para no generalizar, voy a usar un Array numérico:

[code lang="javascript"]
var arr = [1, 2, 31, 45, 7, 31, 2, 5, 7, 2];
[/code]

<h2>Vía VanillaJS</h2>
Ordeno el arreglo y comparo cada elemento con el siguiente.

[code lang="javascript" collapse="true"]
arr.sort(function(a, b){return a - b;});
for (var i = 0; i &lt; arr.length; i++) {
  if(arr[i] === arr[i+1]){
    arr.splice(i--, 1);
  }
};
console.log(arr);
[/code]

<p style="text-align:justify;">La función <code>sort()</code> ordenará el arreglo ascendente o descendentemente si la función pasada como parámetro retorna un valor positivo o negativo respectivamente. Lo demás es eliminar el elemento que se está comparando si corresponde con el próximo valor encontrado.</p>

<h2 style="text-align:justify;">Vía funciones prototipadas</h2>
<p style="text-align:justify;">Uso la función prototipada <code>reduce()</code> para recorrer todo el arreglo, compararlo con los duplicados que se encuentren y mudarlos (una sola vez) a un nuevo arreglo.</p>


[code lang="javascript" collapse="true"]
var miarr = arr.reduce(function(a, elem) {
  if(a.indexOf(elem) === -1) {
    a.push(elem);
  }
  return a;
}, []);
console.log(miarr);
[/code]

<p style="text-align:justify;">La función prototipada <code>reduce()</code> recibe varios parámetros, que dependiendo del contexto ayudan a lo mismo, esto es, reducir todos los elementos de un arreglo a un único valor, o al menos al retorno de un único valor.</p>

<h2 style="text-align:justify;">Vía librerías externas</h2>
<p style="text-align:justify;">Las dos anteriores están muy bien, pero, si lo necesitamos para <em><strong>ayer</strong></em> ¿tiene sentido ponerse creativos? Pues, no. Afortunadamente existen varias librerías que hacen el trabajo pesado por nosotros, una de ellas es <a title="Underscore.js" href="underscorejs.org/" target="_blank">Underscore.js</a>.</p>
<p style="text-align:justify;">La incluímos en nuestro código HTML:</p>


[code lang="html"]&lt;script src=&quot;underscore.js&quot;&gt;&lt;/script&gt;[/code]

<p style="text-align:justify;">Y usamos la función <code>uniq()</code>:</p>


[code lang="javascript" collapse="true" highlight="1"]
arr = _.uniq(arr);
console.log(arr);
[/code]

<p style="text-align:justify;">Entendiendo que el caracter _ representa el <a title="Namespaces" href="http://www.codeproject.com/Articles/19030/Namespaces-in-JavaScript" target="_blank">espacio de nombres</a> por el cual se rige la librería. Pero sobre esas cosas, y en especial sobre esta librería, hablaré más adelante en otro post.</p>
<p style="text-align:justify;">Espero no duplicarme ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2015-04-05 18:19:11</wp:post_date>
		<wp:post_date_gmt>2015-04-05 22:49:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>seek-and-destroy-elementos-duplicados</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[MANIPULACION DE DATOS EN JAVASCRIPT | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.21</wp:comment_author_IP>
			<wp:comment_date>2015-06-13 20:46:21</wp:comment_date>
			<wp:comment_date_gmt>2015-06-14 01:16:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] como componente de sus sistemas, tal es el caso de Backbone.js o DocumentCloud. Incluso, tengo un post que usa la función _.uniq() para eliminar elementos únicos en un [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434244582.1749269962310791015625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434244733]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434244734.4036219120025634765625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>LIBRERIA ANGULAR. PARTE 2. ENRUTANDO</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/26/libreria-angular-parte-2-enrutando/</link>
		<pubDate>Sun, 26 Apr 2015 21:41:19 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:justify;">&lt;script src="my own" title="parte 2. enrutando"&gt;</p>
<p style="text-align:justify;">Se que no es miércoles, que ya ha pasado un mes desde el <a title="Parte 1. Controlando y Dirigiendo" href="http://wp.me/p5CTtO-2P">último post</a> y que quizás no tenga excusa por su paciencia... Pero aquí estamos de nuevo, sacando la info necesaria (y el tiempo y la paciencia, etcétera) para este tuto :P</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Si revisaron mi repo en el <a title="Mi repo..." href="https://github.com/chinuxparibus/libreria-angular" target="_blank">Gato-Pulpo</a>, se darán cuenta que está muy diferente a como lo dejé la primera vez que estaba subiendo archivos cual neófito cuando aprende algo nuevo. Entre las cosas que hice, está la refactorización del código, pero vamos por partes como <a title="Ehm, si..." href="https://es.wikipedia.org/wiki/Jack_el_Destripador" target="_blank">Jack El Destripador</a>.</p>

<h2 style="text-align:justify;">Controlando</h2>
<p style="text-align:justify;">En el archivo <code>app/controllers.js</code> incluí un nuevo controlador que se encarga de darle sentido a los templates de nuestra aplicación, dejando una página de inicio más modularizada, llamado <code>TemplateCtrl</code>:</p>


[code lang="js" collapse="true"]
//Controller para administrar los templates
libreria.controller('TemplateCtrl', ['$scope', function($scope) {
    var rootDir = 'templates/';
    $scope.templates = [
        {url : rootDir+'menu_superior.html'},
        {url : rootDir+'nuevo_libro.html'},
        {url : rootDir+'nueva_categoria.html'},
        {url : rootDir+'comprar.html'}
    ];
}]);
[/code]

<p style="text-align:justify;">Nada de misterioso, en realidad es un módulo cuya sintaxis ya expliqué en el post anterior a este tuto. Ahora nuestro archivo <code>index.html</code>, dentro del <code>body</code> queda así:</p>


[code lang="html" collapse="true" highlight="3,6,9,12,15"]
    &lt;div ng-controller=&quot;TemplateCtrl&quot;&gt;
        &lt;!-- Template Menú Superior --&gt;
        &lt;div ng-include=&quot;templates[0].url&quot;&gt;&lt;/div&gt;

        &lt;!-- Lista de Libros --&gt;
        &lt;div ng-view&gt;&lt;/div&gt;

        &lt;!-- Modal Agregar Nuevo Libro --&gt;
        &lt;div ng-include=&quot;templates[1].url&quot;&gt;&lt;/div&gt;

        &lt;!-- Modal Agregar Nueva Categoría --&gt;
        &lt;div ng-include=&quot;templates[2].url&quot;&gt;&lt;/div&gt;

        &lt;!-- Modal Comprar Libro --&gt;
        &lt;div ng-include=&quot;templates[3].url&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
[/code]

<h2>Dirigiendo</h2>
<p style="text-align:justify;">En las líneas resaltadas del código anterior vemos dos nuevas directivas que usamos para refactorizar el código:</p>

<ul>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">ng-include</span></strong> es una directiva que se utiliza para incluir código html estático dentro de la vista principal. En este caso se incluyen por esta vía el menú superior y el resto de ventanas modales, refactorizadas en los archivos que están en el directorio <code>templates</code>.</li>
	<li style="text-align:justify;"><strong><span style="color:#7cbbbb;">ng-view</span></strong> es una directiva usada para incluír código html dinámico, o que por la naturaleza misma de los datos a ser presentados, cambiará constantemente dentro de la aplicación. En este caso, esta directiva se usa en conjunto con el módulo o dependencia <strong><span style="color:#7cbbbb;">'ngRoute'</span></strong> que se explicará más adelante.</li>
</ul>
Adicionalmente hay otro elemento a ser resaltado aparte:
<ul>
	<li style="text-align:justify;">El objeto global <strong><span style="color:#7cbbbb;">$parent</span></strong> que está referenciado en el archivo <code>templates/menu_superior.html</code>, se utiliza debido a que al estar incluyendo vistas mediante la directiva <strong><span style="color:#7cbbbb;">ng-include</span></strong>. cada inclusión crea un <strong><span style="color:#7cbbbb;">$scope</span></strong> local para cada vista, entonces este objeto se encarga de trasladar el control a un <strong><span style="color:#7cbbbb;">$scope</span></strong> superior, llamado <a title="Angular JS API for $rootScope" href="https://code.angularjs.org/1.3.10/docs/api/ng/service/$rootScope" target="_blank">$rootScope</a>.</li>
</ul>
[caption id="attachment_424" align="aligncenter" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/04/scopes_angular.png"><img class="wp-image-424 size-medium" src="https://jotaeseymas.files.wordpress.com/2015/04/scopes_angular.png?w=300" alt="Ilustración de $rootScope. $parent le transfiere el $scope." width="300" height="155" /></a> <strong style="font-size:13px;text-align:center;">Ilustración de $rootScope. $parent le transfiere el $scope.</strong>[/caption]
<h2 style="text-align:justify;">Enrutando</h2>
<p style="text-align:justify;">Si bien el concepto de <a title="Routing." href="http://www.webopedia.com/TERM/R/routing.html" target="_blank">rutas</a> no es nuevo, Angular.js le da una "vuelta de tuerca". En tal sentido, el framework procura realizar aplicaciones <a title="Single Page Application" href="http://https://en.wikipedia.org/wiki/Single-page_application" target="_blank">SPA</a> y conservar una arquitectura "<a title="Module Pattern in Javascript" href="http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html" target="_blank">modularizada</a>" utilizando para ello URLs definidas por el usuario.</p>
<p style="text-align:justify;">Para lograr esto, es necesario "<a title="Dependency Injection Module Pattern" href="https://code.angularjs.org/1.3.10/docs/guide/di" target="_blank">inyectar una dependencia</a>" de Angular.js, el módulo <a title="Route module for Angular.js" href="https://code.angularjs.org/1.3.10/angular-route.min.js" target="_blank"><code>angular-route.min.js</code></a>. Para ello, primero lo incluimos en <code>index.html</code> (en mi caso reside físicamente en el directorio <code>external</code>):</p>


[code lang="html"]
&lt;script src=&quot;external/angular-route.min.js&quot;&gt;&lt;/script&gt;
[/code]

<p style="text-align:justify;">Luego, en el archivo <code>app/controllers.js</code> inyectamos la dependencia en el módulo:</p>


[code lang="javascript"]
//                 se incluye la dependencia -\
var libreria = angular.module('LibreriaApp', ['ngRoute']);
[/code]

<p style="text-align:justify;">Para crear la arquitectura modular que deseamos, hice un archivo llamado <code>router.js</code> dentro del directorio <code>app</code> que contendrá la configuración de todas las rutas de nuestra aplicación.</p>


[code lang="javascript" collapse="true" highlight="2,4,7,11"]
//Se instancia el módulo de manera global
var libreria = angular.module('LibreriaApp');

libreria.config(['$routeProvider', function($routeProvider){
    var rootDir = 'templates';
    $routeProvider
        .when('/', {
            templateUrl: rootDir+'/libros.html',
            controller: 'LibrosCtrl'
        })
        .otherwise({ redirectTo: '/' });
}]);
[/code]

<ul>
	<li style="text-align:justify;">En la línea 2 se instancia la aplicación de manera global para <code>app/router.js</code>.</li>
	<li style="text-align:justify;">En la línea 4, .<code>config </code>es el método de angular que maneja las dependencias de configuración de las rutas. Requiere dos parámetros obligatorios.
<ul>
	<li style="text-align:justify;"><code>$routeProvider</code>, que es el objeto de Angular que provee acceso a URLs y,</li>
	<li style="text-align:justify;">una función anónima que almacene la configuración de las rutas dentro de <code>$routeProvider</code>.</li>
</ul>
</li>
	<li style="text-align:justify;">En la línea 7, el objeto <code>$routeProvider</code> tiene dos funciones:
<ul>
	<li style="text-align:justify;">La función <code>.when()</code> que acepta dos parámetros:
<ul>
	<li style="text-align:justify;">un string con la URL personalizada y,</li>
	<li style="text-align:justify;">un objeto que define dos atributos:
<ul>
	<li style="text-align:justify;"><code>templateUrl</code>: código html que va a insertarse en la sección donde esté definida la directiva <strong><span style="color:#7cbbbb;">ng-view</span></strong>.</li>
	<li style="text-align:justify;"><code>controller</code>: string del controlador que va a manejar el <strong><span style="color:#7cbbbb;">$scope</span></strong> de dicho template.</li>
</ul>
</li>
</ul>
</li>
	<li style="text-align:justify;">La función <code>.otherwise()</code>, en la linea 11, que define un objeto con la ruta o redirección por defecto, en caso de que ninguna de las URLs definidas con el método <code>.when()</code> sea encontrada.</li>
</ul>
</li>
	<li style="text-align:justify;">Respecto a la última línea, considere que puede invocar infinitas funciones <code>.when()</code> dependiendo de las rutas que se necesiten, pero solo un <code>.otherwise()</code>.</li>
</ul>
Sigo aumentando +1 a la cuenta. Esta quedando muy <a title="Ehm, si..." href="http://www.urbandictionary.com/define.php?term=chido" target="_blank">chido</a> ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2015-04-26 17:11:19</wp:post_date>
		<wp:post_date_gmt>2015-04-26 21:41:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-2-enrutando</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CLONANDO OBJETOS EN JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/14/clonando-objetos-en-javascript/</link>
		<pubDate>Tue, 14 Apr 2015 15:43:08 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/2015/04/14/clonando-objetos-en-javascript/</guid>
		<description></description>
		<content:encoded><![CDATA[Un compañero que hizo un excelente trabajo sobre Clonación de Objetos en Javascript]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2015-04-14 11:13:08</wp:post_date>
		<wp:post_date_gmt>2015-04-14 15:43:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clonando-objetos-en-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sin-categoria"><![CDATA[Sin categoría]]></category>
		<wp:postmeta>
			<wp:meta_key>is_reblog</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_id</wp:meta_key>
			<wp:meta_value><![CDATA[237]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blog_id</wp:meta_key>
			<wp:meta_value><![CDATA[70571221]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reblog_snapshot</wp:meta_key>
			<wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:30:"Clonando objetos en JavaScript";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-02-26 00:44:56";s:9:"permalink";s:59:"https://jherax.wordpress.com/2014/07/20/js-clonando-objetos";s:7:"content";s:34132:"<div class="reblogged-content">

<h2 id="primitive-values-and-objects">Valores primitivos y Objetos</h2>
Cuando programamos, es usual invocar funciones y pasarle argumentos, así mismo es usual que no conozcamos el manejo que le da JavaScript a esos parámetros, motivo por el cual a veces obtenemos resultados inesperados.

Al pasar una variable con un <a href="#built-in-types">valor primitivo</a> <code>(string, number, boolean, null, undefined)</code>, el parámetro de la función que recibe el valor crea una copia (<strong>by value</strong>).
Esto significa que cualquier cambio que hagamos sobre ese parámetro, sólo será válido dentro del ámbito <em>(<strong>scope</strong>)</em> de la función; veamos el siguiente ejemplo:

<!--more-->
<div style="font-size:.8em;">

[code language="javascript"]
    function fnMessage(msg) {
        console.log("Original:", msg);
    	msg = msg || "nada que decir";
    	msg = "Mensaje: " + msg;
    	return msg;
    }

    var msg1 = "JavaScript rules!",
        msg2 = fnMessage(msg1);

    console.log("------");
    console.log("msg1 = ", msg1);
    console.log("msg2 = ", msg2);
[/code]

</div>
Lo mismo ocurre cuando asignamos un valor primitivo a una variable; el valor es copiado a la variable.
<div style="font-size:.8em;">

[code language="javascript"]
    var msg1 = "JavaScript rules!",
        msg2 = msg1;

    msg1 = "jQuery rules!";

    console.log("msg1 = ", msg1);
    console.log("msg2 = ", msg2);
[/code]

</div>
Sin embargo cuando trabajamos con objetos <code>(Object, Array, RegExp, Date...)</code>, ya sea que lo pasemos como argumento de una función o que lo asignemos a una variable, estamos pasando su referencia (<strong>by reference</strong>). Esto significa que cualquier cambio que hagamos sobre la referencia del objeto, se verá reflejado en el objeto original. Veamos el siguiente caso:
<div style="font-size:.8em;">

[code language="javascript"]
    function fnSetCenter(x) {
        console.log("Original:", x);
        x = x || {};
        x.top = "50%";
        x.left = "50%";
        return x;
    }

    var obj1 = { top: 1, left: 1 };

    //obtenemos la referencia de obj1
    //a través del valor retornado por la función
    var obj2 = fnSetCenter(obj1);

    console.log("-----");
    console.log("obj1: ", obj1);
    console.log("obj2: ", obj2);

    //creamos una nueva propiedad en obj2
    obj2.zIndex = 2;
    console.log("-----");
    console.log("obj1: ", obj1);
    console.log("obj2: ", obj2);
[/code]

</div>
Las variables <b>obj1</b> y <b>obj2</b> son iguales!!
¿Qué ocurrió entonces?
<ul>
<li>Asignamos un objeto a la variable <code><strong>obj1</strong></code>
</li>
	<li>Ejecutamos <code><strong>fnSetCenter()</strong></code> enviándole como parámetro la variable <code><strong>obj1</strong></code>
</li>
	<li>El parámetro <code><strong>X</strong></code> de la función <code><strong>fnSetCenter()</strong></code> recibe una referencia al objeto asignado en la variable <code><strong>obj1</strong></code>
</li>
	<li>Cambiamos las propiedades del objeto <code><strong>X</strong></code> (recuerden que es una referencia)</li>
	<li>Retornamos el objeto <code><strong>X</strong></code> (se cierra el <em>scope</em> de la función)</li>
	<li>Ahora asignamos el valor retornado por la función <code><strong>fnSetCenter</strong></code> a la variable <code><strong>obj2</strong></code>
</li>
	<li>Lo más natural es pensar que <code><strong>obj2</strong></code> contiene una copia del objeto retornado por <code><strong>fnSetCenter</strong></code>, sin embargo obtenemos una nueva referencia de <code><strong>obj1</strong></code>
</li>
	<li>Ahora creamos la propiedad <code><strong>zIndex</strong></code> en la variable <code><strong>obj2</strong></code>
</li>
	<li>Y finalmente observamos que esa propiedad también existe en <code><strong>obj1</strong></code>
</li>
</ul>
Veamos un ejemplo más:
<div style="font-size:.8em;">

[code language="javascript"]
    (function() {
        function View (name) {
            this.name = name || "Vista";
        }

        function fnCounter(obj) {
            obj = obj || {};
            obj.count = 1 + (obj.count || 0);
        }

        var view = new View();
        console.log(view);

        //agregamos la propiedad [count]
        fnCounter(view);
        console.log(view);
    }());
[/code]

</div>
<h3 id="built-in-types">¿Y qué dice el standard?</h3>
<blockquote style="font-size:1.1em;"><em>A primitive value is a member of one of the following built-in types: <strong>Undefined</strong>, <strong>Null</strong>, <strong>Boolean</strong>, <strong>Number</strong>, and <strong>String</strong>; an object is member of the remaining built-in type: <strong>Object</strong>; and a method is a <strong>function</strong> associated with an object via a property. — <a title="ECMAScript specification" href="http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf" target="_blank">ECMAScript</a></em></blockquote>
<em><strong>“</strong>Un valor primitivo es miembro de uno de los siguientes tipos integrados: <strong>Undefined</strong>, <strong>Null</strong>, <strong>Boolean</strong>, <strong>Number</strong> y <strong>String</strong>; un objeto es miembro del tipo integrado restante: <strong>Object</strong>; y un método es una función asociada a un objeto mediante una propiedad<strong>”</strong></em>

De lo anterior podemos asumir que una función también está asociada con un objeto <em>(<strong>by reference</strong>)</em> — Lectura recomendada: <a href="http://conceptf1.blogspot.com/2014/01/data-types-in-javascript.html" target="_blank">Data Types In JavaScript</a>
<div style="font-size:.8em;">

[code language="javascript"]
    (function() {
        function fn(name) {
            var n = name || "fn",
                p = arguments.callee; //referencia a la función actual
            p.x = p.x || 1; //referencia a una propiedad de la función
            console.log(n + ".x = ", p.x);
        }

        var a = fn, b = a;
        fn(); //ejecutamos la función original

        //accedemos al apuntador que referencia a fn
        console.log("referencia a.x = ", a.x);

        //modificamos fn mediante su referencia en b
        b.x = 31;
        b("b");
        a("a");
    }());
[/code]

</div>
<h2 id="why-clone-objects">¿Porqué clonar objetos?</h2>
Como vimos anteriormente, cuando asignamos un objeto a una variable o cuando enviamos un <strong>objeto no primitivo</strong> como parámetro de una función, lo que realmente hacemos es establecer una <strong>referencia</strong> a ese objeto.

Si no queremos que una referencia modifique el objeto original, entonces debemos crear una copia de ese objeto, a este procedimiento lo llamamos: <strong>clonar objetos</strong>.
<h2 id="clone-array">Clonando un Array</h2>
<p style="margin-bottom:18px;">Para clonar el contenido de un array, todo lo que se necesita es utilizar el método <a title="Array.prototype.slice()" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice" target="_blank"><strong>slice()</strong></a>, enviando el índice <code><strong>[0]</strong></code> como primer argumento:</p>

<div style="font-size:.8em;">

[code language="javascript"]
    var list = ["A",1,2,3,5,8,13];

    //clonamos el array original (shallow copy)
    var clone = list.slice(0);

    //modificamos el primer elemento del array original
    list[0] = 1;

    //agregamos un elemento al inicio del array original
    list.unshift(0);

    //agregamos un elemento al final del array clonado
    clone.push(21);

    console.log("list: ", list);
    console.log("clone: ", clone);
[/code]

</div>
<p style="margin:28px 0 18px;">En el código anterior clonamos el array original copiando los valores primitivos, por tal motivo podemos alterar los dos arrays independientemente. Sin embargo, si el array contiene elementos de tipo <code><strong>Object</strong></code>, entonces el elemento "copiado" será una nueva referencia del objeto original, es decir, se creará una copia de su referencia y no de su valor.</p>

<div style="font-size:.8em;">

[code language="javascript"]
    var list = [{id: 1, age: 30}, {id: 2, age: 42}];

    //clonamos el array original (shallow copy)
    var clone = list.slice(0);

    console.log("list[0]: ", list[0]);
    console.log("clone[0]: ", clone[0]);

    //modificamos el primer elemento del array original
    list[0].age = 21;

    //tanto el original como el clon fueron modificados
    console.log("list: ", list);
    console.log("clone: ", clone);
[/code]

</div>
<p style="margin-top:28px;">Para hacer una copia profunda de los elementos del array, debemos crear el objeto en vez de copiar su referencia (<strong>deep copy</strong>), para ello podemos crear una función genérica que clone objetos. (Ver la implementación <a title="Deep copy avanzado" href="#advanced-deep-copy">Clonando objetos complejos</a> y <a title="Deep copying of Objects and Arrays" href="http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/" target="_blank">Deep copy</a>)</p>

<h2 id="shallow-deep-copy">Shallow copy <i>vs</i> Deep copy</h2>
<ul>
<li>Una copia superficial o <strong>shallow copy</strong> se logra copiando la referencia de los objetos originales. Sin embargo este enfoque puede conducir a resultados desagradables ya que el valor de los elementos del objeto original puede ser alterado desde otra referencia.</li>
	<li>Una copia profunda o <strong>deep copy</strong> se logra creando nuevamente los objetos que se desea clonar. Es un proceso recursivo que itera los elementos del objeto a copiar. La ventaja de este enfoque, es que al crear un nuevo objeto para cada elemento copiado, nos aseguramos que será asignado en un compartimento de memoria independiente, por tal motivo al modificar los valores del objeto clonado, no se afectará el objeto original.</li>
</ul>
<img src="https://dl.dropboxusercontent.com/u/91579606/clone-objects.png" alt="Shallow copy vs Deep copy"><p id="cloning-json"><strong>Nota</strong>: Los siguientes métodos de clonación son efectivos para copiar <strong>objetos planos</strong> (que sigan el estándar <a title="JSON - JavaScript Object Notation" href="http://json.org/" target="_blank">JSON</a>), no objetos que posean <strong>estructuras circulares</strong> o con apuntadores a <strong>funciones</strong>, en cuyo caso, siempre es mejor crear un <em>clonador</em> que se ajuste a esos requerimientos específicos. (Vea la sección <a title="Deep copy avanzado" href="#advanced-deep-copy">Clonando objetos complejos</a>)</p>

<h2 id="deep-copy-json">Deep copy usando <a title="JSON.parse()" href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse" target="_blank">JSON.parse</a>
</h2>
<div style="font-size:.8em;">

[code language="javascript"]
    /* @throws TypeError: Converting circular structure to JSON
       No copia funciones ni objetos con estructuras circulares.
       Debe respetar estrictamente los valores permitidos por JSON.
       Lea la especificación del formato JSON: http://json.org/
    */

    function fnClone (obj) {
        return JSON.parse(JSON.stringify(obj));
    }
[/code]

</div>
<h2 id="deep-copy-jquery">Deep copy usando <a title="jQuery.extend()" href="http://api.jquery.com/jquery.extend/" target="_blank">jQuery.extend</a>
</h2>
<div style="font-size:.8em;">

[code language="javascript"]
    /* @throws RangeError: Maximum call stack size exceeded
       Copia funciones, pero no copia estructuras circulares
    */

    //clonar arrays con jQuery
    function fnCloneArray (arr) {
        return jQuery.extend(true, [], arr);
    }

    //clonar objetos con jQuery
    function fnCloneObject (obj) {
        return jQuery.extend(true, {}, obj);
    }
[/code]

</div>
<div>Poniendo todo junto...</div>
<div style="font-size:.8em;">

[code language="javascript"]
    (function ($) {

        //clonar usando JSON
        function fnCloneJSON (obj) {
            return JSON.parse(JSON.stringify(obj));
        }

        //clonar usando jQuery
        function fnClonejQuery (arr) {
            return $.extend(true, [], arr);
        }

        //modifica el valor del elemento[0] en el array a
        function fnModify(a, b, value) {
            a[0].y = value;
            console.log("a[0]", a[0]);
            console.log("b[0]", b[0]);
        }

        var list = [{x:2, y:3}, {x:5, y:8}],
            clone = list.slice(0); //shallow copy

        //agregamos un elemento al final del array original
        list.push({x:13, y:21});

        console.log("n&gt; Shallow copy (slice)");
        console.log("original:", list); //3 elementos
        console.log("clonado:", clone); //2 elementos

        ///modificamos el valor del item[0] en el array original
        fnModify(list, clone, "0");

        //clonamos con deep copy
        var clone1 = fnCloneJSON(list),
            clone2 = fnClonejQuery(list);

        //modificamos el valor del item[0] en el array original
        console.log("n&gt; Deep copy (JSON)");
        fnModify(list, clone1, 777);

        console.log("n&gt; Deep copy (jQuery)");
        fnModify(list, clone2, 999);

    })(jQuery);
[/code]

</div>
<h2 id="clone-dom">Clonando DOM Nodes</h2>
Para clonar nodos DOM (elementos HTML) se debe tener en cuenta que algunas de las propiedades del nodo hacen <strong>referencia hacia sí mismo</strong>. Veamos el siguiente ejemplo para dar mayor claridad: tenemos el siguiente elemento HTML <code><strong>&lt;p id="test"&gt;</strong><em>texto</em><strong>&lt;/p&gt;</strong></code>
<div style="font-size:.8em;">

[code language="javascript"]
    (function() {
        var p1 = document.getElementById("test"),
            p2 = p1, //p2 referencia a p1
            p3, doc;

        p2.innerHTML = "texto modificado";
        //el texto en la variable p1 también fue modificado

        doc = p1.ownerDocument;
        //referencia al documento que contiene el elemento p1

        p3 = doc.getElementById("test");
        //nuevamente obtenemos la referencia hacia p1
    }());
[/code]

</div>
En el ejemplo anterior tenemos una <strong>referencia circular</strong> cuando accedemos a la propiedad <a title="Node.ownerDocument" href="https://developer.mozilla.org/en-US/docs/Web/API/Node.ownerDocument" target="_blank">.ownerDocument</a>, ya que ésta apunta al documento raíz del objeto referenciado por <code style="font-size:.86em;"><strong>p1</strong></code> y a su vez <code><strong>ownerDocument</strong></code> posee una referencia hacia el objeto <code style="font-size:.86em;"><strong>p1</strong></code>

Clonar nodos DOM que poseen <strong>estructuras circulares</strong> no es posible con los <a title="JSON.parse() y jQuery.extend()" href="#cloning-json">métodos vistos anteriormente</a>. Para ello podemos utilizar el método <a title="Node.cloneNode" href="https://developer.mozilla.org/en-US/docs/Web/API/Node.cloneNode" target="_blank">cloneNode()</a> de JavaScript, o el método <a title="jQuery.clone()" href="http://api.jquery.com/clone/" target="_blank">clone()</a> de jQuery.
<div style="font-size:.8em;">

[code language="javascript"]
    (function ($) {
        var p1 = document.getElementById("test"),
            p2 = p1.cloneNode(true); //true: deep copy, false: shallow copy

        var p3 = $("#test"),
            p4 = p3.clone(); //default: deep copy
    }(jQuery));
[/code]

</div>
<strong>Nota</strong>: Los elementos clonados crean un duplicado del nodo, incluyendo todos los atributos y sus valores (el atributo <strong>id</strong> debería ser modificado antes de insertar el nodo en el documento). El elemento duplicado no tiene padre <code>(<strong>.parentNode = null</strong>)</code> hasta que sea agregado en el documento, bien sea usando <a title="Node.appendChild" href="https://developer.mozilla.org/en-US/docs/Web/API/Node.appendChild" target="_blank">appendChild()</a>, <a title="jQuery.append()" href="http://api.jquery.com/append/" target="_blank">append()</a> o alguno de los mecanismos para la inserción de nodos.
<p style="margin-bottom:14px;">Métodos jQuery para la inserción de nodos:</p>
<span style="padding:0 8px;">✔</span> <a title="Add elements in jQuery" href="http://www.w3schools.com/jquery/jquery_dom_add.asp" target="_blank">Add elements using jQuery</a>
<span style="padding:0 8px;">✔</span> <a title="DOM Insertion, Outside" href="http://api.jquery.com/category/manipulation/dom-insertion-outside/" target="_blank">DOM Insertion, Outside</a>
<span style="padding:0 8px;">✔</span> <a title="DOM Insertion, Inside" href="http://api.jquery.com/category/manipulation/dom-insertion-inside/" target="_blank">DOM Insertion, Inside</a>
<h2 id="advanced-deep-copy">Clonando objetos complejos</h2>
Clonar objetos que poseen <strong>estructuras circulares</strong> es una tarea que requiere un poco más de esfuerzo; en la sección anterior se hizo énfasis en la clonación de nodos DOM, pero ¿que pasa si el objeto que queremos clonar no es un nodo DOM, sino un <strong>objeto plano</strong> con propiedades que se referencian entre sí?... veamos el siguiente caso:
<div style="font-size:.8em;">

[code language="javascript"]
    var freeman = {
        name: "Gordon Freeman",
        character: "Freeman",
        game: "Half-Life",
        friends: []
    };

    var david = {
        name: "David Rivera",
        character: "jherax",
        friends: []
    };

    freeman.friends = [david, "Barney Calhoun"];
    david.friends = [freeman, "John Carmack"];
[/code]

</div>
Acá tenemos dos objetos cuya propiedad <code><strong>friends</strong></code> contiene la lista de amigos de una persona. Podemos observar que el objeto <code><strong>freeman</strong></code> tiene como amigo a <code><strong>david</strong></code>, y a su vez <code><strong>david</strong></code> tiene como amigo a <code><strong>freeman</strong></code>, lo cual significa que la propiedad <code><strong>friends</strong></code> posee referencias cruzadas entre los objetos <code><strong>david</strong></code> y <code><strong>freeman</strong></code>. Por lo tanto podemos decir que ambos objetos tienen una <strong>estructura circular</strong>.

Como en los casos anteriores no podíamos clonar objetos con estructuras circulares, vamos a idear una forma de crear una función genérica que clone diferentes tipos de objetos; nuevamente les recuerdo que si tenemos un requerimiento específico, como clonar <em>"instancias"</em> de <em>"clases propias"</em> preservando prototipos, herencia, etc, la mejor solución es desarrollar un <em>clonador</em> que responda a esas necesidades concretas.
<h2 id="creating-the-cloner">Creando el clonador</h2>
<ol>
<li>Será una función recursiva que retorna una copia (<strong>deep copy</strong>) del objeto que recibe como primer argumento.</li>
	<li>Si es un objeto primitivo, retornamos su valor (creamos una copia)</li>
	<li>Si el objeto es una instancia de alguno de los prototipos:   <code>Date, RegExp, Function, String, Number, Boolean,</code> entonces creamos una nueva instancia a partir de su constructor.</li>
	<li>Iteramos recursivamente cada una de las propiedades navegables del objeto (no se recomienda utilizar <strong>arguments.callee</strong> para tener acceso a la función en ejecución, ya que no es admitido por ECMAScript 5 en <a href="https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Functions_and_function_scope/Strict_mode" title="ECMAScript 5 - Strict mode" target="_blank">strict mode</a>, ver nota -- <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments/callee" title="arguments.callee" target="_blank">MDN</a>)</li>
</ol>
<div style="font-size:.8em;">

[code language="javascript"]
    /* Retorna un deep copy del objeto @from */
    function fnClone (from) {
        var prop, clone;

        // determinamos si es un valor primitivo o una función
        if (from == null || typeof from != "object") return from;

        // determinamos si el objeto es una instancia de alguno de los siguientes prototipos
        if (from.constructor == Date || from.constructor == RegExp || from.constructor == Function ||
            from.constructor == String || from.constructor == Number || from.constructor == Boolean) {
            return new from.constructor(from);
        }

        // si el constructor del objeto no es ninguno de los anteriores
        if (from.constructor != Object &amp;&amp; from.constructor != Array) return from;

        // iteramos recursivamente las propiedades del objeto
        clone = new from.constructor();
        for (prop in from) {
            //no se recomienda arguments.callee
            //clone[prop] = arguments.callee(from[prop]);
            clone[prop] = fnClone(from[prop]);
        }
        return clone;
    }
[/code]

</div>
<div>Ahora podemos hacer algo más interesante, modifiquemos nuestro clonador para que pueda extender las propiedades de un objeto dentro de otro, de tal manera que si pasamos sólo un argumento, retornará el objeto clonado, pero si pasamos dos argumentos, extenderá las propiedades del primer objeto dentro del segundo.</div>
<div style="font-size:.8em;">

[code language="javascript"]
    // Extiende las propiedades del objeto @from en el objeto @to
    // Si no se proporciona el objeto @to, entonces se retorna un deep copy de @from
    function fnExtend (from, to) {
        var prop;

        // determinamos si es un valor primitivo o una función
        if (from == null || typeof from != "object") return from;

        // determinamos si el objeto es una instancia de alguno de los siguientes prototipos
        if (from.constructor == Date || from.constructor == RegExp || from.constructor == Function ||
            from.constructor == String || from.constructor == Number || from.constructor == Boolean) {
            return new from.constructor(from);
        }

        // si el constructor del objeto no es ninguno de los anteriores
        if (from.constructor != Object &amp;&amp; from.constructor != Array) return from;

        // iteramos recursivamente las propiedades del objeto
        to = to || new from.constructor();
        for (prop in from) {
            to[prop] = typeof to[prop] == "undefined" ? fnExtend(from[prop], null) : to[prop];
        }
        return to;
    }
[/code]

</div>
<strong>Nota:</strong> Como se mencionó anteriormente, ésta es una función genérica que clona efectivamente algunos objetos, no se tiene en cuenta la <strong>cadena de prototipos</strong>, la <strong>herencia</strong>, o el <strong>estado interno</strong> si lo posee.

Ahora bien, nuestro <em>clonador</em> crea una copia nueva del objeto enviado a la función; podemos clonar <code><strong>valores primitivos</strong>, <strong>Object literal</strong>, <strong>Array</strong>, <strong>Function</strong>, <strong>Date</strong>, <strong>RegExp</strong>,</code> y otros más. Hasta ahora, nuestro <em>clonador</em> es muy similar a otras soluciones que pueden encontrar en la web, sin embargo vamos a darle un valor agregado, y es que sea capaz de clonar objetos con <strong>estructuras circulares</strong>.
<h3 id="circular-structure-objects">Objetos con estructura circular</h3>
Veamos el siguiente caso usando nuestra función <em>fnExtend:</em>
<div style="font-size:.8em;">

[code language="javascript"]
    var freeman = {
        name: "Gordon Freeman",
        friends: ["Barney Calhoun"]
    };

    var david = {
        name: "David Rivera",
        friends: ["John Carmack"]
    };

    //clonamos el objeto @david
    var cloned = fnExtend(david);

    //observamos los objetos
    console.log("david:", david);
    console.log("cloned:", cloned);

    //hasta el momento todo va perfecto,
    //ahora creamos la referencia circular
    freeman.friends.push(david);
    david.friends.push(freeman);

    //observamos los objetos
    console.log("david:", david);
    console.log("cloned:", cloned);

    //tratamos de clonar un objeto con estructura circular,
    //sin embargo obtenemos la siguiente excepción:
    //RangeError: Maximum call stack size exceeded
    cloned = fnExtend(freeman);

[/code]

</div>
En el ejemplo anterior, la función <em>fnExtend</em> arroja la excepción <code><strong> "RangeError: Maximum call stack size exceeded" </strong></code> al momento de clonar un objeto con <strong>estructura circular</strong>.

Lo que este mensaje dice, es que hay una iteración infinita y se alcanzó el máximo de llamados en el <strong>stack</strong> para la función recursiva cuando intentaba crear el objeto de la propiedad <code><strong>friends</strong>.</code> Para entender mejor lo que estoy diciendo, me gustaría que exploren el objeto <code><strong>david</strong></code> en la consola del navegador, verán algo similar a esto:

<img title="estructura circular" src="https://dl.dropboxusercontent.com/u/91579606/estructura_circular.png" alt="estructura circular"><h3>¿Y cómo clonar objetos con estructura circular?</h3>
Una forma de solucionar este problema, es mantener las referencias de los objetos creados, de tal manera que si el objeto ya se creó, entonces pasamos la referencia de ese objeto y así evitamos que se cree infinitamente. Para ello vamos a crear un array como propiedad de la función, para que guarde las referencias de los <strong>Object</strong> que posee el elemento que clonaremos. Añadimos el siguiente snippet a la función:
<div style="font-size:.8em;">

[code language="javascript"]
    //...
    // si @from es un Object
    if (Object.prototype.toString.call(from) == "[object Object]") {

        // creamos la propiedad [objects] en la función
        fnExtend.objects = fnExtend.objects || [];

        // verificamos si @from hace referencia a un objeto ya creado
        if (fnExtend.objects.filter(function(item) {
            return item === from;
        }).length) return from;

        // guarda la referencia del objeto para comprobar si ya fue creado
        fnExtend.objects.push(from);
    }
    //...
[/code]

</div>
<div>Así quedaría la función, integrando el snippet anterior.</div>
<div style="font-size:.8em;">

[code language="javascript"]
    // Extiende las propiedades del objeto @from en el objeto @to
    // Si no se proporciona el objeto @to, entonces se retorna un deep copy de @from
    function fnExtend (from, to) {
        var prop;

        // si @from es un Object
        if (Object.prototype.toString.call(from) == "[object Object]") {

            // creamos la propiedad [objects] en la función
            fnExtend.objects = fnExtend.objects || [];

            // verificamos si @from hace referencia a un objeto ya creado
            if (fnExtend.objects.filter(function(item) {
                return item === from;
            }).length) return from;

            // guarda la referencia del objeto para comprobar si ya fue creado
            fnExtend.objects.push(from);
        }

        // determinamos si es un valor primitivo o una función
        if (from == null || typeof from != "object") return from;

        // determinamos si el objeto es una instancia de alguno de los siguientes prototipos
        if (from.constructor == Date || from.constructor == RegExp || from.constructor == Function ||
            from.constructor == String || from.constructor == Number || from.constructor == Boolean) {
            return new from.constructor(from);
        }

        // si el constructor del objeto no es ninguno de los anteriores
        if (from.constructor != Object &amp;&amp; from.constructor != Array) return from;

        // iteramos recursivamente las propiedades del objeto
        to = to || new from.constructor();
        for (prop in from) {
            to[prop] = typeof to[prop] == "undefined" ? fnExtend(from[prop], null) : to[prop];
        }
        return to;
    }
[/code]

</div>
<h2 id="good-practices">Buenas prácticas</h2>
Nuestro clonador está terminado, sin embargo tenemos un "problema" que no salta a la vista, y es que la propiedad <code><strong>fnExtend.objects</strong></code> irá guardando los objetos creados con cada llamado a la función, además que la propiedad es <strong>pública</strong> pero por la naturaleza de su misión, debería ser <strong>privada</strong>. Para dar solución a este problema emplearemos el concepto de <strong>encapsulamiento</strong> (<a href="https://jherax.wordpress.com/2015/02/13/javascript-closures/" title="JavaScript: Closures" target="_blank">closure</a>) a través del <strong>Patrón <a href="https://jherax.wordpress.com/2015/02/24/js-lazy-function-definition/" title="JavaScript: Lazy Function Definition Pattern" target="_blank">Lazy Function Definition</a></strong> con el cual, al ser invocada la función por primera vez, creará el <strong>closure</strong> proveyendo un <strong>estado interno privado</strong> para los objetos <code>_objects, _fnExtend</code> y luego redefine la función original para que ésta no tenga que crear los objetos <code>_objects, _fnExtend</code> en cada llamado subsiguiente.
<div style="font-size:.8em;">

[code language="javascript"]
function fnExtend (from, to) {
    // @Private
    var _objects = [];

    // guardamos una referencia local del método toString,
    // ésta técnica se llama: dependancy declaration pattern
    var _toString = Object.prototype.toString;

    var _fnExtend = function (_from, _to) {
        var prop;
        if (_toString.call(_from) == "[object Object]") {
            if (_objects.filter(function(item) {
                return item === _from;
            }).length) return _from;
            _objects.push(_from);
        }
        if (_from == null || typeof _from != "object") return _from;
        if (_from.constructor == Date || _from.constructor == RegExp || _from.constructor == Function ||
            _from.constructor == String || _from.constructor == Number || _from.constructor == Boolean) {
            return new _from.constructor(_from);
        }
        if (_from.constructor != Object &amp;&amp; _from.constructor != Array) return _from;
        _to = _to || new _from.constructor();
        for (prop in _from) {
            _to[prop] = typeof _to[prop] == "undefined" ? fnExtend(_from[prop], null) : _to[prop];
        }
        return _to;
    };
    // Redefinimos la función:
    // Lazy Function Definition
    fnExtend = function (_from, _to) {
        var cloned = _fnExtend(_from, _to);
        _objects = [];
        return cloned;
    };
    // auto-invocamos la función para que se redefina inmediatamente
    return fnExtend(from, to);
}
[/code]

</div>
<div>Ahora utilizemos nuestro super-clonador fnExtend</div>
<div style="font-size:.8em;">

[code language="javascript"]
    var freeman, david;

    freeman = {
        name: "Gordon Freeman",
        character: "Freeman",
        game: "Half-Life",
        friends: []
    };

    david = {
        name: "David Rivera",
        character: "jherax",
        date: new Date(),
        country: "Colombia",
        friends: [],
        languages: new RegExp(/javascript|jquery|c#|sql|vb|java/i),
        greeting: function() { return "Hi, I am " + this.name + " from " + this.country; },
        info: {
            age: 31,
            job: "programmer",
            nickname: "jherax"
        }
    };

    //creamos la referencia circular
    freeman.friends = [david, "Barney Calhoun"];
    david.friends = [freeman, "John Carmack"];

    //clonamos el objeto @david
    var clone = fnExtend(david);

    //modificamos propiedades del objeto original
    david.name = david.name + " (jherax)";
    david.friends.push("Jim Rynor");

    //vemos que @clone no fue modificado
    console.log("original:", david.name, david.friends);
    console.log("clonado:", clone.name, clone.friends);
[/code]

</div>
<h2 id="conclusion">Conclusión</h2>
Es importante conocer la forma en que JavaScript le da manejo a los valores de las variables, teniendo en cuenta que para los valores primitivos se copia su contenido, y para los objetos, se crea un apuntador a su referencia; entender que las funciones son tratadas como propiedades de un objeto en el contexto de ejecución, es crucial para comprender algunos patrones de diseño y el funcionamiento de los <a href="http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/" target="_blank">métodos <strong>call()</strong>, <strong>apply()</strong>, <strong>bind()</strong></a>

La intención de éste artículo fue demostrar la importancia que tiene la clonación de objetos para mejorar la calidad de nuestro código, evitando errores comunes como el hecho de que una función pueda modificar el objeto original que fue pasado como argumento.

Recomiendo que lean los artículos <a title="Deep copying of Objects and Arrays" href="http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/" target="_blank">"Deep copying of Objects and Arrays"</a> de James Padolsey, <a title="Deep copy in JavaScript" href="http://oranlooney.com/deep-copy-javascript/" target="_blank">"Deep copy in JavaScript"</a> de Oran Looney y <a href="https://jherax.wordpress.com/2015/02/24/js-lazy-function-definition/" title="JavaScript: Lazy Function Definition Pattern" target="_blank">Lazy Function Definition Pattern</a> por David Rivera.

Happy coding!</div>";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>E.. LE.. VA.. TION...</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/05/e-le-va-tion/</link>
		<pubDate>Tue, 05 May 2015 18:37:12 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=414</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="e\.{2}le\.{2}va\.{2}tion\.{3}"&gt;

http://www.youtube.com/watch?v=19KstSgU-c0

Ehm, si. Mucho mola esta rola peeero... No voy a hablar de ellos... :P

<!--more-->
<p style="text-align:justify;">Javascript, así como todos los lenguajes de programación tiene sus curiosidades. Acá no son pocas las que se "<strong>elevan</strong>", más si hablamos de un lenguaje de script, débilmente tipado y basado en prototipos.</p>

<h2 style="text-align:justify;"><em>Hoisting</em> o Elevación</h2>
¿Cuál será el valor de la variable <code>b</code> si ejecutamos el siguiente código?

[code lang="javascript"]
var b = 1;
function a(){
    var b = 10;
    return;
}
a();
console.log(b);
[/code]

<p style="text-align:justify;">Si respondiste que el valor es 10, no hiciste bien tu tarea :P ¡Intenta de nuevo! El valor es 1</p>
<p style="text-align:justify;">Ahora una leve modificación. Adivina cual será el valor de la variable <code>b</code></p>


[code lang="javascript"]
var b = 1;
function a(){
    b = 10;
    return;
}
a();
console.log(b);
[/code]

<p style="text-align:justify;">Si piensas que la respuesta es 1, debes estudiar más :P . ¡Piensa de nuevo! La respuesta es 10</p>
<p style="text-align:justify;">En Javascript, como en [casi] todos los lenguajes de programación, existe un alcance global y pueden existir múltiples alcances locales. Sin embargo, Javascript tiene la peculiaridad de "elevar" la declaración de variables al contexto superior más inmediato. Existen 4 contextos:</p>

<ul>
	<li style="text-align:justify;"><strong>De función:</strong> todo lo que se encuentra dentro de la sentencia <code>function(){ ... }.</code></li>
	<li style="text-align:justify;"><strong>De declaración: </strong>sólo existe en el script cuando se declara una variable con la sentencia <code>var</code> antes de declarar cualquier otra función<code>.</code></li>
	<li style="text-align:justify;"><strong>De condición:</strong> cuando se declaran variables dentro de condicionales <code>if(){ ... }</code>.</li>
	<li style="text-align:justify;"><strong>De espacio de nombre:</strong> cuando se declaran variables o funciones con la sentencia var dentro del prototipado de un objeto, como <code>var objeto = {valor: function(){ ... } };</code>.</li>
</ul>
<p style="text-align:justify;">El <em>hoisting </em>es una característica bastante peculiar, pues sólo se da en casos en los que un contexto de declaración pretende modificar un contexto de función o viceversa. En ambos casos, la declaración será global.</p>
<p style="text-align:justify;">En el primer ejemplo, el contexto de función intenta modificar la variable en el contexto de declaración, esto es, cada vez que es interpretada la sentencia <code>var</code>, ésta incluye una variable <em>dentro del contexto en el que es instanciado</em>, dicho proceso ocurre <strong><em>una sola vez </em></strong>dentro de todo el script. La variable <code>b</code> no cambia su valor porque un contexto inferior intenta cambiarlo (entiéndase por inferior el hecho de estar en un "bloque" inferior, o <em>debajo</em> de la declaración).</p>
<p style="text-align:justify;">En el segundo ejemplo ocurre lo mismo, solo que en vez de intentar modificar el valor de la variable en el contexto de función, lo "eleva" al contexto de declaración, modificando así su valor.</p>
<p style="text-align:justify;">Esto es un bug que pareciera intencional dentro del lenguaje, sin embargo, se recomienda evitarlo en aplicaciones que tengan uso masivo de Javascript, ya que puede resultar en comportamientos impredecibles.</p>
<p style="text-align:justify;">Con respecto a la forma de manejar los tipos de alcance para evitar el <em>hoisting</em>, el estandar ECMAScript 5.1:</p>

<blockquote>
<p style="text-align:justify;"><span id="result_box" class="" lang="es"><span class="hps">Si</span> <span class="hps">la declaración de</span> <span class="hps">variables</span> <span class="hps">se produce</span> <span class="hps">dentro de una</span> <span class="hps">declaración de una función</span>, <span class="hps">las variables se definen</span> <span class="hps">con ámbito de</span> <span class="hps">función local</span> <span class="hps">en esa función</span>, <span class="hps">tal como se describe</span> <span class="hps">en la sección</span> <span class="hps">10.1.3</span>.. <span class="hps">De lo contrario</span>, se definen <span class="hps">con</span> <span class="hps">alcance</span> <span class="hps atn">global (</span>es decir, que <span class="hps">se crean como</span> <span class="hps">miembros del</span> <span class="hps">objeto global</span>, <span class="hps">tal como se describe</span> <span class="hps">en la sección</span> <span class="hps">10.1.3</span>), atribuyendo <span class="hps">el uso de</span> <span class="hps">la propiedad</span> <em>DontDelete</em>. <span class="hps">Las variables se</span> <span class="hps">crean cuando</span> <span class="hps">se entra en el</span> <span class="hps">ámbito</span> <span class="hps">de ejecución, pero u</span><span class="hps">n</span> <span class="hps">bloque</span> <span class="hps">no define</span> <span class="hps">un nuevo ámbito</span> <span class="hps">de ejecución.</span> <span class="hps">Sólo</span> el p<span class="hps">rograma</span> <span class="hps">y</span> <span class="hps">la declaración de funciones</span> <span class="hps">producen</span> <span class="hps">un nuevo ámbito</span>.<span class="hps">
</span></span></p>
</blockquote>
Y ya con <a title="Scoping and Hoisting" href="http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html" target="_blank">esto</a>, me "elevo"... ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date>2015-05-05 14:07:12</wp:post_date>
		<wp:post_date_gmt>2015-05-05 18:37:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>e-le-va-tion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[ALGUNAS PECULIARIDADES DE JAVASCRIPT | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/05/20/algunas-peculiaridades-de-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.212</wp:comment_author_IP>
			<wp:comment_date>2015-05-20 12:43:50</wp:comment_date>
			<wp:comment_date_gmt>2015-05-20 17:13:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] E.. LE.. VA..&nbsp;TION&#8230; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1432142031.5239489078521728515625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1432142090]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1432142090.9764120578765869140625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JUGAR CON JAVASCRIPT PERO SIN JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/29/jugar-con-javascript-pero-sin-javascript/</link>
		<pubDate>Wed, 29 Apr 2015 19:04:13 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=436</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="jugar con javascript pero sin javascript"&gt;
<p style="text-align:justify;">¡Ah! El desarrollo <a title="Front-end Development" href="https://en.wikipedia.org/wiki/Front_end_development" target="_blank">front-end</a>. Esa <em>cosa</em> etérea, efímera y absurdamente creativa que a veces, cual capricho de una mente inquieta, permite crear diseños geniales de páginas web, y otras veces hace desastres como un tifón inesperado y prohíbe que la "musa" deje fluir el trabajo.</p>
<p style="text-align:justify;">Pero hay <em>cosas</em> que pueden hacer que <em>esa cosa</em> sea más llevadera...</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a title="Librería Patterns" href="http://patternslib.com" target="_blank">Patterns</a> es una librería que tiene lo mejor de dos mundos. Incluye código VanillaJS (a.k.a. Javascript trocho y mocho :P ) para múltiples <em>patrones</em> (¡<em>hovio</em>! :( ) que generalmente se utilizan en el diseño de interfaces de páginas web, tales como <em title="Elementos deslizantes">sliders</em>, <em title="Notificaciones">tooltips</em>, <em title="Formularios">forms</em>, <em title="Elementos agrupados">accordions</em>, <em title="Calendarios de tamaño full">calendars</em> entre otros elementos de interfaz. Incluye tambien animaciones predeterminadas y un sistema de grid de doce columnas, similar al del framework CSS <a title="Foundation 5" href="http://foundation.zurb.com/apps/docs/#!/grid" target="_blank">Foundation</a>.</p>
<p style="text-align:justify;">Lo mejor de todo esto es que no tenemos que escribir ¡ni una sola línea de código Javascript!</p>

<h2 style="text-align:justify;">Hey, me gusta pero ¿cómo funciona?</h2>
<ol>
	<li>¡Todo es a gusto del consumidor!
<table>
<tbody>
<tr>
<td>

[caption id="attachment_437" align="alignnone" width="336"]<a href="https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140638.png"><img class=" wp-image-437" src="https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140638.png?w=300" alt="Las funcionalidades principales" width="336" height="159" /></a> <strong style="font-size:13px;text-align:center;">Seleccionamos entre las funcionalidades "principales"...</strong>[/caption]</td>
<td>

[caption id="attachment_438" align="alignnone" width="300"]<a href="https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140934.png"><img class="size-medium wp-image-438" src="https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140934.png?w=300" alt="...y las &quot;secundarias&quot;" width="300" height="159" /></a> <strong style="font-size:13px;text-align:center;">...y/o las "secundarias"</strong>[/caption]</td>
</tr>
</tbody>
</table>
</li>
	<li>La incluímos en nuestro desarrollo...

[code lang="html"]&lt;script src=&quot;patterns-1.5.0.js&quot;&gt;&lt;/script&gt;[/code]

</li>
	<li>...y seguimos los patrones propuestos por la librería en su <a title="Official Docs" href="http://patternslib.com/index.html#documentation" target="_blank">documentación</a>.</li>
</ol>
<p style="text-align:justify;">Podemos crear perfectamente un <a title="¿Qué es un &quot;Mockup&quot;?" href="http://wp.me/p5CTtO-4K" target="_blank">mockup</a> de una página web completa, o ¿por qué no? Una página web completa, sin necesidad de usar otros elementos o frameworks como <a title="jQuery" href="http://jquery.com" target="_blank">jQuery</a>. o <a title="Angular.js" href="http://angularjs.org" target="_blank">Angular.js</a>. Incluso, en el caso en el que vería el uso masivo de esta librería es para diseñadores de interfaces web que, sin meterse en un desarrollo Javascript, pueden tener una "visión" de la página en corto tiempo.</p>
<p style="text-align:justify;">¡Y es que de verdad es muy sencillo! ¿no me creen? Entonces les dejo algunos ejemplos:</p>


[code lang="html" collapse="true" title="Recortador de imágenes"]
&lt;div class=&quot;preview&quot;&gt;
    &lt;img id=&quot;crop-preview&quot; src=&quot;image-to-crop.jpg&quot; /&gt;
&lt;/div&gt;
...
&lt;form action=&quot;/some/action&quot;&gt;
    ...
    &lt;img src=&quot;image-to-crop.jpg&quot; class=&quot;pat-image-crop&quot; data-pat-image-crop=&quot;preview-id: #crop-preview&quot; /&gt;
    ...
&lt;/form&gt;
[/code]

<strong>...con algo de CSS:</strong>

[code lang="css" collapse="true" title="CSS en Recortador de imágenes"]
.preview {
    width: 168px;
    height: 168px;
    overflow: hidden;
}

.preview img {
    width: auto;
    height: auto;
    margin: 0;
    padding: 0;
}
[/code]


[code lang="html" collapse="true" title="Árbol de directorios"]
&lt;ul class=&quot;pat-expandable&quot;&gt;
 &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;
 &lt;li class=&quot;folder open&quot;&gt;&lt;span class=&quot;toggle&quot;&gt;&lt;/span&gt;Folder name
 &lt;ul&gt;
 &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt;&lt;/li&gt;
 &lt;li class=&quot;folder closed&quot;&gt;&lt;span class=&quot;toggle&quot;&gt;&lt;/span&gt;Folder name
 &lt;ul&gt;
 &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
 &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;
 &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;
 &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;
 &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;
 &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
 &lt;/li&gt;
 &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;
 &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;
 &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;
&lt;/ul&gt;
[/code]


[code lang="html" collapse="true" title="Galería de imágenes"]
&lt;ul class=&quot;pat-gallery&quot;&gt;
 &lt;li&gt;&lt;a href=&quot;full1.jpg&quot;&gt;&lt;img src=&quot;thumb1.jpg&quot; title=&quot;Image 1 caption&quot;/&gt;&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;full2.jpg&quot;&gt;&lt;img src=&quot;thumb2.jpg&quot; title=&quot;Image 2 caption&quot;/&gt;&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;full3.jpg&quot;&gt;&lt;img src=&quot;thumb3.jpg&quot; title=&quot;Image 3 caption&quot;/&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
[/code]

<p style="text-align:justify;">Una librería que tiene potencial, tiene mucho potencial ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date>2015-04-29 14:34:13</wp:post_date>
		<wp:post_date_gmt>2015-04-29 19:04:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jugar-con-javascript-pero-sin-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>COLOREA TU VIDA... Y TUS PÁGINAS WEB</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/06/colorea-tu-vida-y-tus-paginas-web/</link>
		<pubDate>Wed, 06 May 2015 20:41:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=455</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="colorea tu vida y tus p&amp;aacute;ginas web"&gt;
<p style="text-align:justify;">Siempre es importante el color en un desarrollo web. Hay veces en que es lo único importante (especialmente para clientes que no conocen mucho del negocio y un "periquito" es más importante que la funcionalidad de la aplicación misma).</p>
<p style="text-align:justify;">Por desgracia para algunos, no siempre la elección de los colores depende de los desarrolladores, pues a menudo nos encontramos con restricciones en las paletas de colores, sea por cuestiones corporativas o porque al cliente le gusta más el "azul". Una cuestión así, no siempre es tan trivial de dirimir.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a title="PleaseJS" href="http://www.checkman.io/please/" target="_blank">Please.js</a> es una librería Javascript que básicamente su función es generar colores... Parece una función trivial a simple vista, sin embargo vemos que esta librería puede ofrecer cosas maravillosas como este <a title="CodePen" href="http://codepen.io" target="_blank">pen</a> de paleta de colores análogos que hice con <a title="Zepto.js" href="http://zeptojs.com/" target="_blank">Zepto</a> y la librería mencionada.</p>
http://codepen.io/ChinuxParibus/pen/VLvGrR
<p style="text-align:justify;">Es probable que a algunos no les funcione por cuestiones del navegador y eso. En fin, la idea es simple: hacer click en el botón "Nueva Paleta" y la librería genera 6 colores con 20° de desfase entre cada uno, eso para permanecer en una tonalidad específica en el diseño front-end que estén realizando.</p>
<p style="text-align:justify;">La librería ofrece muchas más funcionalidades, pero les dejo a ustedes que elijan el mejor color ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date>2015-05-06 16:11:32</wp:post_date>
		<wp:post_date_gmt>2015-05-06 20:41:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>colorea-tu-vida-y-tus-paginas-web</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6bd409d1048bc45c00633b8442e62bab</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_waKEqK" src="https://codepen.io/anon/embed/waKEqK?height=300&amp;slug-hash=waKEqK&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_6bd409d1048bc45c00633b8442e62bab</wp:meta_key>
			<wp:meta_value><![CDATA[1430943600]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fde3da58b803d66c48aa8d899581d3ff</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_VLvGrR" src="https://codepen.io/ChinuxParibus/embed/VLvGrR?height=300&amp;slug-hash=VLvGrR&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_fde3da58b803d66c48aa8d899581d3ff</wp:meta_key>
			<wp:meta_value><![CDATA[1431311108]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0a9ed512b655c7bbb76cff3fddff8410</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_VLvGrR" src="https://codepen.io/ChinuxParibus/embed/VLvGrR?height=300&amp;slug-hash=VLvGrR&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_0a9ed512b655c7bbb76cff3fddff8410</wp:meta_key>
			<wp:meta_value><![CDATA[1430944332]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ec3e86a123ca82d3743ed4fbdaaf521b</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_VLvGrR" src="https://codepen.io/ChinuxParibus/embed/VLvGrR?height=300&amp;slug-hash=VLvGrR&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_ec3e86a123ca82d3743ed4fbdaaf521b</wp:meta_key>
			<wp:meta_value><![CDATA[1430944905]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_079dbdcda96e33f327c8e7238b45cd58</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_VLvGrR" src="https://codepen.io/ChinuxParibus/embed/VLvGrR?height=300&amp;slug-hash=VLvGrR&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_079dbdcda96e33f327c8e7238b45cd58</wp:meta_key>
			<wp:meta_value><![CDATA[1430944907]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MANIPULACION DE DATOS EN JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/</link>
		<pubDate>Sun, 14 Jun 2015 01:16:14 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:justify;">Supongamos que tenemos la siguiente estructura de datos, muy común en Javascript:</p>
[code lang="javascript" title="Data de prueba" collapse="true"]
var info = {
url: &quot;www.miblog.com/&quot;,
data: [
{
uuid: '24338405-1258-425a-9b43-333c7d36fd1d',
user: 'Abbi',
date: 'Tue Dec 16 2014 16:08:34 GMT-0430 (VET)'
posts: [
{
title: 'Lorem Ipsum'
content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga facere ut numquam possimus excepturi eaque eum, voluptatibus, temporibus voluptatem rem corporis itaque laborum! Repellat commodi quisquam sit facilis, reprehenderit nulla animi cumque quis reiciendis unde voluptatum quos ipsum odit accusamus delectus libero provident est itaque minus rerum voluptas error et veritatis. Asperiores aliquam distinctio animi fugiat illum et vel quam quia, enim consequatur libero voluptates suscipit ducimus ipsa blanditiis officiis quis incidunt magni perferendis, quas quos. Eius placeat beatae reiciendis vel omnis excepturi ut facere dolores, tempore quo quas obcaecati maiores ipsam, culpa explicabo officiis. Dolore laborum molestias mollitia aliquid.'
},
]
},
{
uuid: '0f9d960c-492d-4f0b-b249-d62c17ed1126',
user: 'Dick323',
date: 'Sat Aug 23 2014 15:10:17 GMT-0430 (VET)'
posts: [
{
title: 'Lorem Sentrum'
content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magnam eum non iure ad maxime, nihil eos, dolorem ab assumenda rem. Recusandae quaerat officia, impedit incidunt mollitia sunt quos aliquam suscipit nihil nam repellat dolorum sequi, omnis accusantium iusto at similique voluptatem officiis porro sapiente illo unde. Animi quisquam asperiores, quis omnis voluptatum, nesciunt. Deleniti aperiam fugiat est provident, quas doloremque quam expedita aut nemo repellendus totam possimus esse dolorem consequuntur accusamus asperiores veritatis explicabo eveniet dolore porro nostrum tenetur id mollitia? Nihil reprehenderit quaerat omnis esse sint quos debitis nobis necessitatibus expedita animi, suscipit, porro eligendi, voluptatum, iusto non modi cum libero ratione quasi sed totam placeat doloribus. Veritatis molestias minus mollitia ut nam. Deleniti maiores, neque tenetur reprehenderit doloremque. Sed aperiam, accusamus ipsum neque illum libero consequuntur eligendi sit aspernatur repellat ea consequatur nam similique tempora placeat deleniti ipsa, fugit aliquam explicabo est asperiores ducimus porro! Eaque, deserunt. Rem ab facilis et laborum. Vero unde et reprehenderit ipsum? Cum animi sit, magnam accusantium asperiores nobis accusamus modi corrupti voluptate tenetur, illum amet ratione totam quos eius dolor nulla inventore! Soluta nobis quo modi minus nesciunt ex laborum dolorem cumque aliquid, quod! Nihil fugiat voluptas et sunt dolores, ipsa odit, assumenda expedita corrupti laborum tempora nemo dolorum blanditiis accusantium earum culpa dolorem quibusdam quas iusto quis sed! Voluptas laudantium quaerat accusantium necessitatibus cum eveniet animi distinctio vel ipsa, suscipit asperiores dolorum eligendi magni itaque natus in facere recusandae ad maxime obcaecati hic tempore iste, quae harum aliquid. Saepe temporibus, quod fuga sed. Perspiciatis, sint, ex.'
},
{
title: 'Lorem Ipsum'
content: 'asdd Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sunt, dolore. fasd Lorem ipsum dolor sit amet.'
}
]
},
//...(mucha más data)
]
};
[/code]
<p style="text-align:justify;">La forma como la obtuvimos es irrelevante (por ahora :twisted: ). En cualquier caso, siempre se hace necesario realizar manipulaciones "mágicas"(a veces a fuerza de Javascript trocho y mocho) en estructuras de datos Javascript que pueden compararse a "consultas SQL relacionales", cosas del tipo: "Ordenar los elementos por fecha", "obtener los usuarios que tienen más posts publicados", "el número de posts por usuario y por fecha en un gráfico de <em>interpolación</em> <em>planetaria</em>", y un larguísimo etcétera &gt;:( .</p>
<p style="text-align:justify;">Mientras que un script en Javascript es capaz de crecer hasta más de 2000 líneas de código (las he visto o_O ) para poder manipular este tipo de estructuras complejas de datos, hay librerías que nos pueden hacer la vida mucho más sencilla.</p>

<h2 style="text-align:justify;"><!--more--> UNDERSCORE.JS</h2>
<p style="text-align:justify;"><a href="http://underscorejs.org" target="_blank">Underscore.js</a> es una de esas librerías tipo <em>navaja suiza</em> que sirven para muchísimas cosas en la manipulación de datos. En su página web tienen la documentación oficial de los 112 métodos <em>helpers</em> que realmente ayudan a una sintaxis más limpia del código (y reducir muchas líneas). Por ejemplo, supongamos que tenemos la siguiente estructura:</p>
[code lang="javascript" title="Ejemplo" collapse="true"]
var frases = [
{extraido_de: 'www.pagina1.com/frases', frase: &quot;A Dios rogando y con el mazo dando&quot;},
{extraido_de: 'http://recurso.pagina3.net', frase: &quot;El que nace barrigón ni que lo fajen chiquito&quot;},
{extraido_de: 'miotrapagina.com', frase: &quot;El que madruga, Dios lo ayuda&quot;},
{extraido_de: 'otrapagina.com', frase: &quot;Camarón que se duerme, se lo lleva la corriente&quot;}
];
[/code]
<p style="text-align:justify;">Si quisieramos conocer cuantas veces se repite cada palabra por frase encontrada, en Javascript trocho y mocho tendríamos que hacer maromas, en Underscore.js, es incluir la librería y usar los <em>helpers</em>:</p>
[code lang="javascript" collapse="true" title="Código fuente"]
console.log(
_.chain(frases) //encadena la ejecución de funciones sobre una misma instancia
.map(function(elemento) { return elemento.frase.split(' '); }) //a cada elemento se le aplica esta función
.flatten() //transforma la matriz resultado en un arreglo unidimensional
.reduce(function(palabras, palabra) { //el resultado es agrupado en una estructura única de datos
palabras[palabra] = (palabras[palabra] || 0) + 1;
return palabras;
}, {})
.value();
)
// =&amp;gt; Object({Dios: 2, que: 3, ...})
[/code]
<p style="text-align:justify;">¡Pero hay más! XD</p>

<h2 style="text-align:justify;">LODASH</h2>
<p style="text-align:justify;"><a href="https://lodash.com" target="_blank">Lodash</a> es un fork de Underscore.js que comprende más funciones que su ancestro (¡241 funciones, <em>deal with it</em>! 8-) ). El ejemplo anterior sería exactamente igual con esta librería, y al igual que la anterior, puedes ver en este <a href="https://lodash.com/docs" target="_blank">enlace</a> la documentación oficial de todos sus <em>helpers</em>.</p>
<p style="text-align:justify;">:?: Pero, ¿por qué la dejas de último y no realizas algún ejemplo con esta librería? :?:</p>
<p style="text-align:justify;"><strong><em>Respuesta:</em></strong> Porque los posts que vienen, van a utilizar <strong>esta</strong> librería extensivamente, jejeje.</p>
<p style="text-align:justify;">Underscore.js no es mala, de hecho hay proyectos Open Source muy importantes que la usan como componente de sus sistemas, tal es el caso de <a href="http://backbonejs.org/" target="_blank">Backbone.js</a> o <a href="http://documentcloud.org" target="_blank">DocumentCloud</a>. Incluso, tengo un <a href="https://jotaeseymas.wordpress.com/2015/04/05/seek-and-destroy-elementos-duplicados/" target="_blank">post</a> que usa la función <code>_.uniq()</code> para eliminar elementos únicos en un <em>Array</em>.</p>
<p style="text-align:justify;">¡Hasta los posts que vienen! <em>*risa malvada*</em> ;)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2015-06-13 20:46:14</wp:post_date>
		<wp:post_date_gmt>2015-06-14 01:16:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manipulacion-de-datos-en-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207206861634563";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11647381201]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: LOWDB | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/22/typico-de-lowdb-2/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.13</wp:comment_author_IP>
			<wp:comment_date>2015-06-22 11:10:31</wp:comment_date>
			<wp:comment_date_gmt>2015-06-22 15:40:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] TYPICO DE: JSON | JO&hellip; on MANIPULACION DE DATOS EN&nbsp;&hellip; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434987631.768021106719970703125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434987648]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434987649.636682033538818359375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: JSON | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/16/typico-de-json/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.237</wp:comment_author_IP>
			<wp:comment_date>2015-06-16 11:45:46</wp:comment_date>
			<wp:comment_date_gmt>2015-06-16 16:15:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] MANIPULACION DE DATOS EN&nbsp;JAVASCRIPT [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434471469]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434471470.21158599853515625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434471347.1797530651092529296875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>VALIDANDO CAMPOS DE FORMULARIO CON ANGULAR.JS. PARTE 1. LA TEORÍA</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/07/validando-campos-de-formulario-con-angular-js-parte-1-la-teoria/</link>
		<pubDate>Mon, 08 Jun 2015 02:51:04 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 1 la teor&amp;iacute;a"&gt;
<p style="text-align:justify;">Considerando la cantidad de tiempo que tengo sin escribir, debería ganarme un premio. O dárselo a ustedes por la paciencia que han tenido conmigo. ¡Muchas gracias! :)</p>
<p style="text-align:justify;">Para variar, paso de muy fuerte <a title="Ehm, si..." href="http://www.wordreference.com/es/en/translation.asp?spen=laburo" target="_blank">laburo</a> a no tener [casi] nada que hacer, lo cual me recordó lo empolvado que estaba el blog, y pues nada. ¡Manos a la ubre!</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a href="https://angularjs.org" target="_blank">Angular.js</a>, siempre facilitándole (hasta cierto punto) la vida de los desarrolladores front-end (como yo), cuenta con objetos globales (los cuales veremos más adelante) que definen el estado del campo de un formulario.</p>

<h2 style="text-align:justify;">Un poco de preparación</h2>
Para esta "receta" necesitamos:
<ul>
	<li><a href="https://code.angularjs.org/1.3.10/" target="_blank">Angular.js</a> (por supuesto :D ), usaremos la versión 1.3.10.</li>
	<li>Módulo <a href="https://code.angularjs.org/1.3.10/angular-messages.min.js" target="_blank"><code>ngMessages</code></a> (en <code>angular-messages.min.js</code>).</li>
	<li><a href="http://materializecss.com/getting-started.html" target="_blank">MaterializeCSS</a> y su inseparable amigo <a href="http://jquery.com/" target="_blank">jQuery</a> en su última versión ( :( ).</li>
</ul>
<h2 style="text-align:justify;">Hablando de objetos...</h2>
<p style="text-align:justify;">Angular.js provee muchos objetos globales que permiten supervisar el estado de un campo de formulario específico, en nuestro ejemplo, vamos a ver cinco de ellos y su significado dentro de la validación que realiza el framework. A saber:</p>

<ul>
	<li style="text-align:justify;">Objeto <code>$error</code>: Se instancia cada vez que un formulario, un modelo o un template no cumple con ciertas validaciones previamente especificadas. En el caso de los formularios, <code>$error</code> aparece cuando las validaciones nativas (como <code>pattern</code> o <code>required</code>), expresadas en el campo de formulario no se cumplen.</li>
	<li style="text-align:justify;">Objeto <code>$pristine</code>: Se instancia cuando un campo de formulario, o todo el formulario no ha registrado interacción de datos con el usuario (sucede cuando la página se carga por primera vez o se recarga).</li>
	<li style="text-align:justify;">Objeto <code>$dirty</code>: Se instancia cuando un campo de formulario ya ha registrado interacción de datos con el usuario. Una vez instanciado este objeto, el estado del formulario no puede volver a ser <code>$pristine</code> <code>(</code>a menos que se recargue la página).</li>
	<li style="text-align:justify;">Objeto <code>$invalid</code>: Se instancia cuando algún campo del formulario no cumple con alguna de las validaciones nativas expresadas en dicho campo. Generalmente, los navegadores colocan una sombra roja alrededor del campo como indicación visual de que la data recibida es inválida.</li>
	<li style="text-align:justify;">Objeto <code>$valid</code>: Se instancia cuando un formulario ya está validado en todos sus campos, y es generalmente el estado final de un formulario.</li>
</ul>
<p style="text-align:justify;">Mientras que el objeto <code>$error</code> contiene el estado global de todos los campos y validaciones nativas del formulario, los demás sólo guardan un valor booleano indicando si el estado del campo de formulario corresponde a alguno de ellos. Por lo general, un campo de formulario siempre tiende a instanciar a dos de ellos a la vez.</p>
<p style="text-align:justify;">¡<a href="https://jotaeseymas.files.wordpress.com/2015/05/8c6c8-mono.jpg" target="_blank">Changos</a>! Ya me extendí demasiado con la teoría :( . Será en el próximo post que ya pasemos a la práctica ;)</p>
<p style="text-align:justify;">&lt;/script&gt;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2015-06-07 22:21:04</wp:post_date>
		<wp:post_date_gmt>2015-06-08 02:51:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validando-campos-de-formulario-con-angular-js-parte-1-la-teoria</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="material-design"><![CDATA[Material Design]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_515b147a09ee56a4e061ee7c1c054065</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9a8fbd1d6aa94cad73e6606e25820822</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11445269854]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[LIBRERIA ANGULAR. PARTE 4. VALIDANDO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.187</wp:comment_author_IP>
			<wp:comment_date>2015-08-27 15:06:52</wp:comment_date>
			<wp:comment_date_gmt>2015-08-27 19:36:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Para rellenar el &lt;select&gt; con las categorías de la fábrica categorias, se usa la directiva ng-options, la cual permite mediante una sintaxis específica, extraer y formatear información por cada ítem o como se desee. Puedes ver los objetos condicionales de estado para campos de formulario en este post. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440704249]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440704250.0818130970001220703125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1440704213.122725009918212890625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>20 FRAMEWORKS MV* EN JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/12/20-frameworks-mv-en-javascript/</link>
		<pubDate>Fri, 12 Jun 2015 14:06:36 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="20 frameworks mv* en javascript"&gt;
<p style="text-align:justify;">Cuando estamos en un proyecto (independiemente de la naturaleza del mismo) la implementación de los métodos a usar, a menudo viene <em>casada</em> con la idea de usar una determinada herramienta (también decidida al inicio del proyecto). Esto se hace un poco más claro cuando estamos hablando de un proyecto de software.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">La tecnología a usar, [casi] siempre viene asociada con una serie de requisitos (lenguaje de programación, arquitectura, o el sempiterno "es lo que dice el cliente" &gt;:( ), satisfechos al inicio del proyecto en "reuniones", etcétera. Sin embargo, en tecnología, todos los lenguajes de programación tienen sus ventajas y desventajas.</p>
<p style="text-align:justify;">En Javascript, ha ocurrido que dicho lenguaje ha pasado de ser un lenguaje para el navegador, a ser una especie de Panacea que es capaz de estar en servidores, dispósitivos móviles, y en casi cualquier dispositivo con conexión a internet. No me extrañaría que estuviera en electrodomésticos :/</p>
<p style="text-align:justify;">En este <a href="http://www.faridesign.net/2012/04/20-javascript-frameworks-mvvm-templating-licenses-etc/" target="_blank">enlace</a>, hay una lista de 20 frameworks Javascript que trabajan con Arquitectura MV* del lado del front-end (inserte en el "*" lo que considere importante para usted), cada uno con diferentes funcionalidades y para diferentes áreas, utiliza el que consideres más apropiado para tu proyecto. Personalmente me quedo con <a href="http://backbonejs.org" target="_blank">Backbone.js</a> y <a href="https://angularjs.org" target="_blank">Angular.js</a>, y probar que tal es <a href="http://knockoutjs.com/" target="_blank">Knockout.js</a> y <a href="http://sammyjs.org/" target="_blank">Sammy.js</a>. ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date>2015-06-12 09:36:36</wp:post_date>
		<wp:post_date_gmt>2015-06-12 14:06:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20-frameworks-mv-en-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1ab89a947e59729b343461a29c948ced</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207192127666223";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11600090400]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[ACERCA DE: SINGLE PAGE APPLICATIONS (SPA) | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/07/05/acerca-de-single-page-applications-spa/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.159</wp:comment_author_IP>
			<wp:comment_date>2015-07-05 11:35:41</wp:comment_date>
			<wp:comment_date_gmt>2015-07-05 16:05:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] todos los problemas,  y como estos, hay cientos en Javascript (y por lo menos &#8220;se&#8221; de 20 de ellos). Todo depende de lo que quieras usar, del usuario final, y de otros factores ajenos al desarrollo. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1436112342.5155251026153564453125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1436112369]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1436112370.140986919403076171875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[¿POR QUÉ HAY TANTOS FRAMEWORKS JAVASCRIPT? | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/08/30/por-que-hay-tantos-frameworks-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.159</wp:comment_author_IP>
			<wp:comment_date>2015-08-30 17:18:29</wp:comment_date>
			<wp:comment_date_gmt>2015-08-30 21:48:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] tiempo, pubiqué un enlace donde se mostraban al menos 20 frameworks MV* en Javascript, pero la realidad supera a cualquier [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440971398]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440971399.0551021099090576171875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1440971309.98204803466796875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>LIBRERIA ANGULAR. PARTE 3. FABRICANDO</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/13/libreria-angular-parte-3-fabricando/</link>
		<pubDate>Wed, 13 May 2015 14:30:03 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=491</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 3. fabricando"&gt;
<p style="text-align:justify;"><em>Como cambian las cosas cuando nos ponemos a inventar</em>. Creo que lo vi en una comiquita venezolana...</p>
<p style="text-align:justify;">¿Qué creen? Hoy es miércoles, y dado que me he retrasado tanto por el <a title="Ehm, si..." href="http://www.wordreference.com/es/en/translation.asp?spen=laburo" target="_blank">laburo</a> y por otras cosas más. He decidido publicar sin más demora la siguiente parte de la creación de nuestra librería que va quedando <a title="Ehm, si..." href="http://www.urbandictionary.com/define.php?term=CHULA" target="_blank">chula</a>, ¿no? En el <a title="Parte 2. Enrutando" href="http://wp.me/p5CTtO-4U" target="_blank">post</a> anterior expliqué las <strong>Rutas</strong>, y en esta parte explicaré las <strong>Fábricas</strong>, sin olvidar algunas modificaciones adicionales... ¡Manos a la ubre!</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">Controlando</h2>
<p style="text-align:justify;">Si se dieron cuenta en mi <a title="Mi repo de Github" href="https://github.com/chinuxparibus/libreria-angular" target="_blank">repo</a>, hay varios cambios importantes, y uno de ellos es precisamente el hecho de que la lista de libros y la lista de categorías desapareció de los respectivos controladores definidos en <code>controllers.js</code>. ¿Qué pasó? Separé los datos del controlador, mediante un módulo separado para los datos que voy a explicar más adelante, y agregué un nuevo método para cada controlador.</p>


[code lang="javascript" collapse="true" title="En controllers.js" firstline="22"]
...
$scope.filtrarLibros = function(){
	return libreria.filtrarLibros(parseInt($routeParams.categoria));
};
...
[/code]

<p style="text-align:justify;">Este método filtrará las lista de libros por categoría.</p>


[code lang="javascript" collapse="true" title="En controllers.js" firstline="32"]
...
$scope.addCategoria = function(nombre){
	categorias.addCategoria(nombre);
};
...
[/code]

<p style="text-align:justify;">Este método añadirá una nueva categoría.</p>

<h2>Dirigiendo</h2>
<p style="text-align:justify;">Tenemos un nuevo template llamado <code>categorias.html</code> que se renderiza cuando se filtran las categorias. Dentro del mismo template (que es una "copia" del template <code>libros.html</code>) todo el filtrado de libros se hace en esta linea:</p>


[code lang="html" collapse="true" title="En categorias.html" firstline="2" highlight="3"]
...
&lt;div class=&quot;libro col-xs-6 col-sm-2 text-center pull-left&quot; ng-repeat=&quot;libro in filtrarLibros() | orderBy: $index&quot;&gt;
...
[/code]

<p style="text-align:justify;">La función <code>filtrarLibros()</code> del controlador <code>LibrosCtrl</code> se usa para realizar el fitrado en la lista retornada por dicha función. El filtrado se ejecuta tomando como referencia el parámetro establecido en la ruta señalada dentro del template <code>menu_superior.html</code> el cual fue levemente modificado así:</p>


[code lang="html" collapse="true" title="En menu_superior.html" firstline="26" highlight="28"]
...
	&lt;li ng-repeat=&quot;categoria in categorias&quot;&gt;
		&lt;a href=&quot;#/categorias/{{categoria.categoria}}&quot;&gt;&lt;i class=&quot;fa fa-caret-square-o-right fa-fw&quot;&gt;&lt;/i&gt;{{categoria.nombre | uppercase}}&lt;/a&gt;
	&lt;/li&gt;
...
[/code]

<p style="text-align:justify;">Ahora necesitamos definir la url #<code class="xml string">/categorias/{{categoria.categoria}}</code> a la que apunta el link de cada categoría.</p>

<h2 style="text-align:justify;">Enrutando</h2>
<p style="text-align:justify;">Definimos la nueva ruta que va a renderizar el template con todas las url definidas en el punto anterior en nuestro archivo <code>router.js</code>.</p>


[code lang="javascript" collapse="true" firstline="9" highlight="10" title="En router.js"]
...
.when('/categorias/:categoria', {
	templateUrl: rootDir+'/categorias.html',
	controller: 'LibrosCtrl'
})
...
[/code]

<p style="text-align:justify;">En la linea 10, la sección de la url señalada con : indica un parámetro variable que va a ser manejado por el objeto global de Angular llamado <code>$routeParams, </code>el cual puede ser instanciado desde cualquier parte de la aplicación, siempre que se "inyecte" la dependencia de ese objeto en el módulo requerido, tal y como se puede apreciar en la definición modificada de los controladores en el archivo <code>controllers.js</code>.</p>

<h2 style="text-align:justify;">Fabricando</h2>
<p style="text-align:justify;">Una fábrica es un módulo de Angular que se encarga, ni más ni menos, de "fabricar" (valga la redundancia) datos comunes a toda la aplicación y proveerlos donde se "inyecte" dicho módulo. Piensen en ello como una base de datos con tablas nomencladoras en el caso de SQL.</p>
<p style="text-align:justify;">La idea central de la fábrica es buscar que datos comunes pueden existir (entre dos controladores, por ejemplo), para retornarlos agrupados en un objeto definido dentro de la fábrica. En nuestro caso, elaboré dos fábricas, las cuales están definidas en el archivo <code>app/factories.js</code>.</p>
<p style="text-align:justify;">Veamos en detalle la definición de una de ellas:</p>


[code language="javascript" collapse="true" title="En factories.js" gutter="false"]

libreria.factory('categorias', [function() {
	var categorias = {}; //Se define el objeto a ser retornado

	// Refactorizado desde CategoriasCtrl
	categorias.listaCategorias = [
		{categoria: 1, nombre: &quot;Ciencia-Ficción&quot;},
		{categoria: 2, nombre: &quot;Romance&quot;},
		{categoria: 3, nombre: &quot;Histórica&quot;},
		{categoria: 4, nombre: &quot;Misterio&quot;},
	];

	// Método para añadir categorías
	categorias.addCategoria = function(name){
		categorias.listaCategorias.push(
			{categoria: categorias.listaCategorias.length+1, nombre: name}
		);
	}

	return categorias;
}]);
[/code]

<p style="text-align:justify;">La definición es muy similar a la de un controlador, salvo que usamos la palabra reservada <code>factory </code>para denotar que se trata de una fábrica. Por la forma en la que Angular estructura la las fábricas, se requiere retornar de manera obligatoria un objeto para cada fábrica definida. Por convención, recomiendo usar el mismo nombre de la fábrica como el nombre de la variable que contendrá el objeto a retornar.</p>
<p style="text-align:justify;">La aplicación funciona de manera transparente...</p>


[caption id="attachment_239" align="aligncenter" width="484"]<a href="https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png"><img class="wp-image-239 " src="https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png?w=150" alt="Tiene pinta de librería, ¿no? Se nota que me encanta el azul... juejuejue " width="484" height="171" /></a> <span style="text-align:center;font-size:13px;font-weight:bold;">Tiene pinta de librería, ¿no? Se nota que me encanta el azul... juejuejue<br /> </span>[/caption]

... y el filtro responde como se espera.

[caption id="attachment_508" align="aligncenter" width="318"]<a href="https://jotaeseymas.files.wordpress.com/2015/05/filtro_de_libros.png"><img class=" wp-image-508" src="https://jotaeseymas.files.wordpress.com/2015/05/filtro_de_libros.png?w=150" alt="¡Funciona! Me costó hacerlo pero valió la pena " width="318" height="297" /></a> <span style="text-align:center;font-size:13px;font-weight:bold;">¡Funciona! Me costó hacerlo pero valió la pena<br /></span>[/caption]
<p style="text-align:justify;">Sigo aumentando +1 a la cuenta. ¡Que emoción! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date>2015-05-13 10:00:03</wp:post_date>
		<wp:post_date_gmt>2015-05-13 14:30:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-3-fabricando</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[LIBRERÍA ANGULAR. PARTE 3,5. SIRVIENDO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.87</wp:comment_author_IP>
			<wp:comment_date>2015-06-09 13:13:34</wp:comment_date>
			<wp:comment_date_gmt>2015-06-09 17:43:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] 3: Tal y como definimos una factory en el post anterior de este tutorial, usamos la palabra reservada service en este caso, luego el nombre del [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1433940945.8665409088134765625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1433876635.37149810791015625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1433940945]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1433871815.53190708160400390625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ALGUNAS PECULIARIDADES DE JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/20/algunas-peculiaridades-de-javascript/</link>
		<pubDate>Wed, 20 May 2015 17:13:43 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=515</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="algunas peculiaridades de javascript"&gt;
<p style="text-align:justify;">¡Que onda! Espero que todo ande <a title="Ehm, si..." href="http://www.urbandictionary.com/define.php?term=chido" target="_blank">chido</a>...</p>
<p style="text-align:justify;">Dejando de lado el cotorreo típico, y leyendo algunos libros interesantes (ya saben, hay que estudiar :) ), me encontré con algunas particularidades de Javascript que [creo] no existen en otro lenguaje de programación. Cosas que lo hacen aún más interesante de lo que ya es (para mí, digo :P ).</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">Hoisting de Funciones</h2>
<p style="text-align:justify;">En este <a title="Sobre Hoisting" href="https://jotaeseymas.wordpress.com/2015/05/05/e-le-va-tion/" target="_blank">post</a> hablé un poco sobre el Hoisting de código, y más breve aún sobre el Hoisting de funciones. Sólo he visto en Javascript (y tal vez en PHP :/ ) que es posible usar una función antes de su declaración formal, puesto que el intérprete de Javascript lo <em>eleva</em> en un contexto global. Es decir, que esto:</p>


[code lang="javascript" title="Código normal" collapse="true"]
	function miFuncion(){
		console.log(&quot;Hola mundo!&quot;);
	}

	miFuncion(); //devuelve &quot;Hola mundo!&quot;
[/code]

<p style="text-align:justify;">Funciona exactamente igual que esto:</p>


[code lang="javascript" title="Código hoisting" collapse="true"]
	miFuncion(); //devuelve &quot;Hola mundo!&quot;

	function miFuncion(){
		console.log(&quot;Hola mundo!&quot;);
	}
[/code]

<h2>Coerción en tipos de datos</h2>
<p style="text-align:justify;">En este <a title="Vaya lío con los tipos" href="https://jotaeseymas.wordpress.com/2015/02/10/vaya-lio-con-los-tipos/" target="_blank">post</a> hablé (y corregí :D ) un poco sobre los tipos de datos primitivos en Javascript, así como una forma sencilla de validar dichos tipos de dato como instancia de sus <em>envoltorios.</em> Y es que el problema parte precisamente del intérprete de Javascript, puesto que es posible validar a nivel de primitivos (variables con valores simples) y/o a nivel de referencias (Objetos, Arrays o tipos personalizados). Por ejemplo, a nivel de primitivos es fácil confundir un valor undefined con un valor null:</p>


[code lang="javascript" title="Comparación coercionada" collapse="true"]
console.log(undefined == null); //devuelve &quot;true&quot;
[/code]

<p style="text-align:justify;">Lo cual evidentemente, es un error y generará un error en la lógica de negocio que estemos implementando. Eso es la coerción en tipos de datos, la <em>instancia</em> de la variable es diferente del <em>valor</em> de la variable. El intérprete de Javascript siempre buscará convertir un tipo de dato al valor más primitivo posible. Para evitar esto, se debe comparar en ambos niveles:</p>


[code lang="javascript" title="Comparación en ambos niveles" collapse="true"]
console.log(undefined === null); //devuelve &quot;false&quot;
[/code]

<h2><em>Aridad</em> infinita</h2>
<p style="text-align:justify;">La <a title="Aridad" href="http://es.wikipedia.org/wiki/Aridad" target="_blank"><em>aridad </em></a>en programación, en atención al concepto original, se refiere al número de argumentos que requiere un operador para realizar efectivamente una operación. Si establecemos una función o procedimiento como un operador matemático, dentro de Javascript, este concepto es bastante extensible. Javascript es el único lenguaje que permite, dentro de su declaración de funciones, ¡un número infinito de argumentos!</p>
<p style="text-align:justify;">¡Ojo! No se confunda este concepto con las características de otros lenguajes de programación en los que se acepta que una función tenga un número variable de argumentos. Javascript se distingue precisamente porque esa cantidad mínima de parámetros se puede aumentar en tiempo de ejecución.</p>
<p style="text-align:justify;">Esto es posible gracias al atributo <code>arguments</code> que poseen todas las funciones declaradas en Javascript. Este atributo es un Array de todos los argumentos de una función, el cual puede modificar su tamaño. Por ejemplo:</p>


[code lang="javascript" title="Función con argumentos variables" collapse="true"]
var sumarNumeros = function(){
	var suma = 0;
	for (var i = 0; i &lt; arguments.length; i++) {
		suma += arguments[i];
	};
	console.log('La suma es %d', suma);
}

sumarNumeros(2, 2); //devuelve &quot;La suma es 4&quot;
sumarNumeros(1, 2, 3, 4); //devuelve &quot;La suma es 10&quot;
sumarNumeros(); //devuelve &quot;La suma es 0&quot;
[/code]

<p style="text-align:justify;">Por cierto, si una función es declarada de esta forma (llamada <em>declaración por referencia</em>), el intérprete de Javascript no puede hacerle Hoisting. ¡Hagan la prueba! Sean curiosos y peculiares ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date>2015-05-20 12:43:43</wp:post_date>
		<wp:post_date_gmt>2015-05-20 17:13:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>algunas-peculiaridades-de-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CINCO</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/20/cinco/</link>
		<pubDate>Wed, 20 May 2015 18:07:45 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=522</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="cinco"&gt;

https://www.youtube.com/watch?v=mpdcKmaHk_s

<strong>Placer culposo:</strong> me gustaba esta canción... <strong><span style="color:#d25349;">NO</span></strong> el grupo, por si acaso :(

<!--more-->

Y si, hay gente bien <a title="Ehm, si..." href="http://www.oxforddictionaries.com/translate/spanish-english/ladillado" target="_blank">ladillada</a>... <a title="El creador de Five.js" href="https://github.com/jackdcrawford" target="_blank">Jack Crawford</a> es uno de ellos...

<a title="FiveJS" href="http://jackdcrawford.github.io/five/" target="_blank">Five.js</a> es una librería que... Ehm, esteeee... O sea, pues... Nada... Usa el número 5...

Pues, lo dicho, la incluimos...

[code lang="html"]&lt;script src=&quot;./five.js&quot;&gt;&lt;/script&gt;[/code]

... y la usamos. Veamos algunos ejemplos:

[code lang="javascript" collapse="true" title="Lo básico"]five(); //devuelve 5[/code]


[code lang="javascript" collapse="true" title="En código Morse"]five.morseCode(); //devuelve di-di-di-di-dit[/code]


[code lang="javascript" collapse="true" title="En números romanos"]five.roman(); //devuelve V[/code]


[code lang="javascript" collapse="true" title="Los jugadores favoritos del creador"]five.fab(); //devuelve ['Juwan Howard','Ray Jackson','Jimmy King','Jalen Rose','Chris Webber'][/code]


[code lang="javascript" collapse="true" title="En klingon! :3"]five.klingon(); //devuelve vagh[/code]

Y ya. ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>522</wp:post_id>
		<wp:post_date>2015-05-20 13:37:45</wp:post_date>
		<wp:post_date_gmt>2015-05-20 18:07:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cinco</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="localizacion"><![CDATA[localización]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¿DONDE APRENDER JAVASCRIPT?</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/21/donde-aprender-javascript/</link>
		<pubDate>Thu, 21 May 2015 15:21:44 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=529</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="\¿donde aprender javascript\?"&gt;
<p style="text-align:justify;">En este <a title="Donde Investigar Javascript" href="https://jotaeseymas.wordpress.com/2015/02/06/donde-investigar-javascript/" target="_blank">post</a>, publicaba algunas fuentes de información en las que se podía investigar Javascript para conocerlo, o bien para tener una base de consulta cuando las dudas atacan. Sin embargo, para los nuevos (como yo) se nos hace un poco difícil seguir la tónica de algunas páginas, bien sea porque estan en inglés, o bien sea porque no tenemos ni idea de Javascript.</p>
<p style="text-align:justify;">He aquí algunas fuentes de información para aprender Javascript, gratis y desde cero...</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">JAVASCRIPT FOR CATS</h2>
[caption id="" align="aligncenter" width="513"]<img src="http://jsforcats.com/images/substack-cats.png" alt="cat" width="513" height="360" /> <strong>¡Miau! :3</strong>[/caption]
<p style="text-align:justify;">¡Ahora los gatos también pueden aprender Javascript! :D No, enserio, esa página me dio demasiada risa. Pese a que está en inglés, no es muy compleja de entender y cubre lo básico para aprender el lenguaje. Pincha <a title="Javascript For Cats" href="http://jsforcats.com" target="_blank">aquí</a>.</p>

<h2>CEVICHE.JS</h2>
<blockquote>
<p style="text-align:justify;">La empresa La Buena Espina es una cadena de restaurantes de comida peruana que logró crecer gracias al boom gastronómico local. De tener un local familiar ahora tienen varios restaurantes en todo el país, por lo que decidieron lanzar un sitio web donde muestren información sobre su carta y sus locales.</p>
<p style="text-align:justify;">El dueño de La Buena Espina te ha pedido personalmente realizar el sitio y quiere que visitarla sea una experiencia tan buena como su comida, así que es tu deber como desarrollador crear una aplicación con contenido fácilmente mantenible y de un aspecto visual impactante.</p>
<p style="text-align:justify;"><em>- Tomado desde cevichejs.com</em></p>
</blockquote>
<p style="text-align:justify;">Me parece genial la idea de aprender Javascript de manera práctica, en la medida que explicas conceptos y los aplicas en un ejemplo real. Lo mejor de esta página es que ¡está en español! Pincha <a title="CevicheJS" href="http://cevichejs.com" target="_blank">aquí</a>.</p>

<h2 style="text-align:justify;">ELOQUENT JAVASCRIPT</h2>
[caption id="" align="aligncenter" width="426"]<a href="http://www.amazon.com/gp/product/1593275846/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1593275846&amp;linkCode=as2&amp;tag=marijhaver-20&amp;linkId=VPXXXSRYC5COG5R5"><img src="http://eloquentjavascript.net/img/cover.png" alt="Cover image" width="426" height="552" /></a> <strong>Pájaro secretario (no muy "elocuente" :/ )</strong>[/caption]
<p style="text-align:justify;">Para gente más seria pueden usar esta página, que en realidad es un libro escrito con la intención de explicar el lenguaje de manera sencilla (y elocuente, Doh! :/ ). Se puede descargar en formato PDF o en formato EPUB y leerlo off-line, sin embargo está en inglés :( . Pincha <a title="Eloquent Javascript" href="http://eloquentjavascript.net/" target="_blank">aquí</a>.</p>
<p style="text-align:justify;">Independientemente del medio que elijan, lo importante es aprender ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>529</wp:post_id>
		<wp:post_date>2015-05-21 10:51:44</wp:post_date>
		<wp:post_date_gmt>2015-05-21 15:21:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>donde-aprender-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[10855176341]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¿DONDE JUGAR CON JAVASCRIPT?</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/21/donde-jugar-con-javascript/</link>
		<pubDate>Thu, 21 May 2015 20:36:54 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=536</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="\¿donde jugar con javascript\?"&gt;
<p style="text-align:justify;">En posts anteriores, he publicado como aprender e investigar, aunque ambos son métodos muy buenos para aprender, ocurre que no todas las audiencias son capaces de entender los contenidos, y algunos (sobre todo los más pequeños) no les gusta navegar mucho tiempo por una página web con puras letras.</p>
<p style="text-align:justify;">Pero hay páginas que cambian considerablemente el panorama, he aquí algunos ejemplos...</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">CODE STUDIO</h2>
<p style="text-align:justify;">Dirigido a niños de 4 años en adelante, <a title="Code Studio" href="http://studio.code.org/" target="_blank">Code Studio</a> es una web que se especializa en la enseñanza de la programación usando Javascript en forma de bloques. Para ello, se vale de elementos multimedia muy bien apreciados por los más pequeños, como Angry Birds, Frozen y otros personajes... ¡A mí me encanta!</p>

<h2 style="text-align:justify;">CODE COMBAT</h2>
<p style="text-align:justify;">Dirigido a todo tipo de público, <a title="CodeCombat" href="http://codecombat.com/" target="_blank">CodeCombat</a> es ligeramente diferente. Se vale de un juego de rol en el cual debemos dirigir a un personaje por pasadizos medievales repletos de trampas, luchar con dragones y armar nuestro personaje con las más poderosas herramientas, valiéndose del ingenio y la creatividad del usuario para completar las misiones.</p>

<h2 style="text-align:justify;">ELEVATOR SAGA</h2>
<p style="text-align:justify;">Dirigido a un público más adulto y más <a title="Ehm, si..." href="http://www.wordreference.com/definicion/ducho" target="_blank">ducho</a> en Javascript. El reto que planta <a title="Elevator Saga" href="http://play.elevatorsaga.com" target="_blank">Elevator Saga</a> es "sencillo": llevar personas por los pisos en un tiempo determinado por el reto. Con excelente documentación y muy retador para los niveles superiores. Yo no he pasado del segundo jejeje :D . Necesito investigar más al respecto...</p>
<p style="text-align:justify;">Con esto cierro el ciclo "académico"... ¡Happy Gaming! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>536</wp:post_id>
		<wp:post_date>2015-05-21 16:06:54</wp:post_date>
		<wp:post_date_gmt>2015-05-21 20:36:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>donde-jugar-con-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[10864856940]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_facebook_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://facebook.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SIMULACIÓN DE COMPUTADORES IBM.... ¡EN EL NAVEGADOR!</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/22/simulacion-de-computadores-ibm-en-el-navegador/</link>
		<pubDate>Fri, 22 May 2015 17:36:09 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=539</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="simulaci&amp;oacute;n de computadores ibm en el navegador"&gt;
<p style="text-align:justify;">Tengo que admitirlo: ¡soy un <a title="Ehm, si..." href="https://en.wikipedia.org/wiki/Millennials" target="_blank">Millenial</a>! Eso explica porque mi pasión por la tecnología retro...</p>
<p style="text-align:justify;">Recuerdo que aprendí computación a los 12 años, en una Compaq Presario PC XT: CPU Intel Pentium II de 1GHz y 256MB de RAM con <em>Mocosoft Guindous 95</em> instalado. Una como esta...</p>


[caption id="attachment_542" align="aligncenter" width="301"]<a href="https://jotaeseymas.files.wordpress.com/2015/05/aaaccc.gif"><img class=" wp-image-542" src="https://jotaeseymas.files.wordpress.com/2015/05/aaaccc.gif?w=150" alt="Compaq Presario PC XT :3" width="301" height="237" /></a> <strong>Compaq Presario PC XT :3</strong>[/caption]
<p style="text-align:justify;">Pero no voy a hablar de mí porque lloro... :'(</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a title="PC.js" href="http://www.pcjs.org/" target="_blank">PCjs.org</a> es una página web que posee simulaciones de máquinas IBM antiguas con diferentes aplicaciones y características. Lo novedoso es que dichas máquinas fueron ¡escritas enteramente en Javascript! Puedes ver, entre otros computadores, el del mítico juego DONKEY.BAS.</p>


[caption id="" align="aligncenter" width="403"]<img class="shrinkToFit transparent" src="http://www.pcjs.org/devices/pc/machine/5150/cga/64kb/donkey/screenshot.png" alt="http://www.pcjs.org/devices/pc/machine/5150/cga/64kb/donkey/screenshot.png" width="403" height="364" /> <strong>Muuuuy viejo...</strong>[/caption]

*snif*, *snif*, *snif*... ¡De las cosas que se pueden recordar con Javascript! ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>539</wp:post_id>
		<wp:post_date>2015-05-22 13:06:09</wp:post_date>
		<wp:post_date_gmt>2015-05-22 17:36:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>simulacion-de-computadores-ibm-en-el-navegador</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[10897170095]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VALIDANDO CAMPOS DE FORMULARIO CON ANGULAR.JS. PARTE 2. LA PRÁCTICA</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/08/validando-campos-de-formulario-con-angular-js-parte-2-la-practica/</link>
		<pubDate>Mon, 08 Jun 2015 14:31:09 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=549</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 2 la práctica"&gt;
<p style="text-align:justify;">En el <a href="http://wp.me/p5CTtO-1a" target="_blank">post</a> anterior expliqué un poco la teoría de que iba la validación de campos de formulario en Angular.js. Acá aplico un poco bastante de esa teoría.</p>
<p style="text-align:justify;">No voy a enfocarme en el CSS porque el framework utilizado es bastante explícito con la sintaxis, y además , me interesa más la parte <em>Angular</em> del asunto...</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">Explicando el código...</h2>
<p style="text-align:justify;">Pueden ver el <a href="https://github.com/ChinuxParibus/post-validar-formularios" target="_blank">repo</a> para más información respecto al código, sólo me interesa explicar la cuestión de las directivas y eso...</p>


[caption id="attachment_566" align="aligncenter" width="499"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_pristine.png"><img class=" wp-image-566" src="https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_pristine.png?w=150" alt="Formulario retocado con Material Design ( :3 )" width="499" height="292" /></a> <strong>Formulario retocado con Material Design ( :3 )</strong>[/caption]
<p style="text-align:justify;">Para esto, incluímos Angular.js y el módulo de ngMessages para encapsular la lógica de validación:</p>


[code lang="html" title="Inclusión de librerías" collapse="true"]
&lt;script src=&quot;angular.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;angular-messages.min.js&quot;&gt;&lt;/script&gt;
[/code]

<p style="text-align:justify;">...y un poco de CSS usando <em>helpers </em>de Angular.js:</p>


[code lang="css" title="usando helpers CSS" firstline="8" collapse="true"]
input.ng-invalid.ng-dirty, textarea.ng-invalid.ng-dirty{ border-bottom: 1px solid #D25349; }
input.ng-valid.ng-dirty, textarea.ng-valid.ng-dirty{ border-bottom: 2px solid #019739; }
[/code]

<p style="text-align:justify;">Aquí un fragmento de código que posee bastante información (suficiente para explicar el resto del formulario):</p>


[code lang="html" collapse="true" title="Archivo: formulario.html" firstline="15" highlight="16, 22, 26, 27"]
&lt;script&gt;
	angular.module('messages', ['ngMessages']);
&lt;/script&gt;
&lt;/head&gt;
&lt;body ng-app=&quot;messages&quot;&gt;
	&lt;div class=&quot;container&quot;&gt;
	&lt;h3&gt;Ingrese sus datos&lt;/h3&gt;
	&lt;form name=&quot;registro&quot; novalidate&gt;
		&lt;div class=&quot;row&quot;&gt;
			&lt;section class=&quot;input-field col s12 m6&quot;&gt;
				&lt;label for=&quot;nombre&quot;&gt;Nombre:&lt;/label&gt;
				&lt;input type=&quot;text&quot; ng-model=&quot;data.nombre&quot; name=&quot;nombre&quot; required pattern=&quot;[ñáéíóúA-Za-z ]+&quot;&gt;
		  	&lt;div ng-messages=&quot;registro.nombre.$error&quot; ng-messages-include=&quot;errores.html&quot; ng-hide=&quot;registro.nombre.$pristine&quot;&gt;&lt;/div&gt;
			&lt;/section&gt;
	...
[/code]

Tenemos mucho que explicar respecto a este código...
<ul>
	<li>En la línea 16 se resalta el hecho de que el módulo <code>ngMessages</code> se inyecta como dependencia de nuestra aplicación.</li>
	<li style="text-align:justify;">En la línea 22 se resalta el atributo <code>novalidate</code>, el cual deshabilita la validación HTML nativa que realiza el navegador, así como los mensajes predeterminados y el método <code>checkValidity()</code> visto es posts anteriores.</li>
	<li style="text-align:justify;">En la línea 26, se resalta lo siguiente:
<ul>
	<li style="text-align:justify;">El valor de <code>ng-model</code> es elegido a discreción, sin embargo, Angular.js realiza la validación del campo usando el valor del atributo <code>name</code>.</li>
	<li style="text-align:justify;">Si el atributo <code>name</code> no existe, Angular.js usa el valor de <code>ng-model</code>, sin embargo, esto se debería evitar si está presente el atributo <code>novalidate</code> en el formulario.</li>
	<li style="text-align:justify;">Cada validación incluída es un atributo asignado al objeto global <code>$error</code>, en la forma: <code>&lt;nombre-formulario&gt;.&lt;nombre-campo&gt;.$error.&lt;validación&gt;</code></li>
</ul>
</li>
	<li style="text-align:justify;">En la línea 27, se resalta lo siguiente:
<ul>
	<li style="text-align:justify;">La directiva <code>ng-messages</code> agrupa todos los mensajes de error a ser mostrados cuando la validación no se cumple, por eso, debe observar el comportamiento de <code>$error</code>.</li>
	<li style="text-align:justify;">La directiva <code>ng-messages-include</code> indica un template donde se pueden agrupar todos los mensajes de error a ser llamados durante la interacción. Para ello, es importante evitar abrir el archivo directamente en el navegador. Aquí la directiva <code>ng-message</code> se aplica un mensaje para una validación en específico:

[code lang="html" collapse="true" title="Archivo: errores.html"]
&lt;div ng-message=&quot;required&quot; class=&quot;red darken-2 center-align white-text&quot;&gt;Este campo es requerido!&lt;/div&gt;
&lt;div ng-message=&quot;pattern&quot; class=&quot;red darken-2 center-align white-text&quot;&gt;No cumple con el patrón solicitado&lt;/div&gt;
[/code]

</li>
	<li style="text-align:justify;">Para asegurar que alguno de los mensajes no se muestren cuando no exista interacción en el campo, se usa la directiva <code>ng-hide</code>, observando el valor del objeto <code>$pristine</code> en el mismo.</li>
</ul>
</li>
</ul>
[caption id="attachment_551" align="aligncenter" width="483"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_invalid.png"><img class=" wp-image-551" src="https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_invalid.png?w=150" alt="Las validaciones haciendo lo suyo..." width="483" height="313" /></a> <strong>Las validaciones haciendo lo suyo...</strong>[/caption]
<p style="text-align:justify;">Como valor agregado, el formulario no habilita el envío de los datos (botón submit) hasta tanto no se hayan validado todos los campos del formulario</p>


[caption id="attachment_552" align="aligncenter" width="481"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_valid.png"><img class=" wp-image-552" src="https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_valid.png?w=150" alt="...y aquí cuando todo va bien" width="481" height="269" /></a> <strong>...y aquí cuando todo va bien</strong>[/caption]
<p style="text-align:justify;">Hay mucho por hacer con este formulario, y las validaciones de Angular.js. En algunos casos puede resultar más práctico usar las directivas de Angular.js (como <code>ng-required</code> y <code>ng-pattern</code>) encapsulando su lógica dentro de un controlador, y cosas por el estilo.</p>
<p style="text-align:justify;">Si deseas profundizar en la validación de campos de formulario con ng-messages, puedes empezar con <a href="http://www.yearofmoo.com/2014/05/how-to-use-ngmessages-in-angularjs.html" target="_blank">este</a> artículo. Cualquier método es válido... ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>549</wp:post_id>
		<wp:post_date>2015-06-08 10:01:09</wp:post_date>
		<wp:post_date_gmt>2015-06-08 14:31:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>validando-campos-de-formulario-con-angular-js-parte-2-la-practica</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="material-design"><![CDATA[Material Design]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9a8fbd1d6aa94cad73e6606e25820822</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11461011575]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LIBRERÍA ANGULAR. PARTE 3,5. SIRVIENDO</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/</link>
		<pubDate>Tue, 09 Jun 2015 14:07:06 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=577</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="parte 3,5. sirviendo"&gt;
<p style="text-align:justify;">Entre el 3 y el 4, y antes de ponerme a escribir el siguiente post del tutorial, consideré importante abordar una parte importante (y tal vez más natural para el desarrollador) de Angular.js, y para eso es este "post intermedio" ( :P ). Se trata de los <em>servicios</em> en Angular.</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">Sirviendo</h2>
<p style="text-align:justify;">Hay muchos conceptos de arquitectura de sistemas que involucra la implantación de un "servicio", visto desde el enfoque tradicional. En patrones de diseño, el modelo <em>closure </em>de Javascript provee una forma adecuada para conceptualizar un servicio, el cual (en Javascript, hablando del <em>closure</em>) no es más que un objeto global que tiene un comportamiento o influencia sobre cierta area del sistema en particular, pero que convive separado del resto del sistema.</p>


[caption id="attachment_580" align="aligncenter" width="412"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/javawebservices.jpg"><img class=" wp-image-580" src="https://jotaeseymas.files.wordpress.com/2015/06/javawebservices.jpg?w=150" alt="&quot;A grosso modo&quot; lo que son servicios web" width="412" height="247" /></a> <strong>"A grosso modo" lo que son servicios web</strong>[/caption]
<p style="text-align:justify;">Dicho esto, Angular.js tiene su forma particular de crear servicios bajo el mismo principio. En mi caso, diseñé un servicio que provee métodos de acceso a la interfaz de <a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API" target="_blank">IndexedDB</a> en el navegador, todo eso con el propósito de tener un componente CRUD de acceso a datos ¡a lo Javascript! :D</p>


[code lang="javascript" collapse="true" title="Archivo: external/service.js" highlight="3, 6, 9, 20, 30, 33, 35, 37, 38"]
var libreria = angular.module('libreria-angular'); //Se instancia de manera global

libreria.service('$crud', ['$q', function($q) {

	// Instancia de Dexie
	var _db = new Dexie('libreria-angular');

	// Estructura prototipo del objeto Libro
	var _Libro = function(o){
		this.titulo = o.titulo;
		this.autor = o.autor;
		this.anio = o.anio;
		this.categoria = o.categoria;
		this.precio = o.precio;
		this.inventario = o.inventario;
		this.existente = o.existente;
	};

	// TODO: Configuración genérica del esquema con $provide
	_db.version(1)
		.stores({
			listaLibros: '++id, titulo, autor, anio, categoria, precio, inventario, existente'
		});

	//Abrir conexión con BD ~ Cerrar conexión con BD
	var _abrir = function(){ _db.open(); };
	var _cerrar = function(){ _db.close(); };

	// Instancia del API Promises Q+ de Angular
	var _q = $q.defer();

	this.agregar = function(data){
		_abrir();
		_db.listaLibros.put(new _Libro(data)).then(function(data){
			_q.resolve(data); // Número de objetos insertados en la BD
		});
		_cerrar();
		return _q.promise;
	};
	...
}]);
[/code]

<p style="text-align:justify;">Vale decir que el resto del código fuente del servicio (y las demás actualizaciones :) ) está en mi <a href="https://github.com/ChinuxParibus/libreria-angular/blob/master/app/service.js" target="_blank">repo</a>. Ahora bien, hay mucho que resaltar:</p>

<ul>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Línea 3</span>: Tal y como definimos una <em>factory </em>en el <a href="https://jotaeseymas.wordpress.com/2015/05/13/libreria-angular-parte-3-fabricando/" target="_blank">post</a> anterior de este tutorial, usamos la palabra reservada <code>service</code> en este caso, luego el nombre del servicio, inyectando como dependencia el objeto global <code>$q</code> (del cual voy a hablar más adelante).</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Línea 6</span>: Uso <a href="http://www.dexie.org/" target="_blank">Dexie.js</a> en su versión minificada como componente de acceso a IndexedDB. Acá se define la instancia de la base de datos a ser creada, pueden ver su <a href="https://github.com/dfahlander/Dexie.js/wiki/API%20Reference" target="_blank">documentación</a> para más información.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Línea 9</span>: No hay mucho que decir, salvo que es el patrón de diseño que nos sirve de prototipo para tener un acceso uniforme de los datos ingresados en la Base de Datos, en comparación con la estructura presentada en la <em>factory</em> creada.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Linea 20</span>: Se define el esquema de la base de datos. En IndexedDB, cada columna de una tabla relacional SQL es vista como "índice" de un mismo esquema. Queda pendiente el tema de realizar configuraciones de servicios con el objeto global <code>$provide</code> de Angular.js.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Línea 30</span>: El objeto global <code>$q</code> y su método <code>$q.defer()</code> forman parte de la API Promises propia de Angular.js. En este <a href="https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/" target="_blank">post</a> hablaba sobre Promises en Javascript, pero no dije que fuera la única forma de implementarlas (jejeje, <a href="http://media-cache-ec0.pinimg.com/736x/4f/59/bd/4f59bd459c6decc713992bf16eb37d25.jpg" target="_blank"><em>zorry</em></a> :D ).

La <a href="http://documentup.com/kriskowal/q/" target="_blank">API Promises Q+</a> es un enfoque distinto del visto en el post mencionado anteriormente. Fue creado por <a href="https://github.com/kriskowal" target="_blank">Kris Kowal</a>, uno de los colaboradores de Angular.js. Este enfoque propone un manejo asíncrono y además paralelo de la resolución de Promises.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Líneas 33 y 37</span>: Ningún misterio: abren y cierran conexión con la Base de Datos. En IndexedDB es buena práctica no dejar conexiones abiertas luego de realizar transacciones.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;"> Línea 35</span>: El método <code>agregar()</code> y todos los métodos del servicio <code>$crud</code>, tienen la misma aproximación asíncrona de resolución de Promises. Esto es así por la aproximación que utiliza la libreria Dexie.js para hacer transacciones a IndexedDB retornando Promises a ser resueltas. Esto es, luego de realizar la transacción, se hallan los datos que quedaron "por resolver" (método <code>$q.defer()</code>)  en el envio de Promises.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Línea 38</span>: Se retorna el Promise a ser manejado más adelante con la finalidad de hacerlo "genérico".</li>
</ul>
<p style="text-align:justify;">Todos los métodos del servicio <code>$crud</code> tienen este enfoque de resolución de Promises, lo cual requiere que, en donde vaya a ser utilizado, sea resuelto de la forma indicada en este <a href="https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/" target="_blank">post</a>, lo cual (y no todo es color de rosa) representa una complejidad extra en nuestro código.</p>

<h2 style="text-align:justify;">¿Fabricando o Sirviendo?</h2>
<p style="text-align:justify;">Mucho se ha dicho (y se ha escrito) sobre el uso de services o factories en Angular.js, sin embargo es importante resaltar que: ¡SON SIMILARES!, pues en realidad ambas aproximaciones representan un <em>closure</em>, con la ÚNICA diferencia observable que en un <em>factory </em>se retorna un objeto, mientras que en un <em>service</em> no.</p>
<p style="text-align:justify;">La decisión de usar uno u otro, debería ser definido por una cuestión propia de la arquitectura que estés diseñando, pero en cualquier caso, es bueno saber que cuentas con componentes variados que puedes utilizar en cualquier momento y para funcionalidades específicas dentro de tu aplicación. Aunque no es fijo ni estándar, se estila el uso un factory para compartir datos entre controladores, mientras que un service trabaja como interfaz de otras secciones de la aplicación.</p>
<p style="text-align:justify;">Ahora a sumar +0,5 al tutorial. ¡Hasta el próximo post! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>577</wp:post_id>
		<wp:post_date>2015-06-09 09:37:06</wp:post_date>
		<wp:post_date_gmt>2015-06-09 14:07:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-35-sirviendo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_67377ee285faf4bd7ec48b64424a53b7</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11501293538]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[LIBRERIA ANGULAR. PARTE 4. VALIDANDO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.187</wp:comment_author_IP>
			<wp:comment_date>2015-08-27 15:06:48</wp:comment_date>
			<wp:comment_date_gmt>2015-08-27 19:36:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] terminar de escribir este post, y luego de muchísimos días desde que escribí el último post sobre la Librería Angular, me echo una escapada para finalmente publicarlo [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440704247]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440704248.491365909576416015625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1440704209.02701091766357421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>REESCRIBIENDO CONTROLADORES EN ANGULAR.JS</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/12/reescribiendo-controladores-en-angular-js/</link>
		<pubDate>Fri, 12 Jun 2015 16:32:07 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=589</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="reescribiendo controladores en angular.js"&gt;
<p style="text-align:justify;"><em>"Entre gustos y colores no se han escrito autores"</em>, dicen <strong><span style="color:#7cbbbb;">#porai</span></strong>. Eso es cierto hasta que decides por un gusto en particular. En este caso, hablo específicamente de la manera de escribir código (Javascript, por supuesto XD ).</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">La librería <a href="http://davej.github.io/angular-classy/" target="_blank">Angular-Classy</a>, propone un estilo de escribir controladores en Angular.js un tanto más estructurado y, tal vez, un tanto más entendible para una persona acostumbrada al orden y a una estructura ordenada (no quiero decir que yo no lo sea, sólo que prefiero las cosas <em>simples </em>a las cosas<em> ordenadas</em>).</p>
<p style="text-align:justify;">Nada milagroso ni holístico, incluímos la librería (después de Angular.js, claro) y la "inyectamos" como dependencia en la aplicación. Bueno, ya que estamos en ese plan, y como para echarle un vistazo a la librería (aparte de quitarme un poco el prejuicio :twisted: ), vamos a "reescribir" los controladores que llevamos hasta ahora en mi <a href="https://jotaeseymas.wordpress.com/2015/03/25/libreria-angular-parte-1-controlando-y-dirigiendo/" target="_blank">tutorial</a>:</p>


[code lang="javascript" collapse="true" title="Archivo: app/controllers-classy.js"]
var libreria = angular.module('LibreriaApp', ['ngRoute', 'classy']);

libreria.classy.controller({
	name: &quot;TemplateCtrl&quot;,

	inject: ['$scope'],

	data: {
		templates: [
			{url : 'templates/menu_superior.html'},
			{url : 'templates/nuevo_libro.html'},
			{url : 'templates/nueva_categoria.html'},
			{url : 'templates/comprar.html'}
		]
	}
});

libreria.classy.controller({
	name: &quot;CategoriasCtrl&quot;,

	inject: ['$scope', 'categorias'],

	data: {
		categorias: 'categorias.listaCategorias',
		S_categorias: 'categorias'
	},

	methods: {
		nombrarCategoria: function(id){
			return this.$.categorias[id-1].nombre
		},

		addCategoria: function(nombre){
			this.S_categorias.addCategoria(nombre);
		}
	}
});

libreria.classy.controller({
	name: &quot;LibrosCtrl&quot;,

	inject: ['$scope', 'libreria', '$routeParams'],

	data: {
		listaLibros: 'libreria.listaLibros'
	},

	methods: {
		filtrarLibros: function(){
			return this.libreria.filtrarLibros(parseInt(this.$routeParams.categoria));
		}
	}
});
[/code]

<p style="text-align:justify;">Respecto a como estaba antes:</p>


[code lang="javascript" collapse="true" title="Archivo: app/controllers.js"]
//Módulo principal de la aplicación, con Inyección de Dependencias
var libreria = angular.module('LibreriaApp', ['ngRoute']);

//Controller para administrar los templates
libreria.controller('TemplateCtrl', ['$scope', function($scope) {
	var rootDir = 'templates/';
	$scope.templates = [
		{url : rootDir+'menu_superior.html'},
		{url : rootDir+'nuevo_libro.html'},
		{url : rootDir+'nueva_categoria.html'},
		{url : rootDir+'comprar.html'}
	];
}]);

//Controller para administrar las categorías
libreria.controller('CategoriasCtrl', ['$scope', 'categorias', function($scope, categorias) {
	$scope.categorias = categorias.listaCategorias;

	$scope.nombrarCategoria = function(id){
		return $scope.categorias[id-1].nombre;
	};

	$scope.addCategoria = function(nombre){
		categorias.addCategoria(nombre);
	}

}]);

//Controller para administrar los libros
libreria.controller('LibrosCtrl', ['$scope', 'libreria', '$routeParams', function($scope, libreria, $routeParams) {
	$scope.listaLibros = libreria.listaLibros;

	$scope.filtrarLibros = function(){
		return libreria.filtrarLibros(parseInt($routeParams.categoria));
	};

}]);
[/code]

<p style="text-align:justify;">¿53 líneas de Angular-Classy versus 37 líneas de Angular simple? Mmm, no me parece... o_O</p>
<p style="text-align:justify;">Aunque ciertamente se ve un poco más estructurado, el coste son más líneas de código, que añaden un poco más de "complejidad" a la aplicación. La ventaja en este caso es tener nuestro código fuente con un poco más de claridad. En cualquier caso, pueden ver la documentación de la librería para más información, y mi <a href="https://github.com/ChinuxParibus/libreria-angular" target="_blank">repo</a> para ver el código fuente.</p>
<p style="text-align:justify;">Pero, y debo insistir: "<em>entre gustos y colores, no se han escrito autores"</em> ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>589</wp:post_id>
		<wp:post_date>2015-06-12 12:02:07</wp:post_date>
		<wp:post_date_gmt>2015-06-12 16:32:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reescribiendo-controladores-en-angular-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207193748106733";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11604062907]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FALSIFICANDO DATOS PARA MOCKING DE DOCUMENTOS JSON</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/12/falsificando-datos-para-mocking-de-documentos-json/</link>
		<pubDate>Sat, 13 Jun 2015 03:32:41 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=602</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="falsificando datos para mocking de documentos json"&gt;
<p style="text-align:justify;">El <a href="https://en.wikipedia.org/wiki/Mock_object" target="_blank">mocking</a> es un término muy extendido en la programación orientada a objetos. Consiste en la falsificación de un objeto con el propósito de orientar el desarrollo a pruebas y/o a prototipos rápidos. Esto ciertamente tiene sus ventajas si estamos utilizando <a href="https://en.wikipedia.org/wiki/Test-driven_development" target="_blank">TDD</a>.</p>
<p style="text-align:justify;"><!--more--></p>


[caption id="attachment_609" align="aligncenter" width="192"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png"><img class=" wp-image-609" src="https://jotaeseymas.files.wordpress.com/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png?w=110" alt="Muahahaha..." width="192" height="261" /></a> <strong>Muahahaha...</strong>[/caption]
<p style="text-align:justify;"><a href="https://github.com/marak/faker.js" target="_blank">Faker.js</a> es una librería que sirve a ese propósito. Genera datos aleatorios como nombres completos, <em>usernames</em>, y correos electrónicos. Estas capacidades, en conjunto con un documento <a href="http://json.org" target="_blank">JSON</a>, nos permite una fuente muy rápida y confiable de datos para probar APIs <a href="https://en.wikipedia.org/wiki/Representational_State_Transfer" target="_blank">RESTful</a>, servidores JSON y lógica de acceso a datos en aplicaciones que usen librerías como <a href="http://expressjs.com/" target="_blank">Express.js</a> o <a href="https://angularjs.org" target="_blank">Angular.js</a>. Veamos algunos ejemplos:</p>


[code lang="javascript" title="Documento JSON" collapse="true"]
{
	id: faker.random.uuid(),
	username: faker.internet.userName(),
	password: faker.internet.password(),
	name: faker.name.findName(),
	address: faker.address.streetAddress(),
	phone: faker.phone.phoneNumber()
}
[/code]

<p style="text-align:justify;">Pueden ver en su documentación oficial todos los métodos que poseen con solo incluir la librería. Acá el resultado, tomando en cuenta que será diferente para ustedes cada vez que ejecuten o recarguen la página:</p>


[caption id="attachment_606" align="aligncenter" width="489"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/demo_faker.png"><img class=" wp-image-606" src="https://jotaeseymas.files.wordpress.com/2015/06/demo_faker.png?w=150" alt="Con un poco de magia HTML XD" width="489" height="202" /></a> <strong>Con un poco de "magia" HTML XD</strong>[/caption]
<p style="text-align:justify;"><strong>Promesa: </strong>Escribir varios posts orientados al mocking de documentos JSON. ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>602</wp:post_id>
		<wp:post_date>2015-06-12 23:02:41</wp:post_date>
		<wp:post_date_gmt>2015-06-13 03:32:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>falsificando-datos-para-mocking-de-documentos-json</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6b61025b8fb07b58cfd8674f20ba2dca</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207199386047678";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11620470157]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: JSON-SERVER | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/29/typico-de-json-server/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.80.147</wp:comment_author_IP>
			<wp:comment_date>2015-06-29 16:35:55</wp:comment_date>
			<wp:comment_date_gmt>2015-06-29 21:05:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] a eso, vamos a usar faker, una librería que usamos en un post anterior. Ésta la vamos a instalar también por la misma via, solo que esta vez [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1435611955.734057903289794921875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435611985]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435611987.0583379268646240234375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[USO DE TEMPLATES HANDLEBARS CON ZEPTO. MITAD I. SINTAXIS, ITERACIONES Y CONDICIONALES | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.189</wp:comment_author_IP>
			<wp:comment_date>2015-08-29 20:58:24</wp:comment_date>
			<wp:comment_date_gmt>2015-08-30 01:28:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] usaré Faker.js, una librería que no necesita mucha presentación puesto que hablé de ella en un post anterior XD . ¡Empecémos [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440898145]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440898146.51943206787109375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1440898105.3443009853363037109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>¿QUE LIBRERIAS JAVASCRIPT DEBO USAR PARA MI PROYECTO?</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/16/que-librerias-javascript-debo-usar-para-mi-proyecto/</link>
		<pubDate>Tue, 16 Jun 2015 13:20:08 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=619</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="que librerias javascript debo usar para mi proyecto"&gt;

La respuesta es: depende, ¿de que depende? pues...

http://www.youtube.com/watch?v=GtujUCURgtM

Ehm, no... Jejeje...

<!--more-->
<p style="text-align:justify;">Existen páginas que pueden responder mejor esta pregunta, incluso con una referencia concisa que permite identificar rápidamente lo que necesito para mi proyecto. Hay muchas más que éstas, pero me han servido mucho para buscar rápidamente.</p>

<h2 style="text-align:justify;">JAVASCRIPTING.COM</h2>
<p style="text-align:justify;"><a href="https://www.javascripting.com/" target="_blank">Javascripting.com</a> tiene un completísimo abanico de librerías clasificadas por categorías que facilitan la búsqueda de una en particular desde animaciones con Sprites y CSS3 hasta como poner huevos de pascua en nuestra página con <a href="https://github.com/mikeflynn/egg.js" target="_blank">Egg.js</a> (librería que por cierto, me parece genial XD ).</p>

<h2 style="text-align:justify;">MICRO.JS</h2>
<p style="text-align:justify;"><a href="http://microjs.com/#" target="_blank">Micro.js</a> es más modesta. Pretende, como su nombre lo dice, presentar un catálogo nada despreciable de librerías Javascript (¡incluída la misma página entera! :mrgreen: ), todas ellas minimizadas hasta menos de 5KB. Cada una de estas librerías tiene una utilidad puntual, pudiendo elegir entre varias librerías "mágicas" que realizan su labor realmente bien.</p>
<p style="text-align:justify;">Insisto, ninguna tecnología es la <a href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panacea</a> que va a resolver todos los problemas. En investigar y probar está la solución ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>619</wp:post_id>
		<wp:post_date>2015-06-16 08:50:08</wp:post_date>
		<wp:post_date_gmt>2015-06-16 13:20:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>que-librerias-javascript-debo-usar-para-mi-proyecto</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207224724801131";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11726356658]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TYPICO DE: JSON</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/16/typico-de-json/</link>
		<pubDate>Tue, 16 Jun 2015 16:15:36 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=623</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="typico de: json"&gt;

http://www.youtube.com/watch?v=PT3wNIs8C_U
<p style="text-align:justify;">Ehm, jejejeje ^^' Pensaba poner una imagen, pero me gustó la letra y la música...</p>
<p style="text-align:justify;">Pero no, JSON no es ese, bueno, no es ese del que voy a hablar en este post...</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">¿Qué es JSON entonces?</h2>
<p style="text-align:justify;"><a href="http://json.org/" target="_blank">JSON</a> es el acrónimo para JavaScript Object Notation, o en español: Notación de Objeto Javascript. Básicamente es un estándar propuesto y consolidado por la <a href="https://es.wikipedia.org/wiki/Ecma_International" target="_blank">ECMA</a> el cual contempla el intercambio de información mediante un protocolo ligero, sencillo, fácil de entender por humanos (y tal vez algunos animales :mrgreen: ) y fácil de <a href="http://www.alegsa.com.ar/Dic/parseo.php" target="_blank">parsear</a> por máquinas (nótese que dije <em>máquinas</em> y no <em>computadores</em>).</p>
<p style="text-align:justify;">De acuerdo con su página oficial:</p>

<blockquote>
<p style="text-align:justify;"><span id="result_box" class="" lang="es"><span class="alt-edited">JSON es un formato de texto que es completamente independiente del lenguaje, pero utiliza las convenciones que son familiares para los programadores en C, incluyendo C, C ++, C #, Java, JavaScript, Perl, Python, y muchos otros. Estas propiedades hacen de JSON un lenguaje ideal para el intercambio de datos.<em> --Traducido de json.org</em>
</span></span></p>
</blockquote>
<p style="text-align:justify;">El estándar JSON está construido sobre dos estructuras de datos:</p>

<ol>
	<li style="text-align:justify;">Una colección de pares clave-valor, que en otros lenguajes representa un <em>objeto</em>, un <em>diccionario</em> o una <em>tabla hash</em>.</li>
	<li style="text-align:justify;">Una lista de valores, que en otros lenguajes representa un <em>arreglo</em>, una <em>lista</em> o un <em>vector</em>.</li>
</ol>
[caption id="attachment_627" align="aligncenter" width="471"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/object.gif"><img class=" wp-image-627" src="https://jotaeseymas.files.wordpress.com/2015/06/object.gif?w=150" alt="Definición genérica de JSON" width="471" height="88" /></a> <strong>Definición genérica de JSON</strong>[/caption]
<p style="text-align:justify;">Cada valor de cada clave puede representarse por alguno de los tipos de JSON: <em>string</em>, <em>array</em>, <em>number</em>, <em>true</em>, <em>false</em>, <em>null</em>, <em>object</em> o <em>array</em>.</p>
<p style="text-align:justify;">Inicialmente, el acrónimo no se refiere específicamente a Javascript, puesto que ese es el nombre "comercial" del <a href="https://es.wikipedia.org/wiki/ECMAScript" target="_blank">ECMAScript</a> implementado por Netscape en sus tiempos, sino que estaba orientado a ser un estándar de comunicación genérico y/o una forma de representar los datos, ya que:</p>

<ol>
	<li style="text-align:justify;">Los tipos de datos son los mismos primitivos de [casi] todos los lenguajes de programación, y</li>
	<li style="text-align:justify;">los conceptos de Objetos y Arreglos existen en la mayoría de los lenguajes de programación.</li>
</ol>

<hr />
<p style="text-align:justify;"><span style="text-decoration:underline;"><strong>Intención:</strong></span> El hecho de intentar definir el estándar JSON brevemente en este post se debe a que voy a utilizar este marco de referencia como inicio de los posts que vienen respecto a un conjunto de repositorios que encontré en el <a href="https://github.com/typicode" target="_blank">Gato-Pulpo</a>, basados en facilitar el desarrollo de documentos JSON, los cuales son:</p>

<ul>
	<li style="text-align:justify;"><a href="https://github.com/typicode/lowdb" target="_blank">lowdb</a>.</li>
	<li style="text-align:justify;"><a href="https://github.com/typicode/json-server" target="_blank">json-server</a>.</li>
</ul>
Se los <a href="https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/" target="_blank">dije</a>... *risa malvada* ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>623</wp:post_id>
		<wp:post_date>2015-06-16 11:45:36</wp:post_date>
		<wp:post_date_gmt>2015-06-16 16:15:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>typico-de-json</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207227548471721";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11731191256]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[ACERCA DE: MONGODB. PARTE 0. MONGODB 101 | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/08/23/acerca-de-mongodb-parte-0-101/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.204</wp:comment_author_IP>
			<wp:comment_date>2015-08-23 19:25:10</wp:comment_date>
			<wp:comment_date_gmt>2015-08-23 23:55:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] típicos de JSON, por lo que no tenemos que reinventar la rueda :roll: , es decir, si conoces el estándar JSON, sabes modelar un documento en [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440376026]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440376026.8261420726776123046875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1440374111.014316082000732421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>NODEAMESTE...</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/</link>
		<pubDate>Tue, 16 Jun 2015 20:31:40 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=632</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="nodeameste"&gt;

Me disculpo de antemano si el título les parece ofensivo... :mrgreen: Nada personal...

[caption id="attachment_633" align="aligncenter" width="225"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/cvyvi9wm_400x400.png"><img class=" wp-image-633" src="https://jotaeseymas.files.wordpress.com/2015/06/cvyvi9wm_400x400.png?w=150" alt="XD" width="225" height="225" /></a> XD[/caption]

<!--more-->
<h2 style="text-align:justify;">Un nuevo chico se muda al vecindario: Node.js</h2>
<p style="text-align:justify;">Mucho se ha hablado sobre <a href="https://nodejs.org/" target="_blank">Node.js</a> en muchos lugares en la web. Se han realizado aplicaciones, migraciones, servidores, cursos online y offline, sistemas de despliegue en la nube, integraciones con otros lenguajes de programación como Ruby y Python, y pare usted de contar. Redundar en esto sería llover sobre mojado...</p>
<p style="text-align:justify;">Lo que sucede, es que a pesar de todos los posts de este blog que hacen referencia a su página oficial, no he profundizado demasiado (en parte por temor, en parte por desconocimiento de la "librería") en este tema.</p>

<h2 style="text-align:justify;">Pero, ¿qué es Node.js?</h2>
<p style="text-align:justify;">Node.js está basado en el motor <a href="https://code.google.com/p/v8/" target="_blank">V8</a> (no de <em>ocho cilindros</em>, precisamente :P ) que usa el navegador Google Chrome. A partir de la liberación del código fuente, <a href="https://www.linkedin.com/in/ryandahl" target="_blank">Ryan Dahl</a>, desarrollador de la empresa <a href="https://www.joyent.com/" target="_blank">Joyent</a>, en el 2009, ha creado un entorno de desarrollo Javascript (como una especie de máquina virtual) que corre sobre cualquier plataforma. En esencia, es como si hubiera una consola de navegador, pero del lado del servidor. Esto derribó el paradigma de que Javascript es un lenguaje limitado meramente al lado del cliente.</p>

<h2 style="text-align:justify;">¿Para que sirve Node.js?</h2>
Para muchas cosas, en principio:
<ul>
	<li>... para implementar servidores HTTP <strong>realmente</strong> rápidos (¡hasta 1000% más que Apache!).</li>
	<li>... para desarrollo de máquinas virtuales en la nube.</li>
	<li>... para diseñar <a href="https://es.wikipedia.org/wiki/Middleware" target="_blank"><em>middlewares</em></a> que conecten servicios web.</li>
	<li>... para arquitecturas desacopladas (<em><a href="https://en.wikipedia.org/wiki/Loose_coupling" target="_blank">loose coupling</a></em>).</li>
	<li>... para integrar componentes web de diferentes lenguajes de programación.</li>
	<li>... para automatización de tareas de desarrollo web (<a href="https://en.wikipedia.org/wiki/Workflow" target="_blank">workflows</a>).</li>
	<li>... para streaming de acceso a archivos (Javascript nativamente no posee esta función).</li>
	<li>... y un largo etcétera!</li>
</ul>
<h2>¿Dónde lo descargo?</h2>
<p style="text-align:justify;">Desde su página oficial está el instalador (para Mocosoft Guindous o manzanitaOS) o el código fuente para compilar en GNU/Linux. Recomiendo personalmente descargar el código fuente y compilarlo aunque en Guindous, no hay mucho que hacer... :twisted:</p>
<p style="text-align:justify;">Una vez instalado (y luego de varios cafés), podemos desarrollar un servidor HTTP usando Javascript trocho y mocho nada más terminar:</p>


[code lang="javascript" title="Ejemplo de servidor HTTP" collapse="true"]
var http = require('http');
http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello World\n');
}).listen(1337, '127.0.0.1');
console.log('Server running at http://127.0.0.1:1337/');
[/code]

<p style="text-align:justify;">Guardamos bajo el nombre <code>app.js</code>, y en consola (<code>bash</code> en GNU/Linux, <code>cmd</code> en Guindous) escribimos:</p>


[code lang="bash"]$ node app.js[/code]

<p style="text-align:justify;">Luego vamos a un navegador y ¡voilá! Mágicamente tenemos un servidor HTTP con una respuesta de texto. Por ahora no voy a profundizar mucho en la sintaxis, que es un post inicial, ¡caramba!... :D</p>
<p style="text-align:justify;">Todo esto, utilizando mecanismos que existen en Javascript tales como: manejo de eventos, simulación de procesos multihilo, orientación a objetos, comunicación asíncrona, prototipado, etcétera... Es mucho más lo que se podría decir de este entorno de desarrollo, pero es mejor dejarle a ustedes esa tarea. Lo mío es investigar y programar ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>632</wp:post_id>
		<wp:post_date>2015-06-16 16:01:40</wp:post_date>
		<wp:post_date_gmt>2015-06-16 20:31:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nodeameste</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207229167712201";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11738407187]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: LOWDB | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/22/typico-de-lowdb-2/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.13</wp:comment_author_IP>
			<wp:comment_date>2015-06-22 11:10:23</wp:comment_date>
			<wp:comment_date_gmt>2015-06-22 15:40:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] NODEAMESTE&#8230; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434987623.7836830615997314453125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434987652]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434987652.828175067901611328125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: JSON-SERVER | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/29/typico-de-json-server/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.80.147</wp:comment_author_IP>
			<wp:comment_date>2015-06-29 16:35:44</wp:comment_date>
			<wp:comment_date_gmt>2015-06-29 21:05:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] este post, había iniciado el camino que nos toca andar por el ecosistema Node.js. Si aún no lo has [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1435611945.00549602508544921875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435611981]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435611982.325419902801513671875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SEÑORAS Y SEÑORES. ¡EL FUTURO ESTÁ AQUÍ!</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/</link>
		<pubDate>Thu, 18 Jun 2015 14:24:45 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=637</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="señoras y señores el futuro esta aqui"&gt;
<p style="text-align:justify;">Curiosamente, el futuro estaba anunciado desde hace rato, solo que no se había hecho oficial jejeje :mrgreen: . De hecho, venía hablando de eso someramente hace tiempo por <a href="https://jotaeseymas.wordpress.com/2015/02/06/donde-investigar-javascript/" target="_blank">aquí</a> y por <a href="https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/" target="_blank">aquí</a>. Pero la verdad, la esperaba en Mayo...</p>
<p style="text-align:justify;">¿Qué esperaba? Que la versión de ECMAScript 6 (a.k.a Javascript versión 6 o "Harmony") se hiciera oficial, y hoy 18 de Junio de 2015 ¡la han hecho <strong><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm" target="_blank">oficial</a></strong>! :D Si bien la noticia no es nueva, puesto que han habido una serie de tecnologías, conferencias y librerías que vienen usando e investigando ES6 desde el año pasado como <a href="http://jsrocks.org/" target="_blank">ES6Rocks</a> y <a href="https://babeljs.io/" target="_blank">Babel Transpiler</a>.</p>

<h2 style="text-align:justify;">¿Qué sigue?</h2>
<p style="text-align:justify;">Nada, esperar los movimientos de las compañías que quieran montarse en la cresta de la ola, como Google y su framework Angular.js que en poco tiempo debe estar sacando un Release versión 2.0 con todas las nuevas funcionalidades de ES6 (Actualmente está en fase <a href="http://angular.io" target="_blank">alpha</a>), y su transpilador <a href="https://github.com/google/traceur-compiler/" target="_blank">Google Traceur</a>.</p>
...y aprender Javascript 6, ¿que más? ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>637</wp:post_id>
		<wp:post_date>2015-06-18 09:54:45</wp:post_date>
		<wp:post_date_gmt>2015-06-18 14:24:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>senoras-y-senores-el-futuro-esta-aqui</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="es6"><![CDATA[ES6]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207251117860941";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11798310897]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: LOWDB | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/22/typico-de-lowdb-2/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.13</wp:comment_author_IP>
			<wp:comment_date>2015-06-22 11:10:26</wp:comment_date>
			<wp:comment_date_gmt>2015-06-22 15:40:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] SEÑORAS Y SEÑORES. ¡EL FUTURO ESTÁ&nbsp;AQUÍ! [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434987626.967093944549560546875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434987650]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434987650.821136951446533203125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[PROGRAMACION MODULAR CON JAVASCRIPT | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/04/14/programacion-modular-con-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.207</wp:comment_author_IP>
			<wp:comment_date>2015-06-22 11:13:51</wp:comment_date>
			<wp:comment_date_gmt>2015-06-22 15:43:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] SEÑORAS Y SEÑORES. ¡EL FUTURO ESTÁ&nbsp;AQUÍ! [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434987832.1338069438934326171875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1434987850]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434987851.44153308868408203125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: JSON-SERVER | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/29/typico-de-json-server/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.80.147</wp:comment_author_IP>
			<wp:comment_date>2015-06-29 16:35:47</wp:comment_date>
			<wp:comment_date_gmt>2015-06-29 21:05:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] por el ecosistema Node.js. Si aún no lo has instalado en tu máquina, ¿qué estás esperando? ¡el futuro está aquí! Y hay cientos de tutoriales (incluido el oficial) que indican como hacerlo  ;) La idea acá es [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1435611947.9618709087371826171875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435611982]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435611983.8083970546722412109375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[ACERCA DE: SINGLE PAGE APPLICATIONS (SPA) | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/07/05/acerca-de-single-page-applications-spa/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.159</wp:comment_author_IP>
			<wp:comment_date>2015-07-05 11:35:36</wp:comment_date>
			<wp:comment_date_gmt>2015-07-05 16:05:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Desde Enero del 2015, este framework se enfocó principalmente en brindar soporte para sintaxis ES6 y ES7 de forma que no se requiriera instalar nada más. Su enfoque es tener todo lo necesario [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1436112337.1373350620269775390625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1436112366]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1436112366.787540912628173828125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TYPICO DE: LOWDB</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/22/typico-de-lowdb-2/</link>
		<pubDate>Mon, 22 Jun 2015 15:40:16 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=647</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="typico de: lowdb"&gt;
<p style="text-align:justify;">En este <a href="https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/" target="_blank">post</a>, había iniciado el camino que nos toca andar por el ecosistema <a href="https://nodejs.org/" target="_blank">Node.js</a>. Si aún no lo has instalado en tu máquina, ¿qué estás esperando? ¡<a href="https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/" target="_blank">el futuro está aquí</a>! Y hay cientos de tutoriales (incluido el oficial) que indican como hacerlo ;) La idea acá es otra: usar la librería, con lo que nos toca o para lo que nos toca...</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;"><em>lowdb,</em> una base de datos JSON estática</h2>
<p style="text-align:justify;"><a href="https://github.com/typicode/lowdb" target="_blank">lowdb</a> es una librería Javascript que permite <em>simular </em>el comportamiento de una base de datos No SQL orientada a documentos (<a href="http://json.org" target="_blank">JSON</a> es perfecto para esto), usando para su acceso, un entorno Node.js. Para ello, la librería provee dos formas de hacerlo, usando un archivo JSON y usando la memoria RAM disponible. Usamos el instalador de paquetes de Node.js para instalar la librería:</p>


[code lang="bash"]$ npm install lowdb[/code]

<p style="text-align:justify;">Se llama <em>lowdb</em> porque para manipular la "base de datos" utiliza todos los métodos disponibles en la librería <a href="https://lodash.com/docs" target="_blank">lodash</a>, de la cual hablé brevemente en este <a href="https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/" target="_blank">post</a>. La idea es simular consultas y resultados, así que prepararemos el terreno :D .</p>

<h2 style="text-align:justify;">Preparando el terreno...</h2>
<p style="text-align:justify;">Primero buscamos una fuente de información JSON. Yo usé un extracto CSV de las visitas de mi blog (¡un millón de gracias a ustedes :mrgreen: !) transformadas al formato requerido usando esta <a href="http://csvtojson.com/" target="_blank">página</a>. El documento final quedaría así:</p>


[code lang="javascript" collapse="true" title="Archivo: summary.json" gutter="false"]
{
  &quot;summary&quot;: [
    {
      &quot;pais&quot;: &quot;Venezuela&quot;,
      &quot;visitas&quot;: 17
    },
    {
      &quot;pais&quot;: &quot;Ecuador&quot;,
      &quot;visitas&quot;: 9
    },
    {
      &quot;pais&quot;: &quot;Costa Rica&quot;,
      &quot;visitas&quot;: 12
    },
    {
      &quot;pais&quot;: &quot;España&quot;,
      &quot;visitas&quot;: 32
    },
    {
      &quot;pais&quot;: &quot;El Salvador&quot;,
      &quot;visitas&quot;: 7
    },
    {
      &quot;pais&quot;: &quot;Argentina&quot;,
      &quot;visitas&quot;: 20
    },
    {
      &quot;pais&quot;: &quot;Estados Unidos&quot;,
      &quot;visitas&quot;: 6
    },
    {
      &quot;pais&quot;: &quot;Colombia&quot;,
      &quot;visitas&quot;: 45
    },
    {
      &quot;pais&quot;: &quot;Nicaragua&quot;,
      &quot;visitas&quot;: 2
    },
    {
      &quot;pais&quot;: &quot;Chile&quot;,
      &quot;visitas&quot;: 7
    },
    {
      &quot;pais&quot;: &quot;Honduras&quot;,
      &quot;visitas&quot;: 2
    },
    {
      &quot;pais&quot;: &quot;México&quot;,
      &quot;visitas&quot;: 35
    },
    {
      &quot;pais&quot;: &quot;Francia&quot;,
      &quot;visitas&quot;: 1
    },
    {
      &quot;pais&quot;: &quot;Perú&quot;,
      &quot;visitas&quot;: 43
    },
    {
      &quot;pais&quot;: &quot;Bolivia&quot;,
      &quot;visitas&quot;: 9
    },
    {
      &quot;pais&quot;: &quot;República Dominicana&quot;,
      &quot;visitas&quot;: 1
    }
  ]
}
[/code]

<p style="text-align:justify;">Luego, escribimos un pequeño script en el mismo directorio donde ejecutamos el comando de instalación de la librería y empezamos a jugar:</p>


[code lang="javascript" collapse="true" title="Archivo: app.js" highlight="2,6"]
//instancia de lowdb
var lowdb = require('lowdb'),
//Base de datos a partir de disco
    db = lowdb('summary.json'),
//nombre de la base de datos.
    data = db('summary');

console.log('*** 5 Países con mayor cantidad de visitas ***')
console.log(data.chain().sortByOrder('visitas', false).take(5).value());
console.log(); //nueva línea

console.log('*** País con menor cantidad de visitas ***')
console.log(data.chain().sortBy('visitas').first().value());
console.log();

console.log('*** Promedio de visitas ***')
console.log(data.reduce(function(suma, item){
	suma += item.visitas;
	return suma;
}, 0)/data.value().length);

[/code]

<p style="text-align:justify;">Sólo para resaltar, la línea 2 es la sintaxis de como Node.js llama a sus dependencias usando el formato <a href="https://en.wikipedia.org/wiki/Asynchronous_module_definition" target="_blank">AMD</a> de <a href="http://requirejs.org/" target="_blank">RequireJS</a>, del cual hablé en este <a href="https://jotaeseymas.wordpress.com/2015/04/14/programacion-modular-con-javascript/" target="_blank">post</a>. Mientras que en la línea 6, aunque se instancia la variable de acceso de ese modo, no tiene nada que ver con el nombre del archivo, sino con el hecho de que el primer campo del documento JSON se llama <em>summary</em>.</p>

<h2 style="text-align:justify;">Resultados</h2>
<p style="text-align:justify;">He aquí el resultado de ejecutar el comando <code>node app.js</code> en el mismo directorio:</p>


[code collapse="true" title="Resultado de consola"]
*** 5 Países con mayor cantidad de visitas ***
[ { pais: 'Colombia', visitas: 45 },
  { pais: 'Perú', visitas: 43 },
  { pais: 'México', visitas: 35 },
  { pais: 'España', visitas: 32 },
  { pais: 'Argentina', visitas: 20 } ]

*** País con menor cantidad de visitas ***
{ pais: 'Francia', visitas: 1 }

*** Promedio de visitas ***
15.5
[/code]

<p style="text-align:justify;">Con la documentación de la librería <em>lodash</em> a la mano, se vuelve bastante interesante proponer combinaciones, trabajar con documentos JSON más complejos (con datos vinculados, por ejemplo), usar documentos no uniformes o iterar sobre propiedades no anidadas *risa malvada* :twisted: .</p>
<p style="text-align:justify;">La creatividad es un rasgo <em>typico de</em> las mentes curiosas ;)</p>
<p style="text-align:justify;">&lt;/script&gt;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>647</wp:post_id>
		<wp:post_date>2015-06-22 11:10:16</wp:post_date>
		<wp:post_date_gmt>2015-06-22 15:40:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>typico-de-lowdb-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[633]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207295416928390";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11924950388]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[MANEJAR PAQUETES EN NODE.JS 101 | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/27/manejar-paquetes-en-node-js-101/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.87</wp:comment_author_IP>
			<wp:comment_date>2015-06-27 19:16:37</wp:comment_date>
			<wp:comment_date_gmt>2015-06-27 23:46:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] TYPICO DE: LOWDB [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1435448798.4337990283966064453125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435448969]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435448970.554461002349853515625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>RE-INTRODUCCION A JAVASCRIPT ¡A LO MOZILLA!</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/22/re-introduccion-a-javascript-a-lo-mozilla/</link>
		<pubDate>Mon, 22 Jun 2015 18:13:12 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=664</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="re-introducci&amp;oacute;n a javascript a lo mozilla"&gt;
<p style="text-align:justify;">La última actualización de este artículo fue el 17 de Mayo, eso indica que es importante para los muchachos de <a href="https://developer.mozilla.org/es/" target="_blank">MDN</a> no solamente comercializar su producto estrella <a href="https://www.mozilla.org/es-ES/firefox/new/" target="_blank">Mozilla Firefox</a>, sino que también se preocupa por los desarrolladores web, lo cual es una interesante forma de retroalimentación.</p>
<p style="text-align:justify;">En este <a href="https://developer.mozilla.org/es/docs/Web/JavaScript/Una_re-introducci%C3%B3n_a_JavaScript" target="_blank">artículo</a> de los chicos de MDN, dan un repaso por las características más relevantes de Javascript, con algunas píldoras de historia y otros detalles: ejemplos, resultados, aplicaciones específicas para el navegador, etcétera.</p>
<p style="text-align:justify;">Interesante lectura para los que estamos aprendiendo... permanentemente... ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>664</wp:post_id>
		<wp:post_date>2015-06-22 13:43:12</wp:post_date>
		<wp:post_date_gmt>2015-06-22 18:13:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>re-introduccion-a-javascript-a-lo-mozilla</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="mozilla-labs"><![CDATA[Mozilla Labs]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207296984927589";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11929166614]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[carloswilsonperez]]></wp:comment_author>
			<wp:comment_author_email>carloswilsonperez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://notesonjavascript.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>177.233.33.9</wp:comment_author_IP>
			<wp:comment_date>2015-06-23 18:48:53</wp:comment_date>
			<wp:comment_date_gmt>2015-06-23 23:18:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Saludos. Excelente post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>89633827</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435101533.500607967376708984375;s:5:"event";s:9:"check-ham";s:4:"user";s:17:"carloswilsonperez";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1435155757]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435155757]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435106575.851830959320068359375;s:5:"event";s:9:"check-ham";s:4:"user";s:17:"carloswilsonperez";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435155757.7938671112060546875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JAVASCRIPT. EL LENGUAJE MÁS INCOMPRENDIDO DEL MUNDO</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/22/javascript-el-lenguaje-mas-incomprendido-del-mundo/</link>
		<pubDate>Mon, 22 Jun 2015 18:24:09 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=666</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="javascript. el lenguaje mas incomprendido del mundo"&gt;
<p style="text-align:justify;">Este <a href="http://javascript.crockford.com/javascript.html" target="_blank">artículo</a> escrito por <a href="http://www.crockford.com/" target="_blank">Douglas Crockford</a> no tiene desperdicio. En el se diserta sobre el porque Javascript ha sido tan malinterpretado durante todos los años de su desarrollo desde que salió como tecnología asociada al navegador Netscape Navigator. Se que muchos conocen la historia, y si no, pues revisen el artículo. ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2015-06-22 13:54:09</wp:post_date>
		<wp:post_date_gmt>2015-06-22 18:24:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-el-lenguaje-mas-incomprendido-del-mundo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207297062849537";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11929475869]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CREAR TIPOGRAFIAS CON JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/09/06/crear-tipografias-con-javascript/</link>
		<pubDate>Sun, 06 Sep 2015 21:50:03 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=146</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="crear tipografias con javascript" &gt;
<p style="text-align:justify;"><a href="http://www.pluminjs.com/" target="_blank">Plumín.js</a> es una librería que se utiliza para crear tipografías web usando sintaxis de Javascript y glifos, ni más ni menos :D . Lo interesante de esta librería es que puede ser usada en conjunto con otras librerías interesantes: <a href="http://nodebox.github.io/opentype.js/" target="_blank">Opentype.js</a> como parser de fuentes, y <a href="http://paperjs.org" target="_blank">Paper.js</a> como manejador de glifos, para crear interacciones útiles, como por ejemplo, en un IDE de componentes de interfaz de usuario :twisted: . Ya creo que sospechan porqué publico una mini-entrada, espero que si ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date>2015-09-06 17:20:03</wp:post_date>
		<wp:post_date_gmt>2015-09-06 21:50:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>crear-tipografias-con-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_41d87cf995cee89c86d1f217a41a3e2b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[14506060653]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/640643168866709504";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MOCKING DE DATOS PARA DOCUMENTOS JSON</title>
		<link>https://jotaeseymas.wordpress.com/2015/09/02/mocking-de-datos-para-documentos-json/</link>
		<pubDate>Wed, 02 Sep 2015 15:45:54 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=604</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="mockin de datos para documentos JSON" &gt;
<p style="text-align:justify;">Si, se que está medio repetido el que continúe hablando de <a href="http://json.org/" target="_blank">JSON</a> y de como hacer mocking de datos, el tema acá es que soy nuevo y... *DRAMA* ... XD</p>
<p style="text-align:justify;">Nah :mrgreen: ,  hablando enserio, he hablado y he usado la librería <a href="https://github.com/marak/faker.js" target="_blank">Faker.js</a> en algunos <a href="https://jotaeseymas.wordpress.com/?s=faker" target="_blank">posts</a> anteriores (y la seguiré usando :D ), sin mencionar el hecho de que en el universo Javascript, existen un <a href="https://es.wiktionary.org/wiki/jurgo#Espa.C3.B1ol" target="_blank">jurgo</a> de librerías <span style="color:#7cbbbb;"><strong>#porai</strong></span> que sirven para lo mismo.</p>
<p style="text-align:justify;"><!--more--></p>
He aquí dos de ellas:
<h2>CHANCE.JS</h2>
<p style="text-align:justify;"><a href="http://chancejs.com/" target="_blank">Chance.js</a> es una librería que genera valores aleatorios mediante helpers que puedes ver en su documentación oficial. Se descarga (completa o minificada) y se incluye en la página. No hay mucho que decir de esta librería salvo mostrar algunos ejemplos:</p>


[code lang="javascript" gutter="false" title="Usando Chance.js" collapse="true"]
// Devuelve un texto
console.log(chance.paragraph());

// Devuelve un color en notacion hexa #RRGGBB
console.log(chance.color());

// Devuelve un país
console.log(chance.country({ full: true }));
[/code]

<h2>RANDEXP.JS</h2>
<p style="text-align:justify;"><a href="http://fent.github.io/randexp.js/" target="_blank">Randexp.js</a> es una librería un poco (bastante, muchísimo) más compleja que la anterior para generar valores, ya que para construirlos, se requiere utilizar expresiones regulares, lo que me recuerda la película de terror que hace algún tiempo <a href="https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-1/" target="_blank">publiqué</a> <span style="color:#7cbbbb;"><strong>#porai</strong></span>, veamos algunos "sencillos" ejemplos :twisted:</p>


[code lang="javascript" gutter="false" title="Usando RandExp.js" collapse="true"]
//Password simple
console.log(new RandExp('\w{6,30}'));

// Tiempo
console.log(new RandExp('(1[0-2]|0[1-9])(:[0-5]\d){2} (A|P)M'));

// De mi propia cosecha, un número telefónico válido en Venezuela 
console.log(new RandExp('0(2(12|3[4589]|4[0-9]|[5-8][1-9]|9[1-5])|(4(12|14|16|24|26)))-\d{7}'));
[/code]

<p style="text-align:justify;">Me faltó mencionar aparte a <a href="http://json-schema-faker.js.org/" target="_blank">JSON Schema Faker</a> basado en Faker.js, pero eso más que una librería, es una página completa basada en la librería para hacer mocking de un documento JSON, usando JSON... O_o , pero bueno, igual las opciones están, a usarlas y listo ;)</p>
&lt;/script&gt;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>604</wp:post_id>
		<wp:post_date>2015-09-02 11:15:54</wp:post_date>
		<wp:post_date_gmt>2015-09-02 15:45:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mocking-de-datos-para-documentos-json</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_419a80049cc15a9ebd55d2398b3bf922</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d18e575b2bfea6bff61b5e28dcc7d8d6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_54977b6b40cba154a1bcacc7cde3b392</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/639101973732528128";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[14358637020]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¿QUÉ M!3&#038;%@$~ ES ESO?</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/26/que-m3-es-eso/</link>
		<pubDate>Fri, 26 Jun 2015 19:04:46 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=668</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="¿qué m!3&amp;%@$~ es eso?"&gt;

[code lang="javascript" gutter="false"]
[,,,].join() // ==&gt; &quot;,,&quot;
[/code]

<p style="text-align:center;"><span style="color:#d25349;"><strong>¿DONDE C@#° ESTÁ LA OTRA COMA QUE FALTA?</strong>
</span></p>
<p style="text-align:justify;">Sucede a menudo que cosas muy <span style="color:#7cbbbb;"><strong>#WTF</strong></span> como esa y muchas otras nos suceden a los programadores muy a menudo, especialmente en un lenguaje tan "desordenado" como Javascript. En esta <a href="http://wtfjs.com/" target="_blank">página</a> se recolectan varias de esas incertidumbres con una clara explicación de porqué sucede. En el caso de arriba pues, para la notación de array solo hay dos elementos separados por una coma... No todo es lo que parece ;)</p>
<p style="text-align:justify;">&lt;/script&gt;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date>2015-06-26 14:34:46</wp:post_date>
		<wp:post_date_gmt>2015-06-26 19:04:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>que-m3-es-eso</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207332860784463";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12068088053]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[martinciscap]]></wp:comment_author>
			<wp:comment_author_email>martin.cisneros@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.137.94.31</wp:comment_author_IP>
			<wp:comment_date>2015-06-27 00:51:27</wp:comment_date>
			<wp:comment_date_gmt>2015-06-27 05:21:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["En el caso de arriba pues, para la notación de array solo hay dos elementos separados por una coma… No todo es lo que parece" eso es incorrecto, lo correcto es que cuando haces [,,,] estas insertando 3 elementos undefined, intenta hacer [1,2,3].join() el resultado sera: "1,2,3" (dos comas, pero son 3 elementos), entonces si haces [,,,] que en realidad queda como [undefined,undefined,undefined].join() veras ",,"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2171540</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435382487.6465899944305419921875;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"greenboi";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1435382487]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[12087286638]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435387427.480598926544189453125;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"greenboi";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1435404968]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435404969]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435404969.9826719760894775390625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[martinciscap]]></wp:comment_author>
			<wp:comment_author_email>martin.cisneros@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>187.137.94.31</wp:comment_author_IP>
			<wp:comment_date>2015-06-27 00:59:59</wp:comment_date>
			<wp:comment_date_gmt>2015-06-27 05:29:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cabe mencionar que por ejemplo [,,,] deberian tener un length de 4, pero como el ultimo elemento es undefined lo ignora y el length queda de 3, como prueba podemos hacer [].length y nos dara cero ya que el unico elemento seria undefined pero lo ignora y queda en 0]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>2171540</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435382999.1653499603271484375;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"greenboi";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[12087291390]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1435404983]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435387427.565248012542724609375;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"greenboi";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435404983]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435404984.7255370616912841796875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[ch1nux]]></wp:comment_author>
			<wp:comment_author_email>grilletjhony@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jotaeseymas.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.71.150.172</wp:comment_author_IP>
			<wp:comment_date>2015-06-27 08:01:00</wp:comment_date>
			<wp:comment_date_gmt>2015-06-27 12:31:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gracias por la aclaratoria martinciscap :mrgreen:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>79130303</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435408261]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435408262.4901750087738037109375;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[12088403050]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1435408264]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>MANEJAR PAQUETES EN NODE.JS 101</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/27/manejar-paquetes-en-node-js-101/</link>
		<pubDate>Sat, 27 Jun 2015 23:46:28 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=672</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="manejar paquetes en node.js 101"&gt;
<p style="text-align:justify;">En un <a href="https://jotaeseymas.wordpress.com/2015/06/22/typico-de-lowdb-2/" target="_blank">post</a> anterior había mencionado la opción <code>install</code> para instalar paquetes en Node.js, pero no sólo de instalar paquetes vive el desarrollador de apps con Node.js :mrgreen:</p>
<p style="text-align:justify;">Por supuesto que hay más opciones, he aquí algunas de ellas (porque son muchas)</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">Instalando localmente</h2>
<p style="text-align:justify;">Para ello usamos una consola (<code>bash</code> en GNU/Linux o <code>cmd</code> en Guíndous) y escribimos <code>npm install <em>paquete</em></code>, Node.js se encargará de crear una carpeta llamada <code>node_modules</code> en el directorio actual, y dentro instalará <em><code>paquete</code></em> junto con todas sus dependencias. De no encontrarlo u ocurrir un error, npm emitirá mensajes y guardará un archivo llamado <code>npm-debug.log</code> con la traza del error.</p>

<h2 style="text-align:justify;">Instalando globalmente</h2>
Para ello usamos el mismo comando usando la opción <code>-g</code>: <code>npm -g install <em>paquete</em></code>
<span style="color:#d25349;">¡Ojo, se necesita ser <code>root</code> o un user con permisos <code>sudo</code> para ejecutar el comando!</span>
<p style="text-align:justify;">Una vez ejecutado el comando, Node.js instalará <code>paquete</code> en el repositorio global de instalación (en GNU/Linux es <code>/usr/local/lib/node_modules/</code>)</p>

<h2 style="text-align:justify;">Enlazando dependencias locales, globalmente</h2>
<p style="text-align:justify;">Para esto usamos el comando <code>npm link <em>paquete</em></code>, esto permite crear un enlace simbólico del paquete de nuestra aplicación al paquete global. Esto es útil a nivel de desarrollo ya que permite realizar las pruebas de nuestra aplicación sin necesidad de descargar nada sino los paquetes del repositorio global, y también permite hacer un despliegue rápido del entorno de desarrollo.</p>
<p style="text-align:justify;">Sin embargo, esta práctica no es deseable en entornos de producción, puesto que los enlaces pueden romperse con facilidad (bastaría con cambiar de directorio, por ejemplo), dando error a inestabilidades de la aplicación.</p>

<h2 style="text-align:justify;">Ver árbol de paquetes instalados</h2>
<p style="text-align:justify;">Para esto usamos el comando <code>npm list</code> (con la opcion <code>-g</code> si queremos saber los paquetes instalados globalmente). Esto generará una lista de paquetes con todas las dependencias actualizadas en cada paquete, así como la versión de cada uno.</p>
<p style="text-align:justify;">En mi caso, y con este comando, me encontré con una dificultad inherente, y es que se ven todas las dependencias instaladas. Pero me preguntaba si podía hacer una lista de los paquetes instalados sin dependencias, porque...</p>


[caption id="attachment_673" align="aligncenter" width="377"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-27-140923.png"><img class=" wp-image-673" src="https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-27-140923.png?w=150" alt="¡1492 lineas, ay caramba!" width="377" height="221" /></a> <strong>¡1492 lineas, ay caramba! :o<br /></strong>[/caption]
<p style="text-align:justify;">Investigando un poco <span style="color:#7cbbbb;"><strong>#porai</strong></span>, me encontré con un <a href="http://ilee.co.uk/list-node-packages-wo-dependencies/" target="_blank">enlace</a> que decía que era posible (pero que no estaba incluído en la documentación oficial), usando un poco de magia vudú y el parámetro <code>--depth</code> con valor 0 para medir la profundidad de detalle del árbol de dependencias:</p>


[code lang="bash" gutter="false"]$ npm -g list --depth=0[/code]

<p style="text-align:justify;">Devuelve la lista de paquetes instalados globalmente (sin reflejar las dependencias)<code></code>, en mi caso 16 líneas nada más ¡que alivio! XD</p>
<p style="text-align:justify;">Me quedaron cositas pendientes, pero esto es un 101. <strong>NPM</strong>, o sea: !No Pidan Mucho! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>672</wp:post_id>
		<wp:post_date>2015-06-27 19:16:28</wp:post_date>
		<wp:post_date_gmt>2015-06-27 23:46:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manejar-paquetes-en-node-js-101</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[633]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207342174057289";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12102785183]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[TYPICO DE: JSON-SERVER | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/06/29/typico-de-json-server/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.80.147</wp:comment_author_IP>
			<wp:comment_date>2015-06-29 16:35:52</wp:comment_date>
			<wp:comment_date_gmt>2015-06-29 21:05:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] MANEJAR PAQUETES EN NODE.JS&nbsp;101 [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1435611952.757483959197998046875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435611984]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435611985.9407460689544677734375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Andres Villanueva]]></wp:comment_author>
			<wp:comment_author_email>andresvillanuevab@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/117570038424252253756</wp:comment_author_url>
			<wp:comment_author_IP>190.15.180.202</wp:comment_author_IP>
			<wp:comment_date>2015-06-29 16:43:24</wp:comment_date>
			<wp:comment_date_gmt>2015-06-29 21:13:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muy buena entrada, no había tenido la oportunidad de leerla. Pero no me queda bien claro para que se usa -g... Podrías explicarme un poco más.?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1435612405.3746089935302734375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_post_as</wp:meta_key>
				<wp:meta_value><![CDATA[googleplus]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_avatar</wp:meta_key>
				<wp:meta_value><![CDATA[https://lh6.googleusercontent.com/-9-WqHdvM9QM/AAAAAAAAAAI/AAAAAAAAB9I/_n3Mau_jrvw/photo.jpg?sz=50]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_foreign_user_id</wp:meta_key>
				<wp:meta_value><![CDATA[117570038424252253756]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1435612573]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435612574]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435612575.4333040714263916015625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[ch1nux]]></wp:comment_author>
			<wp:comment_author_email>grilletjhony@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jotaeseymas.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.109.233.62</wp:comment_author_IP>
			<wp:comment_date>2015-06-29 16:58:37</wp:comment_date>
			<wp:comment_date_gmt>2015-06-29 21:28:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Saludos Andrés.

<p style="text-align:justify;">La opción <code>-g</code> se usa para instalar un paquete globalmente, en la ruta <code>/usr/local/lib/node_modules</code>, esto quiere decir que tendrás dicho paquete disponible siempre que necesites desarrollar nuevas apps, o si tu conexión a internet es mala 8-). A nivel de desarrollo simplemente enlazas tus dependencias al paquete instalado y ¡voilá!</p>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>39</wp:comment_parent>
			<wp:comment_user_id>79130303</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1435613318]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1435613319.5856831073760986328125;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1435613320]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TYPICO DE: JSON-SERVER</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/29/typico-de-json-server/</link>
		<pubDate>Mon, 29 Jun 2015 21:05:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=676</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="typico de: json-server"&gt;
<p style="text-align:justify;">En este <a href="https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/" target="_blank">post</a>, había iniciado el camino que nos toca andar por el ecosistema <a href="https://nodejs.org/" target="_blank">Node.js</a>. Si aún no lo has instalado en tu máquina, ¿qué estás esperando? ¡<a href="https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/" target="_blank">el futuro está aquí</a>! Y hay cientos de tutoriales (incluido el oficial) que indican como hacerlo <span class="wp-smiley wp-emoji wp-emoji-wink" title=";)">;)</span> La idea acá es otra: usar la librería, con lo que nos toca o para lo que nos toca…</p>
<!--more-->
<h2><em>json-server, </em>servidor mocking de documentos JSON</h2>
<p style="text-align:justify;">Continuando con los posts de la gente de <a href="https://github.com/typicode" target="_blank">typicode</a>, voy a realizar un ejemplo de API <a href="https://en.wikipedia.org/wiki/Representational_State_Transfer" target="_blank">REST</a> <a href="https://en.wikipedia.org/wiki/Mock_object" target="_blank">mocking</a> para servir datos en formato JSON, para ello voy a usar la librería <a href="https://github.com/typicode/json-server" target="_blank">json-server</a>.</p>
<p style="text-align:justify;">Esta librería se debe instalar globalmente con Node.js, si no estás familiarizado con la instalación de paquetes, este <a href="https://jotaeseymas.wordpress.com/2015/06/27/manejar-paquetes-en-node-js-101/" target="_blank">post</a> puede ayudar :D.</p>


[code lang="bash" gutter="false"]
$ npm install -g json-server
[/code]

<p style="text-align:justify;">Adicionalmente a eso, vamos a usar <a href="https://github.com/marak/faker.js" target="_blank">faker</a>, una librería que usamos en un <a href="https://jotaeseymas.wordpress.com/2015/06/12/falsificando-datos-para-mocking-de-documentos-json/" target="_blank">post</a> anterior. Ésta la vamos a instalar también por la misma via, solo que esta vez localmente:</p>


[code lang="bash" gutter="false"]
$ npm install faker
[/code]

Luego un poco de "magia vudú" :P

[code lang="javascript" title="Archivo data.js" collapse="true"]
module.exports = function(){
	var faker = require('faker'),
	data = {users: []};

	for (var i = 1; i &lt;= 100; i++) {
		data.users.push({
			id: i,
			name: faker.name.findName(),
			nickname: faker.internet.userName(),
			register_date: faker.date.past(),
			email: faker.internet.email(),
			enabled: faker.random.number() ? true : false
		});
	}

	return data;
}
[/code]

<p style="text-align:justify;">Vale decir que se puede usar cualquier formato para guardar los datos, siempre en función de lo que desees probar o hacer mocking. Una vez guardado <span style="color:#d25349;">en el mismo directorio</span> en el que instalaste la librería faker.js, abres una consola y ejecutas (<span style="color:#d25349;">en el mismo directorio</span>):</p>


[code lang="bash" gutter="false"]
$ json-server data.js
[/code]

Aparecerá algo similar a esto:

[caption id="attachment_681" align="aligncenter" width="411"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-162634.png"><img class=" wp-image-681" src="https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-162634.png?w=150" alt="Bastante amigable... XD" width="411" height="156" /></a> <strong>Bastante amigable... XD</strong>[/caption]

Ups, se colaron mis marcadores jejeje ^^' ...

Si no se ve el enlace, solo tienes que ir a la URL <a href="http://localhost:3000" target="_blank">http://localhost:3000</a> y te saldrá algo muy parecido a esto:

[caption id="attachment_684" align="aligncenter" width="421"]<a href="https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-163123.png"><img class=" wp-image-684" src="https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-163123.png?w=150" alt="¡y si funciona...! :D" width="421" height="250" /></a> <strong>¡y si funciona...! :D</strong>[/caption]
<p style="text-align:justify;">Lo demás es historia, puedes usar tu API REST con consultas del tipo <code>http://localhost:3000/users</code> para todos los usuarios o <code>http://localhost:3000/users/3</code> para un usuario particular, fíjate en los ejemplos de la documentación para más ayuda y opciones de configuración.</p>
<p style="text-align:justify;">Recuerda que la creatividad es un rasgo <em>typico de</em> las mentes curiosas ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>676</wp:post_id>
		<wp:post_date>2015-06-29 16:35:32</wp:post_date>
		<wp:post_date_gmt>2015-06-29 21:05:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>typico-de-json-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[633]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/615627252760313856";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12161207532]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6021392965883166720&type=U&a=LoV8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9e159417cae40e5a67da199113e38c60</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4b2a7665f3b384fa408e9128aab6815d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_024bae09ac3def6eadc77574d0c46749</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9f2f6e0843213876ef4a424f307807ff</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_59350a64b02bb206675d0af67689f013</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cf4c05ab9530b96fcf954ec3ca354340</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JAVASCRIPT EN UNA IMAGEN...</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/03/javascript-en-una-imagen/</link>
		<pubDate>Fri, 03 Jul 2015 14:12:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=691</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="javascript en una imagen"&gt;
<p style="text-align:justify;">Sobran las palabras que decir... El proyecto es simple aunque muy bien elaborado, pues resume de manera bien didáctica la parte de programación funcional y conceptos OOP (Programación Orientada a Objetos, en inglés) de Javascript, precisamente ¡en una imagen!</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a href="https://jotaeseymas.files.wordpress.com/2015/07/js-in-one-pic.png"><img class="  wp-image-692 aligncenter" src="https://jotaeseymas.files.wordpress.com/2015/07/js-in-one-pic.png?w=42" alt="js in one pic" width="378" height="1341" /></a>La misma imagen vista como árbol interactivo puede ser vista desde <a href="http://coodict.github.io/javascript-in-one-pic/" target="_blank">este</a> enlace... ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date>2015-07-03 09:42:53</wp:post_date>
		<wp:post_date_gmt>2015-07-03 14:12:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-en-una-imagen</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_format" nicename="post-format-image"><![CDATA[Imagen]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12287415658]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207386480044911";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/616972963003285506";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6022738678483288064&type=U&a=ZHch]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ACERCA DE: SINGLE PAGE APPLICATIONS (SPA)</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/05/acerca-de-single-page-applications-spa/</link>
		<pubDate>Sun, 05 Jul 2015 16:05:04 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=694</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="acerca de: single page applications (SPA)"&gt;

http://www.youtube.com/watch?v=h4ZMeY0OKy0

Creo que las <a href="https://en.wikipedia.org/wiki/Single-page_application" target="_blank">SPA</a>, mejor explicado, creo que imposible... :mrgreen:

<!--more-->
<p style="text-align:justify;">Hay mucho que decir sobre este tipo de diseño, como por ejemplo, que tecnologías se requieren para implementar el diseño de SPA, que tiene relación directa con el concepto de <a href="http://itsnat.sourceforge.net/php/spim/spi_manifesto_es.php" target="_blank">SPI</a> (Single Page Interface) y con <a href="https://en.wikipedia.org/wiki/User_experience" target="_blank">UX</a> (User Experience), y algunas técnicas de programación o patrones de diseño que nos ayudaran a alcanzar un diseño bajo este tipo.</p>
<p style="text-align:justify;">Como se explica en el video, Javascript se ha convertido en referente para el desarrollo de SPA masivamente, lo cual no quiere decir que no se puedan desarrollar en otros lenguajes como Python o Java, pero Javascript presenta varias ventajas notables respecto a los demás lenguajes: manejo de <a href="http://json.org" target="_blank">JSON</a> nativo, no requiere plugins adicionales, sólo requiere tecnologías del lado del navegador (HTML5, CSS3 y Javascript), y también por cuestiones de mantenibilidad, <a href="https://en.wikipedia.org/wiki/End-to-end_principle" target="_blank">E2E</a> (End to End), testing, y un largo etcétera.</p>
<p style="text-align:justify;">Pese a que podemos desarrollar una SPA con Javascript trocho y mocho, he aquí algunos frameworks Javascript que implementan este concepto nativamente, ayudándonos a ahorrar un poco de tiempo (y dolores de cabeza XD )</p>

<h2 style="text-align:justify;">Angular.js</h2>
<p style="text-align:justify;">Mi querido <a href="https://angularjs.org" target="_blank">Angular.js</a> no podía faltar a la cita. Sencillamente por su forma de trabajar con los datos (en formato JSON), manipulación del DOM ¡sin jQuery! y llamadas AJAX nativamente, y eso sin mencionar que lo mantiene Google en conjunto con una comunidad muy activa de más de 40.000 desarrolladores, lo hacen uno de los frameworks más idóneos para SPA.</p>


[caption id="attachment_695" align="aligncenter" width="455"]<a href="https://jotaeseymas.files.wordpress.com/2015/07/sobre-angular-spa.png"><img class=" wp-image-695" src="https://jotaeseymas.files.wordpress.com/2015/07/sobre-angular-spa.png?w=150" alt="Conceptos como Inyección de dependencias y Two-Way Data binding son importantes para SPA" width="455" height="206" /></a> <strong>Conceptos como Inyección de dependencias y <em>Two-Way Data binding</em> son importantes para SPA</strong>[/caption]
<h2 style="text-align:justify;">Meteor</h2>
<p style="text-align:justify;">Hace tiempo que vengo escuchando sobre el framework <a href="https://www.meteor.com/" target="_blank">Meteor</a>, aunque confieso desconocerlo [casi] por completo, no le hago el feo :D. En su página principal pueden ver las características que tiene. Me llama la atención su sistema unificado de paquetes que incluye: manejo nativo de templates, hot deployment y una <a href="http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/" target="_blank">API isomórfica</a>, entre otras cosas. Nada mal...</p>


[caption id="attachment_696" align="aligncenter" width="438"]<strong><a href="https://jotaeseymas.files.wordpress.com/2015/07/sobre-meteor-spa.png"><img class=" wp-image-696" src="https://jotaeseymas.files.wordpress.com/2015/07/sobre-meteor-spa.png?w=150" alt="Cifras nada despreciables... 8-)" width="438" height="111" /></a></strong> <strong>Cifras nada despreciables... 8-)</strong>[/caption]
<h2>Aurelia</h2>
<p style="text-align:justify;"><a href="http://aurelia.io/" target="_blank">Aurelia</a> es un proyecto que nació como un fork de <a href="http://durandaljs.com/" target="_blank">DurandalJS</a>, potenciado en la experiencia de <a href="https://twitter.com/EisenbergEffect" target="_blank">Rob Eisenberg</a>, ex-miembro del core team developers de Angular. Desde Enero del 2015, este framework se enfocó principalmente en brindar soporte para sintaxis <a href="https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/" target="_blank">ES6</a> y ES7 de forma que no se requiriera instalar nada más. Su enfoque es tener todo lo necesario "out-of-the-box".</p>


[caption id="attachment_698" align="aligncenter" width="470"]<a href="https://jotaeseymas.files.wordpress.com/2015/07/sobre-aurelia-spa.png"><img class=" wp-image-698" src="https://jotaeseymas.files.wordpress.com/2015/07/sobre-aurelia-spa.png?w=150" alt="ES6 y ES7 y apenas fue aprobado el mes pasado... interesante... :twisted:" width="470" height="116" /></a> <strong>Soporte nativo de ES6 y ES7 y apenas ES6 fue aprobado el mes pasado... interesante... :twisted:</strong>[/caption]
<p style="text-align:justify;">Lo que siempre digo, ninguna tecnología es la <a href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panacea</a> que va a resolver todos los problemas,  y como estos, hay cientos en Javascript (y por lo menos "se" de <a href="https://jotaeseymas.wordpress.com/2015/06/12/20-frameworks-mv-en-javascript/" target="_blank">20 de ellos</a>). Todo depende de lo que quieras usar, del usuario final, y de otros factores ajenos al desarrollo. Lo importante es no dejar de inventar... ;)</p>
<p style="text-align:justify;"><strong>Posdata:</strong> Pueden ver una comparación de Aurelia vs. Angular en este <a href="http://ilikekillnerds.com/2015/01/aurelia-vs-angularjs-round-one-fight/" target="_blank">enlace</a>.</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>694</wp:post_id>
		<wp:post_date>2015-07-05 11:35:04</wp:post_date>
		<wp:post_date_gmt>2015-07-05 16:05:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acerca-de-single-page-applications-spa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="es6"><![CDATA[ES6]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207408484795016";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/617725937505841152";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12387549332]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6023491650586705920&type=U&a=90UA]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GENTE SIN OFICIO...</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/10/gente-sin-oficio/</link>
		<pubDate>Fri, 10 Jul 2015 13:38:25 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=703</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="gente sin oficio"&gt;

Hay gente que definitivamente no tiene oficio... :?
<p style="text-align:justify;"><a href="https://github.com/fbrandel/ParisHilton.js" target="_blank">ParisHilton.js</a> nace como una ¿broma? de alguien realmente <a href="http://www.oxforddictionaries.com/translate/spanish-english/ladillado" target="_blank">ladillado</a>... A ver, una librería que contiene una sola línea de código y que lo único que hace es:</p>


[code lang="javascript"]document.head.innerHTML = '';[/code]

Claro, eso, y la versión minificada:

[code lang="javascript"]document.head.innerHTML = ''[/code]

<p style="text-align:justify;">Ehm, no se, bueno... Eliminar el <code>&lt;head&gt;&lt;/head&gt;</code> de un documento HTML, pues... o_O</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>703</wp:post_id>
		<wp:post_date>2015-07-10 09:08:25</wp:post_date>
		<wp:post_date_gmt>2015-07-10 13:38:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gente-sin-oficio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="wat"><![CDATA[WAT]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207449994792740";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/619500978815942656";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[12595493401]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6025266693037658112&type=U&a=2xKm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[eliezerfot123]]></wp:comment_author>
			<wp:comment_author_email>eliezerfot123@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://fulljed123.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>201.211.80.32</wp:comment_author_IP>
			<wp:comment_date>2015-07-10 11:24:07</wp:comment_date>
			<wp:comment_date_gmt>2015-07-10 15:54:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reblogueó esto en <a href="https://fulljed123.wordpress.com/2015/07/10/gente-sin-oficio/" rel="nofollow">Eliezerfot123 </a>y comentado: 
De acuerdo! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>22356084</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1436544364]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>reblog_ping</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1436544364]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1436544365.544414997100830078125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1436543647.6001389026641845703125;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"eliezerfot123";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[¿POR QUÉ HAY TANTOS FRAMEWORKS JAVASCRIPT? | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/08/30/por-que-hay-tantos-frameworks-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.159</wp:comment_author_IP>
			<wp:comment_date>2015-08-30 17:18:32</wp:comment_date>
			<wp:comment_date_gmt>2015-08-30 21:48:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] también librerías, utilidades, complementos (a.k.a. polyfills) y vaya usted a saber cuantas cosas más. No en vano es el lenguaje N° 1 preferido en el Gato-pulpo, además de contar con más de [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440971402]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440971402.8684940338134765625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1440971313.2448599338531494140625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TYPICO DE: PEGASUS</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/26/typico-de-pegasus/</link>
		<pubDate>Sun, 26 Jul 2015 12:28:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=710</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="my own" title="typico de: pegasus"&gt;
<p style="text-align:justify;">Os saludo gente, disculpándome de antemano por la tardanza. Hace tiempo ya que no publico nada en el blog y se me hace que no voy a llegar a superar las visitas del mes pasado :oops: (¡pero un millón de gracias de nuevo! :mrgreen: ).</p>
<p style="text-align:justify;">Pero nada, a lo que vengo.</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;"><em>pegasus</em>, carga asíncrona de datos en Javascript</h2>
<p style="text-align:justify;">Para este post, voy a utilizar <a href="https://github.com/typicode/pegasus" target="_blank">pegasus</a>, una librería de la gente de <a href="https://github.com/typicode" target="_blank">typicode</a> que se encarga de la resolución de peticiones <a href="https://es.wikipedia.org/wiki/AJAX" target="_blank">AJAX</a> de forma diferida, permitiendo que la carga de los scripts javascript sea mucho más rápida. Vale decir que puede ser utilizada con cualquier librería sin interrumpir su normal funcionamiento.</p>
<p style="text-align:justify;">Para ambos escenarios, usaré la versión CDN de <a href="http://code.jquery.com/jquery-1.11.3.js" target="_blank">jQuery</a> y una petición AJAX simple a una página de prueba llamada <a href="http://jsonplaceholder.typicode.com/" target="_blank">jsonplaceholder</a>, creada y soportada también por la gente de typicode. La intención es medir los tiempos de carga, ejecución y rendimiento de la aplicación sin pegasus y con pegasus. ¡Manos a la ubre!</p>

<h2 style="text-align:justify;">Escenario uno, sin pegasus</h2>
<p style="text-align:justify;">Un archivo html con lo descrito:</p>


[code lang="html" collapse="true" title="Archivo: script.html"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;script src=&quot;http://code.jquery.com/jquery-1.11.3.js&quot;&gt;&lt;/script&gt;
	&lt;title&gt;Pegasus Test&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;script&gt;
		var root = 'http://jsonplaceholder.typicode.com';
		var marca = 'Sin pegasus';

		console.time(marca);
		var request = $.ajax({
			url: root + '/posts',
			method: 'GET'
		});
	&lt;/script&gt;
	&lt;h1&gt;Prueba de Scripts&lt;/h1&gt;
	&lt;script&gt;
		request.then(function(data) {
			console.log('Data cargada!');
		});
		console.timeEnd(marca);
	&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;"><strong>NOTA</strong>: <code>console.time()</code> y <code>console.timeEnd()</code> son usados para medir el tiempo de ejecución de código Javascript mediante una diferencial de tiempo, puedes ver este <a href="https://jotaeseymas.wordpress.com/2015/02/27/la-incomprendida-consola-de-javascript/" target="_blank">post</a> para más información al respecto.</p>


[caption id="attachment_714" align="aligncenter" width="325"]<a href="https://jotaeseymas.files.wordpress.com/2015/07/load-sin-pegasus1.png"><img class=" wp-image-714" src="https://jotaeseymas.files.wordpress.com/2015/07/load-sin-pegasus1.png?w=150" alt="TIempo de Carga" width="325" height="78" /></a> <strong>TIempo de Ejecución (Sin pegasus)<br /></strong>[/caption]

[caption id="attachment_715" align="aligncenter" width="573"]<a href="https://jotaeseymas.files.wordpress.com/2015/07/rend-sin-pegasus1.png"><img class=" wp-image-715" src="https://jotaeseymas.files.wordpress.com/2015/07/rend-sin-pegasus1.png?w=150" alt="Tiempo de Rendimiento" width="573" height="42" /></a> <strong>Tiempo de Rendimiento (Sin pegasus)<br /></strong>[/caption]
<h2>Escenario dos, con pegasus</h2>
<p style="text-align:justify;">Algunas modificaciones al archivo <code>script.html</code>:</p>


[code lang="html" title="Archivo: script.html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;script src=&quot;http://code.jquery.com/jquery-1.11.3.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;https://raw.githubusercontent.com/typicode/pegasus/master/dist/pegasus.js&quot;&gt;&lt;/script&gt;
	&lt;title&gt;Pegasus Test&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;script&gt;
		var root = 'http://jsonplaceholder.typicode.com';
		var marca = 'Sin pegasus';

		console.time(marca);

		var request = pegasus(root+'/posts');
	&lt;/script&gt;
	&lt;h1&gt;Prueba de Scripts&lt;/h1&gt;
	&lt;script&gt;
		request.then(function(data) {
			console.log('Data cargada!');
		});
		console.timeEnd(marca);
	&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;"><strong>NOTA</strong>: Estoy usando <a href="https://www.mozilla.org/es-ES/firefox/new/" target="_blank">Firefox</a> for Developers Edition, versión Aurora 41.2 sin ningún aditivo (o sea, sin <em>Firebug</em>) para las pruebas.</p>


[caption id="attachment_719" align="aligncenter" width="320"]<a href="https://jotaeseymas.files.wordpress.com/2015/07/load-con-pegasus.png"><img class="wp-image-719 " src="https://jotaeseymas.files.wordpress.com/2015/07/load-con-pegasus.png?w=150" alt="" width="320" height="77" /></a> <strong>TIempo de Ejecución (Con pegasus)</strong>[/caption]

[caption id="attachment_720" align="aligncenter" width="574"]<a href="https://jotaeseymas.files.wordpress.com/2015/07/rend-con-pegasus.png"><img class=" wp-image-720" src="https://jotaeseymas.files.wordpress.com/2015/07/rend-con-pegasus.png?w=150" alt="TIempo de Rendimiento (Con pegasus)" width="574" height="54" /></a> <strong>TIempo de Rendimiento (Con pegasus)</strong>[/caption]
<h2>Conclusiones</h2>
<p style="text-align:justify;">Sólo puedo decir: ¡Uau! De 27.06 a 4.48ms dice mucho del desempeño de esta librería, tiene potencial, tiene mucho potencial :!:</p>
<p style="text-align:justify;">Ni que decir del rendimiento (¡gracias Aurora por la ayuda prestada! XD ). La barra roja indica que el cacheo de la data correspondiente a cada script en el navegador se realiza mucho antes de cargar los datos, lo cual indica un porcentaje (pequeño, pero visible en términos de ejecución) salvado en el rendimiento de la aplicación.</p>
<p style="text-align:justify;">Recuerda que la creatividad es un rasgo <em>typico de</em> las mentes curiosas ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2015-07-26 07:58:53</wp:post_date>
		<wp:post_date_gmt>2015-07-26 12:28:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>typico-de-pegasus</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207561415978200";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/625281680014577664";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6031047393120649216&type=U&a=NAd_]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13101774211]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EDITANDO JAVASCRIPT EN VIVO Y DIRECTO</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/06/editando-javascript-en-vivo-y-directo-2/</link>
		<pubDate>Thu, 06 Aug 2015 14:23:31 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=724</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script src="other pages" title="editando javascript en vivo y directo"&gt;

Si, si se puede editar código javascript en "caliente" :roll:
<p style="text-align:justify;"><a href="http://amokjs.com/" target="_blank">Amok</a> es una librería hecha sobre <a href="https://nodejs.org/" target="_blank">Node.js</a> en la que puedes editar código HTML, CSS y/o Javascript al tiempo que ves el resultado en una instancia del navegador. Aunque tiene soporte para Google Chrome y <a href="https://www.chromium.org/Home" target="_blank">Chromium</a> (el "fork" de Google Chrome para Linux), no tiene soporte para <a href="https://www.mozilla.org/es-ES/firefox/new/" target="_blank">Mozilla Firefox</a> (mi navegador favorito :P ) si no fuera por la tremenda utilidad que tiene esta librería, le daría una valoración negativa. ¿Instalarlo? Pues lo instalas como cualquier paquete en Node.js.</p>


[code lang="bash" gutter="false"]
$ npm install -g amok
[/code]

<p style="text-align:justify;">Recuerda que debes tener mínimo la versión 0.12 de Node.js y permisos de root como requisito para poder usarlo. Puedes ver la página de la librería para mayor información.</p>
<p style="text-align:justify;">Aunque hay otras alternativas (que personalmente prefiero) como <a href="http://livereload.com/" target="_blank">LiveReload</a> que usa un servidor HTTP independientemente de la instancia del navegador, esta librería es interesante, muy interesante ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>724</wp:post_id>
		<wp:post_date>2015-08-06 09:53:31</wp:post_date>
		<wp:post_date_gmt>2015-08-06 14:23:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>editando-javascript-en-vivo-y-directo-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[633]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10207648757561685";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/629296789481361408";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[13463737146]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6035062502805512193&type=U&a=TgQE]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ACERCA DE: MONGODB. PARTE 0. MONGODB 101</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/23/acerca-de-mongodb-parte-0-101/</link>
		<pubDate>Sun, 23 Aug 2015 23:55:02 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=726</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script title="mongodb 101" src="other pages" &gt;
<p style="text-align:justify;">Pido disculpas por mi retraso con los posts, se que os tengo una deuda ¡ENORME! :'(</p>
<p style="text-align:justify;">No he estado <a href="http://maracucholario.blogspot.com/2011/07/cambimbear.html" target="_blank">cambimbeando</a>, no ha sido fácil sentarse acá a escribir, sobre todo cuando no tienes la disciplina necesaria (ni la costumbre :mrgreen: ). Pero basta de <a href="http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara" target="_blank">chácharas</a>.</p>
<!--more-->
<p style="text-align:justify;">Antes de echarles el cuento de la herramienta como correspondería, tendría que echarles un "cuento" sobre bases de datos no relacionales (o No SQL, como dicen <span style="color:#7cbbbb;"><strong>#porai</strong></span>), pero para eso está nuestro amigo <a href="https://www.google.co.ve/?gws_rd=ssl#q=no+sql" target="_blank">San Google</a> que nos ayuda [¿siempre?] a aclarar nuestras dudas XD .</p>
<p style="text-align:justify;"><a href="https://www.mongodb.org" target="_blank">MongoDB</a> es una herramienta de Gestión de Bases de Datos No SQL, utilizada para [tratar de] solucionar los "vacíos" del mundo de RBDMS típicos como SQLite o PostgreSQL: escalabilidad, rendimiento y agilidad en el modelado de los datos, esto último cobra mucho más sentido si vemos un ejemplo [¿típico?] de un Modelo Entidad-Relación en SQL.</p>


[caption id="attachment_728" align="aligncenter" width="415"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/modelo_entidad_relacion_matriculacion1.png"><img class=" wp-image-728" src="https://jotaeseymas.files.wordpress.com/2015/08/modelo_entidad_relacion_matriculacion1.png?w=150" alt="Más explícito, imposible... XD" width="415" height="360" /></a> <strong>Más explícito, imposible... XD</strong>[/caption]
<p style="text-align:justify;">MongoDB está orientado a almacenar documentos típicos de <a href="http://json.org/" target="_blank">JSON</a>, por lo que no tenemos que reinventar la rueda :roll: , es decir, si conoces <a href="https://jotaeseymas.wordpress.com/2015/06/16/typico-de-json/" target="_blank">el estándar JSON</a>, sabes modelar un documento en MongoDB.</p>
Algunas características que hacen a MongoDB y a cualquier base de datos No SQL son:
<ol>
	<li style="text-align:justify;">Ausencia de <em>constraints</em>: No hay claves primarias, ni foráneas.</li>
	<li style="text-align:justify;">Ausencia de <em>joins</em>: Al no haber claves relacionadas ni multivaluadas, no existen consultas del tipo JOIN entre dos "tablas".</li>
	<li style="text-align:justify;">Ausencia de tablas y/o esquemas: La separación de colecciones (el equivalente a tablas en No SQL) es por espacio de nombres directamente, esto es, el nombre de la colección.</li>
	<li style="text-align:justify;">Ausencia de transacciones: Tampoco existe un lenguaje de script formal para definirlas.</li>
	<li style="text-align:justify;">Desnormalización: Aunque es deseable y posible en MongoDB, cada documento pudiera no tener la misma estructura formal (<a href="https://es.wikipedia.org/wiki/Tercera_forma_normal" target="_blank">3NF</a> en SQL) de modelado de datos.</li>
	<li style="text-align:justify;">No [siempre] es posible tener tener <a href="https://es.wikipedia.org/wiki/ACID" target="_blank">ACID</a>: En el caso particular de MongoDB [al menos] se garantiza la "A" de atomicidad en las operaciones.</li>
</ol>
<p style="text-align:justify;">Y la razón por la que hablo de MongoDB es: su intérprete de comandos está escrita ¡en Javascript! Aunque si se dieron cuenta en el título, no será el único post que escribiré sobre este gestor de bases de datos No SQL ;) .</p>
&lt; /script &gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>726</wp:post_id>
		<wp:post_date>2015-08-23 19:25:02</wp:post_date>
		<wp:post_date_gmt>2015-08-23 23:55:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acerca-de-mongodb-parte-0-101</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="category" nicename="coco-mongo-xd"><![CDATA[Coco-Mongo xD]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[727]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6041366920538648576&type=U&a=lc9D]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[14024198777]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/635601197257224192";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[ACERCA DE: MONGODB. PARTE 1. INSTALACIÓN BÁSICA Y SHELL JAVASCRIPT | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/09/21/acerca-de-mongodb-parte-1-instalacion-basica-y-shell-javascript/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.200</wp:comment_author_IP>
			<wp:comment_date>2015-09-21 10:16:45</wp:comment_date>
			<wp:comment_date_gmt>2015-09-21 14:46:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] el post anterior, hubo una breve introducción acerca de MongoDB. Después de haber presentado el examen [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1442846928]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442846928.786303997039794921875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1442846806.2082030773162841796875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442957435.42010498046875;s:5:"event";s:17:"status-unapproved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442957437.314795970916748046875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>LIBRERIA ANGULAR. PARTE 4. VALIDANDO</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/</link>
		<pubDate>Thu, 27 Aug 2015 19:36:41 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=740</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="parte 4. validando"&gt;
<p style="text-align:justify;">Al fiiiiiiiiin XD ... Después de darme un <a href="http://www.wordreference.com/es/en/translation.asp?spen=chance" target="_blank">chance</a> de validar la información (y el <a href="https://github.com/ChinuxParibus/libreria-angular" target="_blank">código</a> ^^'<code> </code>) que me permitiera terminar de escribir este post, y luego de muchísimos días desde que escribí el último <a href="https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/" target="_blank">post</a> sobre la <a href="https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/" target="_blank">Librería Angular</a>, me echo una escapada para finalmente publicarlo :mrgreen:</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">Controlando</h2>
<p style="text-align:justify;">En nuestro archivo <code>controllers.js</code> añadimos un nuevo método a <code>LibrosCtrl</code> para agregar nuevos libros, usando el método de la fábrica <code>libros</code>:</p>


[code lang="javascript" title="Archivo: app/controllers.js" collapse="true" firstline="37"]
...
$scope.addLibro = function(libro) {
	//TODO: Validación de campos vacíos e inconsistencia de valores
	if (typeof libro === &quot;object&quot;){
		libreria.addLibro(libro);
	} else {
		console.log(&quot;No se pudo insertar el libro!&quot;);
	}
};
...
[/code]

<h2 style="text-align:justify;">Dirigiendo</h2>
<p style="text-align:justify;">Implementamos una directiva nueva para usar las clases propias del framework Bootstrap CSS de forma condicional: <code>ng-class</code>. Esta directiva permite determinar, dependiendo del resultado de evaluar una expresión como <em>true</em> o <em>false</em>, si se aplica una clase CSS o no a un elemento HTML. En el ejemplo vemos la inclusión de la directiva en los templates de formulario, por ejemplo:</p>


[code lang="html" title="Archivo: templates/nuevo_libro.html" collapse="true" firstline="26" highlight="27"]
...

&lt;div class=&quot;form-group&quot; ng-class=&quot;{'has-error': libroForm.categoria.$invalid &amp;&amp; libroForm.categoria.$dirty, 'has-success': libroForm.categoria.$valid &amp;&amp; libroForm.categoria.$dirty}&quot; ng-controller=&quot;CategoriasCtrl&quot;&gt;
	&lt;label class=&quot;control-label&quot; for=&quot;categoria&quot;&gt;Categoría&lt;/label&gt;
	&lt;select class=&quot;form-control&quot; ng-model=&quot;libro.categoria&quot; name=&quot;categoria&quot; id=&quot;categoria&quot; required ng-options=&quot;categoria.categoria as categoria.nombre | uppercase for categoria in categorias&quot;&gt;
&lt;option value=&quot;&quot;&gt;- SELECCIONE -&lt;/option&gt;
	&lt;/select&gt;
&lt;/div&gt;

...
[/code]

<p style="text-align:justify;">Para rellenar el <code>&lt;select&gt;</code> con las categorías de la fábrica <code>categorias</code>, se usa la directiva <code>ng-options</code>, la cual permite mediante una <a href="https://code.angularjs.org/1.3.10/docs/api/ng/directive/select" target="_blank">sintaxis</a> específica, extraer y formatear información por cada ítem o como se desee. Puedes ver los objetos condicionales de estado para campos de formulario en este <a href="https://jotaeseymas.wordpress.com/2015/06/07/validando-campos-de-formulario-con-angular-js-parte-1-la-teoria/" target="_blank">post</a>.</p>

<h2>Fabricando</h2>
<p style="text-align:justify;">En nuestro archivo <code>app/factories.js</code> incluímos un método que se usa en el controlador para hacer <code>push</code> al arreglo de libros, visualizando el nuevo libro automáticamente en la lista de libros.</p>


[code lang="javascript" title="Archivo: app/factories.js" collapse="true" firstline="51"]
...
libreria.addLibro = function(libro) {
	//propiedad que define la visualización del botón &quot;Comprar&quot;
	libro.existente = libro.existente || libro.inventario &gt; 0 ? true : false;
	libreria.listaLibros.push(libro);
}
...
[/code]

Y el funcionamiento es excelente!

[caption id="attachment_742" align="aligncenter" width="517"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-libro.png"><img class=" wp-image-742" src="https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-libro.png?w=150" alt="Formulario Agregar Nuevo Libro" width="517" height="386" /></a> <strong>Formulario Agregar Nuevo Libro</strong>[/caption]

[caption id="attachment_741" align="aligncenter" width="518"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-invalido.png"><img class=" wp-image-741" src="https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-invalido.png?w=150" alt="Validación funcionando" width="518" height="411" /></a> <strong>Validación funcionando</strong>[/caption]

[caption id="attachment_743" align="aligncenter" width="519"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-valido.png"><img class=" wp-image-743" src="https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-valido.png?w=150" alt="Se habilita la inserción cuando todos los campos del formulario son válidos" width="519" height="412" /></a> <strong>Se habilita la inserción cuando todos los campos del formulario son válidos</strong>[/caption]

[caption id="attachment_744" align="aligncenter" width="573"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/angular-libro-agregado.png"><img class=" wp-image-744" src="https://jotaeseymas.files.wordpress.com/2015/08/angular-libro-agregado.png?w=150" alt="Libro insertado! :roll:" width="573" height="271" /></a> <strong>Libro insertado! :roll:</strong>[/caption]

Y entonces, queda pendiente la persistencia de los libros insertados y unas cosillas que vi <strong><span style="color:#7cbbbb;">#porai</span></strong> :twisted:

Mientras, puedo sumar +0,5 a la cuenta *risa malvada* ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>740</wp:post_id>
		<wp:post_date>2015-08-27 15:06:41</wp:post_date>
		<wp:post_date_gmt>2015-08-27 19:36:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-4-validando</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6042751449631330304&type=U&a=G0lJ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[14161351302]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/636985737615831041";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Andres Villanueva]]></wp:comment_author>
			<wp:comment_author_email>andresvillanuevab@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/117570038424252253756</wp:comment_author_url>
			<wp:comment_author_IP>190.217.1.84</wp:comment_author_IP>
			<wp:comment_date>2015-08-27 15:14:11</wp:comment_date>
			<wp:comment_date_gmt>2015-08-27 19:44:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelente post! Esperando futuras entregas....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1440704652.5568850040435791015625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440705307]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440705308.490417957305908203125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_post_as</wp:meta_key>
				<wp:meta_value><![CDATA[googleplus]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_avatar</wp:meta_key>
				<wp:meta_value><![CDATA[https://lh6.googleusercontent.com/-9-WqHdvM9QM/AAAAAAAAAAI/AAAAAAAAB9I/_n3Mau_jrvw/photo.jpg?sz=50]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>hc_foreign_user_id</wp:meta_key>
				<wp:meta_value><![CDATA[117570038424252253756]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1440705307]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[ch1nux]]></wp:comment_author>
			<wp:comment_author_email>grilletjhony@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jotaeseymas.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>200.109.233.62</wp:comment_author_IP>
			<wp:comment_date>2015-08-27 15:26:07</wp:comment_date>
			<wp:comment_date_gmt>2015-08-27 19:56:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Me alegra que te haya gustado, saludos ^^']]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>48</wp:comment_parent>
			<wp:comment_user_id>79130303</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1440705369]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1440705368]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1440705368.82688808441162109375;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[LIBRERIA ANGULAR. PARTE 4,5. PROVEYENDO E INTEGRANDO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.81</wp:comment_author_IP>
			<wp:comment_date>2015-12-11 23:59:11</wp:comment_date>
			<wp:comment_date_gmt>2015-12-12 04:29:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] ). Increíble que este año se haya ido volando, han pasado 5 meses desde que escribí el último post de la serie&#8230; Pero bueno, basta de chácharas y a lo que vamos, que para eso estoy [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1449894551.7743699550628662109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1449895005.222609043121337890625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1449895004]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>COMO DEBERÍA SER EL DESARROLLO: TDD Y/O BDD. UNA SIGNIFICATIVA INTRODUCCIÓN</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/28/como-deberia-ser-el-desarrollo-tdd-yo-bdd-una-significativa-introduccion/</link>
		<pubDate>Fri, 28 Aug 2015 18:40:27 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=761</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="como debería ser el desarrollo: tdd y bdd" &gt;
<p style="text-align:justify;">Cuando dicen: "vamos a implementar pruebas automatizadas", es como así (y tal vez peor):</p>
http://www.youtube.com/watch?v=a1Y73sPHKxw
<p style="text-align:justify;">Y es que para nosotros, los desarrolladores nuevos recién salidos del horno universitario que venimos del Pascal, con suerte del Java y de la dupla C/C++ (Borland C/C++ en mi caso :'( ), y dependiendo de la "¿experiencia?", del PHP y del MySQL (pre-Oracle, claro &gt;:( ), que "ahora" se piense en TDD (a.k.a. Desarrollo Orientado por Pruebas o <em>Test-Driven Development</em> si les gusta el inglés) es como para quedarse como la ardilla del video (yo lo hice ^^' ).</p>
<!--more-->
<p style="text-align:justify;"><a href="https://en.wikipedia.org/wiki/Test-driven_development" target="_blank">TDD</a> no es un concepto nuevo, la verdad, según <a href="http://www.javiergarzas.com/2015/07/utilizamos-la-novedosa-tecnica-de-tdd-novedosa-seguro.html" target="_blank">Javier Garzás</a> es bastante anciano (el concepto de TDD, no <a href="http://www.javiergarzas.com/javier_garzas_curriculum" target="_blank">Javier</a> jijiji :oops: ), pero como más sabe el diablo, por viejo que por diablo, vaya Dios a saber a quién se le ocurrió la idea de sacar la naftalina del TDD y refrescarla para estos días. ¡Ah, si, ya me acordé! <a href="https://en.wikipedia.org/wiki/Kent_Beck" target="_blank">Kent Beck</a>, por allá en el 2008 :) .</p>
<p style="text-align:justify;">Básicamente, en TDD, las pruebas se escriben primero, antes que el código. Ya pensar así representa algunas barreras para los programadores nóveles (como yo) que quieren escribir código a la primera jejeje 8-) , y como toda metodología tiene una serie de pasos y de principios a seguir para llevar a buen término un TDD:</p>


[caption id="attachment_766" align="aligncenter" width="374"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/tdd-red-green-refactor.png"><img class=" wp-image-766" src="https://jotaeseymas.files.wordpress.com/2015/08/tdd-red-green-refactor.png?w=150" alt="El mantra del TDD" width="374" height="242" /></a> <strong>El mantra del TDD :roll:<br /></strong>[/caption]
<p style="text-align:justify;">Me explico, para que cada prueba tenga impacto sobre el código que se escribe, debe pasar las siguientes etapas:</p>

<h2 style="text-align:justify;"><span style="color:#d25349;">RED: ESCRIBE UNA PRUEBA QUE FALLE</span></h2>
<p style="text-align:justify;">Digamos que tienes un requisito funcional bien especificado, entonces la idea es escribir la prueba que satisfaga ese requisito. Eventualmente, la prueba fallará, puesto que no hemos escrito código alguno para comprobar si la funcionalidad descrita en el requisito es realmente lo que se espera en el software que se está desarrollando, además de considerar que se debe escribir una sola prueba por funcionalidad. Esta prueba debe respetar el principio <a href="https://en.wikipedia.org/wiki/KISS_principle" target="_blank">KISS</a> XD .</p>

<h2><span style="color:#019739;">GREEN: ESCRIBE CÓDIGO QUE PASE LA PRUEBA</span></h2>
<p style="text-align:justify;">Ejecutamos la prueba (en el lenguaje de tu preferencia o de preferencia del cliente, dejémoslo así :| ), ¡y falla! Eso es lo que queremos acá, porque ahora debemos pensar: ¿que cosas satisfacen la prueba? Si la prueba es que, por ejemplo, debe sumar dos números y dar un resultado particular, pues ya tienes dos elementos importantes: los números y el resultado, amén de otros elementos de forma del código que cumplan con el principio <a href="https://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29" target="_blank">SOLID</a> XD .</p>

<h2><strong>REFACTOR: ESCRIBE OPTIMIZACIONES PARA TU CÓDIGO</strong></h2>
<p style="text-align:justify;">En el proceso bidireccional de escribir pruebas para el código y viceversa, siempre existe una forma más óptima de hacerlo, acá la idea es más bien, darle un poco de calidad al código. A ver, siempre habrá más de una forma de pensar en como pasar las pruebas, sin embargo, sucede que nos quedamos con la primera por lo reducido de los tiempos de entrega, entre otras cosas que impiden que tu código respete el <a href="https://en.wikipedia.org/wiki/Don't_repeat_yourself" target="_blank">DRY</a> XD , y todo se te vuelve un copy-paste.</p>
<p style="text-align:justify;">Por ahora no pretendo ahondar en muchos conceptos respecto a este tema, mucho menos en código (eso lo voy a dejar para posts siguientes :twisted: *risa malvada*) , pero si dejar en claro que ninguna herramienta, metodología o tecnología es la <a href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panacea</a> que va a resolver todos tus problemas en desarrollo de software, hace falta "probar" ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>761</wp:post_id>
		<wp:post_date>2015-08-28 14:10:27</wp:post_date>
		<wp:post_date_gmt>2015-08-28 18:40:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>como-deberia-ser-el-desarrollo-tdd-yo-bdd-una-significativa-introduccion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="javier-garzas"><![CDATA[Javier Garzás]]></category>
		<category domain="post_tag" nicename="kent-beck"><![CDATA[Kent Beck]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[TDD]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/637333965074862080";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[14194196988]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[COMO DEBERÍA SER EL DESARROLLO: TDD Y/O BDD. TIPOS DE PRUEBAS (&#8230;Y PARA EL DESARROLLADOR) | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/09/22/como-deberia-ser-el-desarrollo-tdd-yo-bdd-tipos-de-pruebas-y-para-el-desarrollador/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.110</wp:comment_author_IP>
			<wp:comment_date>2015-09-22 16:59:21</wp:comment_date>
			<wp:comment_date_gmt>2015-09-22 21:29:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] el post anterior, hablé sobre como debería ser, en términos generales, un desarrollo TDD, sin embargo [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1442957361.934669971466064453125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1442969853]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1442962247.8492190837860107421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442969854.560031890869140625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>USO DE TEMPLATES HANDLEBARS CON ZEPTO. MITAD I. SINTAXIS, ITERACIONES Y CONDICIONALES</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/</link>
		<pubDate>Sun, 30 Aug 2015 01:28:16 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=775</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="uso de templates handlebars con zepto" &gt;

[caption id="attachment_777" align="aligncenter" width="236"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg"><img class=" wp-image-777" src="https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg?w=150" alt="Bigotes con estilo!!!" width="236" height="236" /></a> <strong>Bigotes con estilo!!!</strong>[/caption]

¿Un post con bigotes al comienzo? Suena interesante... :mrgreen:

<!--more-->
<p style="text-align:justify;"><a href="http://handlebarsjs.com/" target="_blank">Handlebars</a> es una libreria Javascript que proporciona un <a href="https://en.wikipedia.org/wiki/Web_template_system" target="_blank">sistema de templates</a> semánticos HTML que se pueden [pre]compilar y usar transversalmente en cualquier aplicación web. Está basado en el otrora sistema de templates multilenguaje <a href="http://mustache.github.io/" target="_blank">Mustache</a>, por lo que sus funcionalidades son similares (en <a href="https://github.com/wycats/handlebars.js#differences-between-handlebarsjs-and-mustache" target="_blank">algunas</a> cosas) a ese sistema. Adicionalmente, incluye una serie de funciones, helpers y bloques semánticos, entre otras <a href="http://handlebarsjs.com/builtin_helpers.html" target="_blank">especias</a> que hacen de Handlebars una opción interesante para construir templates en un desarrollo front-end.</p>
<p style="text-align:justify;">Algunas de las funcionalidades más interesantes de esta librería, he decidido incluirlas en un solo post, pero como quedaba muy muy largo ( :roll: ) lo separé en dos mitades:</p>

<ol>
	<li style="text-align:justify;">Mitad I (este post): Sintaxis, Bloques de Iteraciones y Bloques Condicionales.</li>
	<li style="text-align:justify;">Mitad II: Rutas a Objetos, Registro de helpers, y Templates Parciales.</li>
</ol>
<p style="text-align:justify;">Adicionalmente, usaré <a href="http://zeptojs.com" target="_blank">Zepto</a> para insertar el código HTML, y para el mocking de los datos del template, usaré <a href="https://github.com/marak/faker.js" target="_blank">Faker.js</a>, una librería que no necesita mucha presentación puesto que hablé de ella en un <a href="https://jotaeseymas.wordpress.com/2015/06/12/falsificando-datos-para-mocking-de-documentos-json/" target="_blank">post</a> anterior XD . ¡Empecémos ya!</p>

<h2>ESTRUCTURA INICIAL</h2>
<p style="text-align:justify;">El código que vamos a usar es una sóla página con la inclusión de las librerías y la data. Primero presento el código y luego explico de que va en cada línea:</p>

<div style="font-size:14px;">

[code lang="html" collapse="true" title="Archivo: index.html" highlight="9,12,13,14,15,16,18,20,22,24,25,26,28,30,31,32,36,53,56,59,62"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Ejemplo Handlebars&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Lista de usuarios con Handlebars&lt;/h1&gt;
    &lt;div class=&quot;template&quot;&gt;&lt;/div&gt;

    &lt;!-- Templates e instancia de Javascript --&gt;    
    &lt;script src=&quot;handlebars-v3.0.0.js&quot;&gt;&lt;/script&gt;
    &lt;script id=&quot;userlist&quot; type=&quot;text/x-handlebars-template&quot;&gt;
            {{#each userList}}
                &lt;div style=&quot;border: 1px solid 
                {{!-- Comentario dentro del template --}}
                {{!-- Escrito así para mayor legibilidad del código --}}
                {{#if enabled}}
                    green {{!-- Verde si usuario está habilitado --}}
                {{else}}
                    red {{!-- Rojo si usuario está deshabilitado --}}
                {{/if}}
                ; width: 350px; height: 150px; margin: 10px; float: left;&quot;&gt;
                    &lt;h2&gt;{{name}}&lt;/h2&gt;
                    &lt;p&gt;&lt;strong&gt;{{address}}&lt;/strong&gt;&lt;/p&gt;
                    &lt;p&gt;&lt;em&gt;Teléfono: {{phone}}&lt;/em&gt;&lt;/p&gt;
                &lt;/div&gt;
            {{/each}}
    &lt;/script&gt;
    &lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;event.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;faker.min.js&quot;&gt;&lt;/script&gt;
    &lt;script&gt;
        $(function(){
            //español
            faker.locale = 'es';

            var listaUsuarios = []; //arreglo de usuarios;

            for (var i = 0; i &lt; 9; i++) {
                //crea un único usuario cada vez que se declara la variable
                var usuario = {
                    name: faker.name.findName(),
                    address: faker.address.streetAddress(),
                    phone: faker.phone.phoneNumber(),
                    enabled: faker.random.number() ? true : false
                };
                //Se agrega al arreglo de usuarios
                listaUsuarios.push(usuario);
            };             

            //Se encapsula la lista
            var lista = {userList: listaUsuarios};

            //se convierte de semántica Handlebars a HTML plano
            var source = $('#userlist').html(),

            //se compila el template HTML para insertar datos
            template = Handlebars.compile(source);

            //se insertan datos y se añaden al cuerpo HTML
            $('.template').append(template(lista));
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

</div>
<h2 style="text-align:justify;">SINTAXIS</h2>
<p style="text-align:justify;">Después de descargar la librería, en la línea 12 la incluímos (de forma local, en mi caso). Ignorando todo lo demás (por ahora :oops: ), en la líneas 56, 59 y 62 se hace la magia para compilar el template con la data requerida, obteniendo el código HTML, compilándolo e insertando con Zepto, la data correspondiente, respectivamente, cuando se agrega el template en la sección de nuestra vista que deseamos (en este caso, la línea 9)</p>
<p style="text-align:justify;">Entre las líneas 40 y 50, simplemente se hace un mocking de datos para usar en nuestra vista con Faker.js, asegurándonos, en la línea 36, de que los datos que se van a generar están localizados al español :)</p>
<p style="text-align:justify;">Finalmente, entre las líneas 13 y 29, se escribe el template que se va a añadir a nuestra vista principal. Acá es importante usar la convención <code>type="text/x-handlebars-template"</code> para que el navegador no confunda este código con Javascript trocho y mocho y con otros "bloques" dentro del template mismo.</p>
<p style="text-align:justify;">Un "bloque" está delimitado por dos expresiones, una de inicio y una de fin. Las expresiones son interpolaciones de variables o de helpers de Handlebars para diferentes funcionalidades.</p>

<h2 style="text-align:justify;">BLOQUES DE ITERACIONES</h2>
<p style="text-align:justify;">Las líneas 14 y 28 representan un bloque de iteración, el cual no hace más que renderizar los diferentes valores que se encuentran dentro de la propiedad <code>userlist</code> (siempre que dicha propiedad sea un array), encapsulada en la línea 53, y aplicar el bloque interno sobre cada elemento que contenga la propiedad.</p>

<h2>BLOQUES CONDICIONALES</h2>
<p style="text-align:justify;">En las líneas 18, 20 y 22 se muestra un bloque condicional, el cual consiste en renderizar uno u otro valor dependiendo de si la expresión resultado del bloque <code>{{#if expresion}}</code> evalua a <em>true</em> o a <em>false</em>. En este caso, la propiedad CSS <code>border</code> será <span style="color:#019a70;"><code>green</code></span> si la variable <code>enabled</code> de la data insertada es <em>true</em> y <span style="color:#d25349;"><code>red</code></span> si dicho valor es <em>false</em>.</p>
<p style="text-align:justify;">FInalmente, este es el resultado de tanto jaleo (que será completamente diferente si actualizamos la página) ^^'</p>


[caption id="attachment_776" align="aligncenter" width="440"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/handlebar-resultado.png"><img class=" wp-image-776" src="https://jotaeseymas.files.wordpress.com/2015/08/handlebar-resultado.png?w=150" alt="... y nuestro template arroja esto :D !" width="440" height="185" /></a> <strong>... y nuestro template arroja esto :D !</strong>[/caption]
<p style="text-align:justify;">Handlebars tiene muchas más funcionalidades que las mencionadas acá, como podrás darte cuenta en su API nada más al ingresar. Nada, ¡feliz bigote! ;)</p>


[caption id="attachment_784" align="aligncenter" width="353"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif"><img class=" wp-image-784" src="https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif?w=150" alt="XD XD XD" width="353" height="219" /></a> <strong>XD XD XD</strong>[/caption]

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date>2015-08-29 20:58:16</wp:post_date>
		<wp:post_date_gmt>2015-08-30 01:28:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[14234078536]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/637798996300337152";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[JQUERY NO ES EL UNICO. PROBANDO MINIFIED.JS | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/10/21/jquery-no-es-el-unico-probando-minified-js/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.135</wp:comment_author_IP>
			<wp:comment_date>2015-10-21 22:03:12</wp:comment_date>
			<wp:comment_date_gmt>2015-10-22 02:33:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] (underscore.js lo hace muy bien). Típicamente (o de facto) pensarías en Bootstrap CSS, jQuery y Handlebars para [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1445481192.758304119110107421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1445481235]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1445481236.0030200481414794921875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[USO DE TEMPLATES HANDLEBARS CON ZEPTO. MITAD II. RUTAS, &#8220;HELPERS&#8221; Y &#8220;PARTIALS&#8221; | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/11/30/uso-de-templates-handlebars-con-zepto-mitad-ii-rutas-helpers-y-partials/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.231</wp:comment_author_IP>
			<wp:comment_date>2015-11-30 02:30:25</wp:comment_date>
			<wp:comment_date_gmt>2015-11-30 07:00:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] el post anterior, hablé de algunas de las características más comunes de esta librería para templates, [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1448866826.2501099109649658203125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1448866848]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1448866849.6393220424652099609375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>¿POR QUÉ HAY TANTOS FRAMEWORKS JAVASCRIPT?</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/30/por-que-hay-tantos-frameworks-javascript/</link>
		<pubDate>Sun, 30 Aug 2015 21:48:22 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=793</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="por qué hay tantos frameworks javascript" &gt;

Buena pregunta... :roll:
<p style="text-align:justify;">Hace tiempo, pubiqué un <a href="https://jotaeseymas.wordpress.com/2015/06/12/20-frameworks-mv-en-javascript/" target="_blank">enlace</a> donde se mostraban al menos 20 frameworks MV* en Javascript, pero la realidad supera a cualquier lista, y es que la lista es casi interminable: no sólo frameworks, también librerías, utilidades, complementos (a.k.a. polyfills) y vaya usted a saber cuantas <a href="https://jotaeseymas.wordpress.com/2015/07/10/gente-sin-oficio/" target="_blank">cosas</a> más. No en vano es el lenguaje N° 1 preferido en el <a href="https://github.com/blog/2047-language-trends-on-github" target="_blank">Gato-pulpo</a>, además de contar con más de 1000 "cosas" hechas en <a href="https://www.javascripting.com/" target="_blank">Javascripting.com</a> y más de 500 "micro-cosas" en <a href="http://microjs.com/#" target="_blank">microjs.com</a>.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Pero, pensándolo bien, debe haber una razón para que esto suceda, a ver, una de las cosas que debo admitir (como programador novato) es que Javascript no es el lenguaje más bonito, ni el más apropiado para empezar a programar, pero el poder que proporciona es bastante grande *risa malvada* :twisted: . Me recuerda al pobre de Tetsuo...</p>
http://www.youtube.com/watch?v=Awc1ZJVxXhU
<p style="text-align:justify;">"El poder sin control, corrompe, destruye y erradica..." 8-) Para pensarlo, te doy cuatro razones:</p>

<h2>RAZÓN 1. LIBERTAD, LIBERTAD <em>EVERYWHERE</em></h2>
<p style="text-align:justify;">El hecho de que no sea bonito, no quiere decir que no sea funcional, y con funcional me refiero a que sirva para lo que se necesita. De hecho, la gran mayoría de patrones de diseño orientado a objetos existentes pueden modelarse en Javascript como se ve en algunas <a href="http://www.dofactory.com/javascript/design-patterns" target="_blank">publicaciones</a>. Esa es una de las funcionalidades más apetecidas por un desarrollador: un lenguaje que me permita hacer lo que quiera, salvando, las limitaciones apropiadas de contexto, hardware, etc. :D</p>

<h2 style="text-align:justify;">RAZÓN 2. NO NECESITO APRENDER OTRO LENGUAJE DE PROGRAMACIÓN</h2>
<p style="text-align:justify;">Otra de las razones es que un desarrollador web frontend (como yo ^^' ), puede simplemente prescindir de otros lenguajes de programación y usar Javascript para "todo" dentro de una aplicación web, más aún teniendo a <a href="https://nodejs.org/" target="_blank">Node.js</a>, muy popular y mencionado por estos días, sin mencionar que puedo combinar bases de datos (<a href="https://www.mongodb.org" target="_blank">MongoDB</a>), protocolos de comunicación (<a href="http://json.org" target="_blank">JSON</a>), y desarrollo frontend (<a href="https://angularjs.org" target="_blank">Angular.js</a>), simulaciones 3D, (<a href="http://threejs.org/" target="_blank">three.js</a>), y muchas cosas más con ¡un sólo lenguaje! :D</p>

<h2>RAZÓN 3. ¡AHORA [CASI] TODO ESTÁ EN LA WEB!</h2>
<p style="text-align:justify;">Javascript tiene una limitación importante, y es la de estar supeditado a un cliente web (navegador) con un intérprete del lenguaje. Sin embargo esta "limitación" no ha impedido que cada vez más y más aplicaciones estén migrando de un entorno de escritorio a un entorno web. Aplicaciones como LinkedIn, Reddit o PayPal han migrado sus sistemas a web mediante Javascript. <a href="https://en.wikipedia.org/wiki/Internet_of_Things" target="_blank">IoT</a> (a.k.a. <em>Internet of Things</em>) y sus tecnologías relacionadas también han influido en esta migración :D</p>

<h2>RAZÓN 4. APLICACIONES "HÍBRIDAS" PARA DISPOSITIVOS MÓVILES</h2>
<p style="text-align:justify;">¿Te toca programar apps para dispositivos con Android OS? Entonces te toca meterte un puñal con <em>Java</em> y el <em>Android Studio</em> o lo que sea que uses para programar. Pero si sabes Javascript, HTML5 y CSS3, ¡buenas noticias! Ya tienes el 90% de lo requerido para programar aplicaciones para dispósitivos móviles usando plataformas híbridas de compilación como <a href="http://phonegap.com/" target="_blank">PhoneGap</a>, <a href="http://ionicframework.com/" target="_blank">Ionic</a> o <a href="https://software.intel.com/en-us/intel-xdk" target="_blank">Intel XDK</a>, entre otras plataformas, ¿Interesante, no? :D</p>
<p style="text-align:justify;">Puede que no estés de acuerdo conmigo, pero no busco eso, busco que te enamores un poco más de este lenguaje que si bien no es la <a href="https://es.wikipedia.org/wiki/Panacea_universal" target="_blank">Panacea</a>, es muy bonito una vez que lo "dominas", pero, sinceramente, yo espero no dominarlo nunca y sorprenderme siempre ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>793</wp:post_id>
		<wp:post_date>2015-08-30 17:18:22</wp:post_date>
		<wp:post_date_gmt>2015-08-30 21:48:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>por-que-hay-tantos-frameworks-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="es6"><![CDATA[ES6]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="tipos"><![CDATA[tipos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[14260635305]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/638106027263528960";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ACERCA DE: MONGODB. PARTE 1. INSTALACIÓN BÁSICA Y SHELL JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/09/21/acerca-de-mongodb-parte-1-instalacion-basica-y-shell-javascript/</link>
		<pubDate>Mon, 21 Sep 2015 14:46:39 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=804</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="instalacion basica y shell javascript" &gt;
<p style="text-align:justify;">En el <a href="https://jotaeseymas.wordpress.com/2015/08/23/acerca-de-mongodb-parte-0-101/" target="_blank">post</a> anterior, hubo una breve introducción acerca de <a href="https://www.mongodb.org" target="_blank">MongoDB</a>. Después de haber presentado el examen final de certificación en la <a href="https://university.mongodb.com" target="_blank">Universidad</a> de MongoDB (un poco de flores para mi jijiji XD ), tengo un poco más de tiempo para continuar la serie, esta vez con una instalación básica y una introducción a la shell de MongoDB.</p>
<p style="text-align:justify;"><strong>Importante:</strong> Todos los ejemplos en estos posts acerca de MongoDB están siendo ejecutados en un computador con sistema operativo Debian GNU/Linux 8 Jessie de 64-bits y MongoDB con la versión comunitaria 3.0.6 instalada. El escritorio que tengas instalado es irrelevante para el uso de este gestor de base de datos NoSQL, por ejemplo, yo uso LXDE y me va de maravilla :mrgreen: .</p>
<!--more-->
<h2 style="text-align:justify;">Instalación</h2>
<p style="text-align:justify;">La instalación básica en Debian GNU/Linux 8 Jessie es <a href="http://docs.mongodb.org/manual/tutorial/install-mongodb-on-debian/" target="_blank">trivial</a>: descargar llave de seguridad de repos, instalar repos, actualizar con <code>apt-get update</code> y luego instalar con <code>apt-get install mongodb-org</code>, ¿fácil, no?</p>
<p style="text-align:justify;">Iniciamos el servicio de mongo ejecutando algo <em>similar</em> a esto (<strong>NOTA</strong>: los parámetros son totalmente opcionales y configurables, además de que puedes hacerlo en modo superusuario directamente):</p>


[code language="bash"]
$ sudo mongod --dbpath=/var/data/db --logpath=/var/log/mongodb
[/code]

<p style="text-align:justify;">La opción <code>--dbpath</code> corresponde al directorio donde se almacenarán tus colecciones físicamente, mientras que la opción <code>--logpath</code> corresponde al directorio donde se almacenarán los eventos y errores que arroje MongoDB.</p>
<p style="text-align:justify;">Una instalación menos trivial implicaría entrar en asuntos arquitectónicos de <a href="http://docs.mongodb.org/manual/core/sharding-introduction/" target="_blank">sharding</a>, <a href="http://docs.mongodb.org/manual/core/replication-introduction/" target="_blank">replica sets</a> y demás hierbas aromáticas que tiene MongoDB para nosotros :D .</p>
<p style="text-align:justify;">Lo interesante (por ahora) es estudiar la shell de MongoDB hecha en Javascript :P</p>

<h2 style="text-align:justify;">Shell de Comandos Javascript</h2>
Abrimos un terminal y escribimos:

[code language="bash"]
$ mongo
[/code]

Obtenemos algo <em>parecido</em> a esto:

[code language="bash"]
MongoDB shell version: 3.0.6
connecting to: test
Server has startup warnings: 
2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] 
2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.
2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] 
&amp;gt; 
[/code]

... y ya estamos listos para ejecutar comandos.
<p style="text-align:justify;">La sintaxis de los comandos es muy similar a la de objetos en Javascript, con espacios de nombre bien definidos:</p>

<ul>
	<li style="text-align:justify;">El comando <span style="color:#d25349;"><strong><code>use &lt;database&gt;</code></strong></span> para conectarse a una base de datos (si no existe, la crea, pero no existirá físicamente hasta que no se inserte al menos un documento en una colección)</li>
	<li style="text-align:justify;">El comando <span style="color:#d25349;"><code>show (dbs | collections)</code></span> permite listar las colecciones (opción <span style="color:#d25349;"><code>collections</code></span>) o bases de datos (opción <span style="color:#d25349;"><code>dbs</code></span>) existentes.</li>
	<li style="text-align:justify;">El comando <span style="color:#d25349;"><code>help</code></span> permite mostrar la ayuda básica de la shell de comandos.</li>
	<li style="text-align:justify;">Una vez conectado a una base de datos, [casi] todos los comandos en la shell de MongoDB son de esta manera: <span style="color:#d25349;"><code>db.&lt;collection&gt;.&lt;command&gt;()</code></span>. Donde <span style="color:#d25349;"><code>db</code></span> es el objeto global de conexión de la shell, <span style="color:#d25349;"><code>&lt;collection&gt;</code></span> es una colección válida dentro de la base de datos seleccionada (con algún documento insertado), y <span style="color:#d25349;"><code>&lt;command&gt;()</code></span> es el comando a ejecutar sobre la colección, sobre documentos, o sobre la metadata de la colección.</li>
</ul>
Hasta el próximo post... :twisted: ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>804</wp:post_id>
		<wp:post_date>2015-09-21 10:16:39</wp:post_date>
		<wp:post_date_gmt>2015-09-21 14:46:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acerca-de-mongodb-parte-1-instalacion-basica-y-shell-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="category" nicename="coco-mongo-xd"><![CDATA[Coco-Mongo xD]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[727]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/645972431841046530";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[15015947851]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[ACERCA DE: MONGODB. PARTE 2. CRUD DE OPERACIONES | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/10/27/acerca-de-mongodb-parte-2-crud-de-operaciones/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.79</wp:comment_author_IP>
			<wp:comment_date>2015-10-27 15:18:23</wp:comment_date>
			<wp:comment_date_gmt>2015-10-27 19:48:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] el post anterior, se mostraron algunos comandos básicos de manejo en la shell; aquellos que tienen [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1445975303.6138169765472412109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1445975459]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1445975460.1414968967437744140625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>COMO DEBERÍA SER EL DESARROLLO: TDD Y/O BDD. TIPOS DE PRUEBAS (...Y PARA EL DESARROLLADOR)</title>
		<link>https://jotaeseymas.wordpress.com/2015/09/22/como-deberia-ser-el-desarrollo-tdd-yo-bdd-tipos-de-pruebas-y-para-el-desarrollador/</link>
		<pubDate>Tue, 22 Sep 2015 21:29:13 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=810</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="tipos de pruebas para el desarrollador"&gt;
<p style="text-align:justify;">En el <a href="https://jotaeseymas.wordpress.com/2015/08/28/como-deberia-ser-el-desarrollo-tdd-yo-bdd-una-significativa-introduccion/" target="_blank">post</a> anterior, hablé sobre como debería ser, en términos generales, un desarrollo TDD, sin embargo existen algunos hechos típicos respecto a la implementación de dichas pruebas:</p>

<ul>
	<li>¿Por dónde empiezo a automatizar?</li>
	<li style="text-align:justify;">Tengo el cliente de mi app en Noruega y el servidor está en Argentina ¿corro las pruebas remotamente?</li>
	<li style="text-align:justify;">¿Las pruebas se pueden "clusterizar"? Porque tengo mi app distribuida en 20 servidores distintos...</li>
	<li>¿Es muy caro eso de "automatizar pruebas"?</li>
	<li>¿Van a despedir o reemplazar al personal que haga pruebas manuales? Ehm... :|</li>
	<li style="text-align:justify;">Tengo un sistema de censo que maneja datos vinculados de diferentes servidores, con web semántica y mensajeria de colas usando <a href="http://zeromq.org/" target="_blank">ZeroMQ</a> montado en una plataforma .NET, Java y C++. NO PUEDO automatizar pruebas en un entorno tan complejo...</li>
	<li style="text-align:justify;">... [y mi favorita] ¿quién va a hacer las pruebas? o_O</li>
</ul>
<p style="text-align:justify;">La respuesta a [la mayoría de] esas preguntas no siempre es trivial, la cuestión va más allá de lo operacional, también es un tema organizacional, cultural y, por encima de todo..., conceptual.</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">Identificando los tipos de pruebas</h2>
<p style="text-align:justify;">Pese a que los autores no se ponen de acuerdo (aún hoy :/ ) sobre como clasificar los tipos de pruebas, en general, existen 6 tipos de pruebas que más frecuentemente se realizan en el desarrollo de sistemas orientado a TDD:</p>

<ol>
	<li style="text-align:justify;"><strong>Pruebas unitarias</strong>: Definen las funcionalidades primarias, generalmente asociadas a historias de usuario (si usas SCRUM) o a casos de uso (si usas RUP o similares). Ya acá hay todo un universo de clasificaciones sobre las que se pueden trabajar. Casi siempre se realizan primero, dentro del alcance de los componentes que se van a desarrollar.</li>
	<li style="text-align:justify;"><strong>Pruebas funcionales:</strong> Definen el aspecto de la integración de los componentes (en el entorno de desarrollo, no de producción) desarrollados de forma estable y con pruebas unitarias. Generalmente asociadas a módulos completos o interfaces que describan procesos completos dentro de la aplicación.</li>
	<li style="text-align:justify;"><em>Pruebas de rendimiento:</em> Definen el aspecto operacional del desempeño de la aplicación en un ambiente similar al de producción. En este punto se evalúan: concurrencia, gestión de hilos, gestión de la memoria RAM, conexiones distribuidas, cambio entre interfaces bajo estrés de la red y conectividad con la base de datos.</li>
	<li style="text-align:justify;"><em>Pruebas de integración:</em> Definen el aspecto de despliegue de la aplicación en el ambiente de producción, [opcionalmente] sin interacción del usuario final. Generalmente, este tipo de pruebas define los parámetros de la integración continua, el cual es un concepto que expresa los hitos de entrega de las funcionalidades al cliente cada cierto tiempo fijo.</li>
	<li style="text-align:justify;"><em>Pruebas de regresión: </em> En las pruebas de regresión se define cual de las trazas (versiones del sistema guardadas en el control de versiones) presenta la mayoría de las funcionalidades requeridas por el cliente, siguiendo un patrón de <a href="http://semver.org/lang/es/" target="_blank">versionamiento semántico</a> y considerando las características definidas durante la prueba anterior.</li>
	<li style="text-align:justify;"><em>Pruebas de aceptación:</em> Una vez definida una versión del sistema (conocida hasta este punto como "estable") que cumple con las características que requería el cliente, se dice que esta prueba es "aceptada" en vez de aprobada. Significa entonces, que el cliente está satisfecho con la calidad del producto y se puede "detener" el <em><strong><span style="color:#d25349;">ciclo de pruebas</span></strong></em>.</li>
</ol>
<p style="text-align:justify;">¿Ciclo de pruebas? Si, <span style="color:#d25349;"><em><strong>ciclo de pruebas</strong></em></span>. Cada uno de los tipos de prueba debe ser ejecutados "n" veces hasta cumplir con los requerimientos (si usas metodologías de desarrollo estructuradas) o historias de usuario (si usas metodologías ágiles). En algunos casos, con cada tipo de prueba son ejecutados "n" veces hasta pasar al siguiente tipo de prueba.</p>
<p style="text-align:justify;">Para los desarrolladores sería muy conveniente utilizar los dos tipos de prueba señalados en negrita, al menos para cumplir, en una fase temprana del desarrollo e independientemente de la metodología usada, con los requerimientos necesarios para entregar una versión estable del sistema en desarrollo.</p>
<p style="text-align:justify;">En un próximo post, hablaré sobre algunas tecnologías existentes en Javascript y usarlas (claro! :mrgreen: ). Hace falta "probar" ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>810</wp:post_id>
		<wp:post_date>2015-09-22 16:59:13</wp:post_date>
		<wp:post_date_gmt>2015-09-22 21:29:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>como-deberia-ser-el-desarrollo-tdd-yo-bdd-tipos-de-pruebas-y-para-el-desarrollador</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="javier-garzas"><![CDATA[Javier Garzás]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[TDD]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/646436136148078592";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[15064448502]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EL MEJOR FRAMEWORK JAVASCRIPT QUE HE VISTO HASTA AHORA...</title>
		<link>https://jotaeseymas.wordpress.com/2015/09/24/el-mejor-framework-javascript-que-he-visto-hasta-ahora/</link>
		<pubDate>Thu, 24 Sep 2015 14:57:20 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=813</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="el mejor framework javascript"&gt;

...y traduzco literalmente lo de la <a href="http://html9responsiveboilerstrapjs.com/" target="_blank">página</a> que visité HOY:
<blockquote>"H9RBS.js (v0.0001) is a flexible, dependency-free, lightweight, device-agnostic, modular, baked-in, component framework MVC library shoelacestrap to help you kickstart your responsive CSS-based app architecture backbone kitchensink tweetybirds..."</blockquote>
O sea, lo mejor pues... XD ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>813</wp:post_id>
		<wp:post_date>2015-09-24 10:27:20</wp:post_date>
		<wp:post_date_gmt>2015-09-24 14:57:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>el-mejor-framework-javascript-que-he-visto-hasta-ahora</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<category domain="post_tag" nicename="wat"><![CDATA[WAT]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[15124962288]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/647062302764564481";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¿QUIERES CREAR EL NOMBRE PARA TU BANDA?</title>
		<link>https://jotaeseymas.wordpress.com/2015/09/28/quieres-crear-el-nombre-para-tu-banda/</link>
		<pubDate>Mon, 28 Sep 2015 17:54:37 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=816</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="creando el nombre para tu banda"&gt;
<p style="text-align:justify;">Javascript, siempre resolviendo los problemas cotidianos :mrgreen: , presenta ahora una solución eficiente a una cuestión no tan trivial: Imagina por un segundo que quieres formar una banda de (inserte género musical aquí... XD ) y de repente te falla la creatividad... Pues ahora con Javascript puedes crear el nombre de tu banda con <a href="https://github.com/Prismatik/bandname" target="_blank">bandname</a>.
P.D.: Pícale al Me Gusta si lo leíste con voz de infomercial ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>816</wp:post_id>
		<wp:post_date>2015-09-28 13:24:37</wp:post_date>
		<wp:post_date_gmt>2015-09-28 17:54:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quieres-crear-el-nombre-para-tu-banda</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="wat"><![CDATA[WAT]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[15258322764]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/648556452043317249";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CONZEPTO: GENERACIÓN DE UN LAYOUT MULTICOLUMNA</title>
		<link>https://jotaeseymas.wordpress.com/2015/10/04/conzepto-generacion-de-un-layout-multicolumna/</link>
		<pubDate>Sun, 04 Oct 2015 19:19:48 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=818</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="generaci&amp;oacute;n de un layout multicolumna"&gt;
<p style="text-align:justify;">¡Feliz fin del comienzo de semana! O si estás leyendo esto el lunes: ¡feliz inicio de semana! :mrgreen: Ya un poco más aliviado de haber culminado unos <a href="https://ve.linkedin.com/in/jhonyalbertogrilletmedina" target="_blank">cursillos</a> <span style="color:#7cbbbb;"><strong>#porai</strong></span>, al fin puedo continuar con los posts, que es lo que mola jijiji XD .</p>
<p style="text-align:justify;">En esta ocasión, y sin más preámbulos, presento uno de mis proyectos más bonitos (después de la <a href="https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/" target="_blank">Librería Angular</a> y mi trabajo ¡claro está! ^^' )...</p>
<p style="text-align:justify;"><a href="https://github.com/ChinuxParibus/zepto-grid" target="_blank">zepto-grid.js</a> es un plugin de <a href="http://zeptojs.com" target="_blank">Zepto.js</a> que desarrollé pensando en generar un layout multicolumna pero sin necesidad de cargar CSS con clases, sino que quería probar que es posible en otras alternativas (<a href="http://vanilla-js.com/" target="_blank">VanillaJS</a> incluso), y pues salió esto :D</p>
<p style="text-align:justify;">Sencilo, todo el código de ejemplo, así como la librería en sí, están en el Gato-pulpo.</p>
<p style="text-align:justify;">Espero lo disfruten y lo aprecien... ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>818</wp:post_id>
		<wp:post_date>2015-10-04 14:49:48</wp:post_date>
		<wp:post_date_gmt>2015-10-04 19:19:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conzepto-generacion-de-un-layout-multicolumna</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/650752217796841472";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[15473375729]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NUESTRO INSÓLITO UNIVERSO... DEL NOSQL</title>
		<link>https://jotaeseymas.wordpress.com/2015/10/09/nuestro-insolito-universo-del-nosql/</link>
		<pubDate>Fri, 09 Oct 2015 15:15:16 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=822</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="nuestro ins&amp;oacute;lito universo del nosql"&gt;
<p style="text-align:justify;">Se que, de algún modo, siempre nos las arreglamos para volver a nuestra "zona de confort" o nuestro "martillo", haciendo alusión a la frase "anónima" que encontré <strong><span style="color:#7cbbbb;">#porai</span></strong>: "al que sabe manejar un martillo, todos los problemas le parecen clavos". Y es que sucede que en el universo <a href="https://es.wikipedia.org/wiki/SQL" target="_blank">SQL</a> [parecieran] no haber muchos martillos que usar, pues generalmente suele decantarse por una solución con <a href="http://www.postgresql.org/" target="_blank">PostgreSQL</a> o <a href="https://www.mysql.com/" target="_blank"><em>maiesecuele</em></a> (no pongo el nombre porque desde que lo asimiló el "<a href="http://www.oracle.com/index.html" target="_blank">Oráculo</a>", se ha vuelto más corporativo que el Co#@%&amp;... &gt;:( ), o incluso el primo ligero de ambos, <a href="https://www.sqlite.org/" target="_blank">SQLite 3</a>.</p>
<p style="text-align:justify;">Pero no es el único universo... :twisted:</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">NoSQL o "Not Only SQL", es un término difundido en estas cuestiones del desarrollo de software desde el 2009, y viene a suplementar las carencias del SQL:</p>

<ol>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Falta de agilidad</span>: una migración de <em>maiesecuele</em> a PostgreSQL no es (o no debería ser) tan trivial como para ignorar estructuras, relaciones, operaciones y dialectos SQL entre las diferentes plataformas, eso representa un problema en <a href="http://www.reactivemanifesto.org/es" target="_blank">sistemas reactivos</a>.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Poca resiliencia</span>: o cambio en las estructuras de base de datos. Aunque es permitido hacerlo en caliente incluso, la integridad de los datos es sacrificada, por lo que dichos cambios estructurales afectarán significativamente el rendimiento y la data.</li>
	<li style="text-align:justify;"><span style="text-decoration:underline;">Lento en escalabilidad</span>: Pese a que <a href="http://www.webopedia.com/TERM/R/RDBMS.html" target="_blank">RBDMS</a> como PostgreSQL ofrecen como virtud, el hecho de soportar grandes cantidades de datos, tal cosa en la práctica es difícil de obtener sin un soporte de infraestructura y una inversión considerable.</li>
</ol>
<p style="text-align:justify;">Por otro lado, y mientras en el universo SQL existen alrededor de <a href="https://en.wikipedia.org/wiki/List_of_relational_database_management_systems" target="_blank">100 RBDMS</a>, en el universo NoSQL existen más de <a href="http://nosql-database.org/" target="_blank">200 DBMS</a> <strong>no relacionales </strong>:mrgreen: , el cual es un término que dice mucho acerca de porque actualmente se han vuelto tan populares y tan demandados:</p>

<ol>
	<li style="text-align:justify;">Ser <strong>no relacionales</strong> supone la carencia de operaciones SQL entre tablas tales como JOINS, CONSTRAINTS, entre otras, ¿simplificando? el manejo de los datos.</li>
	<li style="text-align:justify;">Lo anterior supone también una increíble capacidad de <strong>escalamiento horizontal</strong>, ya que los registros no necesariamente tendrían que tener el mismo contenido.</li>
	<li style="text-align:justify;"><strong>No posee esquemas</strong>, lo cual representa una ventaja a nivel arquitectónico, ya que los datos pueden ser distribuidos en formas diametralemente opuestas al SQL tales como Árboles, Grafos, Listas Enlazadas, Colas, Pilas, etc...</li>
	<li style="text-align:justify;">La gran mayoría de DBMS no relacionales <strong>soportan cambios "en caliente"</strong> a nivel de estructura, configuración y ordenamiento de los datos, sin que esto afecte la integridad de ni el rendimiento.</li>
</ol>
<p style="text-align:justify;">Considero una gran ventaja que muchos DBMS no relacionales tengan <strong>APIs nativas para Javascript</strong>, que es la razón por la que escribo este post y al menos dos posts conceptuales más sobre el universo NoSQL ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>822</wp:post_id>
		<wp:post_date>2015-10-09 10:45:16</wp:post_date>
		<wp:post_date_gmt>2015-10-09 15:15:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nuestro-insolito-universo-del-nosql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[827]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[15647601055]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/652502616199467008";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[PLANETAS DEL UNIVERSO NOSQL. TAXONOMÍA U ORIENTACIONES | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/11/03/planetas-del-universo-nosql-taxonomia-u-orientaciones/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.78</wp:comment_author_IP>
			<wp:comment_date>2015-11-03 17:03:48</wp:comment_date>
			<wp:comment_date_gmt>2015-11-03 21:33:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] NUESTRO INSÓLITO UNIVERSO&#8230; DEL&nbsp;NOSQL [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1446648333]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1446590950.5101070404052734375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1446648334.432643890380859375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1446586429.690062999725341796875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JQUERY NO ES EL ÚNICO. PROBANDO MINIFIED.JS</title>
		<link>https://jotaeseymas.wordpress.com/2015/10/21/jquery-no-es-el-unico-probando-minified-js/</link>
		<pubDate>Thu, 22 Oct 2015 02:33:03 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=828</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="probando minified.js"&gt;
<p style="text-align:justify;">En una aplicación web Javascript "sencilla", es mucho lo que puedes necesitar: desde un framework CSS hasta una librería de manipulación del <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" target="_blank">DOM</a> y puede que algún manejador de templates HTML. Y como si esto no fuera suficiente, también pudieras necesitar integración con Backend (API REST y esas cosas ^^' ), programación asíncrona (con <a href="https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/" target="_blank">Promises</a> o callbacks ^^' ) e incluso manipulación de objetos (<a href="https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/" target="_blank">underscore.js</a> lo hace muy bien). Típicamente (o de facto) pensarías en <a href="http://getbootstrap.com/" target="_blank">Bootstrap CSS</a>, jQuery y <a href="https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/" target="_blank">Handlebars</a> para resolver...</p>
<p style="text-align:justify;">¡Que bueno que jQuery no es el único!</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Buscando y rebuscando nuevas formas de matar a jQuery (como siempre yo de asesino :mrgreen: ), me encontré con una grata sorpresa que no me decepcionó en lo absoluto. Se trata de <a href="http://minifiedjs.com/" target="_blank">Minified</a>, una librería muy potente que para ser un peso ligero, no tiene nada que envidiarle a jQuery, ¿por qué?</p>

<h2 style="text-align:justify;">QUE ME GUSTÓ DE MINIFIED...</h2>
<ol>
	<li style="text-align:justify;"><strong>Realmente ligero:</strong> Todas las funciones de Minified (que no son <a href="http://minifiedjs.com/api/" target="_blank">pocas</a>) caben en ¡8KB!</li>
	<li style="text-align:justify;"><strong>API consistente</strong>: Las funciones universales <code>.get()</code> y <code>.set()</code> fueron las que más me impresionaron. Eso de usar funciones únicas para todo me parece genial.</li>
	<li style="text-align:justify;"><strong>Modular</strong>: Minified tiene 5 módulos claramente identificados que verás más adelante.</li>
	<li style="text-align:justify;"><strong>Todo en uno</strong>: Los 5 módulos con los que cuenta Minified comprenden manipulación del DOM y eventos, manejo de transiciones y animaciones CSS sencillas (fade y slide), creación de nodos, manejo de objetos Javascript y un sistema de templates HTML bastante parecido a Handlebars.</li>
	<li style="text-align:justify;"><strong>Programación Asíncrona</strong>: Minified implementa una forma mínima de la API Promises A+ ¡por defecto!</li>
</ol>
<h2>BIEN... AHORA ¡MANOS AL CÓDIGO!</h2>
<p style="text-align:justify;">Para probar mi punto acá, decidí hacer una lista de tareas bien sencilla, que permita añadir y borrar tareas, muy similar a lo que hice en <a href="https://jotaeseymas.wordpress.com/2015/03/16/base-de-datos-en-el-navegador-parte-2-la-practica/" target="_blank">esta aplicación</a> pero sin persistencia, usando todos los módulos de Minified. Para los CSS use <a href="http://getskeleton.com/" target="_blank">Skeleton</a> y <a href="https://octicons.github.com/" target="_blank">Octicons</a> como pack de íconos.</p>
<p style="text-align:justify;">En los comentarios está la información relevante del código. Para mayor información consulta la API de Minified :D :</p>


[code lang="javascript" title="Archivo: todoApp.js" collapse="true"]
/* Aunque no se esté usando Node.js, Minified.js usa su propia forma de AMD (Asyncronous Module Definition) */
var MINI = require('minified');

/* Definición de espacios de nombre para todas las funciones de Minified.js */
var _ = MINI._,				// Helper de funciones Javascript (basado en &quot;_&quot;)
		$ = MINI.$,				// Manipulación de DOM (como jQuery o Zepto)
		$$ = MINI.$$,			// Efectos especiales y transiciones CSS
		EE = MINI.EE,			// Creación de nodos y elementos del DOM
		HTML = MINI.HTML;	// Compilación de templates HTML (basado en mustache)

/* Manejador del Evento onload (como en jQuery o Zepto)*/
$(function() {
	// &quot;_&quot; tiene [casi] las mismas funciones de Underscore
	var today = _.formatValue('dd-MM-yyyy hh:mm a', new Date()),
	// Sintaxis de templates como mustache
			template = '

&lt;div class=&quot;todo&quot;&gt;

&lt;h3 style=&quot;display: inline-block;&quot;&gt;{{title}}&lt;span class=&quot;u-pull-left&quot; style=&quot;margin-right: 5px;&quot;&gt;&lt;i class=&quot;octicon octicon-x&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/h3&gt;


&lt;span class=&quot;u-pull-right&quot;&gt;{{date}}&lt;/span&gt;

{{content}}
&lt;/div&gt;



'
	//EE() permite crear elementos y nodos del DOM, también permite anidar elementos y crear formas complejas de interacción
			todoForm = EE('form', {'@id': 'todoForm'}, [
				EE('input', {'@id': 'title', '@type': 'text', '@placeholder': 'Título', '$marginRight': '5px'}),
				EE('input', {'@id': 'content', '@type': 'text', '@placeholder': 'Descripción', '@size': '69', '$marginRight': '5px'}),
				EE('button', {'@id': 'newTodo', 'className': 'button-primary'}, 'Nueva Tarea')
			]);

	// .add() añade un nodo hijo al selector
	$('#form').add(todoForm);

	// .toggle() permite crear mapas de animaciones o cambios entre dos estados
	var toggleForm = $('#form').toggle(
	//$$slide y $$fade maneja interacción automática slideIn y slideOut / fadeIn y fadeOut respectivamente
		{'$$slide': 0},
		{'$$slide': 1},
		300
	);

	// Manejo de eventos personalizados (click, change, focus, hover)
	$('#add').onClick(function() {
		toggleForm();
	});

	$('#newTodo').onClick(function() {
		var todo = {
			title: $('#title').get('value'), //Universal .get()
			date: today,
			content: $('#content').get('value')
		};

		toggleForm();

		$('#title, #content').set({'value': ''}); //Universal .set()

		//HTML() permite la &quot;compilación&quot; de templates con objetos
		$('#todo-list').add(HTML(template, todo));

		//Manejador de eventos asíncronos
		$('.octicon-x').onClick(closeTodoHandler);
	});

	function closeTodoHandler(e, index) {
		var self = this; // Viejo truco ^^'
		this.up('.todo')
			.animate({'$$fade': 1, '$$fade': 0}, 300) //Manejo de transiciones
			.then(function() { //Manejo de API Promises A+
				self.up('.todo').remove();
			});
	}

});
[/code]

Y la vista principal

[code lang="html" collapse="true" title="Archivo: index.html"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;link rel=&quot;stylesheet&quot; href=&quot;skeletonCSS/css/skeleton.css&quot;&gt;
	&lt;link rel=&quot;stylesheet&quot; href=&quot;skeletonCSS/css/normalize.css&quot;&gt;
	&lt;link rel=&quot;stylesheet&quot; href=&quot;octicons/octicons.css&quot;&gt;
	&lt;title&gt;Lista de Tareas Minified&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;


&lt;div class=&quot;container&quot;&gt;


&lt;div class=&quot;row&quot;&gt;


&lt;h2&gt;Lista de Tareas&lt;/h2&gt;


			&lt;button id=&quot;add&quot; class=&quot;button-primary&quot;&gt;Añadir Nueva Tarea&lt;/button&gt;


&lt;hr&gt;




&lt;div id=&quot;form&quot;&gt;
				&lt;!-- Formulario de nueva tarea --&gt;
			&lt;/div&gt;




&lt;div id=&quot;todo-list&quot;&gt;
				&lt;!-- Lista de tareas --&gt;
			&lt;/div&gt;


		&lt;/div&gt;


	&lt;/div&gt;


	&lt;script src=&quot;minified.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;todoApp.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

Hasta una próxima pequeña oportunidad :)
<p style="text-align:justify;">Posdata: Todos estos archivos fuente <del>estarán</del> están en mi <a href="https://github.com/ChinuxParibus/post-minified" target="_blank">Gato-Pulpo</a> ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>828</wp:post_id>
		<wp:post_date>2015-10-21 22:03:03</wp:post_date>
		<wp:post_date_gmt>2015-10-22 02:33:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-no-es-el-unico-probando-minified-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[16073188759]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/657021841043623936";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ACERCA DE: MONGODB. PARTE 2. CRUD DE OPERACIONES</title>
		<link>https://jotaeseymas.wordpress.com/2015/10/27/acerca-de-mongodb-parte-2-crud-de-operaciones/</link>
		<pubDate>Tue, 27 Oct 2015 19:48:16 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=837</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="crud de operaciones" &gt;
<p style="text-align:justify;">En el <a href="https://jotaeseymas.wordpress.com/2015/09/21/acerca-de-mongodb-parte-1-instalacion-basica-y-shell-javascript/" target="_blank">post</a> anterior, se mostraron algunos comandos básicos de manejo en la shell; aquellos que tienen relación con la parte <em>operacional</em> de la shell de MongoDB en Javascript. En este post voy a mostrar algunos comandos relacionados con programación en MongoDB, es decir, lo que corresponde al CRUD de operaciones.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">CRUD es el acrónimo de las cuatro operaciones básicas que debe permitir realizar todo sistema de almacenamiento respecto a la información que maneja:</p>

<ol>
	<li style="text-align:justify;"><strong>C</strong> por <em><strong>C</strong>reate</em> (crear y almacenar nueva información)</li>
	<li style="text-align:justify;"><strong>R</strong> por <em><strong>R</strong>ead</em> (leer y obtener información almacenada)</li>
	<li style="text-align:justify;"><strong>U</strong> por <em><strong>U</strong>pdate</em> (modificar información almacenada)</li>
	<li style="text-align:justify;"><strong>D</strong> por <em><strong>D</strong>elete</em> (borrar información almacenada)</li>
</ol>
<p style="text-align:justify;">MongoDB por medio de su shell de comandos permite realizar todas estas operaciones, y unas cuantas más que poseen otra sintaxis en el mundo SQL. Pero antes de probar la sintaxis, hay que tomar en cuenta algunos puntos importantes:</p>

<ul>
	<li style="text-align:justify;">Tanto las bases de datos como las colecciones que permite crear MongoDB, existen o se crean cuando se inserta el primer documento en la colección.</li>
	<li style="text-align:justify;">Una base de datos debe "usarse" primero para ser borrada (algo realmente extraño :?: , considerando que en SQL esto se realiza con la sentencia <code>DROP DATABASE &lt;database&gt;</code>).</li>
	<li style="text-align:justify;">Por defecto, MongoDB se conecta a la base de datos "test", pero este comportamiento puede ser modificado desde la shell o desde el archivo de configuración, no en caliente, aunque se puede cambiar la conexión una vez abierta la shell.</li>
</ul>
A continuación la ejecución de algunos comandos dentro de la shell (recuerda que abres la shell de MongoDB con el comando <code>mongo</code>) :mrgreen: :

[code lang="bash" collapse="true" highlight="1,3,11,12,13,14,15,39,41,43,45" title="CRUD de operaciones"]
&gt; show collections
system.indexes
&gt; db.test.insert({
... numberField: 42,
... stringField: &quot;Clave con string&quot;,
... boolField: true,
... arrayField: ['valores', 'compuestos', false, 10],
... objectField: {n: 1, s: &quot;String&quot;, b: true, a: [1, 2, 3]}
... });
WriteResult({ &quot;nInserted&quot; : 1 })
&gt; db.test.update({numberField: 42}, {$set: {newField: &quot;Campo nuevo&quot;}});
WriteResult({ &quot;nMatched&quot; : 1, &quot;nUpserted&quot; : 0, &quot;nModified&quot; : 1 })
&gt; db.test.find()
{ &quot;_id&quot; : ObjectId(&quot;562f9d5e0d9d0cd53245d0f2&quot;), &quot;numberField&quot; : 42, &quot;stringField&quot; : &quot;Clave con string&quot;, &quot;boolField&quot; : true, &quot;arrayField&quot; : [ &quot;valores&quot;, &quot;compuestos&quot;, false, 10 ], &quot;objectField&quot; : { &quot;n&quot; : 1, &quot;s&quot; : &quot;String&quot;, &quot;b&quot; : true, &quot;a&quot; : [ 1, 2, 3 ] }, &quot;newField&quot; : &quot;Campo nuevo&quot; }
&gt; db.test.find().pretty()
{
	&quot;_id&quot; : ObjectId(&quot;562f9d5e0d9d0cd53245d0f2&quot;),
	&quot;numberField&quot; : 42,
	&quot;stringField&quot; : &quot;Clave con string&quot;,
	&quot;boolField&quot; : true,
	&quot;arrayField&quot; : [
		&quot;valores&quot;,
		&quot;compuestos&quot;,
		false,
		10
	],
	&quot;objectField&quot; : {
		&quot;n&quot; : 1,
		&quot;s&quot; : &quot;String&quot;,
		&quot;b&quot; : true,
		&quot;a&quot; : [
			1,
			2,
			3
		]
	},
	&quot;newField&quot; : &quot;Campo nuevo&quot;
}
&gt; for ( var i = 0 ; i &lt; 100 ; i++ ) { db.test.insert({&quot;_id&quot;: i, &quot;a&quot;: i, &quot;b&quot;: &quot;cadena &quot;+i, &quot;c&quot;: Math.random() &gt; 0.5 ? true : false } ) }
WriteResult({ &quot;nInserted&quot; : 1 })
&gt; db.test.count()
101
&gt; db.test.find({&quot;_id&quot;: 21})
{ &quot;_id&quot; : 21, &quot;a&quot; : 21, &quot;b&quot; : &quot;cadena 21&quot;, &quot;c&quot; : true }
&gt; db.test.remove({numberField: 42});
WriteResult({ &quot;nRemoved&quot; : 1 })
&gt; db.test.count()
100
&gt;
[/code]

<ul>
	<li style="text-align:justify;">En la línea 1, se listan las colecciones disponibles en la base de datos usada (en este caso, usamos la base de datos por defecto: "test"). <code>system.indexes</code> es una colección que existe en todas las bases de datos una vez que tienen documentos insertados.</li>
	<li style="text-align:justify;">En la línea 3, insertamos un documento usando el método <code><a href="https://docs.mongodb.org/manual/tutorial/insert-documents/" target="_blank">insert()</a></code> dentro de una colección que no existe [aún]. Nótese que cuando dejo una sentencia incompleta, la shell de MongoDB me permite completarla o corregirla en la línea siguiente.</li>
	<li style="text-align:justify;">Los documentos se insertan con la sintaxis de Objetos JSON en todos los , y puedes combinar distintos valores según necesites. Igualmente para los parámetros de configuración, y todos los parámetros de las funciones de la shell de MongoDB.</li>
	<li style="text-align:justify;">En la línea 11, con el método <code><a href="https://docs.mongodb.org/manual/tutorial/modify-documents/" target="_blank">update()</a></code> podemos modificar <strong>UN</strong> documento que coincida con la selección (primer parámetro). Si no añadimos el operador <code><strong>$set</strong></code>, MongoDB hará reemplazo completo según lo que se indique en la modificación (segundo parámetro).</li>
	<li style="text-align:justify;">En la línea 12, podemos ver la respuesta de la shell de comandos, indicándonos la cantidad de documentos insertados, modificados, eliminados o seleccionados según corresponda con el comando ejecutado.</li>
	<li style="text-align:justify;">En la línea 13, con el método <code><a href="https://docs.mongodb.org/manual/tutorial/query-documents/" target="_blank">find()</a></code> podemos listar todos los documentos existentes en la colección dentro de un límite razonable de 20 documentos por página, límite que es configurable. De excederse el límite, la shell de MongoDB habilita un <a href="https://docs.mongodb.org/manual/tutorial/iterate-a-cursor/" target="_blank">cursor</a>.</li>
	<li style="text-align:justify;">En la línea 14, la shell de comandos responde devolviendo los documentos que coincidan con el patrón de búsqueda empleado, en un formato que, dependiendo de la longitud del documento, puede llegar a ser incomprensible :/ .</li>
	<li style="text-align:justify;">En la línea 15, se resuelve el problema anterior, anexando el método <code>pretty()</code> al cursor que retorna la consulta, y puede evidenciarse que se lee en un formato más legible cuando necesitas por ejemplo, revisar la integridad de un documento.</li>
	<li style="text-align:justify;">En la línea 39, se evidencia que pueden ejecutarse sentencias Javascript básicas para insertar, modificar u obtener documentos. Son permitidos los bucles y condicionales asi como también la gran mayoría de "clases" de Javascript ES5.</li>
	<li style="text-align:justify;">En la línea 41, el método <code><a href="https://docs.mongodb.org/manual/reference/method/db.collection.count/" target="_blank">count()</a></code> permite obtener el número de documentos almacenado en una colección. En el caso de SQL, sería algo como <code>SELECT COUNT(*) FROM &lt;table&gt;;</code></li>
	<li style="text-align:justify;">En la línea 43, igual que en la línea 13, usa el método <code>find()</code>, pero esta vez con un parámetro que es el de consulta. MongoDB realiza siempre la coincidencia parcial de uno o más documentos.</li>
	<li style="text-align:justify;">En la línea 45, el método <a href="https://docs.mongodb.org/manual/tutorial/remove-documents/" target="_blank"><code>remove()</code></a> elimina los documentos que tengan coincidencia exacta con la selección. Si se desea eliminar únicamente la primera coincidencia se debe especificar en la segunda opción, el número de documentos que deseas eliminar.</li>
</ul>
¡Uff, demasiada teoría! Pero que [espero sea] suficiente para los siguientes posts. ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>837</wp:post_id>
		<wp:post_date>2015-10-27 15:18:16</wp:post_date>
		<wp:post_date_gmt>2015-10-27 19:48:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acerca-de-mongodb-parte-2-crud-de-operaciones</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="category" nicename="coco-mongo-xd"><![CDATA[Coco-Mongo xD]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[727]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[16268238068]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/659094303633858560";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PLANETAS DEL UNIVERSO NOSQL. TAXONOMÍA U ORIENTACIONES</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/03/planetas-del-universo-nosql-taxonomia-u-orientaciones/</link>
		<pubDate>Tue, 03 Nov 2015 21:33:42 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=843</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="planetas del universo nosql" &gt;
<p style="text-align:justify;">Así como en el sistema solar, en el sistema del cuerpo humano y hasta en el sistema nervioso hay todo un complejo e intrincado conjunto de elementos interactuantes, en el <a href="https://jotaeseymas.wordpress.com/2015/10/09/nuestro-insolito-universo-del-nosql/" target="_blank">Universo NoSQL</a> existe toda una categorización compleja para ¿clasificar? :/ las funcionalidades internas de los diferentes DBMS NoSQL existentes.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Las orientaciones NoSQL son diversas, tan amplias como las matemáticas y la imaginación humana. Para los efectos del presente post, solo voy a mencionar tres de éstas, pero existen muchas, muchas más:</p>

<h2 style="text-align:justify;">ORIENTADO A PARES CLAVE-VALOR</h2>
<p style="text-align:justify;">Un par clave-valor es simplemente la forma más sencilla de escalar una base de datos, y cuando me refiero a escalar, me refiero específicamente a la capacidad de aumentar sostenidamente el almacenamiento, recolección, peticiones, concurrencia y el manejo de transacciones en un período específico.</p>


[caption id="attachment_845" align="aligncenter" width="298"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/josmetiquetas.png"><img class=" wp-image-845" src="https://jotaeseymas.files.wordpress.com/2015/11/josmetiquetas.png?w=150" alt="Pares valuados con claves referenciadas" width="298" height="145" /></a> <strong>Pares valuados con claves referenciadas</strong>[/caption]
<p style="text-align:justify;">El ejemplo más claro de una base de datos orientada a pares clave-valor es <a href="http://redis.io/" target="_blank">Redis</a>, aunque existen otros como <a href="https://cassandra.apache.org/" target="_blank">Apache Cassandra</a> que implementa su API en C++ y Javascript.</p>

<h2>ORIENTADO A DOCUMENTOS</h2>
<p style="text-align:justify;">Un "documento" contiene la información de forma <em>semiestructurada</em>, esto es, un objeto <a href="http://json.org/" target="_blank">JSON</a> o <a href="http://bsonspec.org/" target="_blank">BSON</a> (Binary JSON) con la complejidad que se requiera implementar de forma nativa para la aplicación que se esté desarrollando. Ordenando la información segun los tipos de datos básicos de la especificación JSON o BSON que se esté utilizando</p>


[caption id="attachment_846" align="aligncenter" width="269"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png"><img class=" wp-image-846" src="https://jotaeseymas.files.wordpress.com/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png?w=147" alt="Documento JSON típico" width="269" height="274" /></a> <strong>Documento JSON típico</strong>[/caption]
<p style="text-align:justify;">El ejemplo más claro de una base de datos orientada a documentos es <a href="https://www.mongodb.org" target="_blank">MongoDB</a>, sin embargo existen otros manejadores derivados como <a href="http://couchdb.apache.org/" target="_blank">CouchDB</a> que implementa métodos de su API de acceso a datos en Javascript directamente (como una API REST nativa).</p>

<h2 style="text-align:justify;">ORIENTADO A GRAFOS</h2>
<p style="text-align:justify;">La teoría de grafos viene del matemático Leonard Euler, que puedes consultar en este enlace. La idea es que la información sea almacenada en un nodo o vértice con propiedades internas, y que la relación la exprese un grafo dirigido. Esta forma de almacenamiento permite establecer rutas y una comprensión más profunda de los datos.</p>


[caption id="attachment_847" align="aligncenter" width="296"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/grafo2.png"><img class=" wp-image-847" src="https://jotaeseymas.files.wordpress.com/2015/11/grafo2.png?w=150" alt="Grafos típicos " width="296" height="254" /></a> <strong>Grafos típicos</strong>[/caption]
<p style="text-align:justify;">Ejemplos de bases de datos orientadas a grafos son <a href="http://orientdb.com/orientdb/" target="_blank">OrientDB</a> y <a href="https://www.arangodb.com/" target="_blank">ArangoDB</a>. DBMS utilizados principalmente por científicos de datos y algunas compañías que trabajan con analíticas de datos. Estas últimas, no solamente comprenden el uso de grafos, sino también a documentos y clave-valor. La versatilidad de estas herramientas permite modelos más flexibles y resilientes de almacenamiento, típico de los <a href="http://www.reactivemanifesto.org/es" target="_blank">sistemas reactivos</a> ;)</p>
<p style="text-align:justify;"><strong>Posdata</strong>: pendiente por publicar un post de profundización del manejo de ambas herramientas :twisted:</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>843</wp:post_id>
		<wp:post_date>2015-11-03 17:03:42</wp:post_date>
		<wp:post_date_gmt>2015-11-03 21:33:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>planetas-del-universo-nosql-taxonomia-u-orientaciones</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[827]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[16507061765]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/661657555001733120";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WEBSCRAPING CON SLIMER.JS. PARTE 1. WEBSCRAPING</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/29/webscraping-con-slimerjs-y-mongodb-parte-1-webscraping/</link>
		<pubDate>Sun, 29 Nov 2015 23:34:33 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=849</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="webscraping con slimer. parte 1. webscraping" &gt;

La tierra tiembla, eso es un hecho... ^^'

http://www.youtube.com/watch?v=Oc1_Lo4w78g
<p style="text-align:justify;">Pero más allá de eso, me preocupa que en Venezuela haya temblado tan seguido y que la gente esté tan "tranquila" :mrgreen:, es como para ponerse a pensar. Como yo pienso demasiado y muy seguido, me entró la curiosidad de curucutear una tecnología de la que hablé hace bastante tiempo en este <a href="https://jotaeseymas.wordpress.com/2015/05/06/los-fantasmas-pelean-en-el-navegador-phantomjs-vs-slimerjs/" target="_blank">post</a>, se trata de <a href="http://slimerjs.org/" target="_blank">Slimer.js</a>, sin profundizar mucho en la documentación, eso lo dejo a ustedes :-)</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Aprovechando la página de <a href="http://www.funvisis.gob.ve" target="_blank">Funvisis</a> (Fundación Venezolana de Investigaciones Sismológicas, valga la cuña ;-) ), la cual tiene una información interesante sobre los sismos más recientes en mi bonito tricolor, y de la mano de Slimer.js, voy a hacerle un <a href="https://es.wikipedia.org/wiki/Web_scraping" target="_blank">webscraping</a> a la página, y "jugar" ( :twisted: ) posteriormente con el JSON generado, hacer una API REST, persistirla en <a href="http://mongodb.org/" target="_blank">MongoDB</a>, y tal vez subirla a <a href="https://www.heroku.com/" target="_blank">Heroku</a>...</p>

<h2 style="text-align:justify;">Manos a la ubre...</h2>
<p style="text-align:justify;">Slimer.js es bastante completo, tiene [casi] todas las funcionalidades de su competidor <a href="http://phantomjs.org/" target="_blank">Phantom.js</a> (o es al revés la cosa :?: ), salvo que adolece de una buena documentación :'( , pero por lo que puedo entender, la gran mayoría de las funciones escritas en Phantom.js, se ejecutan del mismo modo en Slimer.js. La sección de la página sobre la cual vamos a trabajar es esta:</p>


[caption id="attachment_857" align="aligncenter" width="263"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/funvisis.png" rel="attachment wp-att-857"><img class=" wp-image-857" src="https://jotaeseymas.files.wordpress.com/2015/11/funvisis.png?w=134" alt="Lista de sismos más recientes" width="263" height="295" /></a> <strong>Lista de sismos más recientes en Funvisis<br /></strong>[/caption]
<p style="text-align:justify;">Partiendo del hecho de que la información está estructurada adecuadamente, podemos recibir cada entrada así:</p>


[code lang="js" title="Archivo: app.js" collapse="true"]
/*Clase Javascript para registrar una entrada de sismo*/
function Sismo(data_array) {
	this.fecha = data_array[0]; 		// fecha
	this.hora = data_array[1];			// hora
	this.latitud = data_array[2];		// latitud
	this.longitud = data_array[3];		// longitud
	this.profundidad = data_array[4];	// profundidad
	this.magnitud = data_array[5];		// magnitud
	this.localizacion = data_array[6];	// localizacion
};
[/code]

<p style="text-align:justify;">Luego la parte pesada, usando Slimer.js. Para esto usamos el objeto <a href="http://docs.slimerjs.org/current/api/webpage.html" target="_blank"><code>webpage</code></a> que se encarga de simular el comportamiento de renderizado de una página web como si fuera un navegador (recuerda que Slimer.js está basado en <a href="https://developer.mozilla.org/es/docs/Gecko" target="_blank">Gecko</a> y <a href="https://developer.mozilla.org/es/docs/XUL" target="_blank">XUL</a> :-) )</p>


[code lang="js" title="Archivo: app.js" collapse="true" highlight="1,2,7,9,12,26,30,31"]
var page = require(&quot;webpage&quot;).create(); //Instancia &quot;webpage&quot; de Slimer
page.settings = {
	javascriptEnabled: false, //No cargar scripts de la página
	loadImages: false,		//No cargar imágenes de la página
	plainTextAllContext: true //webpage.plainText es String en vez de DOM HTML
};
page.open(&quot;http://www.funvisis.gob.ve/sis_reciente.php&quot;).then(function(status) {
	if (status == &quot;success&quot;) {
		console.log(&quot;Datos de &quot;+ page.title);
		console.log(&quot;Actualizado al: &quot;+ new Date());
		console.log(&quot;&gt;=========================================================&lt;&quot;);
		var data = page.plainText.match(/((.+\t)+)/gm); //Array con la data a ser procesada
		var index = 0;
		/*Búsqueda: String donde inician los datos significativos*/
		while(true) {
			if (/^\d+\/\d+\/\d+/.test(data[index]) || index == data.length) {
				break;
			}
			index++;
		}
		var sismos = [];
		/*Iteración: Transformamos el arreglo en un JSON válido*/
		for (var i = index; i &lt; data.length; i++) {
			sismos.push(new Sismo(data[i].split('\t')));
		}
		console.log(JSON.stringify(sismos));
	} else {
		console.log(&quot;Pagina no encontrada :\( &quot;);
	}
	page.close();
	slimer.exit();
});
[/code]

No hay misterio en el procesamiento de la data, no diré más 8-) <strong><span style="color:#7cbbbb;">#nailedit</span></strong>...
<p style="text-align:justify;">En la línea 1 se instancia el objeto <a href="http://docs.slimerjs.org/current/api/webpage.html" target="_blank"><code>webpage</code></a> de Slimer.js que como dije antes, sirve para simular el comportamiento de renderizado de una página web, mientras que en la línea 2, quitamos la obtención de información irrelevante para nuestro caso. Ya en la línea 6, empieza el juego XD .</p>
<p style="text-align:justify;">La línea 12 es por sentido común, ya que generalmente, las celdas de las filas en el contenido de las tablas en HTML5 cuando son instanciadas en formato de texto plano, Javascript las separa con un caractér de tabulador, no así con las celdas de la cabecera de la tabla :D , para más información sobre el uso de expresiones regulares vean estos <a href="https://jotaeseymas.wordpress.com/?s=expresiones+regulares" target="_blank">posts</a>.</p>
<p style="text-align:justify;">Luego de obtener la data que interesa, cerramos el cliente <a href="http://blog.arhg.net/2009/10/what-is-headless-browser.html" target="_blank"><em>headless-browser</em></a> y salimos del script en las penúltimas líneas.</p>

<h2 style="text-align:justify;">Se me olvidaba...</h2>
La instalación de Slimer.js es trivial si tienes <a href="http://nodejs.org" target="_blank">Node.js</a> y cualquier sistema GNU/Linux (yo tengo Debian 8 Jessie):

[code lang="bash"]
$ sudo npm -g install slimerjs
[/code]

<p style="text-align:justify;">O como usuario <code>root</code> si no tienes permisos <code>sudo</code>. Igualmente la ejecución del script es igualmente trivial:</p>


[code lang="bash"]
$ slimerjs app.js
[/code]

[caption id="attachment_862" align="aligncenter" width="709"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/captura-de-pantalla-de-2015-11-29-185017.png" rel="attachment wp-att-862"><img class=" wp-image-862" src="https://jotaeseymas.files.wordpress.com/2015/11/captura-de-pantalla-de-2015-11-29-185017.png?w=150" alt="Nada amigable, por ahora ^^'" width="709" height="137" /></a> <strong>Nada amigable, por ahora ^^'</strong>[/caption]
<p style="text-align:justify;">Sumado a esto, y si la ejecución es adecuada, te saldrán dos ventanas, una con el logo de Slimer.js y otra con el "renderizado" de la página según lo que hayas desarrollado en el script, pero puedes ignorarlas tranquilamente. Por el momento, solo tenemos un flujo <a href="http://json.org/" target="_blank">JSON</a> con toda la información de la tabla, luego sigo temblando, perdón, pensando ;-)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>849</wp:post_id>
		<wp:post_date>2015-11-29 19:04:33</wp:post_date>
		<wp:post_date_gmt>2015-11-29 23:34:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>webscraping-con-slimerjs-y-mongodb-parte-1-webscraping</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="mozilla-labs"><![CDATA[Mozilla Labs]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[850]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/671110056151158785";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17317331030]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>USO DE TEMPLATES HANDLEBARS CON ZEPTO. MITAD II. RUTAS, &quot;HELPERS&quot; Y &quot;PARTIALS&quot;</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/30/uso-de-templates-handlebars-con-zepto-mitad-ii-rutas-helpers-y-partials/</link>
		<pubDate>Mon, 30 Nov 2015 07:00:18 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=868</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="uso de templates handlebars con zepto"&gt;

[caption id="attachment_777" align="aligncenter" width="238"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg" rel="attachment wp-att-777"><img class=" wp-image-777" src="https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg?w=150" alt="Bigotes con estilo!!!" width="238" height="238" /></a> <strong>Bigotes con estilo!!!</strong>[/caption]
<p style="text-align:justify;">¿Un post con bigotes al comienzo? Suena interesante… <span class="wp-smiley wp-emoji wp-emoji-mrgreen" title=":mrgreen:">:mrgreen:</span></p>
<p style="text-align:justify;">En el <a href="https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/" target="_blank">post</a> anterior, hablé de algunas de las características más comunes de esta librería para templates, a continuación la segunda parte donde aplico otras características más avanzadas.</p>
<p style="text-align:justify;"><!--more--></p>

<h2 style="text-align:justify;">CAMBIOS APLICADOS</h2>
<p style="text-align:justify;">He hecho varios cambios en la estructura inicial del proyecto respecto al post anterior para ilustrar las funcionalidades que vamos a discutir aquí. Para empezar, separé el código fuente en dos archivos: <code>index.html</code> que será la base de nuestra app, mientras que <code>template-app.js</code> contiene el código fuente de la generación de la data y nuevas funcionalidades como ya podrán detallar en el código fuente más adelante:</p>


[code lang="html" title="Archivo: index.html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;link rel=&quot;stylesheet&quot; href=&quot;entireframework.min.css&quot;&gt;
	&lt;title&gt;Ejemplo Handlebars&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;Lista de usuarios con Handlebars&lt;/h1&gt;


&lt;div class=&quot;container&quot;&gt;

&lt;div class=&quot;template&quot;&gt;&lt;/div&gt;

	&lt;/div&gt;


	&lt;!-- Templates e instancia de Javascript --&gt;
	&lt;script src=&quot;handlebars-v3.0.0.js&quot;&gt;&lt;/script&gt;
	&lt;script id=&quot;userlist&quot; type=&quot;text/x-handlebars-template&quot;&gt;
		{{#display userList cards=4}}
			{{&gt; card}}
		{{/display}}
	&lt;/script&gt;
	&lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;faker.min.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;template-app.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

Y el otro archivo:

[code lang="js" title="Archivo: template-app.js" collapse="true"]
$(function(){

	Handlebars.registerPartial(&quot;fullName&quot;, &quot;{{lastName}}, {{firstName}}&quot;);

	Handlebars.registerPartial(&quot;card&quot;, &quot;
&lt;div style=\&quot;border: 1px solid {{#if enabled}}green{{else}}red{{/if}}; margin: 10px;\&quot;&gt;
&lt;h2&gt;{{&gt; fullName}}&lt;/h2&gt;

&lt;strong&gt;{{address}}&lt;/strong&gt;

&lt;em&gt;Teléfono: {{phone}}&lt;/em&gt;
&lt;hr&gt;

{{#with company}}
&lt;blockquote style=\&quot;font-style: italic;\&quot;&gt;&lt;strong&gt;{{job}}&lt;/strong&gt;
{{motto}}
&lt;/blockquote&gt;

{{/with}}&lt;/div&gt;

&quot;);

	Handlebars.registerHelper(&quot;display&quot;, function(list, options) {
		var i = 0, j = 0, arr = [], sub = [],
				len = options.hash['cards'], out = &quot;&quot;;
		while (i &lt; list.length) {
			while(j &lt; len) {
				sub.push(list[i]);
				j++; i++;
			};
			arr.push(sub); j = 0; sub = [];
		};
		for (i = 0; i &lt; arr.length; i++) {
			out += &quot;
&lt;div class=\&quot;row\&quot;&gt;&quot;;
			for (j = 0; j &lt; len; j++) {
				out += &quot;
&lt;div class=\&quot;col c&quot;+arr.length+&quot;\&quot;&gt;&quot; + options.fn(arr[i][j]) + &quot;&lt;/div&gt;

&quot;;
			};
			out += &quot;&lt;/div&gt;

&quot;;
		};
		return out;
	});

	//español
	faker.locale = 'es';

	var listaUsuarios = []; //arreglo de usuarios;

	for (var i = 0; i &lt; 12; i++) {
		//crea un único usuario cada vez que se declara la variable
		var usuario = {
			firstName: faker.name.firstName(),
			lastName: faker.name.lastName(),
			address: faker.address.streetAddress(),
			phone: faker.phone.phoneNumber(),
			company: {
				job: faker.company.companyName(),
				motto: faker.company.catchPhrase()
			},
			enabled: faker.random.number() ? true : false
		};
		//Se agrega al arreglo de usuarios
		listaUsuarios.push(usuario);
	};

	//Se encapsula la lista
	var lista = { userList: listaUsuarios };

	//se convierte de semántica Handlebars a HTML plano
	var source = $('#userlist').html(),

	//se precompila el template HTML para insertar datos
	template = Handlebars.compile(source);

	//se insertan datos y se añaden al cuerpo HTML
	$('.template').append(template(lista));
});

[/code]

<p style="text-align:justify;">Incluí el framework <a href="http://mincss.com/" target="_blank">min.css</a> para darle formato a la fuente de la página y tener un sistema de grillas sencillo que haga el trabajo, me gustó bastante ese framework :D .</p>

<h2 style="text-align:justify;">RUTAS A OBJETOS ANIDADOS</h2>
<p style="text-align:justify;">Handlebars cuenta con la capacidad de incluír objetos anidados complejos dentro del contexto de un template específico o de varios anidados. Pueden apreciar en el Javascript el uso del helper <code>{{#with}}</code>, el cual indica que un contexto de un atributo determinado, contiene un objeto anidado que puede ser aplicado para [casi] cualquier nivel de recursión, evitando colisiones entre los distintos espacios de nombres. ^^'</p>

<h2 style="text-align:justify;">REGISTRO DE "HELPERS"</h2>
<p style="text-align:justify;">Los helpers son las funciones que posee Handlebars para realizar iteraciones, anidar bloques y ejecutar condicionales, comienzan con un símbolo ("<code>#</code>"). Sumado a las que Handlebars posee, se pueden registrar cualquier cantidad de helpers adicionales, que no son más que una lógica Javascript de presentación y adecuación de un contexto dentro de un template. Para registrar helpers, se usa la función <code>Handlebars.registerHelper()</code>, que acepta dos parámetros: un array con el o los objetos a ser mostrados y un objeto hash con algunas opciones de configuración sobre el contexto. Puedes visitar la <a href="http://handlebarsjs.com/builtin_helpers.html" target="_blank">documentación</a> para saber más sobre los helpers. ^^'</p>
<p style="text-align:justify;">Algo realmente agradable de los helpers es que son totalmente parametrizables. En el template del archivo <code>index.html</code>, pueden ver que aparte de iterar sobre la lista encapsulada, permite mediante el parametro <code>cards</code>, modificar el número de cuadros que aparecen en la grilla, las posibilidades son infinitas con semejante poder.</p>

<h2 style="text-align:justify;">REGISTRO DE "PARTIALS" TEMPLATES</h2>
<p style="text-align:justify;">Un "partial template" es un template reusable en múltiples sitios de nuestra app, que incluso, puede tener cierta lógica de presentación, combinando o formateando uno o más atributos del contexto del template. Pueden ver en la línea 3 del archivo template-app.js un ejemplo de esto, combinando ambos atributos y usándolos en otro template o partial template según se necesite. Los partial templates tienen la ventaja de que son anidables. Comienzan con un sígno <em>mayor que</em> ("<code>&gt;</code>"). En la línea 5 del Javascript, vemos que el partial template registrado arriba se usa debajo sin ningúna declaración adicional, y a su vez, el partial template registrado debajo se usa en <code>index.html</code>.</p>

<h2 style="text-align:justify;">Y AHORA ¿QUÉ TENEMOS?</h2>
Para que se hagan una idea de lo que hicimos, vamos a ver algunas capturas configurando el parámetro <code>cards</code> con 2, 3 y 4 elementos por fila:

[caption id="attachment_876" align="aligncenter" width="297"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/handlebars-2-por-fila.png" rel="attachment wp-att-876"><img class=" wp-image-876" src="https://jotaeseymas.files.wordpress.com/2015/11/handlebars-2-por-fila.png?w=138" alt="Usando cards = 2 en index.html" width="297" height="323" /></a> <strong>Usando cards = 2 en index.html</strong>[/caption]

[caption id="attachment_877" align="aligncenter" width="290"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/handlebars-3-por-fila.png" rel="attachment wp-att-877"><img class="wp-image-877 " src="https://jotaeseymas.files.wordpress.com/2015/11/handlebars-3-por-fila.png?w=150" alt="handlebars-3-por-fila" width="290" height="236" /></a> <strong>Usando cards = 3 en index.html</strong>[/caption]

[caption id="attachment_878" align="aligncenter" width="286"]<a href="https://jotaeseymas.files.wordpress.com/2015/11/handlebars-4-por-fila.png" rel="attachment wp-att-878"><img class="wp-image-878 " src="https://jotaeseymas.files.wordpress.com/2015/11/handlebars-4-por-fila.png?w=150" alt="handlebars-4-por-fila" width="286" height="207" /></a> <strong>Usando cards = 4 en index.html</strong>[/caption]

Viendo un ejemplo sencillo como este, no me queda duda de que Handlebars tiene un buen bigote que vale la pena mover ¡Feliz bigote! ;)

[caption id="attachment_784" align="aligncenter" width="329"]<a href="https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif" rel="attachment wp-att-784"><img class=" wp-image-784" src="https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif?w=150" alt="XD XD XD" width="329" height="204" /></a> XD XD XD[/caption]

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>868</wp:post_id>
		<wp:post_date>2015-11-30 02:30:18</wp:post_date>
		<wp:post_date_gmt>2015-11-30 07:00:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uso-de-templates-handlebars-con-zepto-mitad-ii-rutas-helpers-y-partials</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17325681720]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/671222241237983232";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LIBRERIA ANGULAR. PARTE 4,5. PROVEYENDO E INTEGRANDO</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/</link>
		<pubDate>Sat, 12 Dec 2015 04:29:04 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=881</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="parte 4,5. proveyendo e integrando" &gt;

Vayamos al grano... ¡PERDOOOÓN :'( !

https://www.youtube.com/watch?v=8eYHvrgPqQ0
<p style="text-align:justify;">Me he tardado demasiado con los posts, con el blog, y con muchas cosas en general, el año se va a acabar y no se respira aire navideño (todavía :roll: ). Increíble que este año se haya ido volando, han pasado 5 meses desde que escribí el último <a href="https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/" target="_blank">post</a> de la serie... Pero bueno, basta de <a href="http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara" target="_blank">chácharas</a> y a lo que vamos, que para eso estoy :mrgreen:</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">He hecho muchas modificaciones sobre el código fuente, tantas que por poco y hago un nuevo proyecto en el <a href="https://github.com/ChinuxParibus/libreria-angular" target="_blank">Gato-Pulpo</a> con tantas modificaciones de fondo y algunas de forma. Son tantas modificaciones que no caben en un post, pero ya ustedes se darán cuenta viendo el repo jejeje ^^' . A manera de hacer el post suficientemente corto, empecemos de una vez con las modificaciones relevantes para este post, las demás irán saliendo paulatinamente.</p>

<h2 style="text-align:justify;">Antes de empezar</h2>
<ul>
	<li style="text-align:justify;">Actualicé la versión de Angular.js a la 1.3.20 (la más reciente al momento de escribir este post), también el componente ngRoute (igual la 1.3.20).</li>
	<li style="text-align:justify;">Actualicé la versión de Dexie.js a la 1.2 (la más reciente al momento de escribir este post).</li>
	<li style="text-align:justify;">Las modificaciones de estas versiones NO afectan lo que hemos visto en toda la serie.</li>
</ul>
Una vez dicho lo anterior, ¡hora de empezar!
<h2>Proveyendo</h2>
<p style="text-align:justify;">El objeto <code><a href="https://code.angularjs.org/1.3.20/docs/api/auto/service/$provide" target="_blank">$provide</a></code> de Angular.js es el objeto más utilizado por todo el framework, ya que es la base (o un wrapper) para definir otros modulos que crean contenido, nuevos patrones de diseño, entre otras funcionalidades. La siguiente tabla resume, en inglés, todo lo que se puede hacer con los <a href="https://code.angularjs.org/1.3.20/docs/guide/providers" target="_blank">providers</a>:</p>

[caption id="attachment_883" align="aligncenter" width="477"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/angular-provide-resume.png" rel="attachment wp-att-883"><img class=" wp-image-883" src="https://jotaeseymas.files.wordpress.com/2015/12/angular-provide-resume.png?w=150" alt="¿Algunos les suenan conocidos?" width="477" height="124" /></a> <strong>¿Algunos les suenan conocidos? XD [Cortesía de angularjs.org :roll: ]<br /></strong>[/caption]
<p style="text-align:justify;">Hay dos maneras de crear un <code>$provider</code>, la primera es la más fácil: usando la sintaxis de angular (<code>$factory</code>, <code>$service</code>, <code>$value</code>, <code>$constant</code>), al respecto de las dos primeras, ya hablamos de ellas en <a href="https://jotaeseymas.wordpress.com/?s=libreria+angular" target="_blank">posts</a> anteriores a este tutorial, y respecto a las dos últimas, hay un <a href="http://ilikekillnerds.com/2014/11/constants-values-global-variables-in-angularjs-the-right-way/" target="_blank">artículo</a> muy interesante respecto a la forma "correcta" de usar y entender estos <em>providers</em>.</p>
<p style="text-align:justify;">Un <code>$valueProvider</code> (todos los <em>providers</em> terminan en la palabra "Provider", sean definidos explícitamente o no) es un objeto que almacena un valor modificable de manera global, sin afectar directamente el <code>$rootScope</code>. Mientras que un <code>$constantProvider</code> es un objeto de sólo lectura que tiene la misma característica de estar disponible globalmente.</p>


[code lang="js" title="Archivo: app/config.js" collapse="true" firstline="2" highlight="3,5"]
...
libreria.value('$msg', 'Agregado a la lista!'); //$valueProvider

libreria.constant('DB', new Dexie('libreria-angular')); //$constantProvider
...
[/code]

La segunda forma de definir un <em>provider</em>:

[code lang="js" title="Archivo: app/provider.js" collapse="true" firstline="3" highlight="5,6"]
...
//Provider de tablas para la estructura de la base de datos
libreria.provider('tablas', [function() { //$tablasProvider
	var self = this; // cambio de scope, &quot;this&quot; ahora es local
...
[/code]

<p style="text-align:justify;">La línea 6 es importante porque cada <em>provider</em> definido explícitamente, debe sobreescribir el método <code>$get</code> del objeto <code>$provide</code>, eso implica que dicho método y todos los demás dentro del provider, van a cambiar de <code>$scope</code> sin que podamos advertirlo, a menos que hagamos la persistencia del <code>$scope</code> local de la función dentro del método. Sin profundizar mucho, acá la implementacion de dicho método (está dentro de un objeto, por eso la sintaxis):</p>


[code lang="js" title="Archivo: app/provider.js" collapse="true" firstline="53" highlight="55"]
...
	//Método proveedor que registra y revela los métodos del provider
	$get: function() {
		return {
			setCollectionToMap: self.setCollectionToMap(key, name),
			getCollectionFromMap: self.getCollectionFromMap(key),
			setDataToMap: self.setDataToMap(key, data),
			getDataFromMap: self.getDataToMap(key),
			getMap: self.getMap()
		};
	}
...
[/code]

<p style="text-align:justify;">En una fase de configuración, los <em>providers</em> son sumamente útiles, ya que pueden realizar métodos antes de que incluso, otras instancias del mismo objeto sean utilizadas dentro de la aplicación, dicho en otras palabras, podemos "pre-arrancar" la aplicación y ejecutar otras funciones (como configurar una base de datos, una autenticación, o sincronizar datos con API REST, por ejemplo) antes de iniciar realmente la aplicación como tal. Puedes ver el archivo <a href="https://github.com/ChinuxParibus/libreria-angular/blob/master/app/config.js" target="_blank">config.js</a> y darte una idea de lo útil de los <em>providers</em>.</p>

<h2>Controlando</h2>
<p style="text-align:justify;">Reescribí los controladores para usar directamente el servicio <code>$crud</code> según corresponda. Antes estaba contra un array sin persistencia, ahora está persistida en la base de datos IndexedDB generada con Dexie.js. Adicionalmente, creé un nuevo controlador, que emite un aviso que indica una operación satisfactoria, usando el <code>$valueProvider</code> creado en la fase de configuración.</p>


[code lang="js" title="Archivo: app/controllers.js" collapse="true" firstline="70"]
...
libreria.controller('AvisoCtrl', ['$scope', '$msg', function ($scope, $msg) {
	$scope.mensaje = $msg;
}]);
...
[/code]

<h2>Enrutando</h2>
<p style="text-align:justify;">En vez de usar dos templates distintos para la lista de libros seleccionada (inicialmente y vía filtro de categorías), usé el mismo template para ambas rutas, con la salvedad de que el filtro de búsqueda fuera aplicable a ambas de forma transparente.</p>


[code lang="js" title="Archivo: app/router.js" collapse="true" firstline="9"]
...
	.when('/categorias/:indice', {
		templateUrl: rootDir+'/libros.html',
		controller: 'LibrosCtrl'
	})
...
[/code]

<h2>Fabricando</h2>
<p style="text-align:justify;">Los métodos que realizaban operaciones contra el array de categorías y de libros fueron eliminados de sus respectivos <em>factories</em>, para dejar que los <em>controllers</em> hagan las operaciones de persistencia directa con la base de datos a través del servicio <code>$crud</code> (del cual hablé en un <a href="https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/" target="_blank">post</a> anterior). No hay mucho más que decir ^^'</p>

<h2 style="text-align:justify;">Sirviendo</h2>
<p style="text-align:justify;">El archivo <a href="https://github.com/ChinuxParibus/libreria-angular/blob/master/app/service.js" target="_blank">service.js</a> es el que más modificaciones ha sufrido, empezando porque tuve que aprender a usar la API Q+ de Promises que tiene Angular.js (no es fácil, pero es muy útil XD ), particularmente el llenado inicial de la base de datos es un código bastante complejo si no conoces los conceptos que involucra la programación asíncrona y trabajar con <a href="https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/" target="_blank">Promises en Javascript</a>:</p>


[code lang="js" title="Archivo: app/service.js" collapse="true" firstline="44" highlight="51"]
...
	/* Llenar ambas tablas */
	var P = [
		self.obtenerTodo('listaLibros'),    // [0]
		self.obtenerTodo('listaCategorias') // [1]
	];

	$q.all(P).then(function (data) {
		if (data[0].length == 0) { // LLenar tabla listaLibros
			self.llenar('listaLibros', libreria.listaLibros, libreria.Libro);
		}
		if (data[1].length == 0) { // Llenar tabla listaCategorias
			self.llenar('listaCategorias', catalogo.listaCategorias, catalogo.Categoria);
		}
	});
...
[/code]

<p style="text-align:justify;">Por mencionar un ejemplo: <code>$q.all()</code> recibe un array de Promises y las ejecuta al tiempo, para sumarlas en una única Promise que contiene un hash de valores que retornan ambas Promises ( o_O )... En fin, puedes consultar la <a href="https://code.angularjs.org/1.3.20/docs/api/ng/service/$q" target="_blank">documentación</a> si te parece enredado :P</p>

<h2 style="text-align:justify;">Integrando</h2>
<p style="text-align:justify;">¡Uf, pero que largo ha quedado! Si has llegado hasta acá, te felicito, he acá los resultados:</p>


[caption id="attachment_894" align="aligncenter" width="512"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-libros.png" rel="attachment wp-att-894"><img class=" wp-image-894" src="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-libros.png?w=150" alt="Lista de libros traídos desde la base de datos" width="512" height="372" /></a> <strong>Lista de libros extraídos desde la base de datos IndexedDB<br /></strong>[/caption]

[caption id="attachment_891" align="aligncenter" width="513"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-confirmacion.png" rel="attachment wp-att-895"><img class="wp-image-891" src="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-confirmacion.png?w=150" alt="" width="513" height="171" /></a> <strong>Obtenemos confirmación al añadir un nuevo libro con el método addLibro()...</strong>[/caption]

[caption id="attachment_895" align="aligncenter" width="513"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro.png" rel="attachment wp-att-895"><img class=" wp-image-895" src="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro.png?w=150" alt="Vemos la persistencia reflejada en la base de datos" width="513" height="260" /></a> <strong>y vemos la persistencia reflejada en la base de datos!</strong>[/caption]

[caption id="attachment_893" align="aligncenter" width="513"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-guardar-categoria.png" rel="attachment wp-att-893"><img class=" wp-image-893" src="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-guardar-categoria.png?w=150" alt="Añadimos nueva categoría..." width="513" height="171" /></a> <strong>Añadimos nueva categoría...</strong>[/caption]

[caption id="attachment_890" align="aligncenter" width="513"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-categorias.png" rel="attachment wp-att-890"><img class=" wp-image-890" src="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-categorias.png?w=150" alt="... y vemos el cambio reflejado ^^'" width="513" height="294" /></a> <strong>... y nuevamente vemos el cambio reflejado</strong> ^^'[/caption]

[caption id="attachment_896" align="aligncenter" width="513"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro-nueva-categoria.png" rel="attachment wp-att-896"><img class=" wp-image-896" src="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro-nueva-categoria.png?w=150" alt="Añadimos un nuevo libro de la nueva categoría creada" width="513" height="171" /></a> <strong>Añadimos un nuevo libro de la nueva categoría creada</strong>[/caption]

[caption id="attachment_892" align="aligncenter" width="514"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-final.png" rel="attachment wp-att-892"><img class=" wp-image-892" src="https://jotaeseymas.files.wordpress.com/2015/12/persistencia-final.png?w=150" alt="Resultado final de las operaciones sobre la base de datos XD" width="514" height="185" /></a> <strong>Resultado final de las operaciones sobre la base de datos XD</strong>[/caption]
<p style="text-align:justify;">Parece que con toda la información que he adquirido, quisiera extender el tutorial jejeje ^^' , pero por ahora, aplausos para mí que sumo +0,5 a la cuenta.</p>
<p style="text-align:justify;">Gracias por la espera y por la paciencia ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>881</wp:post_id>
		<wp:post_date>2015-12-11 23:59:04</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:29:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria-angular-parte-45-proveyendo-e-integrando</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="angularjs"><![CDATA[angularjs]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formularios"><![CDATA[formularios]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="category" nicename="la-piedra-angular"><![CDATA[La Piedra Angular]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17715942382]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/675532832492556288";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[ACERCA DE: ORM BOOKSHELF | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/12/15/acerca-de-orm-bookshelf/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.15</wp:comment_author_IP>
			<wp:comment_date>2015-12-15 02:50:50</wp:comment_date>
			<wp:comment_date_gmt>2015-12-15 07:20:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] LIBRERIA ANGULAR. PARTE 4,5. PROVEYENDO E&nbsp;INTEGRANDO [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1450164051.414185047149658203125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1450164070]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1450164070.709423065185546875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JAVASCRIPT 101. FUNCIONES DE ORDEN SUPERIOR</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/javascript-101-funciones-de-orden-superior/</link>
		<pubDate>Sun, 13 Dec 2015 09:19:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=901</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="javascript 101. funciones de orden superior" &gt;
<p style="text-align:justify;">En la teoría formal de funciones, aquellas que son de Orden Superior, son aquellas <a href="https://es.wikipedia.org/wiki/Funci%C3%B3n_de_orden_superior" target="_blank">funciones</a> que apuntan a un subconjunto de datos generado por otra(s) funcion(es), o cuyo origen es un subconjunto de datos de la misma naturaleza. Esto en <a href="https://es.wikipedia.org/wiki/Programaci%C3%B3n_funcional" target="_blank">programación funcional</a> no es más que una función que puede recibir otras funciones como parámetros o que puede retornar una función. Esto es una característica muy aprovechable en lenguajes de programación funcionales como Javascript :roll: .</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Espero hayas estudiado bastante, es hora de un examen... Aqui tienes :twisted:</p>


[caption id="attachment_902" align="aligncenter" width="514"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/parte-1-nosuperior.png" rel="attachment wp-att-902"><img class=" wp-image-902" src="https://jotaeseymas.files.wordpress.com/2015/12/parte-1-nosuperior.png?w=150" alt="Da como miedito... :(" width="514" height="120" /></a> <strong>Da como miedito...</strong> :([/caption]
<p style="text-align:justify;">Y pues bueno, como estudiamos bastante Javascript ( :? ehm...), pero no tenemos ni idea de que va el rollo de las Funciones de Orden Superior, lo hacemos a la manera en que conocemos, la forma Vanilla JS XD :</p>


[code lang="js" collapse="true" title="Usando Vanilla JS"]
/* Se obtiene la frase */
var frase = document.querySelector('#trabalenguas').innerHTML;

/* Se separa la frase por espacios (signos de puntuación incluídos)*/
var arrayPalabras = frase.split(' ');

console.time('Forma 1. Vanilla JS');
var aux = []; //Auxiliar para guardar las palabras sin signos de puntuación
arrayPalabras.forEach(function(palabra) {
	/* Se eliminan los signos de puntuación */
	aux.push(palabra.replace(/(\w+)[\.,]?/i, '$1'));
});
arrayPalabras = aux; // Array limpio

var arrayMayusculas = [];
arrayPalabras.forEach(function(palabra) {
	/* Cada palabra a mayúsculas */
	arrayMayusculas.push(palabra.toUpperCase());
});

console.log('Respuesta 1:', arrayMayusculas);

var contador = {}; //&quot;Mapa&quot; de palabras a contar
arrayPalabras.forEach(function(palabra) {
	/* Cada palabra a minúsculas para facilitar conteo */
	palabra = palabra.toLowerCase();
	/* notación &quot;Array&quot; de &quot;Object&quot;. Validando que el atributo exista */
	if (typeof contador[palabra] !== 'undefined') {
		contador[palabra]++; // conteo único por atributo dentro del objeto
	} else {
		contador[palabra] = 1; // se crea el atributo dentro del objeto
	}
});

console.log('Respuesta 2:', contador);

var arraySeleccion = [];
arrayPalabras.forEach(function(palabra) {
	/* true en palabras como &quot;Casa&quot; o &quot;casa&quot; */
	if (/^[Cc]/.test(palabra))
		arraySeleccion.push(palabra);
});

arraySeleccion.sort(); // Se ordena el Array de forma ascendente

var i = 0;
while(i &amp;lt; arraySeleccion.length){ // Búsqueda lineal
	/* true si es idéntica a siguiente posición */
	if(arraySeleccion[i] === arraySeleccion[i + 1])
		arraySeleccion.splice(i--, 1); // Se elimina posición anterior
	i++;
}

console.log('Respuesta 3:', arraySeleccion);
console.timeEnd('Forma 1. Vanilla JS');
[/code]

<p style="text-align:justify;">¡Voilá! Un "poco trivial", ¿eh? ^^' Primero veamos los resultados y luego explico un poco de que va el post, claro:</p>


[caption id="attachment_904" align="aligncenter" width="512"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-1.png" rel="attachment wp-att-904"><img class=" wp-image-904" src="https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-1.png?w=150" alt="¿6.26milisegundos? Nada mal ¿eh? :D" width="512" height="58" /></a> <strong>¿6.26 milisegundos? Nada mal ¿eh?</strong> :D[/caption]
<p style="text-align:justify;"><code>console.time()</code> es un objeto del navegador que sirve para hacer profiling básico (cuanto tiempo tarda tu código en ejecutarse), para mas detalles puedes visitar este <a href="https://jotaeseymas.wordpress.com/2015/02/27/la-incomprendida-consola-de-javascript/" target="_blank">enlace</a>. Pero el meollo no es ese, sino explicar la ventaja de usar funciones de orden superior. La función <a href="https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array/forEach" target="_blank"><code>forEach()</code></a> es un ejemplo claro de estas funciones: recibe una función como parámetro que será ejecutada por cada elemento existente dentro del Array, es decir, no se ejecutará sobre los valores <code><strong>null</strong></code>, <code><strong>NaN</strong></code>, cadenas vacías o <code><strong>undefined</strong></code>; nos queda de perlas para lo que queremos hacer y tiene un rendimiento decente si consideramos que son pocas líneas de código, pero la cosa se complica. Ahora imagínate que la prueba cambia drásticamente:</p>


[caption id="attachment_903" align="aligncenter" width="513"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/parte-2-superior.png" rel="attachment wp-att-903"><img class=" wp-image-903" src="https://jotaeseymas.files.wordpress.com/2015/12/parte-2-superior.png?w=150" alt="¿¡ perdón !? o_O" width="513" height="123" /></a> <strong>¿¡ perdón !?</strong> o_O[/caption]
<p style="text-align:justify;">Afortunadamente, Javascript cuenta con muchas más funciones de orden superior que podemos usar. Mmm, digamos que ahora si estudiamos de verdad XD</p>


[code lang="js" collapse="true" title="Usando funciones de orden superior"]
/* Se obtiene la frase */
var frase = document.querySelector('#trabalenguas').innerHTML;

/* Se separa la frase por espacios (signos de puntuación incluídos)*/
var arrayPalabras = frase.split(' ');

console.time('Forma 2. Funciones de orden superior');
/* Array.map() ejecuta la función dada como parámetro sobre cada elemento del Array.
 * Retorna: Un nuevo arreglo
 * Utilidad: Transformar los valores del arreglo en un nuevo formato
 */
arrayPalabras = arrayPalabras.map(function(palabra){
	return palabra.replace(/(\w+)[\.,]?/i, '$1');
});

var arrayMayusculas = arrayPalabras.map(function(palabra){
	return palabra.toUpperCase();
});

console.log('Respuesta 1:', arrayMayusculas);

/* Array.reduce() ejecuta la función dada como parámetro sobre cada elemento del Array,
 * con la peculiaridad de que el valor se va acumulando de acuerdo con la definición de 
 * la función dada
 * Retorna: Una colección con el(los) valor(es) acumulado(s) (Object o Array)
 * Utilidad: Transformaciones complejas sobre Arrays o totalización de valores
 */
var contador = arrayPalabras.reduce(function(contador, palabra){
	palabra = palabra.toLowerCase();
	contador[palabra] = (+contador[palabra] || 0) + 1;
	return contador;
}, {});

console.log('Respuesta 2:', contador);

/* Array.filter() ejecuta la función dada como parámetro sobre cada elemento del Array.
 * Retorna: Un Array con los valores que resulten true de la evaluación
 * Utilidad: Selección de valores de un Array según una condición dada
 */
var arraySeleccion = arrayPalabras.filter(function(palabra) {
	return /^[Cc]/.test(palabra);
});

/* Ejemplo de Array.reduce() que devuelve un Array */
arraySeleccion = arraySeleccion.reduce(function(arrayUnico, palabra) {
	if(arrayUnico.indexOf(palabra) === -1) {
		arrayUnico.push(palabra);
	}
	return arrayUnico;
}, []);

console.log('Respuesta 3:', arraySeleccion);
console.timeEnd('Forma 2. Funciones de orden superior');
[/code]

<p style="text-align:justify;">Ya no es tan trivial como en el primer caso. La sintaxis es realmente compleja y un poco "truculenta" de entender si no entiendes los conceptos tras bastidores de la programación funcional, pero siempre puedes visitar la documentación de <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" target="_blank"><code>map()</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" target="_blank"><code>reduce()</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" target="_blank"><code>filter()</code></a>, o de otras funciones de las que dispones en Javascript.</p>
<p style="text-align:justify;">Aunque sea difícil de entender al principio, tiene su recompensa :mrgreen:</p>


[caption id="attachment_905" align="aligncenter" width="516"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-2.png" rel="attachment wp-att-905"><img class=" wp-image-905" src="https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-2.png?w=150" alt="¿3.23 milisegundos? ¡Whoa! :o" width="516" height="55" /></a> <strong>¿3.63 milisegundos? ¡Whoa!</strong> :o[/caption]
<h2>Conclusión</h2>
<p style="text-align:justify;">Usar o no usar funciones de orden superior... No es una cuestión trivial ni sencilla de resolver...</p>
<p style="text-align:justify;">Por un lado, usar Vanilla JS siempre es más simple y razonablemente comprensible para depuraciones futuras, sin embargo, más líneas de código implican mayor consumo de memoria, reduciendo el rendimiento de tu aplicación. Mientras que usando funciones de orden superior obtienes un rendimiento visiblemente mejorado, comparado con un procesamiento <em>trocho y mocho</em>, a expensas de dejar un código un poco ofuscado para aquellos que no conocen aspectos básicos de programación funcional, reduciendo la posibilidad de ser mantenible o depurable.</p>
<p style="text-align:justify;">¿Qué elegirías tú? ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>901</wp:post_id>
		<wp:post_date>2015-12-13 04:49:53</wp:post_date>
		<wp:post_date_gmt>2015-12-13 09:19:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-101-funciones-de-orden-superior</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17749211748]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/675968400292765697";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>API REST SIN UNA LÍNEA DE CÓDIGO... DEL LADO BACKEND!. PARTE 1. BACKEND</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/</link>
		<pubDate>Sun, 13 Dec 2015 19:40:48 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=911</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:justify;">&lt; script src="my own" title="api rest sin una l&amp;iacute;nea de c&amp;oacute;digo"&gt;</p>
<p style="text-align:justify;">Entender el estilo arquitectónico <a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">REST</a> es retador, ya que requiere entender ampliamente (por ejemplo) la transmisión y recepción sin estados que maneja el protocolo (en este caso, HTTP) seleccionado. Tanto más retador es desarrollar una API REST enteramente Backend para interactuar con tu aplicación Frontend (que casi siempre es la que requiere un poco más de atención ^^' ).</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a href="http://www.jexia.com" target="_blank">JEXIA</a> es una empresa con un modelo de negocio realmente revolucionario. Usando tecnologías libres como <a href="http://nodejs.org" target="_blank">Node.js</a>, <a href="http://mongodb.org/" target="_blank">MongoDB</a> y <a href="http://redis.io/" target="_blank">Redis</a>) y siendo una empresa holandesa con pocos días de creada (Noviembre XD ), su lema es:</p>

<blockquote>
<p class="theme-title opacityRun">"Build <strong>REST</strong>ful <strong>API</strong>s without writing a single line of code"</p>
</blockquote>
<p class="theme-title opacityRun" style="text-align:justify;">¡Me pareció increíble para ser cierto! Así que decidí darle un vistazo, y francamente no me decepcionó. Apenas me registré el 1° de Diciembre para recibir el acceso a la versión <em>beta</em> privada, y el 3 de Diciembre me llegó la clave pública y la clave privada por email, junto con un <a href="http://docs.jexia.com/" target="_blank">enlace</a> público a un manual de instrucciones bien documentado.</p>
<p class="theme-title opacityRun" style="text-align:justify;">Ya puedo vislumbrar las posibilidades... :twisted:</p>

<ul>
	<li class="theme-title opacityRun" style="text-align:justify;">Aplicaciones móviles con notificaciones en <em>tiempo real</em>.</li>
	<li class="theme-title opacityRun" style="text-align:justify;">Persistencia de eventos, logs, etc.</li>
	<li class="theme-title opacityRun" style="text-align:justify;">Aplicaciones de mensajería tipo <a href="https://es.wikipedia.org/wiki/M2M" target="_blank">M2M</a>.</li>
	<li class="theme-title opacityRun" style="text-align:justify;">Plataformas <a href="https://en.wikipedia.org/wiki/Data_as_a_service" target="_blank">DaaS</a> (Big Data).</li>
	<li class="theme-title opacityRun" style="text-align:justify;">Aplicaciones <a href="https://en.wikipedia.org/wiki/Data-driven_programming" target="_blank">DDD</a>.</li>
	<li class="theme-title opacityRun" style="text-align:justify;">Encuestas :D</li>
</ul>
<p style="text-align:justify;">Con respecto a la última opción, pensé en probar la conexión y la plataforma de <strong><span style="color:#fab700;">JEXIA</span></strong> para hacer una aplicación sencilla de encuesta sobre preferencias por géneros musicales (que verán en una entrega posterior :mrgreen: ). Voy a mostrar los pasos para el registro y configuración de tus apps:</p>


[caption id="attachment_912" align="aligncenter" width="511"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/1-registro.png" rel="attachment wp-att-912"><img class=" wp-image-912" src="https://jotaeseymas.files.wordpress.com/2015/12/1-registro.png?w=150" alt="1. Registro" width="511" height="208" /></a> <strong>1. Registro (102 aplicaciones registradas a la fecha de mi registro </strong>:o<strong> )<br /></strong>[/caption]

[caption id="attachment_913" align="aligncenter" width="512"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/2-perfil.png" rel="attachment wp-att-913"><img class=" wp-image-913" src="https://jotaeseymas.files.wordpress.com/2015/12/2-perfil.png?w=150" alt="2. Modificación del perfil" width="512" height="198" /></a> <strong>2. Modificación del perfil (lástima que no haya foto, todavía :P )<br /></strong>[/caption]

[caption id="attachment_914" align="aligncenter" width="512"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/4-1-crearapp.png" rel="attachment wp-att-914"><img class=" wp-image-914" src="https://jotaeseymas.files.wordpress.com/2015/12/4-1-crearapp.png?w=150" alt="3. Creamos una data app" width="512" height="174" /></a> <strong>3. Creamos una data app</strong>[/caption]

[caption id="attachment_915" align="aligncenter" width="511"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/4-2-claves-de-app.png" rel="attachment wp-att-915"><img class=" wp-image-915" src="https://jotaeseymas.files.wordpress.com/2015/12/4-2-claves-de-app.png?w=150" alt="5. La primera data-app activa las claves pública y privada" width="511" height="208" /></a> <strong>4. Una sola data-app activa las claves pública y privada (dice "secret" por algo :P )<br /></strong>[/caption]
<p style="text-align:justify;">Cada <em>data-app</em> puede tener múltiples <em>data-sets</em>. En mi caso, registré dos <em>data-sets</em>: uno llamado <code>opciones</code> que contendrá la lista de géneros musicales, y otro llamado <code>resultados</code> que almacenará los resultados "serializados" (ehm... :? ) de cada votación de la encuesta.</p>


[caption id="attachment_916" align="aligncenter" width="511"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/5-1-campos-opciones.png" rel="attachment wp-att-916"><img class=" wp-image-916" src="https://jotaeseymas.files.wordpress.com/2015/12/5-1-campos-opciones.png?w=150" alt="5. Registramos un data-set y los campos que tendrá cada objeto (en JSON)" width="511" height="235" /></a> <strong>5. Se registran los data-set con los campos que tendrá cada objeto (en JSON)...</strong>[/caption]

[caption id="attachment_917" align="aligncenter" width="512"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/5-2-campos-resultados.png" rel="attachment wp-att-917"><img class=" wp-image-917" src="https://jotaeseymas.files.wordpress.com/2015/12/5-2-campos-resultados.png?w=150" alt="...donde podemos especificar los campos, tipos de datos..." width="512" height="215" /></a> <strong>... además se pueden especificar los tipos de datos...</strong>[/caption]

[caption id="attachment_918" align="aligncenter" width="512"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/6-validaciones.png" rel="attachment wp-att-918"><img class=" wp-image-918" src="https://jotaeseymas.files.wordpress.com/2015/12/6-validaciones.png?w=150" alt="... y hasta ¡validaciones Javascript!" width="512" height="256" /></a> <strong>... y hasta ¡validaciones Javascript!</strong>[/caption]
<p style="text-align:justify;">Una vez registrados los data-sets de tu aplicación, <strong><span style="color:#fab700;">JEXIA</span></strong> permite que cada data-set pueda ser manipulado via requests HTTP (GET, PUT o DELETE previa autenticación con la llave pública y la llave privada) o directamente desde la interfaz REST de cada data-set:</p>


[caption id="attachment_919" align="aligncenter" width="513"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/7-manejo-de-rest.png" rel="attachment wp-att-919"><img class=" wp-image-919" src="https://jotaeseymas.files.wordpress.com/2015/12/7-manejo-de-rest.png?w=150" alt="7. Interfaz REST para testing y mocking de datos." width="513" height="246" /></a> <strong>6. Interfaz REST para testing y/o mocking de datos.</strong>[/caption]
<p style="text-align:justify;">Con dicha interfaz, podemos crear la data que queramos. Según la arquitectura REST bajo HTTP, el comando POST sirve para crear datos (<strong>C</strong>reate), GET para obtener datos (<strong>R</strong>ead), PUT para modificar datos (<strong>U</strong>pdate) y DELETE para eliminar datos (<strong>D</strong>elete), cumpliéndose las especificaciones de una arquitectura RESTful: <strong>CRUD</strong> completo, atomicidad, semántica y sin persistencia de estados.</p>


[caption id="attachment_920" align="aligncenter" width="511"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/8-1-data-de-prueba-opciones.png" rel="attachment wp-att-920"><img class=" wp-image-920" src="https://jotaeseymas.files.wordpress.com/2015/12/8-1-data-de-prueba-opciones.png?w=150" alt="7. Lista de opciones (haciendo &quot;mocking&quot;)" width="511" height="354" /></a> <strong>7. Lista de opciones (haciendo "mocking")</strong>[/caption]

[caption id="attachment_921" align="aligncenter" width="512"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/8-2-data-de-prueba-resultados.png" rel="attachment wp-att-921"><img class=" wp-image-921" src="https://jotaeseymas.files.wordpress.com/2015/12/8-2-data-de-prueba-resultados.png?w=150" alt="8. Lista de resultados (algunos haciendo mocking, otros insertados desde el Frontend)" width="512" height="365" /></a> <strong>8. Lista de resultados (algunos "mocked up", otros insertados desde el Frontend)</strong>[/caption]
<p style="text-align:justify;">Y ¡voilá! Tenemos nuestra API RESTful sin escribir una línea de código. En una próxima entrega, mostraré la aplicación Frontend que interactúa con la data-app.</p>
<p style="text-align:justify;">Mis felicitaciones a <strong><span style="color:#fab700;">JEXIA</span></strong> por su excelente plataforma. Hasta entonces, ¡felices API RESTfuls! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>911</wp:post_id>
		<wp:post_date>2015-12-13 15:10:48</wp:post_date>
		<wp:post_date_gmt>2015-12-13 19:40:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="daas"><![CDATA[DaaS]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="ddd"><![CDATA[DDD]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="jexia"><![CDATA[JEXIA]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17762341450]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/676124688012075008";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[928]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[API REST SIN UNA LÍNEA DE CÓDIGO… DEL LADO BACKEND!. PARTE 2. FRONTEND | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.204</wp:comment_author_IP>
			<wp:comment_date>2015-12-28 20:54:29</wp:comment_date>
			<wp:comment_date_gmt>2015-12-29 01:24:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] API REST SIN UNA LÍNEA DE CÓDIGO&#8230; DEL LADO BACKEND!. PARTE 1.&nbsp;BACKEND [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1451353049.588675975799560546875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1451352270.534719944000244140625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1451353048]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[retazo-web]]></wp:comment_author>
			<wp:comment_author_email>senseixon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://retazosweb.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>81.61.138.130</wp:comment_author_IP>
			<wp:comment_date>2015-12-16 04:13:45</wp:comment_date>
			<wp:comment_date_gmt>2015-12-16 08:43:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Y probablemente cuando lo lancen tendrá un precio impagable...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>939249</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1450276223]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1450260215.3767750263214111328125;s:5:"event";s:9:"check-ham";s:4:"user";s:9:"senseixon";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1450276223]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1450255425.9862220287322998046875;s:5:"event";s:9:"check-ham";s:4:"user";s:9:"senseixon";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1450276224.5103740692138671875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[Nande Konst]]></wp:comment_author>
			<wp:comment_author_email>nande@jexia.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.255.18.137</wp:comment_author_IP>
			<wp:comment_date>2015-12-14 07:18:39</wp:comment_date>
			<wp:comment_date_gmt>2015-12-14 11:48:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muchas gracias por su contribución. Esperamos con impaciencia a su aplicación sobre preferencias por géneros musicales. Informa-nos cuando lo ha hecho. Estamos curioso por saber sus experiencias.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1450093720.332459926605224609375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1450097239]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1450097239]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1450097239.8646519184112548828125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[Nande Konst]]></wp:comment_author>
			<wp:comment_author_email>nande@jexia.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jexia.com</wp:comment_author_url>
			<wp:comment_author_IP>89.255.18.137</wp:comment_author_IP>
			<wp:comment_date>2016-01-11 06:30:51</wp:comment_date>
			<wp:comment_date_gmt>2016-01-11 11:00:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No, eso no es verdad. Todas las opciones que se pueden usar ahora quedan gratis sin limitaciones de functionalidad. Sería  un modelo de precio solo para "enterprise" (empresas grandes). Dentro de poco habrá una tabla de precios en el website.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>70</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1452526889.8480350971221923828125;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1452510053.0256359577178955078125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1452510053]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[18640593075]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1452513962.437222957611083984375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1452526889]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1452526889]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[retazo-web]]></wp:comment_author>
			<wp:comment_author_email>senseixon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://retazosweb.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>81.61.138.130</wp:comment_author_IP>
			<wp:comment_date>2016-01-11 11:13:16</wp:comment_date>
			<wp:comment_date_gmt>2016-01-11 15:43:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Entonces, ¡genial!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>72</wp:comment_parent>
			<wp:comment_user_id>939249</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1452526997.661695957183837890625;s:5:"event";s:9:"check-ham";s:4:"user";s:9:"senseixon";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_jobid</wp:meta_key>
				<wp:meta_value><![CDATA[18644491575]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_queued</wp:meta_key>
				<wp:meta_value><![CDATA[1452534793]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1452534793]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1452531769.2160680294036865234375;s:5:"event";s:9:"check-ham";s:4:"user";s:9:"senseixon";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1452534793.988111019134521484375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ENCUESTA SOBRE JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/encuesta-sobre-javascript/</link>
		<pubDate>Sun, 13 Dec 2015 21:27:34 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=931</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="encuesta sobre javascript" &gt;
<p style="text-align:justify;">Recientemente, los muchachos de <a href="https://ponyfoo.com/articles/javascript-developer-survey-results" target="_blank">Ponyfoo</a> publicaron los resultados de una encuesta donde las preguntas eran referentes a Javascript (uso de ES5 / ES6, frameworks, librerías, etc.). Leyendo la encuesta, puedo observar datos muy interesantes respecto a las preferencias de los desarrolladores, particularmente resalto los resultados sobre el uso de pruebas manuales / automatizadas (que no se ha extendido del todo :? ), la preferencia de <a href="https://lodash.com/" target="_blank">lodash</a> sobre <a href="http://jquery.com/" target="_blank">jQuery</a> 2.0 y la mejor (en mi opinion :mrgreen: ) es que los desarrolladores prefieren escribir código Javascript sobre navegadores nuevos y actualizados. Interesante, ¿no? ;)</p>


[caption id="attachment_282" align="aligncenter" width="511"]<a href="https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png" rel="attachment wp-att-282"><img class=" wp-image-282" src="https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png?w=150" alt="juasjuasjuas..." width="511" height="252" /></a> <strong>Librerías como <a href="http://zeptojs.com" target="_blank">Zepto.js</a> ya no dan soporte a navegadores viejos y anticuados... </strong>^^'<strong><br /></strong>[/caption]

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>931</wp:post_id>
		<wp:post_date>2015-12-13 16:57:34</wp:post_date>
		<wp:post_date_gmt>2015-12-13 21:27:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>encuesta-sobre-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="es6"><![CDATA[ES6]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[TDD]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/676151527069773824";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17764668823]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ACERCA DE: ORM BOOKSHELF</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/15/acerca-de-orm-bookshelf/</link>
		<pubDate>Tue, 15 Dec 2015 07:20:43 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=933</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="acerca de: orm bookshelf"&gt;
<p style="text-align:justify;"><strong>Bookshelf</strong> quiere decir <em>librero</em> o <em>librería</em> (bueno, no como la <a href="https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/" target="_blank">Angular</a> :roll: ), mientras que <strong>ORM</strong> es el acrónimo en inglés para <a href="https://en.wikipedia.org/wiki/Object-relational_mapping" target="_blank"><em>Object Relational Mapping</em></a>, que quiere decir (más o menos) "Mapeo de Objetos Relacionales" (¡¡que mal inglés!! :mrgreen: ).</p>
<p style="text-align:justify;">Que no, que el inglés se me da muy poco, y no, no es mi rollo... Pero Javascript si es mi rollo :P</p>
<!--more-->
<p style="text-align:justify;"><a href="http://bookshelfjs.org/" target="_blank">Bookshelf.js</a> es un ORM para <a href="http://nodejs.org" target="_blank">Node.js</a>, que en el argot informático, significa que relaciona objetos de una forma a otra y los "mapea" en memoria RAM. Para el caso particular de este ORM, transforma las filas de una tabla SQL de los <a href="http://www.webopedia.com/TERM/R/RDBMS.html" target="_blank">RDBMS</a> MySQL, SQLite 3 o <a href="http://www.postgresql.org/" target="_blank">PostgreSQL</a> en objetos <a href="http://json.org/" target="_blank">JSON</a>. Y te preguntarás: "ajá, pero la versión 9 de PostgreSQL puede transformar filas a JSON usando SQL, ¿para qué necesito un ORM?". ¿Quieres una razón?, te doy 5 XD :</p>

<ol>
	<li style="text-align:justify;">Un ORM no solo es un "transformador" de filas a objetos, también sirve para abstraer a lenguajes de programación, el dialecto SQL.</li>
	<li style="text-align:justify;">Puedes definir enteramente lógicas de programación y de recursividad que no podrías definir ni con el SQL más potente :D .</li>
	<li style="text-align:justify;">Le restas carga a la base de datos principal, ya que solo necesitas una consulta y no varias (como el caso típico de los JOINS con múltiples tablas).</li>
	<li style="text-align:justify;">La administración del caché de un ORM es envidiable, pudiendo realizar operaciones más rápidas que con SQL convencional (como hacer un SELECT de varios millones de filas).</li>
	<li style="text-align:justify;">Algunos ORM (como Bookshelf.js) son multiplataforma e independientes de la base de datos, por lo que se hace transparente el cambio de RDBMS para el código fuente.</li>
</ol>
<p style="text-align:justify;">Bookshelf.js está basado en <a href="http://knexjs.org/" target="_blank">knex.js</a> y en <a href="https://lodash.com/" target="_blank">lodash</a>, la primera es un constructor de consultas SQL que funciona para una importante cantidad de RDBMS, y la segunda... bueno, es una librería que no necesita mucha <a href="https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/" target="_blank">presentación</a> :) . Para ilustrar algunos usos de este ORM, he creado una base de datos en PostgreSQL usando los datos de estados, municipios, parroquias y ciudades de mi amado país Venezuela que encontré en esta <a href="https://github.com/joserafael/venezuela/blob/master/config/schema/venezuela.sql" target="_blank">página</a>, muy completos y actualizados hasta la fecha.</p>
<p style="text-align:justify;">Para usar Bookshelf.js, lo instalamos junto con su dependencia principal (previa <a href="https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/" target="_blank">instalación</a> de Node.js), así como el driver nativo de Node.js con el que trabajaríamos:</p>


[code lang="bash" gutter="false"]$ npm install bookshelf knex pg[/code]

<p style="text-align:justify;">Para MySQL el driver es <code><strong>mysql</strong></code>, para SQLite 3 es <code><strong>sqlite3</strong></code> y para MariaDB es <code><strong>mariasql</strong></code> ^^'</p>
<p style="text-align:justify;">Una vez instalando, ¡hora de picar código! He aquí algunas consultas ejemplo, pero pueden consultar la página del ORM para una documentación detallada y muchos más ejemplos.</p>
Creamos el módulo de conexión a la base de datos:

[code lang="js" title="Archivo: config.js" collapse="true"]
var config = require('knex')({
	client: 'pg', // PostgreSQL
	connection: {
		host: '127.0.0.1', // colocar &quot;localhost&quot; no funciona
		user: 'postgres',
		password: 'postgres', // NO hacer esto en casa ;)
		database: 'venezuela',
		charset: 'utf-8'
	}
});
module.exports = require('bookshelf')(config);
[/code]

Luego creamos los modelos (representaciones JSON de las tablas SQL):

[code lang="js" title="Archivo: models.js" collapse="true"]
var db = require('./config');

var Ciudades = db.Model.extend({
	tableName: 'ciudades',
})

var Parroquias = db.Model.extend({
	tableName: 'parroquias',
});

var Municipios = db.Model.extend({
	tableName: 'municipios',
	parroquias: function() {
		return this.hasMany(Parroquias);
	}
});

var Estados = db.Model.extend({
	tableName: 'estados',
	municipios: function() {
		return this.hasMany(Municipios);
	},
	ciudades: function() {
		return this.hasMany(Ciudades);
	}
});

module.exports = {
	&quot;Ciudades&quot;: Ciudades,
	&quot;Parroquias&quot;: Parroquias,
	&quot;Municipios&quot;: Municipios,
	&quot;Estados&quot;: Estados
}
[/code]

Y finalmente, procedemos a los ejemplos :) :

[code lang="js" title="Archivo: queries.js" collapse="true"]
var models = require('./models');

console.info('=====================================\nInicialización del módulo\n');

models.Estados.count().then(function (counter) {
	console.info('Encontrados',counter,'estados!');
});

models.Municipios.count().then(function (counter) {
	console.info('Encontrados',counter,'municipios!');
});

models.Parroquias.count().then(function (counter) {
	console.info('Encontrados',counter,'parroquias!');
});

models.Ciudades.count().then(function (counter) {
	console.info('Encontrados',counter,'ciudades!');
});

/* Todas las capitales de Venezuela ordenadas por Estado */
models.Ciudades.where('es_capital', true).fetchAll().then(function (data) {
	var rows = data.toJSON();
	console.info('\n* * * Capitales de Venezuela ordenadas por Estado * * *\n');
	rows.forEach(function (ciudad) {
		models.Estados.where('id_estado', ciudad['estado_id']).fetch().then(function (data) {
			var estado = data.toJSON();
			console.info('La capital del estado',estado['nombre_estado'],'es',ciudad['nombre_ciudad']);
		});
	});
});

/* Todos los municipios del Estado Mérida */
models.Estados.where('nombre_estado', 'Mérida').fetch().then(function (data) {
	var ref = data.toJSON();
	models.Municipios.where('estado_id', ref['id_estado']).fetchAll().then(function (data) {
		var rows = data.toJSON();
		console.info('\n* * * Municipios del Estado Mérida * * *\n');
		rows.forEach(function (municipio) {
			console.info('Municipio',municipio['nombre_municipio']);
		});
	});
});

/* Todas las parroquias de Distrito Capital */
models.Estados.where('nombre_estado', 'Distrito Capital').fetch().then(function (data) {
	var ref = data.toJSON();
	models.Municipios.where('estado_id', ref['id_estado']).fetch().then(function (data) {
		var ref = data.toJSON();
		console.info('\n* * * Parroquias del Distrito Capital * * *\n');
		models.Parroquias.where('municipio_id', ref['id_municipio']).fetchAll().then(function (data) {
			var rows = data.toJSON();
			rows.forEach(function (parroquia) {
				console.info('Parroquia',parroquia['nombre_parroquia']);
			});
		});
	});
});
[/code]

<p style="text-align:justify;">Pueden consultar la documentación del ORM para más detalles y para ejemplos de consultas más complejas. Luego ejecutamos la aplicación en el entorno de Node usando el comando <code>node app.js</code>. He aquí los resultados:</p>


[code lang="bash" collapse="true" title="Resultados"]
=====================================
Inicialización del módulo

Encontrados 25 estados!
Encontrados 335 municipios!
Encontrados 498 ciudades!
Encontrados 1138 parroquias!

* * * Capitales de Venezuela ordenadas por Estado * * *

La capital del estado Amazonas es Puerto Ayacucho
La capital del estado Anzoátegui es Barcelona
La capital del estado Apure es San Fernando de Apure
La capital del estado Aragua es Maracay
La capital del estado Barinas es Barinas
La capital del estado Bolívar es Ciudad Bolívar
La capital del estado Carabobo es Valencia
La capital del estado Cojedes es San Carlos
La capital del estado Delta Amacuro es Tucupita
La capital del estado Distrito Capital es Caracas
La capital del estado Falcón es Coro
La capital del estado Guárico es San Juan de Los Morros
La capital del estado Lara es Barquisimeto
La capital del estado Mérida es Mérida
La capital del estado Miranda es Los Teques
La capital del estado Nueva Esparta es La Asunción
La capital del estado Portuguesa es Guanare
La capital del estado Táchira es San Cristobal
La capital del estado Monagas es Maturín
La capital del estado Trujillo es Trujillo
La capital del estado Sucre es Cumaná
La capital del estado Yaracuy es San Felipe
La capital del estado Zulia es Maracaibo
La capital del estado Vargas es La Guaira

* * * Municipios del Estado Mérida * * *

Municipio Alberto Adriani
Municipio Andrés Bello
Municipio Antonio Pinto Salinas
Municipio Aricagua
Municipio Arzobispo Chacón
Municipio Campo Elías
Municipio Caracciolo Parra Olmedo
Municipio Cardenal Quintero
Municipio Guaraque
Municipio Julio César Salas
Municipio Justo Briceño
Municipio Libertador
Municipio Miranda
Municipio Obispo Ramos de Lora
Municipio Padre Noguera
Municipio Pueblo Llano
Municipio Rangel
Municipio Rivas Dávila
Municipio Santos Marquina
Municipio Sucre
Municipio Tovar
Municipio Tulio Febres Cordero
Municipio Zea

* * * Parroquias del Distrito Capital * * *

Parroquia Altagracia
Parroquia Antímano
Parroquia Caricuao
Parroquia Catedral
Parroquia Coche
Parroquia El Junquito
Parroquia El Paraíso
Parroquia El Recreo
Parroquia El Valle
Parroquia La Candelaria
Parroquia La Pastora
Parroquia La Vega
Parroquia Macarao
Parroquia San Agustín
Parroquia San Bernardino
Parroquia San José
Parroquia San Juan
Parroquia San Pedro
Parroquia Santa Rosalía
Parroquia Santa Teresa
Parroquia Sucre (Catia)
Parroquia 23 de enero
[/code]

<p style="text-align:justify;">Obviamente, no todo es color de rosa, pues una significativa desventaja de este ORM es la complejidad a la que pueden llegar las consultas, y eso no es algo trivial. Sin embargo, sigue pareciendo una buena alternativa para tu app Node.js, ¿no crees? ;)</p>
<p style="text-align:justify;">P.D.: He realizado una pequeña aplicación usando este ORM para subir los estados, municipios, parroquias y ciudades de Venezuela en una data-app en <a href="http://www.jexia.com" target="_blank">JEXIA</a> para un prototipo de app orientada a datos :twisted:</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>933</wp:post_id>
		<wp:post_date>2015-12-15 02:50:43</wp:post_date>
		<wp:post_date_gmt>2015-12-15 07:20:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acerca-de-orm-bookshelf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="jexia"><![CDATA[JEXIA]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[633]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17809389612]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/676663179636707328";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ANIMACIONES CSS... SIN USAR CSS</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/16/animaciones-css-sin-usar-css/</link>
		<pubDate>Wed, 16 Dec 2015 17:57:44 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=943</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="animaciones css sin usar css"&gt;

Yo y mis títulos "controversiales" :mrgreen:
<p style="text-align:justify;">En realidad no lo es tanto, ya que en HTML5 tenemos el tag <code><strong><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" target="_blank">&lt;canvas&gt;</a></strong></code> que permite toda una gama de cosas que con la versión anterior de HTML no era posible, un ejemplo de ello son las animaciones gráficas sin usar CSS3. Ahora bien, mi punto acá no es discutir respecto a si es la mejor forma de realizar animaciones, solo probar que es posible usando solo Javascript.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Para hacer esto aún más sencillo, tenemos la librería <a href="https://visionmedia.github.io/move.js/#" target="_blank">Move.js</a> la cual se encarga de realizar por nosotros lo que haríamos con CSS3 convencional, o bien usando <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes" target="_blank">@keyframes</a>, o bien usando <a href="http://sass-lang.com/" target="_blank">SASS</a> u otro pre-procesador de CSS3. El uso de la librería es bastante sencillo, usando un patrón <a href="https://es.wikipedia.org/wiki/Interfaz_fluida" target="_blank">fluent</a>, concatena funciones para realizar la animación. En este caso, vamos a crear un "page loader" que rote en la pantalla.</p>


[caption id="attachment_944" align="aligncenter" width="148"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/loader.png" rel="attachment wp-att-944"><img class="wp-image-944 size-full" src="https://jotaeseymas.files.wordpress.com/2015/12/loader.png" alt="Un loader sencillo" width="148" height="136" /></a> <strong>Un loader sencillo </strong>^^'[/caption]
<p style="text-align:justify;">Usando Move.js solo tenemos que escribir unas pocas líneas, mientras que con @keyframes ..., pues la historia es otra. Acá pueden ver los resultados y darse una idea de lo que estoy diciendo XD .</p>
http://codepen.io/ChinuxParibus/pen/KVVbvL

Descomenten el CSS y comenten el JS, o jueguen como quieran :D
<p style="text-align:justify;">Tal vez, la desventaja más notoria de Move.js es no permitir animaciones "infinitas", muy útil para este tipo de casos en los que necesitamos realizar una animación cíclica, pero para animaciones más complejas, el CSS puro, se vuelve claramente una desventaja por si solo.</p>
<p style="text-align:justify;">¡A moverse! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>943</wp:post_id>
		<wp:post_date>2015-12-16 13:27:44</wp:post_date>
		<wp:post_date_gmt>2015-12-16 17:57:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>animaciones-css-sin-usar-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0cca91bff3eeb426bc7f2358868316ab</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_KVVbvL" src="https://codepen.io/ChinuxParibus/embed/preview/KVVbvL?height=300&amp;slug-hash=KVVbvL&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_0cca91bff3eeb426bc7f2358868316ab</wp:meta_key>
			<wp:meta_value><![CDATA[1450288048]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d0a30baf76a3067213b34a83cc20c381</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_KVVbvL" src="https://codepen.io/ChinuxParibus/embed/preview/KVVbvL?height=300&amp;slug-hash=KVVbvL&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[17858254263]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/677185880101023744";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_d0a30baf76a3067213b34a83cc20c381</wp:meta_key>
			<wp:meta_value><![CDATA[1450288684]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fa25b9c1846d228297463243e272eaa8</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="embed-codepen"><iframe id="cp_embed_KVVbvL" src="https://codepen.io/ChinuxParibus/embed/preview/KVVbvL?height=300&amp;slug-hash=KVVbvL&amp;default-tab=result&amp;host=http%3A%2F%2Fcodepen.io" scrolling="no" frameborder="0" height="300" allowtransparency="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe></div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_time_fa25b9c1846d228297463243e272eaa8</wp:meta_key>
			<wp:meta_value><![CDATA[1450288684]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>API REST SIN UNA LÍNEA DE CÓDIGO… DEL LADO BACKEND!. PARTE 2. FRONTEND</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/</link>
		<pubDate>Tue, 29 Dec 2015 01:24:22 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=952</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src=”my own” title=”api rest sin una l&amp;iacute;nea de c&amp;oacute;digo”&gt;
<p style="text-align:justify;">Entender el estilo arquitectónico <a href="https://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">REST</a> es retador, ya que requiere entender ampliamente (por ejemplo) la transmisión y recepción sin estados que maneja el protocolo (en este caso, HTTP) seleccionado. Tanto más retador es desarrollar una API REST enteramente Backend para interactuar con tu aplicación Frontend (que casi siempre es la que requiere un poco más de atención <span class="wp-smiley wp-emoji wp-emoji-blush" title="^^’">^^’</span> ).</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">En este caso, vamos a prestarle más atención a la aplicación Frontend realizada para el ejemplo del <a href="https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/" target="_blank">post</a> anterior a esta serie, en en cual creamos una data-app con <a href="http://www.jexia.com" target="_blank"><span style="color:#fab700;"><strong>JEXIA</strong></span></a>. Para esta aplicación, usé <a href="http://minifiedjs.com/" target="_blank">Minified.js</a>, y <a href="http://mincss.com/" target="_blank">min.css</a>, dos herramientas que están que ni pintadas para hacer <a href="https://jotaeseymas.wordpress.com/2015/04/29/jugar-con-javascript-pero-sin-javascript/" target="_blank">mockups</a> y otras cosillas<span style="color:#7cbbbb;"> <strong>#porai</strong></span>. ¡Manos a la ubre!</p>
<p style="text-align:justify;">El código de la interfaz es sencillo:</p>


[code lang="html" title="Archivo: index.html" collapse="true"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;link rel=&quot;stylesheet&quot; href=&quot;entireframework.min.css&quot;&gt;
	&lt;title&gt;Ejemplo con Minified&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div&gt;&lt;span id=&quot;notificacion&quot;&gt;&lt;/span&gt;&lt;/div&gt;


&lt;div class=&quot;container&quot;&gt;

&lt;h2&gt;¿Cuáles son tus gustos musicales?&lt;/h2&gt;


&lt;div id=&quot;lista&quot;&gt;&lt;/div&gt;

		&lt;button id=&quot;seleccionar&quot; class=&quot;btn btn-b btn-sm&quot;&gt;&lt;i&gt;✓&lt;/i&gt; Listo!&lt;/button&gt;
		&lt;button id=&quot;calcular&quot; class=&quot;btn btn-b btn-sm&quot;&gt;&lt;i&gt;◴&lt;/i&gt; Ver resultados&lt;/button&gt;
	&lt;/div&gt;


&lt;div id=&quot;form&quot; class=&quot;container&quot;&gt;
		&lt;input type=&quot;text&quot; name=&quot;nombre&quot; id=&quot;nombre&quot; placeholder=&quot;Ingrese su nombre&quot;&gt;&amp;nbsp;&lt;button class=&quot;btn btn-b btn-sm&quot; id=&quot;procesar&quot;&gt;&lt;i&gt;✓&lt;/i&gt;Procesar!&lt;/button&gt;
	&lt;/div&gt;


&lt;div class=&quot;container&quot; id=&quot;result&quot;&gt;&lt;/div&gt;

	&lt;script src=&quot;minified.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;api.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">El código Javascript que procesa la información haciendo peticiones a la API REST es un poco más complejo:</p>


[code lang="js" title="Archivo: api.js" collapse="true"]
var MINI = require('minified');

var $ = MINI.$, $$ = MINI.$$, HTML = MINI.HTML;

var auth = {
	key: 'd0847280b3734ffb15b496caf2839a8a',
	secret: '*secret key*'
}
var baseUrl = 'http://4a2d78b0-9ddf-11e5-a58a-89db67e6a459.app.jexia.com';

$(function() {
	$('#nombre').set('value', '');

	var toggleForm = $('#form').toggle(
		{'$$slide': 0},
		{'$$slide': 1},
		500
	);

	var toggleAlert = $('#notificacion').toggle(
		{'$$fade': 0},
		{'$$fade': 1},
		500
	);

	var toggleResult = $('#result').toggle(
		{'$$fade': 0},
		{'$$fade': 1},
		500
	);

	function notificar(objMensaje) {
		$('#notificacion').ht(errorTm, objMensaje);
		toggleAlert(); setTimeout(toggleAlert, 3000);
	};

	function reiniciarFormulario(lista, elegidos) {
		toggleForm();
		$('#nombre').set('value', '');
		lista.each(function (item, index){
			item.disabled = false;
			item.checked = false;
		});
		elegidos = [];
	};

	var opcionesTm = '
&lt;div class=&quot;row&quot;&gt;{{each}}
&lt;div class=&quot;col c2&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;{{this.opcion}}&quot; value=&quot;{{this.opcion}}&quot; {{if !this.habilitada}}disabled=&quot;true&quot;{{/if}}&gt;&lt;label for=&quot;{{this.opcion}}&quot;&gt;&amp;nbsp;{{this.texto}}&lt;/label&gt;&lt;/div&gt;

{{/each}}&lt;/div&gt;

';

	var errorTm = '
&lt;div class=&quot;msg {{type}}&quot;&gt;{{msg}}&lt;/div&gt;

';

	var resultTm = '{{var total = datos.Pop + datos.Rock + datos.Clasica + datos.Jazz;}}
&lt;h2&gt;Total: {{total}} voto{{if total &gt; 1 || total == 0}}s{{/if}}&lt;/h2&gt;
&lt;div class=&quot;row&quot;&gt;{{each clave, valor: datos}}{{var w = (valor * 100)/total;}}
&lt;div class=&quot;col c3&quot;&gt;
&lt;div&gt;{{clave}}: {{valor}} voto{{if valor &gt; 1 || valor == 0}}s{{/if}} / {{w::#.00}}%&lt;/div&gt;
&lt;div style=&quot;width: {{w::#.00}}%; background-color: green;&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;/div&gt;

{{/each}}&lt;/div&gt;

';

	var settings, opciones = [], key = '-';
	$.request('POST', baseUrl, auth).then(function(text) {
			var data = $.parseJSON(text);
			settings = { headers: { 'Authorization': 'Bearer ' + data.token } };
			return $.request('GET', baseUrl + '/opciones', null, settings);
		}
	).then(function (text) {
			var data = $.parseJSON(text);
			$('#lista').add(HTML(opcionesTm, data));
			var elegidos = [], lista = $('input[type=checkbox]');

			$('#seleccionar').onClick(function() {
				lista.each(function (item, index) {
					if (item.checked) elegidos.push(item.value);
				});
				if (elegidos.length === 0) {
					notificar({
						type: 'error',
						msg: 'Seleccione al menos una opcion'
					});
				}	else {
					lista.each(function (item, index){
						item.disabled = true;
					});
					toggleForm();
				}
			});

			$('#procesar').onClick(function (){
				var nombre = $('#nombre').get('value');
				if(nombre) {
					var data = {
						nombre: nombre,
						elegidos: elegidos.join(key)
					};
					$.request('POST', baseUrl + '/resultados', data, settings)
					.then(function (text){
						notificar({
							type: 'done',
							msg: 'Sus datos han sido procesados exitosamente! ☺'
						});
						setTimeout(reiniciarFormulario(lista, elegidos), 1500);
					}).error(function (code, text){
						var data = $.parseJSON(text);
						notificar({
							type: 'error',
							msg: 'Error ' + code + ': ' + data.summary
						});
					});
				} else {
					$('#nombre').set('+error');
					notificar({
						type: 'error',
						msg: 'El nombre es requerido para el registro'
					});
				}
			});

			$('#calcular').onClick(function () {
				toggleResult();
				$.request('GET', baseUrl + '/resultados', null, settings)
				.then(function (text) {
					var data = $.parseJSON(text);
					var graphData = [];
					$(data).each(function (item, index){
						graphData.push(item.elegidos.split(key));
					});
					graphData = $(graphData).array().reduce(function(count, elem){
						elem = elem === '1' ? 'Pop' :	elem === '2' ? 'Rock' :	elem === '3' ? 'Clasica' : 'Jazz';
      				count[elem] = (+count[elem] || 0) + 1; return count;
					}, {});
					$('#result').ht(resultTm, {datos: graphData});
				})
				.error(function (code, text) {
					var data = $.parseJSON(text);
					notificar({
						type: 'error',
						msg: 'Error ' + code + ': ' + data.summary
					});
				});
			});
		}
	)
	.error(
		function(code, text){
			var data = $.parseJSON(text);
			notificar({
				type: 'error',
				msg: 'Error ' + code + ': ' + data.message
			});
		}
	);
});
[/code]

Veamos los resultados en el navegador:

[caption id="attachment_953" align="aligncenter" width="525"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/9-1-app-minified-encuesta.png" rel="attachment wp-att-953"><img class="wp-image-953" src="https://jotaeseymas.files.wordpress.com/2015/12/9-1-app-minified-encuesta.png?w=150" alt="9.1-app-minified-encuesta" width="525" height="175" /></a> <strong>Se cargan los resultados de la primera data-app creada (musica)</strong>[/caption]

[caption id="attachment_954" align="aligncenter" width="525"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/9-2-notificacion.png" rel="attachment wp-att-954"><img class="wp-image-954" src="https://jotaeseymas.files.wordpress.com/2015/12/9-2-notificacion.png?w=150" alt="9.2-notificacion" width="525" height="175" /></a> <strong>Validación en caso de no marcar ninguna opción </strong>^^'[/caption]

[caption id="attachment_955" align="aligncenter" width="525"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/9-3-valida-la-seleccion.png" rel="attachment wp-att-955"><img class="wp-image-955" src="https://jotaeseymas.files.wordpress.com/2015/12/9-3-valida-la-seleccion.png?w=150" alt="9.3-valida-la-seleccion" width="525" height="175" /></a> <strong>Seleccionamos algunas opciones e ingresamos un nombre (¡importantísimo! </strong>:roll:<strong> )</strong>[/caption]

[caption id="attachment_956" align="aligncenter" width="525"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/9-4-notificacion-con-error.png" rel="attachment wp-att-956"><img class="wp-image-956" src="https://jotaeseymas.files.wordpress.com/2015/12/9-4-notificacion-con-error.png?w=150" alt="9.4-notificacion-con-error" width="525" height="175" /></a> <strong>Validamos nuevamente que el nombre sea el correcto y que además no esté vacío</strong> :D[/caption]

[caption id="attachment_957" align="aligncenter" width="525"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/9-5-procesamiento-via-post.png" rel="attachment wp-att-957"><img class="wp-image-957" src="https://jotaeseymas.files.wordpress.com/2015/12/9-5-procesamiento-via-post.png?w=150" alt="9.5-procesamiento-via-POST" width="525" height="175" /></a> <strong>Se almacenan los resultados en <span style="color:#fab700;">JEXIA</span> via POST</strong>[/caption]

[caption id="attachment_958" align="aligncenter" width="525"]<a href="https://jotaeseymas.files.wordpress.com/2015/12/9-6-request-a-resultados-y-template.png" rel="attachment wp-att-958"><img class="wp-image-958" src="https://jotaeseymas.files.wordpress.com/2015/12/9-6-request-a-resultados-y-template.png?w=150" alt="9.6-REQUEST-a-resultados-y-template" width="525" height="175" /></a> <strong>Gracias a los templates de Minified.js, podemos ver los resultados dinámicamente, totalizando los datos guardados en la API REST </strong>:D<strong><br /></strong>[/caption]
<p style="text-align:justify;">¿Verdad que no fue tan difícil? Sabiendo que es posible, ahora podemos usar esta grandiosa app para lo que se nos ocurra, aprovechando las capacidades de su beta privada...</p>
¡Felices API RESTfuls! ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>952</wp:post_id>
		<wp:post_date>2015-12-28 20:54:22</wp:post_date>
		<wp:post_date_gmt>2015-12-29 01:24:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="daas"><![CDATA[DaaS]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="ddd"><![CDATA[DDD]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="jexia"><![CDATA[JEXIA]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[NoSQL]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[928]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[18200401918]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/681646945006292993";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¡FELIZ AÑO NUEVO!</title>
		<link>https://jotaeseymas.wordpress.com/2016/01/06/feliz-anio-nuevo/</link>
		<pubDate>Thu, 07 Jan 2016 02:36:01 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=962</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="feliz a&amp;ntilde;o nuevo" &gt;
<h2 style="text-align:center;">FELIZ AÑO NUEVO queridos lectores y lectoras ^^'</h2>
<p style="text-align:justify;">Darles las gracias no es suficiente. Este pequeño proyecto que nació de las ganas de convertir <em><a href="https://es.wikipedia.org/wiki/A_Series_of_Unfortunate_Events" target="_blank">una serie de eventos desafortunados</a></em> (Copyleft Lemony Snicket ;) ) en algo positivo, se ha vuelto para mí prioritario conservar, en especial cuando ves los <a href="https://jotaeseymas.wordpress.com/2015/annual-report/" target="_blank">números</a>. Si, esas cifras bonitas que representan cantidades y nos sirven a los <em>programadores</em> (no se si deba llamarme así... :roll: ) para usar en el código fuente...</p>
<p style="text-align:justify;">NO, definitivamente agradecer no es suficiente, les debo muchos posts, mucho trabajo (si el otro de verdad me lo permite :mrgreen: ) que más o menos se resumen así, sin ningún orden en particular...</p>

<ul>
	<li style="text-align:justify;">Can.js es una librería que me interesa mucho probar, ya que tiene un comportamiento similar a lo que harías con directivas personalizadas en Angular.js, pero con mucha más semántica.</li>
	<li style="text-align:justify;">Gulp: nunca he trabajado con un automatizador de tareas, <del>puede que sea</del> es un excelente momento para aprender :D</li>
	<li style="text-align:justify;">Aún me falta por estudiar una librería de la gente de Typicode, y algunos posts de la serie Librería Angular XD</li>
	<li style="text-align:justify;">Mucho más frontend con Polymer, Famo.us, Lumx y Kendo UI</li>
	<li style="text-align:justify;">Completar la serie acerca de TDD</li>
	<li style="text-align:justify;">Comprender el complejo mundo de la programación orientada a datos usando d3.js, Highcharts, y tal vez, Canvas jijiji ^^' ...</li>
	<li style="text-align:justify;">¡Backbone.js no se me puede escapar! :)</li>
	<li style="text-align:justify;">Probar lo más "reciente" de Google en bases de datos del Navegador: Lovefield...</li>
	<li style="text-align:justify;">Mas Node.js: Browserify, SASS, require, integración con MongoDB y alguna otra locura :roll:</li>
	<li style="text-align:justify;">Si aún no me han cancelado la beta privada de <strong>JEXIA</strong>, escribir más aplicaciones posibles para esa plataforma :twisted:</li>
</ul>
Hay trabajo por hacer en este 2016, pero gracias a su motivación por inspirarme...

¡A trabajar! ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>962</wp:post_id>
		<wp:post_date>2016-01-06 22:06:01</wp:post_date>
		<wp:post_date_gmt>2016-01-07 02:36:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>feliz-anio-nuevo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="base-de-datos"><![CDATA[Base de Datos]]></category>
		<category domain="post_tag" nicename="ddd"><![CDATA[DDD]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="javier-garzas"><![CDATA[Javier Garzás]]></category>
		<category domain="post_tag" nicename="jexia"><![CDATA[JEXIA]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libreria-angular"><![CDATA[Librería Angular]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="category" nicename="sin-categoria"><![CDATA[Sin categoría]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[18492404931]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/684926451141881856";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LOS SUPERHEROES DE JAVASCRIPT</title>
		<link>https://jotaeseymas.wordpress.com/2016/01/11/los-superheroes-de-javascript/</link>
		<pubDate>Mon, 11 Jan 2016 19:01:46 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=966</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="los superheroes de javascript"&gt;

<section class="init one invert">
<div class="inner">
<h2>Superhero.js</h2>
<p style="text-align:justify;">Crear, probar y mantener una aplicación Javascript de proporciones enormes en código fuente, no es para nada sencillo, especialmente cuando tienes a disposición toda una amplia gama de recursos en internet para escoger. Pero lejos de ser una ventaja, tener tanta información es tan crítico como saber buscarla, y en el amplio mar de información que es Internet, es muy difícil. Esta <a href="http://superherojs.com/" target="_blank">página</a>, es una colección de los mejores recursos multimedia (artículos, videos y presentaciones) que la comunidad global de desarrolladores Javascript ha encontrado y organizado de forma agradable, y a tu disposición.</p>

</div>
</section>&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>966</wp:post_id>
		<wp:post_date>2016-01-11 14:31:46</wp:post_date>
		<wp:post_date_gmt>2016-01-11 19:01:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>los-superheroes-de-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/686624076920573952";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[18646471044]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A MANERA DE DISCULPA. O DE COMO NO DEBE SER UN POST...</title>
		<link>https://jotaeseymas.wordpress.com/2016/07/26/a-manera-de-disculpa-o-de-como-no-debe-ser-un-post/</link>
		<pubDate>Tue, 26 Jul 2016 19:51:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=981</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="a manera de disculpa" &gt;
<p style="text-align:justify;">Porque no todo lo que brilla es oro...</p>
<p style="text-align:justify;"><!--more-->Siempre he intentado, en la medida de lo posible, ser simple en cuanto a la generación de contenidos en mi blog, porque las personas que a diario consultan las entradas lo están esperando y así lo he asumido. La prueba de esto es que a pesar de que en 2 meses no he publicado absolutamente nada desde el post acerca de Knockout.js, las visitas continúan aumentando progresivamente (cosa que les agradezco profundamente :D ).</p>
<p style="text-align:justify;">Sin embargo, revisando un poco los contenidos de mi blog, encuentro que aquel que tiene la cantidad más baja de visitas es precisamente el último post que escribí...

</p>


[caption id="attachment_982" align="aligncenter" width="611"]<a href="https://jotaeseymas.files.wordpress.com/2016/07/captura-de-pantalla-de-2016-07-26-152550.png"><img class=" wp-image-982" src="https://jotaeseymas.files.wordpress.com/2016/07/captura-de-pantalla-de-2016-07-26-152550.png?w=150" alt="Esto... desmotiva un poco :(" width="611" height="171" /></a> <strong>Esto... desmotiva un poco :(</strong>[/caption]

Revisando un poco más al detalle, me encuentro con varios errores (y razones) por las cuales un post que <del>considero</del> consideraba completo tiene tan pocas visitas, por enumerar algunas:
<ol>
 	<li style="text-align:justify;"><strong>Contenido prolongado:</strong> Seamos honestos a [casi] nadie le gusta hacer scroll en un post super largo que no dice mucho de lo que se está haciendo, solo bromear y exprimir el cerebro de quien lee.</li>
 	<li style="text-align:justify;"><strong>Poca documentación del código: </strong>Mi culpa, dividir una librería que sirve para tantas cosas, aunque no es justificación, es más que un error, denota una falta de sentido común.</li>
 	<li style="text-align:justify;"><strong>Nula justificación técnica del propósito de la librería:</strong> No lo hice, o no hice la tarea como debería ser, pudiendo asumir que investigué adecuadamente, no incluí aquellas características que hacen genial la librería.</li>
 	<li style="text-align:justify;"><strong>Miedo a parecer ignorante:</strong> Lo admito, parecer ignorante o que no se de lo que estoy escribiendo es uno de mis peores temores, sin embargo, eso no justifica que tengas que "aparentar" que sabes.</li>
</ol>
<p style="text-align:justify;">Por lo demás, creo que es justo eliminar la entrada, y cuando tenga un tiempo más de uso con la librería (y un poco más de tiempo para mí, ya saben, el laburo y eso :/ ), hacer lo que considero justo con vosotros, realizar una [ó varias] entrada(s) simple(s) acerca de la librería, de su arquitectura, de justificar la frase de que ninguna librería es la Panacea de la tecnología que va a resolver todos los problemas.</p>
<p style="text-align:justify;">Perdón por la demora en la generación de contenidos, agradezco mucho sus visitas ;)</p>
<p style="text-align:justify;">Muchas ideas en la cabeza y poco tiempo para ejecutarlas...</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>981</wp:post_id>
		<wp:post_date>2016-07-26 15:21:53</wp:post_date>
		<wp:post_date_gmt>2016-07-26 19:51:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-manera-de-disculpa-o-de-como-no-debe-ser-un-post</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="consejo"><![CDATA[consejo]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="ensenar"><![CDATA[enseñar]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="maestro"><![CDATA[maestro]]></category>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Estado]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[982]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[25181669323]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210284429651840";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/758027117451849728";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6163792831648399360&type=U&a=Dalg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[DEJA TUS APLICACIONES EN LA LONA. PARTE 1. GENERALIDADES | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.183</wp:comment_author_IP>
			<wp:comment_date>2016-08-06 19:34:52</wp:comment_date>
			<wp:comment_date_gmt>2016-08-06 23:34:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] A MANERA DE DISCULPA. O DE COMO NO DEBE SER UN&nbsp;POST&#8230; [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1470526715]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1470526493.68321704864501953125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1470526715.810575962066650390625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>UN JUEGO EN EL QUE NO TODO ES TAN FÁCIL COMO PARECE</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/06/un-juego-en-el-que-no-todo-es-tan-facil-como-parece/</link>
		<pubDate>Sat, 06 Aug 2016 15:59:28 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=988</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="un juego en el que no todo es tan facil como parece &gt;
<p style="text-align:justify;">Los "juegos de rol de código" (por llamarlos de alguna manera) han proliferado bastante ultimamente, tanto para móviles como para web. Desde <a href="http://www.hackedapp.com/">HackedApp</a>, el primer juego de código del mundo, hasta juegos algo más elaborados como los que mostré hace algún tiempo <a href="https://jotaeseymas.wordpress.com/2015/05/21/donde-jugar-con-javascript/">aquí</a>, han demostrado ser adictivos incluso para aquellos curiosos que quieren aprender a programar en Javascript. Sin embargo, hay juegos más adictivos que otros...</p>
<p style="text-align:justify;"><!--more--></p>
Pregunto: ¿son ideas mías o este <a href="https://alf.nu/ReturnTrue">juego</a> es extremadamente adictivo?... 8-)

<span style="color:#d25349;"><strong>ADVERTENCIA: No todo es tan fácil como parece, al menos a simple vista :twisted:</strong> </span>

¡Diviértanse! ;)

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>988</wp:post_id>
		<wp:post_date>2016-08-06 11:59:28</wp:post_date>
		<wp:post_date_gmt>2016-08-06 15:59:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>un-juego-en-el-que-no-todo-es-tan-facil-como-parece</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6167720607543754752&type=U&a=f9iZ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[25529150745]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210373697843489";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/761954894425096192";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DEJA TUS APLICACIONES EN LA LONA. PARTE 1. GENERALIDADES</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/</link>
		<pubDate>Sat, 06 Aug 2016 23:34:45 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=993</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="parte 1. generalidades" &gt;

Luego de la tormenta, viene la calma, o eso dicen <strong><span style="color:#7cbbbb;">#porai</span></strong>...
<p style="text-align:justify;">Luego de una <a href="https://jotaeseymas.wordpress.com/2016/07/26/a-manera-de-disculpa-o-de-como-no-debe-ser-un-post/">disculpa</a> más que merecida a vosotros que consultan este humilde blog, debo relatar (como debe ser ^^' ) mi historia de amor y dolor con una librería que aunque pudiera parecer complicada, es un tanto más sencilla de usar de lo que parece y muy útil.</p>
http://www.youtube.com/watch?v=-uaqsuvIew8

<!--more-->

Se trata pues de <a href="http://knockoutjs.com/">Knockout.js</a> XD .
<p style="text-align:justify;">Knockout es una librería que pretende ser una limpia y extensible base para construir interfaces de usuario con interacciones sofisticadas sin perderse en muchas líneas de código dedicadas a manejadores de eventos y actualizaciones manuales del <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model">DOM</a>, bueno, eso es lo que dice en su página web :oops: .</p>
<p style="text-align:justify;">Knockout se enfoca en 4 puntos clave:</p>

<ol>
 	<li style="text-align:justify;">Enlaces (o <em>bindings</em>) declarativos de datos con elementos del DOM, con una sintaxis sencilla de entender.</li>
 	<li style="text-align:justify;">"Refrescamiento automático" de los <em>bindings</em> observados con el estado de la data de forma precisa.</li>
 	<li style="text-align:justify;">Detección de scopes, estableciendo relaciones entre el modelo de datos y la interfaz.</li>
 	<li style="text-align:justify;"><em>Templates</em> y componentes, que permiten amplificar y flexibilizar el desarrollo de interfaces de usuario sin alguna otra librería adicional.</li>
</ol>
<p style="text-align:justify;">Knockout.js utiliza un patrón de diseño <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel">MVVM</a> (Modelo - Vista - Vista-Modelo), el cual permite la observación automática de valores y cambios de estado en el DOM, capturar eventos, y diseñar mecanismos de interacción complejos.</p>
<p style="text-align:justify;">Como comentario personal, me gustó mucho la forma en que reduces código al momento de declarar atributos que manejan eventos automáticamente, y la manera en la que interactúan estos atributos con los datos. Aunque no es un concepto nuevo, el <a href="http://www.lucaongaro.eu/blog/2012/12/02/easy-two-way-data-binding-in-javascript/">two-way data binding</a> en una aplicación web actual es prácticamente impensable (claro, a menos que se trate de una página estática o una <a href="http://codigofacilito.com/articulos/progressive-apps">aplicación web progresiva</a>).</p>
<p style="text-align:justify;">Para ilustrar esto, pondré un ejemplo sencillo:</p>


[code lang="html" title="Ejemplo de Sintaxis de Knockout.js" collapse="true" highlight="11,15,19,20,21,23"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;Ejemplo Knockout.js&lt;/title&gt;
	&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/picnicss/6.1.2/picnic.min.css&quot;&gt;
&lt;/head&gt;
&lt;body class=&quot;container&quot;&gt;

&lt;section class=&quot;flex two-300&quot;&gt;
		&lt;label&gt;&lt;input type=&quot;text&quot; placeholder=&quot;Ingresa un mensaje&quot; data-bind=&quot;value: nombre, valueUpdate: 'keyup'&quot;&gt;&lt;/label&gt;
	&lt;/section&gt;


&lt;h2 data-bind=&quot;visible: nombre()&quot;&gt;Hola &lt;span data-bind=&quot;text: nombre&quot;&gt;&lt;/span&gt;&lt;/h2&gt;

	&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js&quot;&gt;&lt;/script&gt;
	&lt;script&gt;
		var ViewModel = function (nombre) {
			var self = this;
			self.nombre = ko.observable(nombre);
		}
		ko.applyBindings(new ViewModel(&quot;Mundo!&quot;));
	&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">El ejemplo es simple, solo cuando se escribe en el <code>&lt;input&gt;</code>, aparece un mensaje con lo que escribas, actualizado automáticamente. Algunos elementos que resaltar.</p>

<ul>
 	<li style="text-align:justify;">En la línea 11,  el atributo <code>data-bind</code> es el que usa Knockout para establecer los bindings necesarios, allí se utilizan uno o varios de esos bindings que puedes ver en su <a href="http://knockoutjs.com/documentation/introduction.html">documentación</a>.
<ul>
 	<li style="text-align:justify;">El binding <code>value</code> permite mostrar cualquier valor en un elemento del DOM (generalmente un elemento <code>&lt;input&gt;</code> ).</li>
 	<li style="text-align:justify;">El binding <code>valueUpdate</code> permite capturar el evento necesario para actualizar el valor de acuerdo al binding declarado. En este caso, capturará el evento <code>'keyup'</code> de Javascript.</li>
</ul>
</li>
 	<li style="text-align:justify;">En la línea 15, hay dos bindings en dos elementos distintos:
<ul>
 	<li style="text-align:justify;">El binding <code>visible</code> permite que un elemento del DOM sea mostrado según una condición, si ésta evalua a true, entonces el elemento del DOM es mostrado.</li>
 	<li style="text-align:justify;">El binding <code>text</code> permite que un valor aparezca como texto plano dentro del DOM. La diferencia de éste con el</li>
</ul>
</li>
 	<li style="text-align:justify;">En la línea 19, se declara la Vista-Modelo como una función instanciable, en la que se colocarán todos los atributos que se observarán en la vista.</li>
 	<li style="text-align:justify;">En la línea 20, se almacena el scope, que es un tipo de patrón muy común en una arquitectura MVVM.</li>
 	<li style="text-align:justify;">En la línea 21, se declara un atributo que va a almacenar el estado del <code>&lt;input&gt;</code> donde se declaró el binding <code>value</code>.</li>
 	<li style="text-align:justify;">En la línea 23, se aplican todos los bindings declarados sobre la vista.</li>
</ul>
<p style="text-align:justify;">Próximamente estaré publicando más cosas específicas sobre esta librería, así como su implementación en un proyecto más complejo. ¡A noquear aplicaciones! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>993</wp:post_id>
		<wp:post_date>2016-08-06 19:34:45</wp:post_date>
		<wp:post_date_gmt>2016-08-06 23:34:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deja-tus-aplicaciones-en-la-lona</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="validacion"><![CDATA[validacion]]></category>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6167835174827487232&type=U&a=gtQ-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[25538071966]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210377002966115";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/762069473096589312";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[CONZEPTO: CON JAVASCRIPT ¡PUEDES!. USO DE CAN.JS | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2016/08/09/conzepto-con-javascript-puedes-uso-de-can-js/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.145</wp:comment_author_IP>
			<wp:comment_date>2016-08-09 14:05:57</wp:comment_date>
			<wp:comment_date_gmt>2016-08-09 18:05:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] DEJA TUS APLICACIONES EN LA LONA. PARTE 1.&nbsp;GENERALIDADES [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1470765995]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1470765996.0306799411773681640625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1470765958.79234600067138671875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[DEJA TUS APLICACIONES EN LA LONA. PARTE 2. BINDINGS DE APARIENCIA | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2016/08/12/deja-tus-aplicaciones-en-la-lona-parte-2-bindings-de-apariencia/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.96</wp:comment_author_IP>
			<wp:comment_date>2016-08-12 16:23:56</wp:comment_date>
			<wp:comment_date_gmt>2016-08-12 20:23:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] DEJA TUS APLICACIONES EN LA LONA. PARTE 1.&nbsp;GENERALIDADES [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1471033478]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1471033479.550158977508544921875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1471033437.40248394012451171875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[DEJA TUS APLICACIONES EN LA LONA. PARTE 3. BINDINGS DE CONTROL DE FLUJO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2016/09/12/deja-tus-aplicaciones-en-la-lona-parte-3-bindings-de-control-de-flujo/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.39</wp:comment_author_IP>
			<wp:comment_date>2016-09-12 17:29:40</wp:comment_date>
			<wp:comment_date_gmt>2016-09-12 21:29:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] HTTP, ya que es una librería orientada al desarrollo de componentes de interfaz de usuario, ¿recuerdan? Sin embargo, eso no limita la posiblidad de que pueda integrarse junto con otras librerías para [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1473715805]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1473715806.2141759395599365234375;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1473715781.4403049945831298828125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CONZEPTO: CON JAVASCRIPT ¡PUEDES!. USO DE CAN.JS</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/09/conzepto-con-javascript-puedes-uso-de-can-js/</link>
		<pubDate>Tue, 09 Aug 2016 18:05:48 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1008</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="uso de can.js" &gt;
<p style="text-align:justify;">Aprendiendo un poco sobre el modelo de desarrollo basado en <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank">Web Components</a>, me encuentro con que existen muchos frameworks en la actualidad que intentan emular este estilo de desarrollo que considero será el futuro inmediato. Por mencionar algunos está <a href="https://www.polymer-project.org/1.0/" target="_blank">Polymer</a>, <a href="http://aurelia.io/" target="_blank">Aurelia</a>, <a href="http://x-tag.github.io/" target="_blank">X-Tag</a> (de los que espero hacer posts más adelante XD ), <a href="https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/" target="_blank">Knockout.js</a> y uno que "puede" ser bastante prometedor, así que me arriesgué a probarlo...</p>
http://www.youtube.com/watch?v=QUQsqBqxoR4

<!--more-->
<p style="text-align:justify;"><a href="https://canjs.com/" target="_blank">Can.js</a> es un framework que utiliza diferentes formas de fabricar widgets o componentes de interfaz de usuario (o incluso aplicaciones enteras y complejas), orientado en su gran mayoría (pero no limitativo) al desarrollo basado en componentes, utilizando una API consistente y lo mejor (<span style="color:#d25349;"><strong>#IMO</strong></span>), es que no necesariamente te restringe a trabajar con jQuery ¡yeah :mrgreen: !</p>

<h2 style="text-align:justify;">Desarrollo de la aplicación</h2>
<p style="text-align:justify;">Como mi "relación" con esa librería es de amor y dolor (pero más dolor que amor :/ ), decidí usar el framework con <a href="http://zeptojs.com/" target="_blank">Zepto.js</a>. Dicho esto, hice una calculadora sencilla con apenas dos componentes: un <em>display</em> que contendrá todas las operaciones que se escriban, y un botón que según la etiqueta que contenga, añadirá al <em>display</em> un dígito o una operación. ¡Comencémos!</p>
<p style="text-align:justify;">En la vista principal tengo:</p>
[code lang="html" title="Archivo: index.html" collapse="true" highlight="9,14,16"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
	&lt;meta charset=&quot;UTF-8&quot;&gt;
	&lt;title&gt;Ejemplo Can Component&lt;/title&gt;
		&lt;link rel=&quot;stylesheet&quot; href=&quot;entireframework.min.css&quot;&gt;
&lt;/head&gt;
&lt;body style=&quot;margin: 0 auto; width: 80%&quot;&gt;
	&lt;script id=&quot;tpl-btn&quot; type=&quot;text/mustache&quot;&gt;
		&lt;display&gt;&lt;/display&gt;
		{{#each botones}}
			&lt;boton&gt;&lt;/boton&gt;
		{{/each}}
	&lt;/script&gt;
&lt;div id=&quot;app&quot; style=&quot;width:200px; text-align: center;&quot;&gt;&lt;/div&gt;
&lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;event.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;ajax.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;can.zepto.min.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;can.stache.js&quot;&gt;&lt;/script&gt;
	&lt;script src=&quot;calculadora.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]
<p style="text-align:justify;">De las líneas 9 a 14 está el template de la aplicación (Can.js lo compila y renderiza con <a href="https://mustache.github.io/" target="_blank">mustache</a>, el padre de <a href="https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/" target="_blank">Handlebars</a> :D ), y dichas líneas son insertadas en la línea 16. Lo demás son las inserciones de las librerías necesarias para el funcionamiento de Can.js con Zepto.js (valga decir que en su página web puedes descargar una versión personalizada del framework con <a href="https://dojotoolkit.org/" target="_blank">Dojo</a>, <a href="http://mootools.net/" target="_blank">Mootools</a>, <a href="http://yuilibrary.com/" target="_blank">YUI</a> o jQuery ^^' ).</p>
<p style="text-align:justify;">Ahora, respecto a los componentes tengo:</p>
[code lang="js" title="Archivo: calculadora.js | Componente: display" collapse="true" firstline="45"]
...
can.Component.extend({
	tag: &quot;display&quot;,
	template: can.stache(&quot;&lt;input type='text' id='display' disabled='disabled' style='margin-bottom:20px;margin-top:10px;text-align: right;font-family:Courier;width:90%' value=''/&gt;&quot;)
});
...
[/code]
<p style="text-align:justify;"><code><a href="https://canjs.com/docs/can.Component.html" target="_blank">can.Component</a></code> permite crear componentes como objetos planos de Javascript a renderizar, mientras que el atributo <code>tag</code> es simplemente el nombre del componente como será renderizado en la vista, y el atributo <code>template</code> es la vista que tendrá el componente, dentro del cual se pueden definir estilos, data de prueba, bindings con otros componentes, etcétera. Luego, usando <code><a href="https://canjs.com/docs/can.stache.html" target="_blank">can.stache</a></code>, se compila un template dentro de la vista.</p>
<p style="text-align:justify;">El componente botón es algo más "complejo":</p>
[code lang="js" title="Archivo: calculadora.js | Componente: boton" collapse="true"]
can.Component.extend({
	tag: &quot;boton&quot;,
	template: can.stache(&quot;&lt;button id={{value}} class='btn btn-sm btn-info' style='width:46px;'&gt;{{value}}&lt;/button&gt;&quot;),
	viewModel: {
		agregarCalculo: function (paso) {
			var cadena = $(&quot;#display&quot;).val();
			cadena = cadena === 0 ? paso : cadena + paso;
			$(&quot;#display&quot;).val(cadena);
		},
		procesarCalculo: function () {
			var operacion = $(&quot;#display&quot;).val();
			if (operacion.indexOf(&quot;%&quot;) !== -1) {
				var terminos = operacion.split('%');
				$(&quot;#display&quot;).val(( parseFloat(terminos[0]) * parseFloat(terminos[1]) ) / 100);
			}	else {
				$(&quot;#display&quot;).val(eval(operacion));
			}
		}
	},
	events: {
		click: function () {
			switch (this.element[0].innerText) {
				case &quot;C&quot;:
					$(&quot;#display&quot;).val('');
					break;
				case &quot;=&quot;:
					this.viewModel.procesarCalculo();
					break;
				case &quot;◀&quot;:
					if ($(&quot;#display&quot;).val().length &gt; 0)
						$(&quot;#display&quot;).val($(&quot;#display&quot;).val().substring(0, $(&quot;#display&quot;).val().length-1));
					break;
				case &quot;℗&quot;:
					$(&quot;#display&quot;).val(&quot;-----&gt; OFF &lt;-----   &quot;);
					setTimeout(function (){
						$(&quot;body&quot;).hide();
					}, 2000);
					break;
				default:
					this.viewModel.agregarCalculo(this.element[0].innerText);
			}
		}
	}
});
...
[/code]
<p style="text-align:justify;">En este componente entran en juego dos nuevos atributos de can.Component. El atributo <a href="https://canjs.com/docs/can.Component.prototype.viewModel.html" target="_blank"><code>viewModel</code></a>, que permite definir algún comportamiento adicional para un componente en particular, y <a href="https://canjs.com/docs/can.Component.prototype.events.html" target="_blank"><code>events</code></a>, que contendrá los <em>handlers</em> para los diferentes eventos que se produzcan en el componente.</p>
<p style="text-align:justify;">Por lo demás pueden ver el demo <a href="https://chinuxparibus.github.io/post-canjs/" target="_blank">acá</a>.</p>

<h2 style="text-align:justify;">Instrucciones de uso de la calculadora</h2>
<ul>
	<li style="text-align:justify;">El botón<span style="color:#d25349;"><strong> C</strong></span> sirve para "limpiar" el <em>display</em>.</li>
	<li style="text-align:justify;">El botón <span style="color:#d25349;"><strong>%</strong></span> calcula porcentajes (no <em>módulos</em>). Si escriben 25%3, calcularán el 3% de 25.</li>
	<li style="text-align:justify;">El botón <span style="color:#d25349;"><strong>℗ </strong></span>"apaga" la calculadora (bueno, la oculta :oops: ).</li>
	<li style="text-align:justify;">El botón <span style="color:#d25349;"><strong>=</strong></span> muestra el resultado de la operación escrita.</li>
	<li style="text-align:justify;">Los demás botones añaden un dígito o la operación que corresponda.</li>
</ul>
<p style="text-align:justify;">Me gustó mucho desarrollar en esta librería, sobre todo el hecho de que no te limita a trabajar con jQuery y que está basado en componentes. Lo importante es que puedas desarrollar aplicaciones. Con Javascript, <em><strong>¡puedes!</strong></em> ;) .</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1008</wp:post_id>
		<wp:post_date>2016-08-09 14:05:48</wp:post_date>
		<wp:post_date_gmt>2016-08-09 18:05:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>conzepto-con-javascript-puedes-uso-de-can-js</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="can-js"><![CDATA[can.js]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="web-components"><![CDATA[web components]]></category>
		<category domain="post_tag" nicename="zepto"><![CDATA[Zepto]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[25624010581]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6168839565697118208&type=U&a=OUf3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210398958074979";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/763073854046474240";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TÓMATELA CON CALMA... Y GULP</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/10/tomatela-con-calma-y-gulp/</link>
		<pubDate>Wed, 10 Aug 2016 21:28:49 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1021</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="tomatela con calma y gulp" &gt;
<p style="text-align:justify;">Para nadie es un secreto que comenzar desde cero con un proyecto web en <a href="https://nodejs.org/en/" target="_blank">Node.js</a>, por muy sencillo que parezca, termina a largo plazo complicándose, bien sea porque no existe un flujo de trabajo adecuado, porque no se conocen herramientas que permitan automatizar un poco el trabajo o bien recibimos un código ya hecho con documentación igual a <em>menos cero</em> y un cliente había pedido una demostración para ayer...</p>


[caption id="" align="aligncenter" width="560"]<img class="" src="http://s2.quickmeme.com/img/d6/d6a1143f571184db25f94613edd43b40af6d3a629221aba00d9efdcfef5efd84.jpg" width="560" height="357" /> <strong>Ehm, pues, bueno... ^^'</strong>[/caption]

<!--more-->
<h2 style="text-align:justify;">¿Entonces, qué puedo hacer?</h2>
<p style="text-align:justify;"><a href="http://gulpjs.com" target="_blank">Gulp</a> es una herramienta de automatización de tareas que en gran medida resuelve varios de los inconvenientes que normalmente se presentan especialmente con los archivos Javascript, CSS y HTML estáticos (a.k.a. <em>assets</em>) en un proyecto web:</p>

<ul>
 	<li style="text-align:justify;">Previsualización automática de cambios en assets.</li>
 	<li style="text-align:justify;">Minificación de assets (reducir el tamaño de un archivo, aumenta la velocidad del request que se utiliza para incluirlo).</li>
 	<li style="text-align:justify;">Concatenación de archivos (para minimizar el número de requests).</li>
 	<li style="text-align:justify;">Cacheado avanzado de assets.</li>
 	<li style="text-align:justify;">Compilado de CSS dinámicos (SASS, LESS y otros).</li>
 	<li style="text-align:justify;">Generación (tipo boilerplate) de sitios web estáticos.</li>
 	<li style="text-align:justify;">Renderizado y pre-renderizado de templates (usando HAML, Jade u otros).</li>
 	<li style="text-align:justify;">Generación de data de pruebas mediante <em>mock-objects.</em></li>
 	<li style="text-align:justify;">Compila Javascript ES6 a Javascript ES5.</li>
 	<li style="text-align:justify;">Compresión y descompresión automática de imágenes.</li>
 	<li style="text-align:justify;">Automatizar tareas de testing (en desarrollos TDD).</li>
 	<li style="text-align:justify;">Generación automática de documentación de código.</li>
 	<li style="text-align:justify;">Conversión de archivos Markdown a HTML (para blogs estáticos, por ejemplo).</li>
 	<li style="text-align:justify;">Y mucho, mucho más...</li>
</ul>
[caption id="" align="aligncenter" width="560"]<a href="https://img.vivaolinux.com.br/imagens/artigos/comunidade/gulp.jpg"><img src="https://img.vivaolinux.com.br/imagens/artigos/comunidade/gulp.jpg" width="560" height="280" /></a> <strong>Si, todo eso lo hace Gulp :idea:</strong>[/caption]
<p style="text-align:justify;">Si leíste el anuncio con voz de informercial pues bien por ti o_O . Pero si, en general es un problema el hecho de que tengamos tantos archivos en una aplicación o página, mucho más si nos la dejaron legada así que...</p>
<p style="text-align:justify;"><img class="aligncenter" src="https://lh3.googleusercontent.com/-oYTGI-yMFKw/Vxh9oUJh6BI/AAAAAAAAAws/IpvlLgc6pqYZPJ6IRkJt7JTUtangD6l0w/w506-h750/meme1456530637gen.jpg" width="560" height="560" /></p>
<p style="text-align:justify;">Para esta demostración, solo instalaré cuatro plugins, que ilustrarán como Gulp puede resolver tres tareas importantes en el flujo de trabajo:</p>

<ol>
 	<li>Minificación y compresión de archivos Javascript.</li>
 	<li>Concatenación de archivos CSS y JS.</li>
 	<li>Previsualización automática de cambios en assets.</li>
</ol>
<p style="text-align:justify;">Lo primero que haremos será instalar Gulp en la raíz de nuestro proyecto. En este caso, usaré un <a href="http://www.andreagalanti.it/flatfy/" target="_blank">layout</a> de una página web estática gratuito y con muchos <em>assets</em>:</p>


[code lang="shell"]$ npm install gulp --save[/code]

Luego instalamos los plugins que necesitamos:
<ul>
 	<li><a href="https://www.npmjs.com/package/gulp-uglify/" target="_blank"><code>gulp-uglify</code></a> hará la mayor parte del trabajo, minificará los archivos que le indiquemos.</li>
 	<li><a href="https://www.npmjs.com/package/gulp-concat/" target="_blank"><code>gulp-concat</code></a> concatenará los archivos Javascript que le indiquemos, generando uno solo.</li>
 	<li><a href="https://www.npmjs.com/package/gulp-css" target="_blank"><code>gulp-css</code></a> hará lo mismo que <span style="color:#d25349;"><code>gulp-concat</code></span> pero con los archivos CSS.</li>
 	<li><a href="https://www.npmjs.com/package/gulp-watch/" target="_blank"><code>gulp-watch</code></a> observará los cambios que se hagan en los archivos que le indiquemos.</li>
</ul>

[code lang="shell"]$ npm install gulp-uglify gulp-concat gulp-css gulp-watch --save[/code]

<p style="text-align:justify;">A continuación, en la raíz de nuestro proyecto, creamos un archivo llamado <code>gulpfile.js</code>, y colocamos las tareas como deseamos ejecutarlas:</p>


[code lang="js" title="Archivo: gulpfile.js" collapse="true" highlight="7,8,9,11,12,13,27,28,31"]
var gulp = require('gulp'),
  uglify = require('gulp-uglify'),
  concat = require('gulp-concat'),
  cssmin = require('gulp-css');

// Minificamos los archivos CSS
gulp.task('css', function() {
 gulp.src([
  './css/*.css',
 ])
 .pipe(concat('all.min.css'))
 .pipe(cssmin())
 .pipe(gulp.dest('./css'));
});

// Minificamos los archivos JS
gulp.task('scripts', function () {
 gulp.src([
  './js/*.js'
 ])
 .pipe(concat('all.min.js'))
 .pipe(uglify())
 .pipe(gulp.dest('./js'));
});

gulp.task('watch', function () {
  gulp.watch('./js/*.js', ['scripts']);
  gulp.watch('./css/*.css', ['css']);
});

gulp.task('default', ['css', 'scripts', 'watch']);
[/code]

<p style="text-align:justify;">En la línea 7, definimos una tarea a ser automatizada, declarando que tenga como origen, los archivos que están en la ruta definida en la línea 9, seguidamente, usamos un <a href="https://nodejs.org/dist/latest-v4.x/docs/api/stream.html" target="_blank">flujo</a> para llevar todos esos archivos a un único archivo por medio de <span style="color:#d25349;"><code>concat()</code></span> en la línea 11 y será minificado y escrito en la ruta declarada en la línea 13. El procedimiento es similar tanto para los archivos CSS como para los archivos Javascript.</p>
<p style="text-align:justify;">Luego en las líneas 27 y 28 simultáneamente se observará cualquier cambio realizado a cualquier archivo dentro de la ruta declarada, y de existir un cambio, se ejecutará la(s) tarea(s) definida(s). Finalmente, en la línea 31, se declara como tarea por defecto, el orden de ejecución de las tareas declaradas en el archivo. Es importante definir el orden, en especial si se está usando gulp-watch, ya que este orden influirá en la observación de los cambios en los archivos.</p>
<p style="text-align:justify;">Puedes declarar tantas tareas como desees, siempre que te sean útiles y te ayuden a acelerar el trabajo, ¡genial! XD . Ahora que tienes gran parte de tus tareas automatizadas... Tómatela con calma... ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1021</wp:post_id>
		<wp:post_date>2016-08-10 17:28:49</wp:post_date>
		<wp:post_date_gmt>2016-08-10 21:28:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tomatela-con-calma-y-gulp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[633]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[25663569859]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/763487322545401856";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6169253035596881920&type=U&a=AagF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-01-26 14:26:28</title>
		<link>https://jotaeseymas.wordpress.com/2015/01/26/dibujando-grafos-en-javascript/captura-de-pantalla-de-2015-01-26-142628/</link>
		<pubDate>Mon, 26 Jan 2015 19:11:24 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/01/captura-de-pantalla-de-2015-01-26-142628.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2015-01-26 14:41:24</wp:post_date>
		<wp:post_date_gmt>2015-01-26 19:11:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-01-26-142628</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>21</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/01/captura-de-pantalla-de-2015-01-26-142628.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/01/captura-de-pantalla-de-2015-01-26-142628.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:205;s:6:"height";i:171;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/01/captura-de-pantalla-de-2015-01-26-142628.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>formulario de registro ejemplo</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/18/validando-ando-y-no-me-voy-quejando-parte-1-javascript/captura-de-pantalla-de-2015-02-18-140245/</link>
		<pubDate>Wed, 18 Feb 2015 18:33:47 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-140245.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2015-02-18 14:03:47</wp:post_date>
		<wp:post_date_gmt>2015-02-18 18:33:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-02-18-140245</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>89</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-140245.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/02/captura-de-pantalla-de-2015-02-18-140245.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:342;s:6:"height";i:329;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/02/captura-de-pantalla-de-2015-02-18-140245.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Formularios como estos dan asco...</title>
		<link>https://jotaeseymas.wordpress.com/2015/02/18/validando-ando-y-no-me-voy-quejando-parte-1-javascript/captura-de-pantalla-de-2015-02-18-143437/</link>
		<pubDate>Wed, 18 Feb 2015 19:03:47 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-143437.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2015-02-18 14:33:47</wp:post_date>
		<wp:post_date_gmt>2015-02-18 19:03:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-02-18-143437</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>89</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-143437.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/02/captura-de-pantalla-de-2015-02-18-143437.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:503;s:6:"height";i:333;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/02/captura-de-pantalla-de-2015-02-18-143437.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-03-03 15:17:18</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/04/libreria-angular-parte-0-angular-101/captura-de-pantalla-de-2015-03-03-151718/</link>
		<pubDate>Tue, 03 Mar 2015 19:49:19 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-03-151718.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<span style="font-size:13px;text-align:center;font-weight:bold;">Separa la lógica de presentación con la lógica de los datos</span>]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2015-03-03 15:19:19</wp:post_date>
		<wp:post_date_gmt>2015-03-03 19:49:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-03-03-151718</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>161</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-03-151718.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/captura-de-pantalla-de-2015-03-03-151718.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:244;s:6:"height";i:187;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/captura-de-pantalla-de-2015-03-03-151718.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>libreria_angular</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/25/libreria-angular-parte-1-controlando-y-dirigiendo/libreria_angular/</link>
		<pubDate>Tue, 24 Mar 2015 18:47:11 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<span style="text-align:center;font-size:13px;font-weight:bold;">Tiene pinta de librería, ¿no? Se nota que me encanta el azul... juejuejue
</span>]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2015-03-24 14:17:11</wp:post_date>
		<wp:post_date_gmt>2015-03-24 18:47:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>libreria_angular</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/libreria_angular.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1011;s:6:"height";i:358;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/libreria_angular.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>categorias_angular</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/25/libreria-angular-parte-1-controlando-y-dirigiendo/categorias_angular/</link>
		<pubDate>Tue, 24 Mar 2015 20:06:38 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/categorias_angular.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<span style="font-size:13px;font-weight:bold;text-align:center;"></span>]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2015-03-24 15:36:38</wp:post_date>
		<wp:post_date_gmt>2015-03-24 20:06:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>categorias_angular</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>175</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/categorias_angular.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/categorias_angular.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:188;s:6:"height";i:199;s:4:"file";s:94:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/categorias_angular.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-03-31 11:50:34</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/viajando-en-el-tiempo/captura-de-pantalla-de-2015-03-31-115034/</link>
		<pubDate>Tue, 31 Mar 2015 16:23:16 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-31-115034.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2015-03-31 11:53:16</wp:post_date>
		<wp:post_date_gmt>2015-03-31 16:23:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-03-31-115034</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-31-115034.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/captura-de-pantalla-de-2015-03-31-115034.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:722;s:6:"height";i:293;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/captura-de-pantalla-de-2015-03-31-115034.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ie-not-supported</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/01/queezepto/ie-not-supported/</link>
		<pubDate>Wed, 01 Apr 2015 15:21:08 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong>juasjuasjuas...</strong>]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2015-04-01 10:51:08</wp:post_date>
		<wp:post_date_gmt>2015-04-01 15:21:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie-not-supported</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>194</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/ie-not-supported.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:514;s:6:"height";i:255;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/ie-not-supported.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>propiedades</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/06/hacer-un-mockup-con-inkscape-y-javascript/propiedades/</link>
		<pubDate>Mon, 06 Apr 2015 13:41:13 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/04/propiedades.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¿los nombres les parecen familiares?]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2015-04-06 09:11:13</wp:post_date>
		<wp:post_date_gmt>2015-04-06 13:41:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>propiedades</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>294</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/04/propiedades.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:417;s:6:"height";i:343;s:4:"file";s:87:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/propiedades.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/propiedades.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>email-validation-regex</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-1/email-validation-regex/</link>
		<pubDate>Fri, 10 Apr 2015 16:32:40 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">Asusta, ¿no?</strong>]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date>2015-04-10 12:02:40</wp:post_date>
		<wp:post_date_gmt>2015-04-10 16:32:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>email-validation-regex</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>236</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:486;s:6:"height";i:319;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/email-validation-regex.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/email-validation-regex.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>arquitectura</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/14/programacion-modular-con-javascript/arquitectura/</link>
		<pubDate>Tue, 14 Apr 2015 14:45:28 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/04/arquitectura.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;"></strong>]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date>2015-04-14 10:15:28</wp:post_date>
		<wp:post_date_gmt>2015-04-14 14:45:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arquitectura</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>62</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/04/arquitectura.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/arquitectura.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:576;s:6:"height";i:386;s:4:"file";s:88:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/arquitectura.gif";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>regexpal</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-3/regexpal/</link>
		<pubDate>Mon, 20 Apr 2015 15:04:30 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/regexpal.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">Regexpal en acción</strong>]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2015-04-20 10:34:30</wp:post_date>
		<wp:post_date_gmt>2015-04-20 15:04:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regexpal</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>270</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/regexpal.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/regexpal.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:184;s:6:"height";i:178;s:4:"file";s:84:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/regexpal.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>regexpr</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-3/regexpr/</link>
		<pubDate>Mon, 20 Apr 2015 15:27:12 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/regexpr.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">Regexr en acción</strong>]]></excerpt:encoded>
		<wp:post_id>357</wp:post_id>
		<wp:post_date>2015-04-20 10:57:12</wp:post_date>
		<wp:post_date_gmt>2015-04-20 15:27:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regexpr</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>270</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/regexpr.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/regexpr.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1014;s:6:"height";i:304;s:4:"file";s:83:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/regexpr.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>separacion</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-3/separacion/</link>
		<pubDate>Mon, 20 Apr 2015 15:31:27 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/separacion.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">Substitution de Regexr en acción</strong>]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date>2015-04-20 11:01:27</wp:post_date>
		<wp:post_date_gmt>2015-04-20 15:31:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>separacion</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>270</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/separacion.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/separacion.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:426;s:6:"height";i:134;s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/separacion.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>debuggex</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-3/debuggex/</link>
		<pubDate>Mon, 20 Apr 2015 15:47:58 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/debuggex.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">Debuggex en acción</strong>]]></excerpt:encoded>
		<wp:post_id>362</wp:post_id>
		<wp:post_date>2015-04-20 11:17:58</wp:post_date>
		<wp:post_date_gmt>2015-04-20 15:47:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debuggex</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>270</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/debuggex.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/debuggex.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:865;s:6:"height";i:269;s:4:"file";s:84:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/debuggex.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>debuggex-grafica</title>
		<link>https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-3/debuggex-grafica/</link>
		<pubDate>Mon, 20 Apr 2015 15:50:31 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/03/debuggex-grafica.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">gGráfico generado por Debuggex en acción</strong>]]></excerpt:encoded>
		<wp:post_id>364</wp:post_id>
		<wp:post_date>2015-04-20 11:20:31</wp:post_date>
		<wp:post_date_gmt>2015-04-20 15:50:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debuggex-grafica</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>270</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/03/debuggex-grafica.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/debuggex-grafica.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:864;s:6:"height";i:525;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/03/debuggex-grafica.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>scopes_angular</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/26/libreria-angular-parte-2-enrutando/scopes_angular/</link>
		<pubDate>Sun, 26 Apr 2015 19:29:06 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/04/scopes_angular.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">Ilustración de $rootScope. $parent le transfiere el $scope.</strong>]]></excerpt:encoded>
		<wp:post_id>424</wp:post_id>
		<wp:post_date>2015-04-26 14:59:06</wp:post_date>
		<wp:post_date_gmt>2015-04-26 19:29:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scopes_angular</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>304</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/04/scopes_angular.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/scopes_angular.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:330;s:6:"height";i:170;s:4:"file";s:90:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/scopes_angular.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-04-29 14:06:38</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/29/jugar-con-javascript-pero-sin-javascript/captura-de-pantalla-de-2015-04-29-140638/</link>
		<pubDate>Wed, 29 Apr 2015 18:29:52 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140638.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">Las funcionalidades principales</strong>]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date>2015-04-29 13:59:52</wp:post_date>
		<wp:post_date_gmt>2015-04-29 18:29:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-04-29-140638</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>436</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140638.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/captura-de-pantalla-de-2015-04-29-140638.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:976;s:6:"height";i:463;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/captura-de-pantalla-de-2015-04-29-140638.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-04-29 14:09:34</title>
		<link>https://jotaeseymas.wordpress.com/2015/04/29/jugar-con-javascript-pero-sin-javascript/captura-de-pantalla-de-2015-04-29-140934/</link>
		<pubDate>Wed, 29 Apr 2015 18:32:05 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140934.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<strong style="font-size:13px;text-align:center;">...y las "secundarias"</strong>]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date>2015-04-29 14:02:05</wp:post_date>
		<wp:post_date_gmt>2015-04-29 18:32:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-04-29-140934</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>436</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140934.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/captura-de-pantalla-de-2015-04-29-140934.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:978;s:6:"height";i:519;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/04/captura-de-pantalla-de-2015-04-29-140934.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>phantomjs</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/06/los-fantasmas-pelean-en-el-navegador-phantomjs-vs-slimerjs/phantomjs/</link>
		<pubDate>Wed, 06 May 2015 12:44:58 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/05/phantomjs.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2015-05-06 08:14:58</wp:post_date>
		<wp:post_date_gmt>2015-05-06 12:44:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>phantomjs</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>220</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/05/phantomjs-e1430916367605.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/phantomjs-e1430916367605.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:150;s:6:"height";i:150;s:4:"file";s:100:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/phantomjs-e1430916367605.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:13:"phantomjs.png";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>slimerjs</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/06/los-fantasmas-pelean-en-el-navegador-phantomjs-vs-slimerjs/slimerjs/</link>
		<pubDate>Wed, 06 May 2015 12:53:03 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/05/slimerjs1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>469</wp:post_id>
		<wp:post_date>2015-05-06 08:23:03</wp:post_date>
		<wp:post_date_gmt>2015-05-06 12:53:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>slimerjs</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>220</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/05/slimerjs1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:73;s:6:"height";i:73;s:4:"file";s:85:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/slimerjs1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/slimerjs1.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>8c6c8-mono</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/06/los-fantasmas-pelean-en-el-navegador-phantomjs-vs-slimerjs/8c6c8-mono/</link>
		<pubDate>Wed, 06 May 2015 13:14:07 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/05/8c6c8-mono.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>472</wp:post_id>
		<wp:post_date>2015-05-06 08:44:07</wp:post_date>
		<wp:post_date_gmt>2015-05-06 13:14:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>8c6c8-mono</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>220</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/05/8c6c8-mono.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/8c6c8-mono.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:320;s:6:"height";i:297;s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/8c6c8-mono.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>auto_import</wp:meta_key>
			<wp:meta_value><![CDATA[http://4.bp.blogspot.com/-fPh0TzESxhI/Tql8ChbOiQI/AAAAAAAAAEg/0Kq0f1jaMeA/s1600/mono.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>filtro_de_libros</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/13/libreria-angular-parte-3-fabricando/filtro_de_libros/</link>
		<pubDate>Wed, 13 May 2015 05:05:39 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/05/filtro_de_libros.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[<span style="text-align:center;font-size:13px;font-weight:bold;">¡Funciona! Me costó hacerlo pero valió la pena
</span>]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date>2015-05-13 00:35:39</wp:post_date>
		<wp:post_date_gmt>2015-05-13 05:05:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>filtro_de_libros</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>491</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/05/filtro_de_libros.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/filtro_de_libros.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:408;s:6:"height";i:381;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/filtro_de_libros.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AAA+CCC</title>
		<link>https://jotaeseymas.wordpress.com/2015/05/22/simulacion-de-computadores-ibm-en-el-navegador/aaaccc/</link>
		<pubDate>Fri, 22 May 2015 17:41:30 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/05/aaaccc.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Compaq Presario PC XT :3]]></excerpt:encoded>
		<wp:post_id>542</wp:post_id>
		<wp:post_date>2015-05-22 13:11:30</wp:post_date>
		<wp:post_date_gmt>2015-05-22 17:41:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aaaccc</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>539</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/05/aaaccc.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/aaaccc.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:523;s:6:"height";i:410;s:4:"file";s:82:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/05/aaaccc.gif";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pantallazo_invalid</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/07/validando-campos-de-formulario-con-angular-js-parte-1-la-teoria/pantallazo_invalid/</link>
		<pubDate>Mon, 08 Jun 2015 01:20:43 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/pantallazo_invalid.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Las validaciones haciendo lo suyo...]]></excerpt:encoded>
		<wp:post_id>551</wp:post_id>
		<wp:post_date>2015-06-07 20:50:43</wp:post_date>
		<wp:post_date_gmt>2015-06-08 01:20:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pantallazo_invalid</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>72</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_invalid.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/pantallazo_invalid.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:979;s:6:"height";i:632;s:4:"file";s:94:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/pantallazo_invalid.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pantallazo_valid</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/07/validando-campos-de-formulario-con-angular-js-parte-1-la-teoria/pantallazo_valid/</link>
		<pubDate>Mon, 08 Jun 2015 01:20:48 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/pantallazo_valid.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[...y aquí cuando todo va bien]]></excerpt:encoded>
		<wp:post_id>552</wp:post_id>
		<wp:post_date>2015-06-07 20:50:48</wp:post_date>
		<wp:post_date_gmt>2015-06-08 01:20:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pantallazo_valid</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>72</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_valid.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/pantallazo_valid.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:975;s:6:"height";i:547;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/pantallazo_valid.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pantallazo_pristine</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/08/validando-campos-de-formulario-con-angular-js-parte-2-la-practica/pantallazo_pristine/</link>
		<pubDate>Mon, 08 Jun 2015 13:28:19 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/pantallazo_pristine.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Formulario retocado con Material Design ( :3 )]]></excerpt:encoded>
		<wp:post_id>566</wp:post_id>
		<wp:post_date>2015-06-08 08:58:19</wp:post_date>
		<wp:post_date_gmt>2015-06-08 13:28:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pantallazo_pristine</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>549</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_pristine.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/pantallazo_pristine.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:917;s:6:"height";i:538;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/pantallazo_pristine.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>javawebservices</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/javawebservices/</link>
		<pubDate>Tue, 09 Jun 2015 14:37:24 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/javawebservices.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA["A grosso modo" lo que son servicios web]]></excerpt:encoded>
		<wp:post_id>580</wp:post_id>
		<wp:post_date>2015-06-09 10:07:24</wp:post_date>
		<wp:post_date_gmt>2015-06-09 14:37:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javawebservices</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>577</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/javawebservices.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/javawebservices.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:300;s:4:"file";s:91:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/javawebservices.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>demo_faker</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/12/falsificando-datos-para-mocking-de-documentos-json/demo_faker/</link>
		<pubDate>Sat, 13 Jun 2015 03:25:25 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/demo_faker.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Con un poco de magia HTML XD]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2015-06-12 22:55:25</wp:post_date>
		<wp:post_date_gmt>2015-06-13 03:25:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>demo_faker</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>602</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/demo_faker.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/demo_faker.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:547;s:6:"height";i:227;s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/demo_faker.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/12/falsificando-datos-para-mocking-de-documentos-json/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67/</link>
		<pubDate>Sat, 13 Jun 2015 03:30:28 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Muahahaha...]]></excerpt:encoded>
		<wp:post_id>609</wp:post_id>
		<wp:post_date>2015-06-12 23:00:28</wp:post_date>
		<wp:post_date_gmt>2015-06-13 03:30:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>602</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:293;s:6:"height";i:400;s:4:"file";s:128:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>object</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/16/typico-de-json/object/</link>
		<pubDate>Tue, 16 Jun 2015 15:34:10 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/object.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Definición genérica de JSON]]></excerpt:encoded>
		<wp:post_id>627</wp:post_id>
		<wp:post_date>2015-06-16 11:04:10</wp:post_date>
		<wp:post_date_gmt>2015-06-16 15:34:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>object</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>623</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/object.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/object.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:598;s:6:"height";i:113;s:4:"file";s:82:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/object.gif";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CVyvi9wm_400x400</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/cvyvi9wm_400x400/</link>
		<pubDate>Tue, 16 Jun 2015 19:48:02 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/cvyvi9wm_400x400.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[XD]]></excerpt:encoded>
		<wp:post_id>633</wp:post_id>
		<wp:post_date>2015-06-16 15:18:02</wp:post_date>
		<wp:post_date_gmt>2015-06-16 19:48:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cvyvi9wm_400x400</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>632</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/cvyvi9wm_400x400-e1434988229135.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/cvyvi9wm_400x400-e1434988229135.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:107:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/cvyvi9wm_400x400-e1434988229135.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:400;s:6:"height";i:400;s:4:"file";s:20:"cvyvi9wm_400x400.png";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-06-27 14:09:23</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/27/manejar-paquetes-en-node-js-101/captura-de-pantalla-de-2015-06-27-140923/</link>
		<pubDate>Sat, 27 Jun 2015 23:29:38 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-27-140923.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¡1492 lineas, ay caramba!]]></excerpt:encoded>
		<wp:post_id>673</wp:post_id>
		<wp:post_date>2015-06-27 18:59:38</wp:post_date>
		<wp:post_date_gmt>2015-06-27 23:29:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-06-27-140923</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>672</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-27-140923.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/captura-de-pantalla-de-2015-06-27-140923.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:817;s:6:"height";i:482;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/captura-de-pantalla-de-2015-06-27-140923.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-06-29 16:26:34</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/29/typico-de-json-server/captura-de-pantalla-de-2015-06-29-162634/</link>
		<pubDate>Mon, 29 Jun 2015 20:53:54 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-162634.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Bastante amigable... XD]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2015-06-29 16:23:54</wp:post_date>
		<wp:post_date_gmt>2015-06-29 20:53:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-06-29-162634</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>676</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-162634.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/captura-de-pantalla-de-2015-06-29-162634.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:561;s:6:"height";i:215;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/captura-de-pantalla-de-2015-06-29-162634.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-06-29 16:31:23</title>
		<link>https://jotaeseymas.wordpress.com/2015/06/29/typico-de-json-server/captura-de-pantalla-de-2015-06-29-163123/</link>
		<pubDate>Mon, 29 Jun 2015 20:58:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-163123.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¡y si funciona...! :D]]></excerpt:encoded>
		<wp:post_id>684</wp:post_id>
		<wp:post_date>2015-06-29 16:28:32</wp:post_date>
		<wp:post_date_gmt>2015-06-29 20:58:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-06-29-163123</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>676</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-163123.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/captura-de-pantalla-de-2015-06-29-163123.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1004;s:6:"height";i:593;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/06/captura-de-pantalla-de-2015-06-29-163123.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>js in one pic</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/03/javascript-en-una-imagen/js-in-one-pic/</link>
		<pubDate>Fri, 03 Jul 2015 13:58:17 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/js-in-one-pic.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>692</wp:post_id>
		<wp:post_date>2015-07-03 09:28:17</wp:post_date>
		<wp:post_date_gmt>2015-07-03 13:58:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js-in-one-pic</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>691</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/js-in-one-pic.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/js-in-one-pic.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1886;s:6:"height";i:6709;s:4:"file";s:89:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/js-in-one-pic.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sobre-angular-spa</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/05/acerca-de-single-page-applications-spa/sobre-angular-spa/</link>
		<pubDate>Sun, 05 Jul 2015 15:26:39 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/sobre-angular-spa.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Conceptos como Inyección de dependencias y <em>Two-Way Data binding</em> son importantes para SPA]]></excerpt:encoded>
		<wp:post_id>695</wp:post_id>
		<wp:post_date>2015-07-05 10:56:39</wp:post_date>
		<wp:post_date_gmt>2015-07-05 15:26:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sobre-angular-spa</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>694</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/sobre-angular-spa.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/sobre-angular-spa.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:682;s:6:"height";i:308;s:4:"file";s:93:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/sobre-angular-spa.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sobre-meteor-spa</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/05/acerca-de-single-page-applications-spa/sobre-meteor-spa/</link>
		<pubDate>Sun, 05 Jul 2015 15:37:59 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/sobre-meteor-spa.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Cifras nada despreciables... 8-)]]></excerpt:encoded>
		<wp:post_id>696</wp:post_id>
		<wp:post_date>2015-07-05 11:07:59</wp:post_date>
		<wp:post_date_gmt>2015-07-05 15:37:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sobre-meteor-spa</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>694</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/sobre-meteor-spa.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/sobre-meteor-spa.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:940;s:6:"height";i:240;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/sobre-meteor-spa.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sobre-aurelia-spa</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/05/acerca-de-single-page-applications-spa/sobre-aurelia-spa/</link>
		<pubDate>Sun, 05 Jul 2015 15:49:15 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/sobre-aurelia-spa.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[ES6 y ES7 y apenas fue aprobado el mes pasado... interesante... :twisted:]]></excerpt:encoded>
		<wp:post_id>698</wp:post_id>
		<wp:post_date>2015-07-05 11:19:15</wp:post_date>
		<wp:post_date_gmt>2015-07-05 15:49:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sobre-aurelia-spa</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>694</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/sobre-aurelia-spa.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/sobre-aurelia-spa.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:967;s:6:"height";i:240;s:4:"file";s:93:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/sobre-aurelia-spa.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>load-sin-pegasus</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/26/typico-de-pegasus/load-sin-pegasus/</link>
		<pubDate>Sun, 26 Jul 2015 12:05:05 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/load-sin-pegasus1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[TIempo de Ejecución (Sin pegasus)]]></excerpt:encoded>
		<wp:post_id>714</wp:post_id>
		<wp:post_date>2015-07-26 07:35:05</wp:post_date>
		<wp:post_date_gmt>2015-07-26 12:05:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>load-sin-pegasus</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>710</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/load-sin-pegasus1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/load-sin-pegasus1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:257;s:6:"height";i:61;s:4:"file";s:93:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/load-sin-pegasus1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rend-sin-pegasus</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/26/typico-de-pegasus/rend-sin-pegasus/</link>
		<pubDate>Sun, 26 Jul 2015 12:05:07 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/rend-sin-pegasus1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Tiempo de Rendimiento (Sin pegasus)]]></excerpt:encoded>
		<wp:post_id>715</wp:post_id>
		<wp:post_date>2015-07-26 07:35:07</wp:post_date>
		<wp:post_date_gmt>2015-07-26 12:05:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rend-sin-pegasus</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>710</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/rend-sin-pegasus1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/rend-sin-pegasus1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1023;s:6:"height";i:72;s:4:"file";s:93:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/rend-sin-pegasus1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>load-con-pegasus</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/26/typico-de-pegasus/load-con-pegasus/</link>
		<pubDate>Sun, 26 Jul 2015 12:18:38 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/load-con-pegasus.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[TIempo de Ejecución (Con pegasus)]]></excerpt:encoded>
		<wp:post_id>719</wp:post_id>
		<wp:post_date>2015-07-26 07:48:38</wp:post_date>
		<wp:post_date_gmt>2015-07-26 12:18:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>load-con-pegasus</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>710</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/load-con-pegasus.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/load-con-pegasus.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:260;s:6:"height";i:63;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/load-con-pegasus.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rend-con-pegasus</title>
		<link>https://jotaeseymas.wordpress.com/2015/07/26/typico-de-pegasus/rend-con-pegasus/</link>
		<pubDate>Sun, 26 Jul 2015 12:18:41 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/07/rend-con-pegasus.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[TIempo de Rendimiento (Con pegasus)]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date>2015-07-26 07:48:41</wp:post_date>
		<wp:post_date_gmt>2015-07-26 12:18:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rend-con-pegasus</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>710</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/07/rend-con-pegasus.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/rend-con-pegasus.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1022;s:6:"height";i:96;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/07/rend-con-pegasus.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mongo_logo_small</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/23/acerca-de-mongodb-parte-0-101/mongo_logo_small/</link>
		<pubDate>Sun, 23 Aug 2015 23:02:46 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/mongo_logo_small.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Coco-Mongo xD]]></excerpt:encoded>
		<wp:post_id>727</wp:post_id>
		<wp:post_date>2015-08-23 18:32:46</wp:post_date>
		<wp:post_date_gmt>2015-08-23 23:02:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mongo_logo_small</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>726</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/mongo_logo_small.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/mongo_logo_small.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:250;s:6:"height";i:250;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/mongo_logo_small.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>modelo_entidad_relacion_matriculacion1</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/23/acerca-de-mongodb-parte-0-101/modelo_entidad_relacion_matriculacion1/</link>
		<pubDate>Sun, 23 Aug 2015 23:28:52 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/modelo_entidad_relacion_matriculacion1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Más explícito, imposible... XD]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date>2015-08-23 18:58:52</wp:post_date>
		<wp:post_date_gmt>2015-08-23 23:28:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>modelo_entidad_relacion_matriculacion1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>726</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/modelo_entidad_relacion_matriculacion1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/modelo_entidad_relacion_matriculacion1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:724;s:6:"height";i:627;s:4:"file";s:114:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/modelo_entidad_relacion_matriculacion1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>angular-agregar-invalido</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/angular-agregar-invalido/</link>
		<pubDate>Thu, 27 Aug 2015 15:54:51 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-invalido.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Validación funcionando]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2015-08-27 11:24:51</wp:post_date>
		<wp:post_date_gmt>2015-08-27 15:54:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>angular-agregar-invalido</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>740</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-invalido.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-agregar-invalido.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:807;s:6:"height";i:640;s:4:"file";s:100:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-agregar-invalido.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>angular-agregar-libro</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/angular-agregar-libro/</link>
		<pubDate>Thu, 27 Aug 2015 15:54:54 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-libro.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Formulario Agregar Nuevo Libro]]></excerpt:encoded>
		<wp:post_id>742</wp:post_id>
		<wp:post_date>2015-08-27 11:24:54</wp:post_date>
		<wp:post_date_gmt>2015-08-27 15:54:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>angular-agregar-libro</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>740</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-libro.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-agregar-libro.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:860;s:6:"height";i:640;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-agregar-libro.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>angular-agregar-valido</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/angular-agregar-valido/</link>
		<pubDate>Thu, 27 Aug 2015 15:54:56 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-valido.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Se habilita la inserción cuando todos los campos del formulario son válidos]]></excerpt:encoded>
		<wp:post_id>743</wp:post_id>
		<wp:post_date>2015-08-27 11:24:56</wp:post_date>
		<wp:post_date_gmt>2015-08-27 15:54:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>angular-agregar-valido</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>740</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-valido.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-agregar-valido.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:807;s:6:"height";i:640;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-agregar-valido.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>angular-libro-agregado</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/angular-libro-agregado/</link>
		<pubDate>Thu, 27 Aug 2015 15:54:59 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/angular-libro-agregado.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Libro insertado! :roll:]]></excerpt:encoded>
		<wp:post_id>744</wp:post_id>
		<wp:post_date>2015-08-27 11:24:59</wp:post_date>
		<wp:post_date_gmt>2015-08-27 15:54:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>angular-libro-agregado</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>740</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/angular-libro-agregado.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-libro-agregado.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1360;s:6:"height";i:640;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/angular-libro-agregado.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tdd-red-green-refactor</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/28/como-deberia-ser-el-desarrollo-tdd-yo-bdd-una-significativa-introduccion/tdd-red-green-refactor/</link>
		<pubDate>Fri, 28 Aug 2015 16:44:14 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/tdd-red-green-refactor.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[El mantra del TDD]]></excerpt:encoded>
		<wp:post_id>766</wp:post_id>
		<wp:post_date>2015-08-28 12:14:14</wp:post_date>
		<wp:post_date_gmt>2015-08-28 16:44:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tdd-red-green-refactor</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>761</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/tdd-red-green-refactor.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/tdd-red-green-refactor.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:342;s:6:"height";i:222;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/tdd-red-green-refactor.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>handlebar-resultado</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/handlebar-resultado/</link>
		<pubDate>Sat, 29 Aug 2015 23:45:31 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/handlebar-resultado.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[... y nuestro template arroja esto :D !]]></excerpt:encoded>
		<wp:post_id>776</wp:post_id>
		<wp:post_date>2015-08-29 19:15:31</wp:post_date>
		<wp:post_date_gmt>2015-08-29 23:45:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>handlebar-resultado</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/handlebar-resultado.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/handlebar-resultado.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1440;s:6:"height";i:605;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/handlebar-resultado.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>handlebars-behind-scenes-retina-preview</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/handlebars-behind-scenes-retina-preview/</link>
		<pubDate>Sat, 29 Aug 2015 23:47:47 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Bigotes con estilo!!!]]></excerpt:encoded>
		<wp:post_id>777</wp:post_id>
		<wp:post_date>2015-08-29 19:17:47</wp:post_date>
		<wp:post_date_gmt>2015-08-29 23:47:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>handlebars-behind-scenes-retina-preview</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/handlebars-behind-scenes-retina-preview.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:400;s:6:"height";i:400;s:4:"file";s:115:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/handlebars-behind-scenes-retina-preview.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mustache-fast</title>
		<link>https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/mustache-fast/</link>
		<pubDate>Sun, 30 Aug 2015 00:45:39 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[XD XD XD]]></excerpt:encoded>
		<wp:post_id>784</wp:post_id>
		<wp:post_date>2015-08-29 20:15:39</wp:post_date>
		<wp:post_date_gmt>2015-08-30 00:45:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mustache-fast</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>775</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/mustache-fast.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:299;s:6:"height";i:186;s:4:"file";s:89:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/08/mustache-fast.gif";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nosql</title>
		<link>https://jotaeseymas.wordpress.com/2015/10/09/nuestro-insolito-universo-del-nosql/nosql/</link>
		<pubDate>Fri, 09 Oct 2015 15:14:37 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/10/nosql.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¡SAY YES TO NO...SQL!]]></excerpt:encoded>
		<wp:post_id>827</wp:post_id>
		<wp:post_date>2015-10-09 10:44:37</wp:post_date>
		<wp:post_date_gmt>2015-10-09 15:14:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>nosql</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>822</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/10/nosql.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/10/nosql.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:81:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/10/nosql.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>josmetiquetas</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/03/planetas-del-universo-nosql-taxonomia-u-orientaciones/josmetiquetas/</link>
		<pubDate>Tue, 03 Nov 2015 20:57:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/josmetiquetas.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Pares valuados con claves referenciadas]]></excerpt:encoded>
		<wp:post_id>845</wp:post_id>
		<wp:post_date>2015-11-03 16:27:53</wp:post_date>
		<wp:post_date_gmt>2015-11-03 20:57:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>josmetiquetas</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>843</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/josmetiquetas.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/josmetiquetas.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:334;s:6:"height";i:163;s:4:"file";s:89:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/josmetiquetas.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>formatear-visualizacion-documento-json-en-Chrome-y-Firefox</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/03/planetas-del-universo-nosql-taxonomia-u-orientaciones/formatear-visualizacion-documento-json-en-chrome-y-firefox/</link>
		<pubDate>Tue, 03 Nov 2015 21:06:40 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Documento JSON típico]]></excerpt:encoded>
		<wp:post_id>846</wp:post_id>
		<wp:post_date>2015-11-03 16:36:40</wp:post_date>
		<wp:post_date_gmt>2015-11-03 21:06:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>formatear-visualizacion-documento-json-en-chrome-y-firefox</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>843</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:356;s:6:"height";i:364;s:4:"file";s:134:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>grafo2</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/03/planetas-del-universo-nosql-taxonomia-u-orientaciones/grafo2/</link>
		<pubDate>Tue, 03 Nov 2015 21:23:26 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/grafo2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Grafos típicos ]]></excerpt:encoded>
		<wp:post_id>847</wp:post_id>
		<wp:post_date>2015-11-03 16:53:26</wp:post_date>
		<wp:post_date_gmt>2015-11-03 21:23:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>grafo2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>843</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/grafo2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/grafo2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:401;s:6:"height";i:345;s:4:"file";s:82:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/grafo2.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>slimer-logo</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/29/webscraping-con-slimerjs-y-mongodb-parte-1-webscraping/slimer-logo/</link>
		<pubDate>Sun, 29 Nov 2015 22:02:11 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/slimer-logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date>2015-11-29 17:32:11</wp:post_date>
		<wp:post_date_gmt>2015-11-29 22:02:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>slimer-logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>849</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/slimer-logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/slimer-logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:87:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/slimer-logo.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>funvisis</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/29/webscraping-con-slimerjs-y-mongodb-parte-1-webscraping/funvisis/</link>
		<pubDate>Sun, 29 Nov 2015 22:38:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/funvisis.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Lista de sismos más recientes]]></excerpt:encoded>
		<wp:post_id>857</wp:post_id>
		<wp:post_date>2015-11-29 18:08:32</wp:post_date>
		<wp:post_date_gmt>2015-11-29 22:38:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>funvisis</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>849</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/funvisis.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/funvisis.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1219;s:6:"height";i:1369;s:4:"file";s:84:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/funvisis.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2015-11-29 18:50:17</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/29/webscraping-con-slimerjs-y-mongodb-parte-1-webscraping/captura-de-pantalla-de-2015-11-29-185017/</link>
		<pubDate>Sun, 29 Nov 2015 23:21:29 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/captura-de-pantalla-de-2015-11-29-185017.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Nada amigable, por ahora ^^']]></excerpt:encoded>
		<wp:post_id>862</wp:post_id>
		<wp:post_date>2015-11-29 18:51:29</wp:post_date>
		<wp:post_date_gmt>2015-11-29 23:21:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2015-11-29-185017</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>849</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/captura-de-pantalla-de-2015-11-29-185017.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/captura-de-pantalla-de-2015-11-29-185017.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1585;s:6:"height";i:306;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/captura-de-pantalla-de-2015-11-29-185017.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>handlebars-2-por-fila</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/30/uso-de-templates-handlebars-con-zepto-mitad-ii-rutas-helpers-y-partials/handlebars-2-por-fila/</link>
		<pubDate>Mon, 30 Nov 2015 06:52:08 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/handlebars-2-por-fila.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Usando cards = 2 en index.html]]></excerpt:encoded>
		<wp:post_id>876</wp:post_id>
		<wp:post_date>2015-11-30 02:22:08</wp:post_date>
		<wp:post_date_gmt>2015-11-30 06:52:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>handlebars-2-por-fila</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>868</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/handlebars-2-por-fila.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/handlebars-2-por-fila.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:1729;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/handlebars-2-por-fila.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>handlebars-3-por-fila</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/30/uso-de-templates-handlebars-con-zepto-mitad-ii-rutas-helpers-y-partials/handlebars-3-por-fila/</link>
		<pubDate>Mon, 30 Nov 2015 06:52:23 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/handlebars-3-por-fila.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>877</wp:post_id>
		<wp:post_date>2015-11-30 02:22:23</wp:post_date>
		<wp:post_date_gmt>2015-11-30 06:52:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>handlebars-3-por-fila</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>868</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/handlebars-3-por-fila.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/handlebars-3-por-fila.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:1289;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/handlebars-3-por-fila.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>handlebars-4-por-fila</title>
		<link>https://jotaeseymas.wordpress.com/2015/11/30/uso-de-templates-handlebars-con-zepto-mitad-ii-rutas-helpers-y-partials/handlebars-4-por-fila/</link>
		<pubDate>Mon, 30 Nov 2015 06:52:39 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/11/handlebars-4-por-fila.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>878</wp:post_id>
		<wp:post_date>2015-11-30 02:22:39</wp:post_date>
		<wp:post_date_gmt>2015-11-30 06:52:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>handlebars-4-por-fila</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>868</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/11/handlebars-4-por-fila.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/handlebars-4-por-fila.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:1154;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/11/handlebars-4-por-fila.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>angular-provide-resume</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/angular-provide-resume/</link>
		<pubDate>Sat, 12 Dec 2015 02:48:41 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/angular-provide-resume.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¿Algunos les suenan conocidos?]]></excerpt:encoded>
		<wp:post_id>883</wp:post_id>
		<wp:post_date>2015-12-11 22:18:41</wp:post_date>
		<wp:post_date_gmt>2015-12-12 02:48:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>angular-provide-resume</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/angular-provide-resume.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/angular-provide-resume.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:872;s:6:"height";i:227;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/angular-provide-resume.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>persistencia-categorias</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/persistencia-categorias/</link>
		<pubDate>Sat, 12 Dec 2015 04:06:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/persistencia-categorias.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[... y vemos el cambio reflejado ^^']]></excerpt:encoded>
		<wp:post_id>890</wp:post_id>
		<wp:post_date>2015-12-11 23:36:53</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:06:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>persistencia-categorias</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/persistencia-categorias.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-categorias.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1330;s:6:"height";i:764;s:4:"file";s:99:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-categorias.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>persistencia-confirmacion</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/persistencia-confirmacion/</link>
		<pubDate>Sat, 12 Dec 2015 04:06:58 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/persistencia-confirmacion.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>891</wp:post_id>
		<wp:post_date>2015-12-11 23:36:58</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:06:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>persistencia-confirmacion</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/persistencia-confirmacion.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-confirmacion.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:101:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-confirmacion.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>persistencia-final</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/persistencia-final/</link>
		<pubDate>Sat, 12 Dec 2015 04:07:05 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/persistencia-final.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Resultado final de las operaciones sobre la base de datos XD]]></excerpt:encoded>
		<wp:post_id>892</wp:post_id>
		<wp:post_date>2015-12-11 23:37:05</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:07:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>persistencia-final</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/persistencia-final.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-final.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:572;s:4:"file";s:94:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-final.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>persistencia-guardar-categoria</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/persistencia-guardar-categoria/</link>
		<pubDate>Sat, 12 Dec 2015 04:07:10 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/persistencia-guardar-categoria.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Añadimos nueva categoría...]]></excerpt:encoded>
		<wp:post_id>893</wp:post_id>
		<wp:post_date>2015-12-11 23:37:10</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:07:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>persistencia-guardar-categoria</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/persistencia-guardar-categoria.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-guardar-categoria.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:106:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-guardar-categoria.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>persistencia-libros</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/persistencia-libros/</link>
		<pubDate>Sat, 12 Dec 2015 04:07:18 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/persistencia-libros.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Lista de libros traídos desde la base de datos]]></excerpt:encoded>
		<wp:post_id>894</wp:post_id>
		<wp:post_date>2015-12-11 23:37:18</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:07:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>persistencia-libros</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/persistencia-libros.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-libros.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1055;s:6:"height";i:767;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-libros.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>persistencia-nuevo-libro</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/persistencia-nuevo-libro/</link>
		<pubDate>Sat, 12 Dec 2015 04:07:26 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Vemos la persistencia reflejada en la base de datos]]></excerpt:encoded>
		<wp:post_id>895</wp:post_id>
		<wp:post_date>2015-12-11 23:37:26</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:07:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>persistencia-nuevo-libro</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-nuevo-libro.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1393;s:6:"height";i:708;s:4:"file";s:100:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-nuevo-libro.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>persistencia-nuevo-libro-nueva-categoria</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/persistencia-nuevo-libro-nueva-categoria/</link>
		<pubDate>Sat, 12 Dec 2015 04:07:33 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro-nueva-categoria.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Añadimos un nuevo libro de la nueva categoría creada]]></excerpt:encoded>
		<wp:post_id>896</wp:post_id>
		<wp:post_date>2015-12-11 23:37:33</wp:post_date>
		<wp:post_date_gmt>2015-12-12 04:07:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>persistencia-nuevo-libro-nueva-categoria</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>881</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro-nueva-categoria.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-nuevo-libro-nueva-categoria.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/persistencia-nuevo-libro-nueva-categoria.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>parte-1-nosuperior</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/javascript-101-funciones-de-orden-superior/parte-1-nosuperior/</link>
		<pubDate>Sun, 13 Dec 2015 08:14:38 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/parte-1-nosuperior.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Da como miedito... :(]]></excerpt:encoded>
		<wp:post_id>902</wp:post_id>
		<wp:post_date>2015-12-13 03:44:38</wp:post_date>
		<wp:post_date_gmt>2015-12-13 08:14:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>parte-1-nosuperior</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>901</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/parte-1-nosuperior.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/parte-1-nosuperior.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1230;s:6:"height";i:290;s:4:"file";s:94:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/parte-1-nosuperior.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>parte-2-superior</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/javascript-101-funciones-de-orden-superior/parte-2-superior/</link>
		<pubDate>Sun, 13 Dec 2015 08:14:43 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/parte-2-superior.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¿¡ perdón !? o_O]]></excerpt:encoded>
		<wp:post_id>903</wp:post_id>
		<wp:post_date>2015-12-13 03:44:43</wp:post_date>
		<wp:post_date_gmt>2015-12-13 08:14:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>parte-2-superior</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>901</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/parte-2-superior.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/parte-2-superior.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1233;s:6:"height";i:294;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/parte-2-superior.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>resultados-parte-1</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/javascript-101-funciones-de-orden-superior/resultados-parte-1/</link>
		<pubDate>Sun, 13 Dec 2015 08:14:46 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¿6.26milisegundos? Nada mal ¿eh? :D]]></excerpt:encoded>
		<wp:post_id>904</wp:post_id>
		<wp:post_date>2015-12-13 03:44:46</wp:post_date>
		<wp:post_date_gmt>2015-12-13 08:14:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>resultados-parte-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>901</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/resultados-parte-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:869;s:6:"height";i:96;s:4:"file";s:94:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/resultados-parte-1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>resultados-parte-2</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/javascript-101-funciones-de-orden-superior/resultados-parte-2/</link>
		<pubDate>Sun, 13 Dec 2015 08:14:49 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¿3.23 milisegundos? ¡Whoa! :o]]></excerpt:encoded>
		<wp:post_id>905</wp:post_id>
		<wp:post_date>2015-12-13 03:44:49</wp:post_date>
		<wp:post_date_gmt>2015-12-13 08:14:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>resultados-parte-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>901</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/resultados-parte-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:865;s:6:"height";i:94;s:4:"file";s:94:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/resultados-parte-2.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1-registro</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/1-registro/</link>
		<pubDate>Sun, 13 Dec 2015 18:36:55 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/1-registro.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[1. Registro]]></excerpt:encoded>
		<wp:post_id>912</wp:post_id>
		<wp:post_date>2015-12-13 14:06:55</wp:post_date>
		<wp:post_date_gmt>2015-12-13 18:36:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>1-registro</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/1-registro.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/1-registro.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:650;s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/1-registro.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2-perfil</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/2-perfil/</link>
		<pubDate>Sun, 13 Dec 2015 18:37:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/2-perfil.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[2. Modificación del perfil]]></excerpt:encoded>
		<wp:post_id>913</wp:post_id>
		<wp:post_date>2015-12-13 14:07:53</wp:post_date>
		<wp:post_date_gmt>2015-12-13 18:37:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-perfil</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/2-perfil.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/2-perfil.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:616;s:4:"file";s:84:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/2-perfil.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4.1-crearapp</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/4-1-crearapp/</link>
		<pubDate>Sun, 13 Dec 2015 18:40:12 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/4-1-crearapp.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[3. Creamos una data app]]></excerpt:encoded>
		<wp:post_id>914</wp:post_id>
		<wp:post_date>2015-12-13 14:10:12</wp:post_date>
		<wp:post_date_gmt>2015-12-13 18:40:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>4-1-crearapp</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/4-1-crearapp.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/4-1-crearapp.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:540;s:4:"file";s:88:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/4-1-crearapp.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4.2-claves-de-app</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/4-2-claves-de-app/</link>
		<pubDate>Sun, 13 Dec 2015 18:43:59 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/4-2-claves-de-app.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[5. La primera data-app activa las claves pública y privada]]></excerpt:encoded>
		<wp:post_id>915</wp:post_id>
		<wp:post_date>2015-12-13 14:13:59</wp:post_date>
		<wp:post_date_gmt>2015-12-13 18:43:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>4-2-claves-de-app</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/4-2-claves-de-app.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/4-2-claves-de-app.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:646;s:4:"file";s:93:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/4-2-claves-de-app.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5.1-campos-opciones</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/5-1-campos-opciones/</link>
		<pubDate>Sun, 13 Dec 2015 18:49:37 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/5-1-campos-opciones.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[5. Registramos un data-set y los campos que tendrá cada objeto (en JSON)]]></excerpt:encoded>
		<wp:post_id>916</wp:post_id>
		<wp:post_date>2015-12-13 14:19:37</wp:post_date>
		<wp:post_date_gmt>2015-12-13 18:49:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>5-1-campos-opciones</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/5-1-campos-opciones.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/5-1-campos-opciones.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:731;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/5-1-campos-opciones.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5.2-campos-resultados</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/5-2-campos-resultados/</link>
		<pubDate>Sun, 13 Dec 2015 18:54:37 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/5-2-campos-resultados.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[...donde podemos especificar los campos, tipos de datos...]]></excerpt:encoded>
		<wp:post_id>917</wp:post_id>
		<wp:post_date>2015-12-13 14:24:37</wp:post_date>
		<wp:post_date_gmt>2015-12-13 18:54:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>5-2-campos-resultados</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/5-2-campos-resultados.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/5-2-campos-resultados.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:670;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/5-2-campos-resultados.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>6-validaciones</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/6-validaciones/</link>
		<pubDate>Sun, 13 Dec 2015 18:55:57 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/6-validaciones.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[... y hasta ¡validaciones Javascript!]]></excerpt:encoded>
		<wp:post_id>918</wp:post_id>
		<wp:post_date>2015-12-13 14:25:57</wp:post_date>
		<wp:post_date_gmt>2015-12-13 18:55:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>6-validaciones</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/6-validaciones.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/6-validaciones.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:797;s:4:"file";s:90:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/6-validaciones.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>7-manejo-de-REST</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/7-manejo-de-rest/</link>
		<pubDate>Sun, 13 Dec 2015 19:05:15 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/7-manejo-de-rest.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[7. Interfaz REST para testing y mocking de datos.]]></excerpt:encoded>
		<wp:post_id>919</wp:post_id>
		<wp:post_date>2015-12-13 14:35:15</wp:post_date>
		<wp:post_date_gmt>2015-12-13 19:05:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>7-manejo-de-rest</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/7-manejo-de-rest.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/7-manejo-de-rest.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1587;s:6:"height";i:765;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/7-manejo-de-rest.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>8.1-data-de-prueba-opciones</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/8-1-data-de-prueba-opciones/</link>
		<pubDate>Sun, 13 Dec 2015 19:16:05 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/8-1-data-de-prueba-opciones.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[7. Lista de opciones (haciendo "mocking")]]></excerpt:encoded>
		<wp:post_id>920</wp:post_id>
		<wp:post_date>2015-12-13 14:46:05</wp:post_date>
		<wp:post_date_gmt>2015-12-13 19:16:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>8-1-data-de-prueba-opciones</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/8-1-data-de-prueba-opciones.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/8-1-data-de-prueba-opciones.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1023;s:6:"height";i:711;s:4:"file";s:103:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/8-1-data-de-prueba-opciones.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>8.2-data-de-prueba-resultados</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/8-2-data-de-prueba-resultados/</link>
		<pubDate>Sun, 13 Dec 2015 19:17:27 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/8-2-data-de-prueba-resultados.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[8. Lista de resultados (algunos haciendo mocking, otros insertados desde el Frontend)]]></excerpt:encoded>
		<wp:post_id>921</wp:post_id>
		<wp:post_date>2015-12-13 14:47:27</wp:post_date>
		<wp:post_date_gmt>2015-12-13 19:17:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>8-2-data-de-prueba-resultados</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/8-2-data-de-prueba-resultados.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/8-2-data-de-prueba-resultados.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1023;s:6:"height";i:732;s:4:"file";s:105:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/8-2-data-de-prueba-resultados.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jexia</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/jexia/</link>
		<pubDate>Sun, 13 Dec 2015 19:43:42 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/jexia.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Que bonita abejita :roll:]]></excerpt:encoded>
		<wp:post_id>928</wp:post_id>
		<wp:post_date>2015-12-13 15:13:42</wp:post_date>
		<wp:post_date_gmt>2015-12-13 19:43:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>jexia</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>911</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/jexia.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/jexia.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:250;s:6:"height";i:104;s:4:"file";s:81:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/jexia.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>loader</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/16/animaciones-css-sin-usar-css/loader/</link>
		<pubDate>Wed, 16 Dec 2015 17:31:14 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/loader.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Un loader sencillo]]></excerpt:encoded>
		<wp:post_id>944</wp:post_id>
		<wp:post_date>2015-12-16 13:01:14</wp:post_date>
		<wp:post_date_gmt>2015-12-16 17:31:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>loader</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>943</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/loader.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/loader.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:148;s:6:"height";i:136;s:4:"file";s:82:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/loader.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>9.1-app-minified-encuesta</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/9-1-app-minified-encuesta/</link>
		<pubDate>Tue, 29 Dec 2015 01:05:01 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/9-1-app-minified-encuesta.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>953</wp:post_id>
		<wp:post_date>2015-12-28 20:35:01</wp:post_date>
		<wp:post_date_gmt>2015-12-29 01:05:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>9-1-app-minified-encuesta</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>952</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/9-1-app-minified-encuesta.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-1-app-minified-encuesta.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:101:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-1-app-minified-encuesta.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>9.2-notificacion</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/9-2-notificacion/</link>
		<pubDate>Tue, 29 Dec 2015 01:05:11 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/9-2-notificacion.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>954</wp:post_id>
		<wp:post_date>2015-12-28 20:35:11</wp:post_date>
		<wp:post_date_gmt>2015-12-29 01:05:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>9-2-notificacion</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>952</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/9-2-notificacion.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-2-notificacion.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-2-notificacion.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>9.3-valida-la-seleccion</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/9-3-valida-la-seleccion/</link>
		<pubDate>Tue, 29 Dec 2015 01:05:16 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/9-3-valida-la-seleccion.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>955</wp:post_id>
		<wp:post_date>2015-12-28 20:35:16</wp:post_date>
		<wp:post_date_gmt>2015-12-29 01:05:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>9-3-valida-la-seleccion</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>952</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/9-3-valida-la-seleccion.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-3-valida-la-seleccion.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:99:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-3-valida-la-seleccion.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>9.4-notificacion-con-error</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/9-4-notificacion-con-error/</link>
		<pubDate>Tue, 29 Dec 2015 01:05:22 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/9-4-notificacion-con-error.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>956</wp:post_id>
		<wp:post_date>2015-12-28 20:35:22</wp:post_date>
		<wp:post_date_gmt>2015-12-29 01:05:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>9-4-notificacion-con-error</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>952</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/9-4-notificacion-con-error.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-4-notificacion-con-error.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:102:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-4-notificacion-con-error.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>9.5-procesamiento-via-POST</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/9-5-procesamiento-via-post/</link>
		<pubDate>Tue, 29 Dec 2015 01:05:27 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/9-5-procesamiento-via-post.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>957</wp:post_id>
		<wp:post_date>2015-12-28 20:35:27</wp:post_date>
		<wp:post_date_gmt>2015-12-29 01:05:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>9-5-procesamiento-via-post</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>952</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/9-5-procesamiento-via-post.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-5-procesamiento-via-post.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:102:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-5-procesamiento-via-post.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>9.6-REQUEST-a-resultados-y-template</title>
		<link>https://jotaeseymas.wordpress.com/2015/12/28/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-2-frontend/9-6-request-a-resultados-y-template/</link>
		<pubDate>Tue, 29 Dec 2015 01:05:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2015/12/9-6-request-a-resultados-y-template.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>958</wp:post_id>
		<wp:post_date>2015-12-28 20:35:32</wp:post_date>
		<wp:post_date_gmt>2015-12-29 01:05:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>9-6-request-a-resultados-y-template</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>952</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2015/12/9-6-request-a-resultados-y-template.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-6-request-a-resultados-y-template.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1600;s:6:"height";i:530;s:4:"file";s:111:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2015/12/9-6-request-a-resultados-y-template.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Captura de pantalla de 2016-07-26 15:25:50</title>
		<link>https://jotaeseymas.wordpress.com/2016/07/26/a-manera-de-disculpa-o-de-como-no-debe-ser-un-post/captura-de-pantalla-de-2016-07-26-152550/</link>
		<pubDate>Tue, 26 Jul 2016 19:30:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2016/07/captura-de-pantalla-de-2016-07-26-152550.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Esto... desmotiva un poco :(]]></excerpt:encoded>
		<wp:post_id>982</wp:post_id>
		<wp:post_date>2016-07-26 15:00:32</wp:post_date>
		<wp:post_date_gmt>2016-07-26 19:30:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2016-07-26-152550</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>981</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2016/07/captura-de-pantalla-de-2016-07-26-152550.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/07/captura-de-pantalla-de-2016-07-26-152550.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:719;s:6:"height";i:199;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/07/captura-de-pantalla-de-2016-07-26-152550.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gulp-js</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/10/tomatela-con-calma-y-gulp/gulp-js/</link>
		<pubDate>Wed, 10 Aug 2016 14:43:12 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2016/08/gulp-js.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1022</wp:post_id>
		<wp:post_date>2016-08-10 10:43:12</wp:post_date>
		<wp:post_date_gmt>2016-08-10 14:43:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>gulp-js</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1021</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2016/08/gulp-js-e1470840273207.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/08/gulp-js-e1470840273207.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/08/gulp-js-e1470840273207.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:720;s:6:"height";i:360;s:4:"file";s:11:"gulp-js.png";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DEJA TUS APLICACIONES EN LA LONA. PARTE 2. BINDINGS DE APARIENCIA</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/12/deja-tus-aplicaciones-en-la-lona-parte-2-bindings-de-apariencia/</link>
		<pubDate>Fri, 12 Aug 2016 20:23:51 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1039</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src=”my own” title=”parte 2. bindings de apariencia” &gt;
<p style="text-align:justify;">En un <a href="https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/" target="_blank">post</a> anterior, había descrito muy por encima lo que <a href="http://knockoutjs.com" target="_blank">Knockout.js</a> puede hacer a través de su arquitectura MVVM. En este post voy a definir y utilizar los <em>bindings</em> de apariencia que provee Knockout por medio de un ejemplo práctico... ¡A pelear se ha dicho!</p>
http://www.youtube.com/watch?v=G6r1dAire0Y

<!--more-->
<h2>Bindings de apariencia</h2>
<p style="text-align:justify;">Knockout permite colocar elementos en el DOM y enlazarlos con determinados tipos de comportamiento que corresponden a las secciones de nuestra maqueta HTML o de los CSS que hayamos definido. En el ejemplo del post anterior vimos algunos de estos bindings:</p>

<ul>
 	<li style="text-align:justify;">El binding <code>text</code> permite que un valor aparezca como texto plano dentro del DOM.</li>
 	<li style="text-align:justify;">El binding <code>visible</code> permite que un elemento del DOM sea mostrado según una condición.</li>
</ul>
Ahora veremos algunos nuevos bindings.
<ul>
 	<li style="text-align:justify;">El binding <a href="http://knockoutjs.com/documentation/html-binding.html" target="_blank"><code>html</code></a> permite insertar contenido HTML dentro de un elemento del DOM.</li>
 	<li style="text-align:justify;">El binding <a href="http://knockoutjs.com/documentation/style-binding.html" target="_blank"><code>style</code></a> permite insertar clases CSS dentro de un elemento del DOM.</li>
 	<li style="text-align:justify;">El binding <a href="http://knockoutjs.com/documentation/css-binding.html" target="_blank"><code>css</code></a> permite asociar clases y estilos CSS de forma condicional a un elemento del DOM.</li>
 	<li style="text-align:justify;">El binding <a href="http://knockoutjs.com/documentation/attr-binding.html" target="_blank"><code>attr</code></a> permite insertar atributos HTML que correspondan a un elemento específico del DOM.</li>
</ul>
A continuación ilustro el uso de estos <em>bindings</em> con un ejemplo sencillo.

[code lang="html" collapse="true" title="Ejemplo Knockout"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Ejemplo Knockout&lt;/title&gt;
    &lt;style&gt;
        .myClass {font-size: 32px;}
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1 data-bind=&quot;html: getNombre()&quot;&gt;&lt;/h1&gt;

    &lt;!-- los bindings se separan con &quot;,&quot; como si fueran atributos de un objeto --&gt;
    &lt;!-- En el caso particular del binding &quot;style&quot;, los atributos se especifican en formato camelCase --&gt;
    &lt;p data-bind=&quot;style: { marginBottom: 0, paddingBottom: '1em' }, css: 'myClass'&quot;&gt;Este texto fue personalizado con clases CSS y estilos&lt;/p&gt;

    &lt;p data-bind=&quot;attr: { id: 'myCustomId' }&quot;&gt;Este párrafo está referenciado por un id personalizado.&lt;/p&gt;

    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js&quot;&gt;&lt;/script&gt;
    &lt;script&gt;
        function ViewModel() {
            var self = this;

            self.nombre = 'Chinux Paribus';

            self.getNombre = function() {
                return 'Hola &lt;em&gt;' + self.nombre + '&lt;/em&gt;!';
            };
        };

        ko.applyBindings(new ViewModel());
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

<p style="text-align:justify;">Los bindings de apariencia se vuelven útiles cuando existen estados complejos en nuestra aplicación o interfaz que no dependen necesariamente de elementos del DOM sino más bien de datos recibidos vía AJAX, base de datos u otros requests HTTP :mrgreen: .</p>
<p style="text-align:justify;">En el caso del binding <code><strong>attr</strong></code>, por ejemplo, es útil colocar id's únicos generados aleatoriamente o que dependan de otros datos para diferenciarlos (para asignar un diferente handler de eventos por elementos, por ejemplo). En el caso del binding <code><strong>html</strong></code>, puedes insertar un HTML que haya sido generado dinámicamente por otra aplicación o sección de ésta.</p>
<p style="text-align:justify;">Tanto el binding <code><strong>css</strong></code> como el binding <code><strong>style</strong></code> son muy útiles cuando se están utilizando efectos de transición, ya que están cambiando constantemente los atributos CSS como <code>width</code> o <code>position</code>, permitiendo crear animaciones de forma sencilla y sin usar mucho código Javascript.</p>
<p style="text-align:justify;">Seguiré con las ilustraciones de los bindings de Knockout hasta trabajar en un proyecto un tanto más complejo.</p>
<p style="text-align:justify;">¡A noquear aplicaciones! ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1039</wp:post_id>
		<wp:post_date>2016-08-12 16:23:51</wp:post_date>
		<wp:post_date_gmt>2016-08-12 20:23:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deja-tus-aplicaciones-en-la-lona-parte-2-bindings-de-apariencia</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210423990900784";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/764195746354606080";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6169961458063929344&type=U&a=mqbJ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[25730746830]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[khanostech]]></wp:comment_author>
			<wp:comment_author_email>epilef.rodriguez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/khanostech</wp:comment_author_url>
			<wp:comment_author_IP>190.75.175.60</wp:comment_author_IP>
			<wp:comment_date>2016-08-12 22:59:26</wp:comment_date>
			<wp:comment_date_gmt>2016-08-13 02:59:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Muy bueno. El Knockout en conjunto con Sails es la mejor combinación. El templating con Knockout es super poderoso, el data binding, la programación declarativa directamente sobre al vista. Cada vez me gusta más.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>52836980</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1471057167.97992706298828125;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"khanostech";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1471100035]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1471062250.738154888153076171875;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"khanostech";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1471100035]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1471100036.6292250156402587890625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[ch1nux]]></wp:comment_author>
			<wp:comment_author_email>grilletjhony@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jotaeseymas.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>190.203.163.208</wp:comment_author_IP>
			<wp:comment_date>2016-08-13 10:59:22</wp:comment_date>
			<wp:comment_date_gmt>2016-08-13 14:59:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Lo que más me gusta de Knockout es la posibilidad de crear web components. Próximamente haré un post sobre eso...
Me alegra que te haya gustado :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>79</wp:comment_parent>
			<wp:comment_user_id>79130303</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1471100364]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1471100365.181880950927734375;s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1471100365]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[DEJA TUS APLICACIONES EN LA LONA. PARTE 3. BINDINGS DE CONTROL DE FLUJO | JOTA ESE (Y MÁS...)]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>https://jotaeseymas.wordpress.com/2016/09/12/deja-tus-aplicaciones-en-la-lona-parte-3-bindings-de-control-de-flujo/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.39</wp:comment_author_IP>
			<wp:comment_date>2016-09-12 17:29:34</wp:comment_date>
			<wp:comment_date_gmt>2016-09-12 21:29:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] DEJA TUS APLICACIONES EN LA LONA. PARTE 2. BINDINGS DE&nbsp;APARIENCIA [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1473715804.348989963531494140625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"ch1nux";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1473715803]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1473715775.3466660976409912109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JAVASCRIPT 101: ENTENDIENDO WEB COMPONENTS</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/16/javascript-101-entendiendo-web-components/</link>
		<pubDate>Tue, 16 Aug 2016 18:58:14 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1048</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="entendiendo web components" &gt;
<p style="text-align:justify;">¡Ah, aquellos días en los que <a href="https://jotaeseymas.wordpress.com/2015/03/27/tal-vez-no-necesites-jquery/" target="_blank">no existía "<em>jotacueri"</em></a>! La programación en Javascript estaba repleta de referencias a <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document" target="_blank"><code>document</code></a>, a <a href="https://developer.mozilla.org/es/docs/Web/API/Window" target="_blank"><code>window</code></a>, muchos arrays, muchos callbacks y no existía nada más. <strong><span style="color:#7cbbbb;">#Porai</span></strong> decían que los desarrolladores en Javascript de verdad no usaban ("y no usan") frameworks o librerías... Aquellos días... 8-)</p>
http://www.youtube.com/watch?v=JNM2tV3PA_8

<!--more-->
<h2>Probablemente, esos días vuelvan...</h2>
<p style="text-align:justify;">Previo a la llegada de <a href="https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/" target="_blank">ES6</a>, en Enero de 2015 fue presentado por la <a href="https://www.w3.org/" target="_blank">W3C</a>, un borrador que contenía la especificación de varios estándares para "modularizar la web" usando solamente HTML5, CSS3 y Javascript para contribuir al desarrollo de componentes interoperables, autocontenidos y sin ninguna dependencia externa, así nació <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components" target="_blank">Web Components</a>.</p>

<h2 style="text-align:justify;">¿Qué es Web Components?</h2>
Según <a href="https://developer.mozilla.org/es/" target="_blank">MDN</a>:
<blockquote>"<strong>Web Components</strong> consiste en varias tecnologías separadas. Puedes pensar en <strong>Web Components</strong> como widgets reutilizables de interfaz de usuario, desarrollados con tecnología web (HTML5, CSS3 y Javascript). Están autocontenidos dentro del navegador y no necesitan ninguna dependencia externa como jQuery o Dojo. Un Web Component existente no necesita ser implementado usando codificación adicional, simplemente añadiendo el código que lo contiene dentro de una página HTML. Web Components utiliza funciones nativas del navegador, tanto nuevas como aquellas en fase beta."

-- Mozilla Developer Network.</blockquote>
Dichas tecnologías son:
<ol>
	<li><a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements" target="_blank">Custom Elements</a>: Crea tags personalizadas que son reconocidas en el DOM.</li>
	<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template" target="_blank">HTML templates</a>: Fusiona data con marcado HTML sin requerir compilación previa.</li>
	<li><a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM" target="_blank">Shadow DOM</a>: Encapsula HTML Templates, Javascript y CSS3 dentro del DOM.</li>
	<li><a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/HTML_Imports" target="_blank">HTML Imports</a>: Empaqueta Web Components. No será soportado por Mozilla Firefox.</li>
</ol>
<p style="text-align:justify;">Más de un año después, y aún con la llegada de ES6 y sus nuevas características, en la actualidad <em>Web Components</em> continua siendo un borrador &gt;:( , sin embargo no ha pasado desapercibido este año. A la gran suma de frameworks, librerías y complementos (a.k.a. Polyfills) existentes, Web Components ha aportado algunas librerías (e ideas) adicionales. A saber (en orden de relevancia de búsquedas en <a href="https://www.google.com/trends/explore?date=all&amp;q=polymer.js,x-tag,Bosonic,webcomponents.js" target="_blank">Google</a>):</p>

<ol>
	<li style="text-align:justify;"><a href="http://bosonic.github.io/index.html" target="_blank">Bosonic</a>: comunitaria.</li>
	<li style="text-align:justify;"><a href="https://www.polymer-project.org/1.0/" target="_blank">Polymer</a>: de Google.</li>
	<li style="text-align:justify;"><a href="http://x-tag.github.io/" target="_blank">x-tag</a>: de Mozilla.</li>
	<li style="text-align:justify;"><a href="http://webcomponents.org/" target="_blank">webcomponents.js</a>: de Google, como <em>polyfill</em> gratuito para Polymer, pero usado en todos los demás proyectos anteriores. :mrgreen:</li>
</ol>
<p style="text-align:justify;">Pronto espero estar desarrollando componentes y probando este estándar. Aunque es una pena que mi navegador favorito no soporte del todo Web Components, tengo fe en que en algún momento lo hará ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1048</wp:post_id>
		<wp:post_date>2016-08-16 14:58:14</wp:post_date>
		<wp:post_date_gmt>2016-08-16 18:58:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-101-entendiendo-web-components</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="ddd"><![CDATA[DDD]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_tag" nicename="mozilla-labs"><![CDATA[Mozilla Labs]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="category" nicename="vanilla-js"><![CDATA[Vanilla JS]]></category>
		<category domain="post_tag" nicename="web-components"><![CDATA[web components]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[25850585077]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210457088848212";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/765623756635058176";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6171389474598064128&type=U&a=XLxm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ACERCA DE: API REST</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/22/acerca-de-api-rest/</link>
		<pubDate>Mon, 22 Aug 2016 16:58:29 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1059</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="acerca de api rest" &gt;
<p style="text-align:justify;">Para un título que no deja nada a la imaginación, es mejor poner un poco de música XD .</p>
http://www.youtube.com/watch?v=fyMhvkC3A84

<!--more-->
<p style="text-align:justify;">Pese a la gran cantidad de información que existe en internet respecto a este tema, pareciera que aún persisten dudas en cuanto a conceptos sobre <a href="https://es.wikipedia.org/wiki/Interfaz_de_programaci%C3%B3n_de_aplicaciones" target="_blank">API</a> REST. Al respecto, hice una <a href="http://slides.com/ch1nux/deck/live#/" target="_blank">presentación</a> (que no alcancé a <strong><em>presentar</em></strong>, valga la "rebuznancia" :'( )</p>

<h2 style="text-align:justify;">¿Qué <strong>NO</strong> es API REST?</h2>
Antes de empezar, aclaremos algo, una API <a href="https://es.wikipedia.org/wiki/Representational_State_Transfer" target="_blank">REST</a>:
<ol>
 	<li><strong><span style="color:#d25349;">NO</span></strong> es un CRUD...</li>
 	<li><strong><span style="color:#d25349;">NO</span></strong> es una aplicación...</li>
 	<li><strong><span style="color:#d25349;">NO</span></strong> es un lenguaje de programación...</li>
 	<li><strong><span style="color:#d25349;">NO</span></strong> es un protocolo...</li>
 	<li><strong><span style="color:#d25349;">NO</span></strong> es una API...</li>
</ol>
[caption id="" align="aligncenter" width="521"]<img class="" src="https://s3.amazonaws.com/media-p.slid.es/uploads/530852/images/2734081/powerrangers.gif" width="521" height="292" /> <strong>Cada vez que oigo alguna de las de arriba es como...</strong>[/caption]

Aclarado esto, hablemos pues de API REST :bear:
<h2>¿Qué <strong>SI</strong> es API REST?</h2>
<div class="sl-block">
<div class="sl-block-content" dir="ui">
<ol>
 	<li><strong>RE</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer (Transferencia de Estado Representacional).</li>
 	<li>Es un estilo arquitectónico.</li>
 	<li>Tiene su propia semántica, independiente de los lenguajes de programación.</li>
 	<li>Basado en el Protocolo <a href="https://es.wikipedia.org/wiki/Hypertext_Transfer_Protocol" target="_blank">HTTP</a>.</li>
 	<li>Cualquier API puede o no, estar basada en éste.</li>
 	<li>Creado por Roy Fielding, PhD en Computación de la Universidad Irvin de California, en el año 2000.</li>
 	<li>Ideal para sistemas distribuidos.</li>
</ol>
En general, API REST posee 4 características distintivas:
<ol>
 	<li style="text-align:justify;">Cliente-Servidor: Todas las API REST [deben usar] usan arquitectura Cliente-Servidor.</li>
 	<li style="text-align:justify;">No posee estados: El manejo de las variables y de su estado durante las transacciones no es guardado durante la misma, es decir, la transacción contiene todos los datos necesarios para ejecutarse.</li>
 	<li style="text-align:justify;">Recursos uniformes y bien definidos: Es regla general que cada fuente de datos posea su definición específica (Ejemplo: <code>http://dominio.com/fuentedatos/proceso?parametro1=valor1</code> ).</li>
 	<li style="text-align:justify;">Sintaxis universal de acceso a recursos: Utiliza la sintaxis de identificación de acceso a recursos del protocolo HTTP/HTTPS 1.1 (próximamente 2.0), esto es, al menos, los verbos HTTP <code><span style="color:#d25349;">GET</span></code>, <code><span style="color:#d25349;">POST</span></code>, <code><span style="color:#d25349;">PUT</span></code> y <code><span style="color:#d25349;">DELETE</span></code>.</li>
</ol>
</div>
</div>
Existen 4 tipos de API REST actualmente:
<table>
<thead>
<tr>
<th>Tipo</th>
<th>Recurso</th>
<th>Petición/
Difusión</th>
<th>Ancho de Banda/
Transacciones</th>
<th>Rendimiento</th>
</tr>
</thead>
<tbody>
<tr>
<td>Orientada a Datos</td>
<td>Colecciones de datos preprocesados</td>
<td>Rápida/Lenta</td>
<td>Poco/Muy Alto</td>
<td>Alto</td>
</tr>
<tr>
<td>Orientada a Servicios</td>
<td>Métodos que arrojan datos</td>
<td>Lenta/Muy lenta</td>
<td>Mucho/Alto</td>
<td>Depende de la conexión cliente-servidor</td>
</tr>
<tr>
<td>Orientada a Hypermedia</td>
<td>Multimedia (video, audio, streamings)</td>
<td>Lenta/Muy rápida</td>
<td>Mucho/Muy bajo</td>
<td>Bajo (generalmente cacheado)</td>
</tr>
<tr>
<td>Orientada a Detección</td>
<td>Colecciones de datos sin procesar</td>
<td>"Tiempo real"</td>
<td>Mucho/Muy alto</td>
<td>Muy alto</td>
</tr>
</tbody>
</table>
<p style="text-align:justify;">La clasificación anterior responde a varios parámetros, a saber:</p>

<ul>
 	<li style="text-align:justify;"><strong>RECURSO</strong>: Corresponde a la forma de los datos que almacena o procesa la API REST.</li>
 	<li style="text-align:justify;"><strong>PETICIÓN/DIFUSIÓN</strong>: La petición corresponde a la velocidad con la que los datos son accedidos en general desde el cliente, y la difusión corresponde a la velocidad con la que la API REST es capaz de servir su información a múltiples clientes.</li>
 	<li style="text-align:justify;"><strong>ANCHO DE BANDA/TRANSACCIONES</strong>: El ancho de banda corresponde al consumo que requiere normalmente la API REST para responder a peticiones, mientras que las transacciones corresponde a la tasa de transferencia de paquetes HTTP desde el servidor hacia el cliente (diferente del parámetro DIFUSIÓN).</li>
 	<li style="text-align:justify;"><strong>RENDIMIENTO</strong>: Corresponde únicamente al volumen general de información que procesa y envía la API REST en términos de la velocidad de conexión.</li>
</ul>
<p style="text-align:justify;">Era importante aclararlo de forma resumida, ya que muchas veces, no hay una fuente de información consistente... (si, Wikipedia, hablo de ti... :evil: ).</p>
<p style="text-align:justify;">Espero sea útil para referencias futuras de consulta rápida... ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1059</wp:post_id>
		<wp:post_date>2016-08-22 12:58:29</wp:post_date>
		<wp:post_date_gmt>2016-08-22 16:58:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>acerca-de-api-rest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="api"><![CDATA[API]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="ddd"><![CDATA[DDD]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="category" nicename="la-via-api"><![CDATA[La vía API]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210506748849681";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/767767962124099584";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[26039238812]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6173533677096566784&type=U&a=AvE3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ENTENDIENDO LA ARQUITECTURA FRONT-END USANDO BOWER</title>
		<link>https://jotaeseymas.wordpress.com/2016/09/06/entendiendo-la-arquitectura-front-end-usando-bower/</link>
		<pubDate>Tue, 06 Sep 2016 05:16:19 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1070</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="arquitectura front-end"&gt;
<p style="text-align:justify;">Hace muchos años atrás, la programación web front-end se limitaba a escribir interminables líneas de código inentendible en Javascript (que sí, que no es <a href="https://web.archive.org/web/20040625050003/http://developer.netscape.com/docs/technote/index.html?content=javascript/eventhandler/eventhandler.htm" target="_blank">nuevo</a>). Gracias a Dios, se ha avanzado tanto en este campo que ya se habla de <a href="https://www.oreilly.com/ideas/defining-front-end-architecture" target="_blank">arquitectura front-end</a>, por la complejidad que pueden alcanzar las aplicaciones Javascript en la actualidad.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;"><a href="https://scotch.io/tutorials/javascript-transpilers-what-they-are-why-we-need-them">Transpiladores</a>, lenguajes híbridos (como <a href="http://opalang.org/" target="_blank">Opa</a>, <a href="https://www.rust-lang.org/en-US/" target="_blank">Rust</a>, <a href="https://www.dartlang.org/" target="_blank">Dart</a>, <a href="http://www.scala-js.org/" target="_blank">Scala</a>, <a href="http://ceylon-lang.org/" target="_blank">Ceylon</a>... ^^' ) que compilan a Javascript, <a href="https://rethinkdb.com/faq/" target="_blank">NoSQL</a>, aplicaciones <a href="http://ionicframework.com/" target="_blank">híbridas</a> o de <a href="http://electron.atom.io/" target="_blank">escritorio</a>, y bueno, también está <del>React.js</del> ( &gt;:( ya hablaré de eso en otro post); todo un ecosistema de aplicaciones en Javascript sin mencionar las interacciones que se pueden aplicar (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API" target="_blank">Canvas</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API" target="_blank">WebGL</a>, <a href="https://developer.mozilla.org/en-US/docs/WebAPI" target="_blank">WebAPI</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/API/Worker" target="_blank">Workers</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/API/Push_API" target="_blank">PushAPI</a>, y un muy largo etcétera :idea: ) pero este post no se trata de eso... ¿de qué iba? :roll: ¡Ah, si!</p>
<p style="text-align:justify;">Un problema característico de las aplicaciones Javascript es la complejidad con la que muchas veces se interrelacionan las dependencias. Pueden darse casos en los que se use <strong><em>jotacueri </em></strong>con una gran dependencia de plugins que a su vez dependen de este, por lo que la librería se convierte entonces en una dependencia crítica. En este caso particular, hacer un "control de versiones" a la librería, puede resultar un tremendo dolor de cabeza.</p>
<p style="text-align:justify;">Afortunadamente, existen en la actualidad, herramientas como <a href="https://bower.io/" target="_blank">bower.io</a> que facilitan el manejo de dependencias dentro de nuestra interfaz de usuario, que además permite el control de versiones, la migración de módulos y dependencias a otro proyecto así como también la centralización de nuestras librerías.</p>
<p style="text-align:justify;">El único requisito para instalar bower es simplemente tener <a href="https://nodejs.org/en/" target="_blank">Node.js</a> instalado, :mrgreen: entonces ejecutamos:</p>

<pre>$ sudo npm -g install bower</pre>
O como usuario root sin el <code>sudo.</code>

Una vez instalado vamos a nuestro proyecto y ya podemos usarlo:
<pre>$ bower &lt;comando&gt; &lt;paquete&gt;*</pre>
<p style="text-align:justify;">Donde <code>&lt;paquete&gt;</code> significa la librería, framework o módulo que vayamos a instalar, y <code>&lt;comando&gt;</code> significa uno de estos comandos:</p>

<table>
<thead>
<tr>
<th>&lt;comando&gt;</th>
<th>significado</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>init</code></td>
<td>Inicia un proyecto en bower (crea un archivo bower.json en la raíz del proyecto</td>
</tr>
<tr>
<td><code>install</code></td>
<td>Instala un paquete o dependencia con bower (por defecto lo guarda en la carpeta bower_components en la raźi del proyecto, si ésta no existe se creará)</td>
</tr>
<tr>
<td><code>uninstall</code></td>
<td>desinstala un paquete o dependencia con bower, así como todas sus dependencias</td>
</tr>
<tr>
<td><code>list</code></td>
<td>Muestra todos los paquetes instalados con su respectivo árbol de dependencias</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Controla las versiones de bower.json en los diferentes paquetes, también imprime la versión de bower actual</td>
</tr>
<tr>
<td><code>update</code></td>
<td>Actualiza un paquete a la versión más reciente de dicho paquete (dando opción al usuario si desea actualizar también las dependencias de este paquete)</td>
</tr>
<tr>
<td><code>link</code></td>
<td>Enlaza una librería o paquete instalada globalmente con npm dentro del proyecto (en el directorio bower_components)</td>
</tr>
<tr>
<td><code>search</code></td>
<td>Busca paquetes dentro del repositorio de bower.io</td>
</tr>
</tbody>
</table>
Puedes ver más comandos en la especificación de su <a href="https://bower.io/docs/api/" target="_blank">API</a>.
<p style="text-align:justify;">Ahora vamos con un ejemplo de la gestión de dependencias de bower. Este es un proyecto en el que estoy trabajando actualmente y acá ejecuté el comando <code>bower list</code>:</p>


[caption id="attachment_1074" align="aligncenter" width="801"]<a href="https://jotaeseymas.files.wordpress.com/2016/09/proyecto-bower1.png"><img class="wp-image-1074 size-full" src="https://jotaeseymas.files.wordpress.com/2016/09/proyecto-bower1.png" alt="proyecto-bower" width="801" height="228" /></a> <strong>Son pocas dependencias pero pueden ser más, muchas más...</strong> :twisted:[/caption]
<p style="text-align:justify;">En algunos casos, especifica el hash del último push a Github del paquete, en otros casos especifica la versión instalada y una versión actual que puedes instalar usando <code>bower update</code>, y en otros casos te especifica la incompatibilidad de algunas dependencias con otras versiones anteriores del paquete (lo cual me parece genial por si se te ocurre cometer alguna burrada ^^' )</p>
<p style="text-align:justify;">En general, que existan herramientas así, me parece simplemente maravilloso, porque ya no estamos en la edad de las cavernas, donde el oscurantismo en torno a Javascript reinaba en los ordenadores... Ahora entiendo porque el logo de bower es un ave, ¡si con bower la gestión de dependencias ya es cosa de volar! ;)</p>


[caption id="" align="aligncenter" width="259"]<img class="" src="https://camo.githubusercontent.com/aad5f0385a2d8524cb366a1bad62bc74e797743a/687474703a2f2f692e696d6775722e636f6d2f516d47485067632e706e67" width="259" height="259" /> <strong>¡A volar! XD</strong>[/caption]

&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1070</wp:post_id>
		<wp:post_date>2016-09-06 01:16:19</wp:post_date>
		<wp:post_date_gmt>2016-09-06 05:16:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>entendiendo-la-arquitectura-front-end-usando-bower</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="arquitectura"><![CDATA[arquitectura]]></category>
		<category domain="post_tag" nicename="bower"><![CDATA[bower]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="category" nicename="nodeameste"><![CDATA[Nodeameste]]></category>
		<category domain="post_tag" nicename="nuevo"><![CDATA[nuevo]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_54dddf180ed7b3b2b8ef661e904c2681</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[26530739359]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210634058552344";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/773027072012722176";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6178792785655656448&type=U&a=Dff9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DEJA TUS APLICACIONES EN LA LONA. PARTE 3. BINDINGS DE CONTROL DE FLUJO</title>
		<link>https://jotaeseymas.wordpress.com/2016/09/12/deja-tus-aplicaciones-en-la-lona-parte-3-bindings-de-control-de-flujo/</link>
		<pubDate>Mon, 12 Sep 2016 21:29:28 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1078</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="parte 3. bindings de control de flujo"&gt;

¡Hola de nuevo  :mrgreen: !
<p style="text-align:justify;">En un <a href="https://jotaeseymas.wordpress.com/2016/08/12/deja-tus-aplicaciones-en-la-lona-parte-2-bindings-de-apariencia/" target="_blank">post</a> anterior, mostré los bindings de apariencia de los que dispone <a href="http://knockoutjs.com" target="_blank">Knockout.js</a> para mostrar texto, etiquetas HTML y clases CSS condicionales. En este post, mostraré los binding de control de flujo para datos. ¡Estoy indetenible!  :twisted:</p>
http://www.youtube.com/watch?v=2zNSgSzhBfM

<!--more-->
<p style="text-align:justify;">Por defecto, Knockout.js no tiene la posibilidad de manejar requests HTTP, ya que es una librería orientada al desarrollo de componentes de interfaz de usuario, ¿<a href="https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/" target="_blank">recuerdan</a>? Sin embargo, eso no limita la posiblidad de que pueda integrarse junto con otras librerías para complementarle.</p>
<p style="text-align:justify;">En este post, usaré Minified.js como librería para manejar los requests HTTP (podría ser <strong><em>jotacueri</em></strong> pero ya saben lo que <a href="https://jotaeseymas.wordpress.com/2015/03/27/tal-vez-no-necesites-jquery/" target="_blank">pienso</a>  :roll: ) hacia un servicio web que tenía hecho en <a href="http://jexia.com/" target="_blank"><strong><span style="color:#fab700;">JEXIA</span></strong></a>.</p>

<h2 style="text-align:justify;">Bindings de control de flujo</h2>
<p style="text-align:justify;">La mayoría de las veces, es necesario utilizar rutinas que permita de forma dinámica, mostrar una tabla con una lista de datos obtenidos vía HTTP, AJAX, JSON u otra, considerando ademas que dichos atributos de esos datos influirán directamente en la manera en la que se muestra la tabla en su conjunto (ordenar por columna ascendente o descentente, búsqueda parcial, cosas <a href="https://jotaeseymas.wordpress.com/2015/02/01/filtro-de-busqueda-en-angular-js/" target="_blank">así</a>...  XD ), visibilidad y estilos CSS.</p>
Knockout.js dispone de los siguientes bindings para controlar el flujo de datos:
<ul>
 	<li style="text-align:justify;">El binding <a href="http://knockoutjs.com/documentation/foreach-binding.html" target="_blank"><code>foreach</code></a> permite iterar sobre una lista (generalmente un Array observable) y convertirla en datos asociados a elementos del DOM.</li>
 	<li style="text-align:justify;">El binding <a href="http://knockoutjs.com/documentation/if-binding.html" target="_blank"><code>if</code></a> permite visibilidad condicional y desvinculación permanente o temporal de un elemento del DOM y tiene su binding equivalente con "lógica negativa": <a href="http://knockoutjs.com/documentation/ifnot-binding.html" target="_blank"><code>ifnot</code></a>.</li>
 	<li style="text-align:justify;">El binding <a href="http://knockoutjs.com/documentation/with-binding.html" target="_blank"><code>with</code></a> permite navegar entre scopes de diferentes objetos dentro del árbol de objetos que exista en la lista o datos.</li>
</ul>
Veamos un ejemplo:

[code lang="html" collapse="true" title="Archivo: control_flujo.html" highlight="22,24,27"]
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;es&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Ejemplo Knockout&lt;/title&gt;
    &lt;style&gt;
        .no-visible {
            background-color: #D25349;
            color: white;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;table&gt;
        &lt;thead&gt;
            &lt;tr&gt;
                &lt;th&gt;ID Estado&lt;/th&gt;
                &lt;th&gt;Estado&lt;/th&gt;
                &lt;th&gt;Visibilidad&lt;/th&gt;
            &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody data-bind=&quot;foreach: estados;&quot;&gt;
            &lt;!-- Condiciones arbitrarias para ilustrar el uso del binding &quot;if&quot; --&gt;
            &lt;tr data-bind=&quot;if: nombre_estado[0] === 'A' || id_estado &gt; 12, css: {'no-visible': !visibilidad.esVisible};&quot;&gt;
                &lt;td style=&quot;text-align: center;&quot;&gt;&lt;span data-bind=&quot;text: id_estado;&quot;&gt;&lt;/span&gt;&lt;/td&gt;
                &lt;td style=&quot;text-align: center;&quot;&gt;&lt;span data-bind=&quot;text: nombre_estado;&quot;&gt;&lt;/span&gt;&lt;/td&gt;
                &lt;td style=&quot;text-align: center;&quot; data-bind=&quot;with: visibilidad;&quot;&gt;&lt;span data-bind=&quot;text: esVisible ? 'Si' : 'No';&quot;&gt;&lt;/span&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;http://minifiedjs.com/download/minified.js&quot;&gt;&lt;/script&gt;
    &lt;script src=&quot;control_flujo.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
[/code]

En el archivo Javascript tenemos:

[code lang="js" collapse="true" title="Archivo: control_flujo.js" highlight="39"]
// Se instancia el core de minified con lo que se va a utilizar
var $ = require('minified').$,

// Usado para la conexión a JEXIA
		auth = {
			key: '59bdc1086ba8f9c1b11ad54652ab9413',
			secret: '38bda16cc69a8e6e50af89256e58e69dc725b63252a7c968'
		},
		baseUrl = 'http://f9315280-a20a-11e5-9220-c76468a2eab4.app.jexia.com';

// Autenticación con JEXIA
$.request('POST', baseUrl, auth).then(function(text) {
	var data = $.parseJSON(text),
			settings = {
				headers: {
					'Authorization': 'Bearer ' + data.token,
					'Access-Control-Allow-Origin': '*'
				}
			};
		return $.request('GET', baseUrl + '/estados', null, settings);
	}
).then(function (text) {
	var data = $.parseJSON(text);

// Para ilustración del binding &quot;with&quot;
	$(data).each(function (item) {
		item.visibilidad = {
			esVisible: Math.random() &gt; 0.5
		}
	});

	ko.applyBindings(new ViewModel(data));
});

// Bindings a ser utilizados por Knockout.js
function ViewModel(data) {
	var self = this;

	self.estados = ko.observableArray(data);
}
[/code]

<p style="text-align:justify;">En la línea 22 del HTML, aplicamos el binding <code><strong>foreach</strong></code>, el cual opera sobre el atributo estados, definido en el ViewModel, luego, en la línea 24, definimos condiciones arbitrarias para ilustrar el uso del binding <code><strong>if</strong></code>. Finalmente, en la línea 27, aplicamos el binding <code><strong>with</strong></code>, que permite acceder al atributo <code>esVisible</code> desde el scope del atributo <code>visibilidad</code>, definido en el también en el VIewModel.</p>
<p style="text-align:justify;">Poco hacemos en el Javascript aparte de manejar los requests HTTP a la lista en <strong><span style="color:#fab700;">JEXIA</span></strong> y pasárselos al ViewModel. En la línea 39, definimos que el array de datos sea observable, esto significa que cada valor del array cambiará según los bindings que hayamos definido en el mismo o en otro ViewModel, lo cual permite realizar acciones complejas como ordenamientos según eventos o búsquedas parciales.</p>
<p style="text-align:justify;">Seguiremos informando, ¡hasta la próxima pelea!  ;) .</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1078</wp:post_id>
		<wp:post_date>2016-09-12 17:29:28</wp:post_date>
		<wp:post_date_gmt>2016-09-12 21:29:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deja-tus-aplicaciones-en-la-lona-parte-3-bindings-de-control-de-flujo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="ddd"><![CDATA[DDD]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="jexia"><![CDATA[JEXIA]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[26760107886]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210691661152373";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/775446289953632256";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>webcomponents-enabled</title>
		<link>https://jotaeseymas.wordpress.com/2016/08/16/javascript-101-entendiendo-web-components/webcomponents-enabled/</link>
		<pubDate>Tue, 16 Aug 2016 18:48:21 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2016/08/webcomponents-enabled.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1050</wp:post_id>
		<wp:post_date>2016-08-16 14:48:21</wp:post_date>
		<wp:post_date_gmt>2016-08-16 18:48:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>webcomponents-enabled</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1048</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2016/08/webcomponents-enabled.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/08/webcomponents-enabled.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:928;s:6:"height";i:340;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/08/webcomponents-enabled.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>proyecto-bower</title>
		<link>https://jotaeseymas.wordpress.com/2016/09/06/entendiendo-la-arquitectura-front-end-usando-bower/proyecto-bower/</link>
		<pubDate>Tue, 06 Sep 2016 05:06:45 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2016/09/proyecto-bower1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1074</wp:post_id>
		<wp:post_date>2016-09-06 01:06:45</wp:post_date>
		<wp:post_date_gmt>2016-09-06 05:06:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>proyecto-bower</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1070</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2016/09/proyecto-bower1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/09/proyecto-bower1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:801;s:6:"height";i:228;s:4:"file";s:91:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/09/proyecto-bower1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:37533;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JAVASCRIPT MARXISTA. POR UN LENGUAJE SIN CLASES</title>
		<link>https://jotaeseymas.wordpress.com/2016/09/15/javascript-marxista-por-un-lenguaje-sin-clases/</link>
		<pubDate>Thu, 15 Sep 2016 19:25:28 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1087</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="por un lenguaje sin clases"&gt;

<strong><span style="color:#d25349;">SI</span></strong>, así, sin más ni menos...

<!--more-->
<p style="text-align:justify;">Para nadie es un secreto que la <a href="https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/" target="_blank">nueva</a> sintaxis de Javascript ES2015 es apetecible para aquellos puristas del paradigma de programación Orientada a Objetos (con la inclusión de la palabra reservada <strong><span style="color:#d25349;"><code>class</code></span></strong>), lo que quiere decir que se tiene una opcionalidad mayor al momento de escribir "clases" (recordemos que la la POO tradicional en lenguajes como Java o Ruby es muy diferente a la de Javascript).</p>
<p style="text-align:justify;">Disfrazar lo evidente es completamente inútil, y pese a esa opcionalidad de la que ahora disponemos para trabajar en la nueva versión del lenguaje, la herencia de prototipos de objeto sigue siendo lo que "trabaja" tras bambalinas mientras no exista otro mecanismo en la cadena de herencia Javascript (entiéndase: DOM, navigator, window, etc.).</p>
<p style="text-align:justify;">Vaya que si les gusta <a href="http://marxist.js.org/" target="_blank">inventar</a> a la gente... :roll:</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1087</wp:post_id>
		<wp:post_date>2016-09-15 15:25:28</wp:post_date>
		<wp:post_date_gmt>2016-09-15 19:25:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>javascript-marxista-por-un-lenguaje-sin-clases</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="es6"><![CDATA[ES6]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="mozilla-firefox"><![CDATA[Mozilla Firefox]]></category>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[Minientrada]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210715793115657";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/776502256526950400";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[26862815389]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>¿QUÉ NO SE PUEDE ESTAR MOTIVADO? COELHO.JS ¡EN TRES HORAS!</title>
		<link>https://jotaeseymas.wordpress.com/2016/10/03/que-no-se-puede-estar-motivado-coelho-js-en-tres-horas/</link>
		<pubDate>Mon, 03 Oct 2016 18:14:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1090</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="coelho.js en tres horas" &gt;

¿Quién dijo que uno no se podía mantener motivado durante el trabajo?

http://www.youtube.com/watch?v=ThZSrMGb7Wo
<p style="text-align:justify;">Estamos llegando al final del año y aún encuentro motivos para seguir trabajando, programando y, claro, escribiendo de lo que me gusta (Javascript, por supuesto XD ).</p>
<p style="text-align:justify;">Basándome en los eventos de programación que constantemente hacen en otros países (<em>hackathons</em> les dicen), en el cual generalmente se debe desarrollar una aplicación en pocos días, me pareció interesante plantearme la posibilidad de desarrollar una aplicación en cuestión de horas, no de días, usando las aplicaciones y tecnologías que conozco.</p>
<p style="text-align:justify;"><!--more--></p>
<p style="text-align:justify;">Entonces nació <a href="https://chinuxparibus.github.io/coelho.js/" target="_blank">Coelho.js</a>...</p>


[caption id="attachment_1091" align="aligncenter" width="477"]<a href="https://jotaeseymas.files.wordpress.com/2016/10/fullpage-coelho.png"><img class="wp-image-1091 size-full" src="https://jotaeseymas.files.wordpress.com/2016/10/fullpage-coelho.png" alt="fullpage-coelho" width="477" height="329" /></a> <strong>Aunque no sea mi escritor favorito pero, fue lo que se me ocurrió...</strong>[/caption]
<p style="text-align:justify;">En un grupo de <a href="https://telegram.org/" target="_blank">Telegram</a> sobre <a href="https://telegram.me/vzlajs" target="_blank">Javascript</a> tenían una discusión sobre si debían seguir estudiando una carrera o dedicarse de lleno a ser programador freelance, y disertaban sobre las motivaciones acerca de dicha decisión. El punto es que mientras ellos escribían y escribían, me motivé a hacer una aplicación de frases aleatorias (hay cientos de ellas en el <a href="https://github.com/search?l=JavaScript&amp;q=quotes&amp;type=Repositories&amp;utf8=%E2%9C%93" target="_blank">gato-pulpo</a>) usando <a href="https://jotaeseymas.wordpress.com/2015/03/05/base-de-datos-en-el-navegador-parte-1-la-teoria/" target="_blank">LocalStorage</a> (manejado con Store.js, les debo el enlace ^^' ) como almacén (caché) de datos y una pequeña API REST en <span style="color:#fab700;"><a style="color:#fab700;" href="http://jexia.com/" target="_blank"><strong>JEXIA</strong></a></span> para guardar las frases, mi siempre <a href="https://jotaeseymas.wordpress.com/2015/10/21/jquery-no-es-el-unico-probando-minified-js/" target="_blank">fiel</a> navaja suiza <a href="http://minifiedjs.com/" target="_blank">Minified.js</a> como librería Javascript y <a href="http://siimple.juanes.xyz/" target="_blank">Siimple</a>, un framework CSS muy bueno que vi por ahí.</p>
<p style="text-align:justify;">Tuve algunos problemas durante el debug de la app ya que <a href="https://developer.mozilla.org/es/docs/Web/HTTP/Access_control_CORS" target="_blank">CORS</a> me estaba ocasionando muchos problemas (demasiados para ser una aplicación de 3 horas :oops: ), así que utilicé un proxy llamado <a href="http://crossorigin.me/" target="_blank">crossorigin.me</a> (f*ck yourself CORS  :twisted: ) el cual permite hacer Cross Origin Requests de dominios <code>http</code> hacia <code>https</code> y viceversa, y como plus adicional, usé <a href="http://www.favicon.cc/" target="_blank">Favicon Generator</a> para el ícono de la aplicación.</p>
Aprendí un montón en el proceso:
<ul>
 	<li>API REST usando un BaaS confiable como <span style="color:#fab700;"><a style="color:#fab700;" href="http://jexia.com/" target="_blank"><strong>JEXIA</strong></a></span>.</li>
 	<li>Eventos de LocalStorage en el navegador.</li>
 	<li>Programación asíncrona (Promises).</li>
 	<li>CORS (y como "violarlo" <em>*risa malvada*</em>).</li>
 	<li>Más sobre landing pages.</li>
</ul>
<p style="text-align:justify;"><strong style="text-align:justify;">NOTA:</strong> Si no genera la frase o aparece un error, en consola, solo actualiza la página (sigo trabajando en aprender a gestionar los eventos en el uso de LocalStorage, seguramente haré un post cuando aprenda a hacerlo) ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1090</wp:post_id>
		<wp:post_date>2016-10-03 14:14:32</wp:post_date>
		<wp:post_date_gmt>2016-10-03 18:14:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>que-no-se-puede-estar-motivado-coelho-js-en-tres-horas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="free"><![CDATA[free]]></category>
		<category domain="post_tag" nicename="frontend"><![CDATA[frontend]]></category>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="javascripteando-ando"><![CDATA[Javascripteando ando...]]></category>
		<category domain="post_tag" nicename="jexia"><![CDATA[JEXIA]]></category>
		<category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
		<category domain="category" nicename="la-via-api"><![CDATA[La vía API]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="post_tag" nicename="sin-jquery"><![CDATA[sin jQuery]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210876727618919";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/783007393873485824";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[27468283221]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>fullpage-coelho</title>
		<link>https://jotaeseymas.wordpress.com/2016/10/03/que-no-se-puede-estar-motivado-coelho-js-en-tres-horas/fullpage-coelho/</link>
		<pubDate>Mon, 03 Oct 2016 16:59:51 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2016/10/fullpage-coelho.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1091</wp:post_id>
		<wp:post_date>2016-10-03 12:59:51</wp:post_date>
		<wp:post_date_gmt>2016-10-03 16:59:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>fullpage-coelho</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1090</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2016/10/fullpage-coelho.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/10/fullpage-coelho.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:477;s:6:"height";i:329;s:4:"file";s:91:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2016/10/fullpage-coelho.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:11664;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>UN LARGO Y EMOCIONANTE VIAJE POR JAVASCRIPT EN 6 CARACTERES</title>
		<link>https://jotaeseymas.wordpress.com/2016/10/08/un-largo-y-emocionante-viaje-por-javascript-en-6-caracteres/</link>
		<pubDate>Sat, 08 Oct 2016 13:53:30 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1098</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="other pages" title="solo 6 carácteres" &gt;
<p style="text-align:justify;">¿Qué sentirías si te dijera que puedes programar en Javascript solo con 6 caracteres?  :twisted:</p>
<!--more-->
<p style="text-align:justify;"><strong>SI</strong>, es lo hermoso (y extraño) de este lenguaje, que al ser un lenguaje de scripting, tiene en su haber cosas muy particulares y potentes con las que puedes hacer cosas increíbles solo con los caracteres paréntesis <code><strong>( )</strong></code>, corchetes <code><strong>[ ]</strong></code>, exclamación <code><strong>!</strong></code> y adición <code><strong>+</strong></code>, por ejemplo:</p>


[code lang="js" collapse="true" title="Copia y pega este código en tu consola de navegador"]
[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(+(!+[]+!+[]+!+[]+[!+[]+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]+!+[]])+(!![]+[])[+[]]+(![]+[])[+[]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]])()
[/code]

<p style="text-align:justify;">Tranquilo, no es un virus, es algo chévere. Si no me crees, entonces mira este <a href="http://www.jazcash.com/a-javascript-journey-with-only-six-characters/" target="_blank">enlace</a>  ;)</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1098</wp:post_id>
		<wp:post_date>2016-10-08 09:53:30</wp:post_date>
		<wp:post_date_gmt>2016-10-08 13:53:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>un-largo-y-emocionante-viaje-por-javascript-en-6-caracteres</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="category" nicename="curioscriptades"><![CDATA[Curioscriptades...]]></category>
		<category domain="post_tag" nicename="expresiones-regulares"><![CDATA[expresiones regulares]]></category>
		<category domain="post_tag" nicename="formato"><![CDATA[formato]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Enlace]]></category>
		<category domain="post_tag" nicename="tecnologia"><![CDATA[tecnologia]]></category>
		<category domain="post_tag" nicename="wat"><![CDATA[WAT]]></category>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10210921000165705";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/784753628439425024";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[27638289577]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PRIMER POST DEL AÑO. ¡FELIZ AÑO NUEVO!</title>
		<link>https://jotaeseymas.wordpress.com/2017/01/01/primer-post-del-ano-feliz-ano-nuevo/</link>
		<pubDate>Sun, 01 Jan 2017 18:32:33 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">https://jotaeseymas.wordpress.com/?p=1104</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; script src="my own" title="feliz a&amp;ntilde;o nuevo" &gt;

Seré breve en mi introducción: ¡Feliz año nuevo 2017!
<p style="text-align:justify;">Increíble (hasta para mí) que hayan transcurrido casi 2 años desde que <a href="https://jotaeseymas.wordpress.com/2015/01/18/dicen-que-el-universo/" target="_blank" rel="noopener">inicié</a> este proyecto, inicialmente por diversión y curiosidad, pero al ver la cantidad de visitas y visitantes únicos... ¡Oye, que la cosa debe ir en serio!</p>


[caption id="attachment_1105" align="aligncenter" width="423"]<a href="https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-120801.png"><img class="wp-image-1105 " src="https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-120801.png" alt="¡Dupliqué la cantidad de visitas! XD #madremíawilly" width="423" height="286" /></a> <strong>¡Dupliqué la cantidad de visitas! XD #madremíawilly</strong>[/caption]

<!--more-->
<p style="text-align:justify;">Algunas publicaciones me han traído mucha <a href="https://jotaeseymas.wordpress.com/2015/01/22/selects-dependientes-con-angular-js/" target="_blank" rel="noopener">satisfacción</a>, otras no <a href="https://jotaeseymas.wordpress.com/2016/07/26/a-manera-de-disculpa-o-de-como-no-debe-ser-un-post/" target="_blank" rel="noopener">tanto</a>, pero lo realmente importante es que ustedes han continuado allí, manteniendo este humilde intento de satisfacer mi curiosidad por Javascript como su referencia personal o <em>chuleta</em> como le decimos en Venezuela. Aunque en ocasiones, esa curiosidad se haya apagado momentáneamente.</p>


[caption id="attachment_1106" align="aligncenter" width="426"]<a href="https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-113842.png"><img class=" wp-image-1106" src="https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-113842.png" alt="5 meses de inactividad es un crimen de lesa humanidad :'(" width="426" height="141" /></a> <strong>5 meses de inactividad en un blog es un crimen de lesa humanidad :'(</strong>[/caption]
<p style="text-align:justify;">Además, dejé una cantidad considerable de promesas sin cumplir (¡PERDÓOOOON! :'( )</p>


[caption id="attachment_1107" align="aligncenter" width="840"]<a href="https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-110429.png"><img class="size-full wp-image-1107" src="https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-110429.png" alt="Pues si... Hay mucho de que hablar... Muchísimo!!" width="840" height="383" /></a> <strong>Pues si. Hay mucho de que hablar, escribir, leer e investigar... ¡Muchísimo!</strong>[/caption]
<p style="text-align:justify;">Sin embargo, esa inactividad me hizo reflexionar sobre el propósito de un blog (ciertamente puedes ganar dinero con él, pero no debería ser el propósito principal), el cual no es otro que compartir conocimiento, independientemente de si escribes sobre Javascript, cocina, cine o <a href="http://blog.crespo.org.ve/" target="_blank" rel="noopener">Python</a>.</p>
Pero una vez cumplido, no hay más allá salvo reunir el conocimiento adquirido, elevar tus ganas de seguir adelante y buscar otra meta/sueño/propósito.

&nbsp;

http://www.youtube.com/watch?v=7FSYmlKCQ_Q
<p style="text-align:justify;">Agradecido estoy por [casi] dos años maravillosos de una experiencia tan gratificante como lo es escribir sobre lo que te gusta y te apasiona. Así que este es, con mucha satisfacción, la última publicación en este blog.</p>
<p style="text-align:justify;">¡Gracias por todo y ahora nos leeremos en <a href="https://jotaeseymas.surge.sh" target="_blank" rel="noopener">Surge</a>, que mi Trello está lleno de cosas interesantes por escribir y no se escriben solas! ;)</p>
<p style="text-align:justify;">Un abrazo a todos desde Caracas, Venezuela...</p>
<p style="text-align:justify;">Jhony Grillet</p>
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1104</wp:post_id>
		<wp:post_date>2017-01-01 14:32:33</wp:post_date>
		<wp:post_date_gmt>2017-01-01 18:32:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>primer-post-del-ano-feliz-ano-nuevo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="y-sin-jquery"><![CDATA[...y sin jQuery]]></category>
		<category domain="post_tag" nicename="algoritmos"><![CDATA[algoritmos]]></category>
		<category domain="post_tag" nicename="aprender"><![CDATA[aprender]]></category>
		<category domain="post_tag" nicename="datos"><![CDATA[datos]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="lenguaje-de-programacion"><![CDATA[lenguaje de programación]]></category>
		<category domain="post_tag" nicename="libros"><![CDATA[libros]]></category>
		<category domain="post_format" nicename="post-format-status"><![CDATA[Estado]]></category>
		<category domain="post_tag" nicename="proyectos"><![CDATA[Proyectos]]></category>
		<category domain="category" nicename="sin-categoria"><![CDATA[Sin categoría]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[79130303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>geo_public</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[297134773]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"facebook";a:1:{i:10013910;s:38:"https://facebook.com/10211795238901127";}s:7:"twitter";a:1:{i:11755896;s:52:"https://twitter.com/ch1nux/status/815626808452382721";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_9969071</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_10013910</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700346</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755896</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[ch1nux]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=260540019&stype=M&topic=6221392522619469824&type=U&a=WdSx]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_11700351</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_11755901</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>captura-de-pantalla-de-2017-01-01-120801</title>
		<link>https://jotaeseymas.wordpress.com/2017/01/01/primer-post-del-ano-feliz-ano-nuevo/captura-de-pantalla-de-2017-01-01-120801/</link>
		<pubDate>Sun, 01 Jan 2017 16:00:35 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-120801.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[¡Dupliqué la cantidad de visitas! XD #madremíawilly]]></excerpt:encoded>
		<wp:post_id>1105</wp:post_id>
		<wp:post_date>2017-01-01 12:00:35</wp:post_date>
		<wp:post_date_gmt>2017-01-01 16:00:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2017-01-01-120801</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1104</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-120801.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2017/01/captura-de-pantalla-de-2017-01-01-120801.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:351;s:6:"height";i:237;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2017/01/captura-de-pantalla-de-2017-01-01-120801.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:1221;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>captura-de-pantalla-de-2017-01-01-113842</title>
		<link>https://jotaeseymas.wordpress.com/2017/01/01/primer-post-del-ano-feliz-ano-nuevo/captura-de-pantalla-de-2017-01-01-113842/</link>
		<pubDate>Sun, 01 Jan 2017 17:56:53 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-113842.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[5 meses de inactividad es un crimen de lesa humanidad :'(]]></excerpt:encoded>
		<wp:post_id>1106</wp:post_id>
		<wp:post_date>2017-01-01 13:56:53</wp:post_date>
		<wp:post_date_gmt>2017-01-01 17:56:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2017-01-01-113842</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1104</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-113842.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2017/01/captura-de-pantalla-de-2017-01-01-113842.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:342;s:6:"height";i:113;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2017/01/captura-de-pantalla-de-2017-01-01-113842.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:1654;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>captura-de-pantalla-de-2017-01-01-110429</title>
		<link>https://jotaeseymas.wordpress.com/2017/01/01/primer-post-del-ano-feliz-ano-nuevo/captura-de-pantalla-de-2017-01-01-110429/</link>
		<pubDate>Sun, 01 Jan 2017 18:03:32 +0000</pubDate>
		<dc:creator>ch1nux</dc:creator>
		<guid isPermaLink="false">http://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-110429.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Pues si... Hay mucho de que hablar... Muchísimo!!]]></excerpt:encoded>
		<wp:post_id>1107</wp:post_id>
		<wp:post_date>2017-01-01 14:03:32</wp:post_date>
		<wp:post_date_gmt>2017-01-01 18:03:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>captura-de-pantalla-de-2017-01-01-110429</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>1104</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-110429.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2017/01/captura-de-pantalla-de-2017-01-01-110429.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:840;s:6:"height";i:383;s:4:"file";s:116:"/home/wpcom/public_html/wp-content/blogs.dir/8b9/83151412/files/2017/01/captura-de-pantalla-de-2017-01-01-110429.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:34637;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
