[{"tags": ["javascript", "nuevo", "post-format-aside", "sin-categoria", "tecnologia"], "title": "DICEN QUE EL UNIVERSO...", "date": "Sun, 18 Jan 2015 19:31:21 +0000", "content": "&lt;script src=\"my own\" title=\"Dicen que el universo...\"&gt;\n<p style=\"text-align:justify;\">En matem\u00e1ticas, existe todo un universo que cabe enteramente entre un \"0\" y un \"1\". Tambi\u00e9n existe todo un universo entre esas dos etiquetas HTML... O sea, las que encabeza este blog, que de eso va esta entrada y las entradas siguientes...</p>\n<p style=\"text-align:justify;\">Espero que sea considerablemente recibido este micro-esfuerzo (vale, que aparte de ser autodidacta, no dejo de ser aficionado y curioso) por ense\u00f1ar algunas cosas experimentadas de las locuras que salen de esta cabeza...</p>\n<p style=\"text-align:justify;\">Si, porque en mi cabeza tambi\u00e9n hay todo un universo... Pero enfoc\u00e1ndome en lo que quiero ense\u00f1ar, Javascript es de lo que va este blog (lo aclaro porque hay gente que no sabe ni que es eso y lo usa como quien usa un sombrero... \u00ac\u00ac').</p>\n<p style=\"text-align:justify;\">No soy un gur\u00fa de la programaci\u00f3n, pero si me gusta aprender. De todo lo poco o mucho que sepa (seg\u00fan el ojo con que se mire...) se los comparto ;)</p>\nDisfr\u00fatenlo...\n\n&lt;/script&gt;"}, {"tags": ["aprender", "free", "html", "javascript", "javascripteando-ando", "nuevo", "tecnologia"], "title": "\u00bfQUIERES UN CAF\u00c9?", "date": "Tue, 20 Jan 2015 16:38:54 +0000", "content": "&lt;script src=\"other pages\" title=\"\\\u00bfquieres un caf&amp;eacute;\\?\"&gt;\n<p style=\"text-align:justify;\">En este momento si, gracias...</p>\n<p style=\"text-align:justify;\">Pero no voy a hablar del caf\u00e9, sino de la gente que hizo cosas inspirados en muchas tazas de caf\u00e9 que se tomaron en muchas noches de sue\u00f1o y desvelo...<!--more--></p>\n<p style=\"text-align:justify;\">Javascript, como cualquier lenguaje de programaci\u00f3n, requiere tiempo y dedicaci\u00f3n para aprenderlo, m\u00e1s en estos tiempos cuando la innovaci\u00f3n est\u00e1 a la orden del d\u00eda. Veamos tres ejemplos de esto:</p>\n\n<ol>\n<ul>\n\t<li><a title=\"CoffeeScript\" href=\"http://coffeescript.org/\" target=\"_blank\">CoffeeScript.</a></li>\n</ul>\n</ol>\n<p style=\"text-align:justify;\">\u00a1Se me olvid\u00f3 el punto y coma! Casi puedo asegurar que este es el karma de la mayor\u00eda de los programadores en Javascript. Afortunadamente, CoffeeScript resuelve en gran medida este problema.</p>\n<p style=\"text-align:justify;\">CoffeeScript es un \"compilador\" de JavaScript, que permite reescribirlo de forma m\u00e1s simple, por ejemplo, una t\u00edpica llamada a una funci\u00f3n en Javascript ser\u00eda:</p>\n\n\n[code language=\"javascript\"]\nvar escape = function(value) {\n  if (value) {\n    return alert(value);\n  }\n}\n[/code]\n\n<p style=\"text-align:justify;\">Reescrita en CoffeeScript ser\u00eda:</p>\n\n\n[code language=\"javascript\"]\nescape = (value) -&gt; return alert(value) if value\n[/code]\n\nInteresante, \u00bfverdad?\n<ol>\n<ul>\n\t<li><a title=\"Mocha.js\" href=\"http://mochajs.org/\" target=\"_blank\">Mocha.js</a></li>\n</ul>\n</ol>\n<p style=\"text-align:justify;\">Mocha.js pretende ser un framework de pruebas unitarias orientado a aplicaciones web escritas (obviamente) en Javascript. Corre sobre <a title=\"Node.js\" href=\"http://nodejs.org\" target=\"_blank\">Node.js</a> (del cual har\u00e9 varios posts m\u00e1s adelante)</p>\n<p style=\"text-align:justify;\">La facilidad de este framework consiste en escribir las pruebas en lenguaje (m\u00e1s o menos) natural, con la finalidad de hacer entender las funcionalidas. Tambien prov\u00e9e un componente de estad\u00edsticas para hacer (en primera instancia) pruebas de rendimiento. A continuaci\u00f3n un ejemplo, extra\u00eddo de su p\u00e1gina web:</p>\n\n\n[code language=\"javascript\"]\nvar assert = require(&quot;assert&quot;)\ndescribe('Array', function(){\n  describe('#indexOf()', function(){\n    it('should return -1 when the value is not present', function(){\n      assert.equal(-1, [1,2,3].indexOf(5));\n      assert.equal(-1, [1,2,3].indexOf(0));\n    })\n  })\n})\n[/code]\n\n<p style=\"text-align:justify;\">Para usar el lenguaje natural, debe complementarse con otras librer\u00edas, consulten la p\u00e1gina del proyecto para m\u00e1s informaci\u00f3n. Personalmente no me tomo ese \"mocaccino\" (s\u00f3lo porque a\u00fan no he aprendido a automatizar las pruebas unitarias :P )</p>\n\n<ol>\n<ul>\n\t<li><a title=\"Cappucccino Project\" href=\"http://www.cappuccino-project.org/\" target=\"_blank\">Cappuccino Project</a></li>\n</ul>\n</ol>\n<p style=\"text-align:justify;\">Como si reinventar la rueda no fuera suficiente, Cappuccino Project es un framework web que le da una \"vuelta de tuerca\" a Javascript. Su filosof\u00eda se centra en escribir aplicaciones web basadas en datos y no en interacciones con las vistas (como el caso t\u00edpico de <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a>).</p>\n<p style=\"text-align:justify;\">Cappuccino Project abstrae las interacciones con el DOM, con HTML y con CSS, teniendo una sintaxis similar al lenguaje de programaci\u00f3n Objective-C (el que usan en iOS y MacOSX).</p>\n<p style=\"text-align:justify;\">De hecho, en este framework lo llaman \"Objective-J\" (\u00bf?)</p>\n\n\n[code language=\"javascript\"]\n@implementation Person : CPObject\n{\n  CPString name;\n}\n@end\n[/code]\n\n<p style=\"text-align:justify;\">Digamos que est\u00e1 bien de vez en cuando reinventar la rueda, por el simple hecho de conocer algo nuevo, pero en mi opini\u00f3n personal, ese capuccino est\u00e1 muy sobrecargado :(</p>\n<p style=\"text-align:justify;\">La idea no es descartar ninguna tecnolog\u00eda de plano, sino que, como siempre, el sentido com\u00fan debe imperar por encima de lo \"nuevo\" (a pesar del cliente, eso si). Pero como dec\u00eda mi abuelita: \"no digas nunca de esta agua no beber\u00e9\".</p>\n<p style=\"text-align:justify;\">Yo le cambiar\u00eda: \"no digas nunca de este caf\u00e9 no beber\u00e9\"... ;)</p>\n&lt;/script&gt;"}, {"tags": ["angularjs", "frontend", "google", "javascript", "la-piedra-angular", "tutorial"], "title": "SELECTS DEPENDIENTES CON ANGULAR JS", "date": "Thu, 22 Jan 2015 21:25:21 +0000", "content": "&lt;script title=\"selects dependientes con angular js\" src=\"other pages\"&gt;\n<p style=\"text-align:justify;\">Vale, que eso de los selects dependientes se puede hacer de miles de maneras y con miles de frameworks diferentes. Pero como a mi me gusta reinventar la rueda, pues...</p>\n<p style=\"text-align:justify;\">Esta es una forma rid\u00edculamente absurda (por lo f\u00e1cil de implementar) de como realizar los tan mencionados selects dependientes, pero con una vuelta de tuerca (si, en Javascript)...\n<!--more--></p>\n\n\n[code lang=\"html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.10/angular.min.js&quot;&gt;&lt;/script&gt;\n\t&lt;title&gt;Select dependientes&lt;/title&gt;\n&lt;/head&gt;\n&lt;body ng-app=&quot;selects&quot;&gt;\n\t&lt;script&gt;\n\t\tvar selects = angular.module('selects', []);\n\t\tselects.controller('UbicacionCtrl', ['$scope', function($scope) {\n\t\t\t$scope.ubicacion = {\n\t\t\t\t'Dtto. Capital': {\n\t\t\t\t\t'Libertador': ['La Vega', 'Antimano']\n\t\t\t\t},\n\t\t\t\t'Miranda': {\n\t\t\t\t\t'Plaza': ['Guarenas'],\n\t\t\t\t\t'Zamora': ['Guatire']\n\t\t\t\t}\n\t\t\t};\n\t\t}]);\n\t&lt;/script&gt;\n\t&lt;div ng-controller=&quot;UbicacionCtrl&quot; &gt;\n\t\t&lt;select ng-model=&quot;model_estado&quot; ng-options=&quot;estado for (estado, municipios) in ubicacion&quot;&gt;\n\t\t\t&lt;option value=&quot;&quot;&gt;- Seleccione -&lt;/option&gt;\n\t\t&lt;/select&gt;\n\t\t&lt;select ng-model=&quot;model_municipio&quot; ng-disabled=&quot;!model_estado&quot; ng-options=&quot;municipio for (municipio, parroquias) in model_estado&quot;&gt;\n\t\t\t&lt;option value=&quot;&quot;&gt;- Seleccione -&lt;/option&gt;\n\t\t&lt;/select&gt;\n\t\t&lt;select ng-model=&quot;model_parroquia&quot; ng-disabled=&quot;!model_estado || !model_municipio&quot; ng-options=&quot;parroquia for parroquia in model_municipio&quot;&gt;\n\t\t\t&lt;option value=&quot;&quot;&gt;- Seleccione -&lt;/option&gt;\n\t\t&lt;/select&gt;\n\t&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Me parece que el ejemplo es claro en cuanto a la forma en la que implementa la acci\u00f3n, ahora bien, para los que no entienden ni papa, bueh, ya ser\u00e1 para otro post en el que explicar\u00e9 la potencia de este front-end framework MVW.</p>\n<p style=\"text-align:justify;\">Siento no explicar las acciones que ejecuta este c\u00f3digo. Deber\u00eda explicarlas, pero estoy escribiendo este post con una premura que ni les cuento, la misma premura con la que me pidieron este requerimiento para un sistema. Pues, la vida es as\u00ed, no la he inventado yo :( ...</p>\n<p style=\"text-align:justify;\">Tengo que organizar este blog, o no van a caber las ideas que tengo en la cabeza...</p>\n<p style=\"text-align:justify;\"><strong>Actualizado: </strong>profundizar\u00e9 en este tema en el <a title=\"Angular.js\" href=\"https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/\" target=\"_blank\">Tutorial de Angular.js</a>, lo prometo ;)</p>\n&lt;/script&gt;"}, {"tags": ["curioscriptades", "javascript", "nuevo", "post-format-aside", "tecnologia"], "title": "A CELEBRAR...!!", "date": "Fri, 23 Jan 2015 16:56:36 +0000", "content": "&lt;script src=\"other pages\" title=\"a celebrar...\"&gt;\n\nAlegraos, criaturitas del Se\u00f1or...\n<p style=\"text-align:justify;\">Javascript ha sido nombrado el lenguaje de programaci\u00f3n del 2014, seg\u00fan el \u00edndice <a title=\"TIOBE Index\" href=\"http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html\" target=\"_blank\">TIOBE</a>, que es una compa\u00f1\u00eda que realiza estudios relacionados con la popularidad de lenguajes de programaci\u00f3n con prop\u00f3sitos estad\u00edsticos ($$$).</p>\n<p style=\"text-align:justify;\">Seg\u00fan este \u00edndice, que no mide el <strong>mejor</strong> lenguaje de programaci\u00f3n ni aquel en el que m\u00e1s <strong>l\u00edneas de c\u00f3digo</strong> se ha escrito, Javascript ha ganado 1,70 puntos porcentuales de popularidad respecto al a\u00f1o pasado, esto es debido a la cantidad de tecnolog\u00edas, frameworks y dem\u00e1s innovaciones basadas en Javascript (tales como <a title=\"Node.js\" href=\"http://nodejs.org\" target=\"_blank\">Node.js</a>, <a title=\"Angular.js\" href=\"http://angularjs.org\" target=\"_blank\">Angular.js</a> y <a title=\"MEAN.JS\" href=\"http://meanjs.org/\" target=\"_blank\">MEAN.js</a>, entre otros) que han repuntado durante los \u00faltimos meses del 2014.</p>\n<p style=\"text-align:justify;\">Vamos a ver, seamos honestos, ning\u00fan lenguaje de programaci\u00f3n es la \"<a title=\"Panacea universal\" href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panacea</a>\" que va a resolver todos los problemas del mundo. En lo personal, pienso que el mejor lenguaje de programaci\u00f3n es en el que te sientas m\u00e1s c\u00f3modo programando. Personalmente, me siento feliz con Javascript, otros se sienten felices con Python, <a title=\"La libertad de aprender...\" href=\"http://blog.crespo.org.ve\" target=\"_blank\">por ejemplo</a>.</p>\n<p style=\"text-align:justify;\">Pero estar en el n\u00famero 7 de los 10 m\u00e1s populares, motiva un poco, \u00bfno creen?</p>\n&lt;/script&gt;"}, {"tags": ["free", "html", "javascript", "javascripteando-ando", "nuevo", "tecnologia"], "title": "DIBUJANDO GRAFOS EN JAVASCRIPT", "date": "Mon, 26 Jan 2015 19:14:05 +0000", "content": "&lt;script src=\"other pages\" title=\"dibujando grafos en javascript\"&gt;\n<p style=\"text-align:justify;\">Que onda! Ando en una de investigador privado, chambeando un poco para ac\u00e1 y para all\u00e1, con los que saben, ya saben, y la neta que (ok, suficiente \"mejicano\" por hoy)...</p>\n<p style=\"text-align:justify;\">En esa de investigar, me he encontrado con un tutorial de los panas de <a title=\"Dibujar Grafos con Vis.js\" href=\"http://geekytheory.com/dibuja-grafos-en-javascript-con-vis-js/\" target=\"_blank\">Geeky Theory</a>, en el que prueban un poco la librer\u00eda <a title=\"Vis.js\" href=\"http://visjs.org/\" target=\"_blank\">Vis.js</a> que sirve para dibujar nodos y grafos.\n<!--more--></p>\n<p style=\"text-align:justify;\">Basta con descargarla (son 2MB aprox.), y referenciarla est\u00e1ticamente en nuestras p\u00e1ginas, o buscar el RAW en el <a title=\"Github\" href=\"https://github.com/\" target=\"_blank\">Octocat</a> y usarlo as\u00ed. Otra opci\u00f3n es usar gestores de tareas autom\u00e1ticos como <a title=\"Bower\" href=\"http://bower.io/\" target=\"_blank\">Bower</a> o <a title=\"NPM\" href=\"https://www.npmjs.com/\" target=\"_blank\">NPM</a> (el gestor de paquetes de <a title=\"Node.js\" href=\"http://nodejs.org\" target=\"_blank\">Node.js</a> (OMG, cuantas ideas para otros posts :)</p>\n<p style=\"text-align:justify;\">La idea de este c\u00f3digo de ejemplo es: Tres nodos (el array \"n\") y tres conexiones (el array \"c\"). En el caso de las conexiones, quiz\u00e1 con un poco de l\u00f3gica y creatividad, podr\u00edamos hacer magia, pero s\u00f3lo quiero ilustrar la sencillez del c\u00f3digo para elaborar grafos y nodos...</p>\n\n\n[code language=\"html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;title&gt;Ejemplo de Grafos&lt;/title&gt;\n\t&lt;link rel=&quot;stylesheet&quot; href=&quot;https://raw.githubusercontent.com/almende/vis/master/dist/vis.css&quot;&gt;\n\t&lt;script src=&quot;https://raw.githubusercontent.com/almende/vis/master/dist/vis.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\t&lt;div id=&quot;dibujo&quot;&gt;&lt;/div&gt;\n\t&lt;script&gt;\n  // Arreglo de nodos\n  var n = [\n    {id: 1, label: 'Nodo 1'},\n    {id: 2, label: 'Nodo 2'},\n    {id: 3, label: 'Nodo 3'},\n  ];\n\n  // Arreglo de conexiones\n  var c = [\n    {from: 1, to: 2},\n    {from: 2, to: 3},\n    {from: 3, to: 1}\n  ];\n\n  // Creando el contenedor para el canvas\n  var contenedor = document.getElementById('dibujo');\n  var datos_dibujo = {\n    nodes: n,\n    edges: c\n  };\n  var config = {}; //Se puede personalizar\n  var dibujo = new vis.Network(contenedor, datos_dibujo, config);\n\n\t&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Tomen en cuenta que los atributos de cada objeto elemento en cada arreglo se deben respetar para que la librer\u00eda haga su \"magia\". Y he aqu\u00ed la magia...</p>\n\n\n[caption id=\"attachment_22\" align=\"aligncenter\" width=\"205\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/01/captura-de-pantalla-de-2015-01-26-142628.png\"><img class=\"wp-image-22 size-full\" src=\"https://jotaeseymas.files.wordpress.com/2015/01/captura-de-pantalla-de-2015-01-26-142628.png\" alt=\"Captura de pantalla de 2015-01-26 14:26:28\" width=\"205\" height=\"171\" /></a> <strong style=\"font-size:14px;\">Bonito, \u00bfno?</strong>[/caption]\n<p style=\"text-align:justify;\">Vale decir que esta librer\u00eda no se limita solo a dibujar nodos y grafos, tambi\u00e9n pueden ver otros ejemplos m\u00e1s completos en su <a title=\"Vis.js\" href=\"http://visjs.org/\" target=\"_blank\">p\u00e1gina web</a> y su documentaci\u00f3n asociada.</p>\n<p style=\"text-align:justify;\">Cuantas ideas... Me esta gustando esto de escribir, o \u00bfmejor lo dibujo? ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Mon, 26 Jan 2015 19:11:24 +0000"}, {"tags": ["angularjs", "frontend", "google", "javascript", "la-piedra-angular", "tutorial"], "title": "FILTRO DE BUSQUEDA EN ANGULAR JS", "date": "Mon, 02 Feb 2015 00:08:05 +0000", "content": "&lt;script src=\"my own\" title=\"filtro de busqueda en angular js\"&gt;\n<p style=\"text-align:justify;\">Quiz\u00e1s existan otros m\u00e9todos de b\u00fasqueda avanzada basados en <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a>, pero particularmente me inclino por este que es (en mi opini\u00f3n) m\u00e1s sencillo de implementar. S\u00f3lo un campo <a title=\"Search Field HTML Markup\" href=\"http://www.w3.org/TR/html-markup/input.search.html\" target=\"_blank\">search</a> y en este ejemplo, una tabla.\n<!--more--></p>\n<p style=\"text-align:justify;\">La l\u00f3gica para presentar los datos puede ser cualquiera (una tabla, p\u00e1rrafos, etc\u00e9tera), y manejada por cualquier backend (datos en <a title=\"Javascript Object Notation\" href=\"http://json.org\" target=\"_blank\">JSON</a>, una BD o un servicio web).</p>\n\n[code language=\"html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;title&gt;Busqueda Angular&lt;/title&gt;\n\t&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js&quot;&gt;&lt;/script&gt;\n\t&lt;script&gt;\n\t\tangular.module('busquedaAvanzada', [])\n\t\t.controller('busquedaController', ['$scope', function($scope){\n\t\t\t$scope.lista = [\n\t\t\t\t{nombre: 'Pepe', apellido: 'Trueno'},\n\t\t\t\t{nombre: 'Kava', apellido: 'Zorro'},\n\t\t\t\t{nombre: 'Rosa', apellido: 'Melo'},\n\t\t\t\t{nombre: 'Elmo', apellido: 'Jones'},\n\t\t\t\t{nombre: 'Gato', apellido: 'Negro'}\n\t\t\t];\n\t\t}]);\n\t&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=&quot;busquedaAvanzada&quot;&gt;\n\t&lt;input type=&quot;text&quot; ng-model=&quot;busqueda&quot;&gt;\n\t&lt;table ng-controller=&quot;busquedaController&quot;&gt;\n\t\t&lt;thead&gt;\n\t\t\t&lt;tr&gt;\n\t\t\t\t&lt;th&gt;Nombre&lt;/th&gt;\n\t\t\t\t&lt;th&gt;Apellido&lt;/th&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/thead&gt;\n\t\t&lt;tbody&gt;\n\t\t\t&lt;tr ng-repeat=&quot;item in lista | filter: busqueda&quot;&gt;\n\t\t\t\t&lt;td&gt;{{item.nombre}}&lt;/td&gt;\n\t\t\t\t&lt;td&gt;{{item.apellido}}&lt;/td&gt;\n\t\t\t&lt;/tr&gt;\n\t\t&lt;/tbody&gt;\n\t&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">El campo <a title=\"Search Field HTML Markup\" href=\"http://www.w3.org/TR/html-markup/input.search.html\" target=\"_blank\">search</a> puede ser cualquier tipo de input que acepte texto, s\u00f3lo es una cuesti\u00f3n de presentaci\u00f3n, que vale decir que \u00e9ste puede ser m\u00e1s espec\u00edfico. Pueden ver un ejemplo sencillo <a title=\"Directiva filter\" href=\"https://code.angularjs.org/1.3.10/docs/api/ng/filter/filter\" target=\"_blank\">aqu\u00ed</a>.</p>\n<p style=\"text-align:justify;\">En este caso particular, eleg\u00ed servir los datos de ejemplo como un arreglo sencillo de objetos con dos atributos por objeto. La \"magia\" la realiza la directiva <em>filter</em> que se encarga de coincidir la ocurrencia de la iteraci\u00f3n con lo contenido en el modelo <em>busqueda</em>.</p>\n<p style=\"text-align:justify;\">Independientemente de la forma en la que se sirvan los datos, <a title=\"Angular JS\" href=\"http://angularjs.org\" target=\"_blank\">Angular.js</a> permite una f\u00e1cil presentaci\u00f3n de los datos mediante controladores y directivas.</p>\n<p style=\"text-align:justify;\">Tengo pendiente hacer un tutorial de <a title=\"Angular JS\" href=\"http://angularjs.org\" target=\"_blank\">Angular.js</a> y uno de <a title=\"Node.js\" href=\"http://nodejs.org\" target=\"_blank\">Node.js</a>, porque creo que ya he hablado bastante de ellos y me entusiasma seguir hablando.</p>\n<p style=\"text-align:justify;\">Lo anotar\u00e9 en mi lista de cosas por hacer, luego la filtro jejeje ;)</p>\n&lt;/script&gt;"}, {"tags": ["angularjs", "javascript", "javascripteando-ando", "libros", "tutorial"], "title": "\u00bfDONDE INVESTIGAR JAVASCRIPT?", "date": "Fri, 06 Feb 2015 13:53:25 +0000", "content": "&lt;script src=\"other pages\" title=\"\\\u00bfdonde investigar javascript\\?\"&gt;\n<p style=\"text-align:justify;\">Que onda, criaturitas del Se\u00f1or. Continuo en la onda de mis investigaciones (y <a title=\"Ehm, si...\" href=\"https://en.wikipedia.org/wiki/Fume\" target=\"_blank\">fumes</a>). En esa t\u00f3nica, ando buscando material para investigar lo nuevo de este lenguaje de programaci\u00f3n, etc\u00e9tera. He encontrado tres sitios espectaculares para investigar y empezar (si quieres) a apasionarte por este interesante mundo.\n<!--more--></p>\n\n<ul>\n\t<li><a title=\"CodeSchool. Path: Javascript\" href=\"https://www.codeschool.com/paths/javascript\" target=\"_blank\">Code School. Path: Javascript</a></li>\n</ul>\n<p style=\"text-align:justify;\"><a title=\"CodeSchool\" href=\"https://www.codeschool.com\" target=\"_blank\">CodeSchool</a> es una plataforma de cursos online (gratuitos y de pago) que se especializa en formar desarrolladores de tecnolog\u00edas web desde cero. Tiene diferentes \"paths\" o areas de influencia dependiendo del lenguaje de programaci\u00f3n que desees aprender. Personalmente me ubico aprendiendo Javascript (obviamente :P ), de hecho, estoy en ese \"path\" actualmente.</p>\n<p style=\"text-align:justify;\"><span style=\"color:#7cbbbb;\">Pros</span>: Los cursos son desde cero, tanto si tienes experiencia en el lenguaje de programaci\u00f3n como si no la tienes.\n<span style=\"color:#d25349;\">Contras</span>: Est\u00e1 en ingl\u00e9s... :/</p>\n\n<ul>\n\t<li><a title=\"JS Books\" href=\"http://jsbooks.revolunet.com/\" target=\"_blank\">JS Books</a></li>\n</ul>\n<p style=\"text-align:justify;\">Es una p\u00e1gina que posee una cantidad importante de libros descargables de forma gratuita (en formato PDF, ePub y otros) de Javascript. Delir\u00e9 cuando vi esta p\u00e1gina, ya que tiene realmente una amplia variedad de libros, tutos, cursos, y otras tecnolog\u00edas basadas en Javascript. En la variedad est\u00e1 el gusto...</p>\n<p style=\"text-align:justify;\"><span style=\"color:#7cbbbb;\">Pros</span>: Variedad, tienen desde como hacer un \"hola mundo\" en Javascript, hasta como hacer un \"transpilador\" con <a title=\"Node.js\" href=\"http://nodejs.org\">Node.js</a>.\n<span style=\"color:#d25349;\">Contras</span>: Aunque abarcan muchas tecnolog\u00edas, hay muchos m\u00e1s libros que esos, y \u00e9stos no son los m\u00e1s nuevos (y est\u00e1n en ingl\u00e9s)... :/</p>\n\n<ul>\n\t<li><a title=\"5JS\" href=\"https://fivejs.codeschool.com/episodes\" target=\"_blank\">5 minutes of Javascript</a></li>\n</ul>\n<p style=\"text-align:justify;\">M\u00e1s que una p\u00e1gina para investigar, es una p\u00e1gina para mantenerse muy bien informado. Se trata de un magazine con podcasts donde conversan much\u00edsimo sobre la actualidad de Javascript, nuevas tecnolog\u00edas, librer\u00edas y publicidad sobre todo lo relacionado con Javascript. Por poner un ejemplo, all\u00ed me enter\u00e9 de la \"reciente\" (para m\u00ed) aparici\u00f3n de <a title=\"ECMAScript versi\u00f3n 6\" href=\"http://es6rocks.com/\" target=\"_blank\">ES6</a> o ECMAScript 6 (a.k.a. Javascript 6), pensada m\u00e1s o menos para mayo de este a\u00f1o (\u00a1que emoci\u00f3n! :) )</p>\n<p style=\"text-align:justify;\"><span style=\"color:#7cbbbb;\">Pros</span>: No ten\u00eda ni idea de la complejidad del ecosistema Javascript. Son muy concisos y entretenidos los podcasts. Aunque son cortos, referencian las p\u00e1ginas que sustentan la informaci\u00f3n, y eso es invaluable.\n<span style=\"color:#d25349;\">Contras</span>: Si, tal vez lo intuyeron, \u00a1Est\u00e1n en ingl\u00e9s! :(</p>\n\nSigo investigando, sigo programando, sigo Javascripteando... ;)\n\n&lt;/script&gt;"}, {"tags": ["angularjs", "datos", "frontend", "html", "javascript", "js-books", "la-piedra-angular", "lenguaje-de-programacion", "libreria-angular", "tecnologia", "tutorial"], "title": "LIBRERIA ANGULAR. PARTE -1. PRIMERO LO PRIMERO", "date": "Wed, 18 Feb 2015 14:57:14 +0000", "content": "&lt; script src=\"my own\" title=\"primero lo primero\" &gt;\n<p style=\"text-align:justify;\">En mi pa\u00eds, y creo que en toda latinoam\u00e9rica se celebra el carnaval por estas fechas. \u00a1Feliz retorno de las <a title=\"Ehm, si...\" href=\"https://es.wiktionary.org/wiki/carnestolendas\" target=\"_blank\">carnestolendas</a>! Me hab\u00eda tardado considerablemente con este tuto, preparando detalles, ya saben :) ). As\u00ed que me he puesto por disciplina (siempre que el trabajo me lo permita), publicar un post de este tuto un mi\u00e9rcoles a la semana.</p>\n<!--more-->\n<h2>Genial, \u00bfde qu\u00e9 va?</h2>\n<p style=\"text-align:justify;\">Vamos a construir una librer\u00eda, llamada Librer\u00eda Angular (que original :P ). Algo parecido al estilo de <a title=\"JS Books\" href=\"http://jsbooks.revolunet.com/\" target=\"_blank\">JS Books</a> (el cual mencion\u00e9 en <a title=\"\u00bfD\u00f3nde investigar JavaScript?\" href=\"https://jotaeseymas.wordpress.com/2015/02/06/donde-investigar-javascript/\" target=\"_blank\">un post anterior</a>). Usaremos en este caso un poco de las api's para el navegador de almacenamiento de datos (<a title=\"API para una RDBMS en el navegador\" href=\"https://developer.mozilla.org/es/docs/IndexedDB-840092-dup\" target=\"_blank\">IndexedDB</a> para ser m\u00e1s espec\u00edficos), principios de <a title=\"Single Page Application\" href=\"https://en.wikipedia.org/wiki/Single-page_application\" target=\"_blank\">SPA</a> y <a title=\"Patr\u00f3n de desarrollo modular\" href=\"http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html\" target=\"_blank\">patrones de desarrollo modular</a>.</p>\n\n<h2>Lo que contiene</h2>\n<p style=\"text-align:justify;\">Este tuto consta de 6 partes, y este post preliminar. La parte 0 intenta explicar la terminolog\u00eda usada en este tuto, porque escribir cada cosa en la medida que voy incluyendo c\u00f3digo, es como que engorroso, me parece :P</p>\n\n<ol>\n \t<li><del>Parte 0. Angular 101</del></li>\n \t<li><del>Parte 1. Controlando y dirigiendo</del></li>\n \t<li><del>Parte 2. Enrutando</del></li>\n \t<li><del>Parte 3. Fabricando</del></li>\n \t<li><del>Parte 4. Validando</del></li>\n \t<li>Parte 5. Personalizando</li>\n</ol>\n<h2>Lo que necesitamos</h2>\n<ul>\n \t<li><a title=\"Versi\u00f3n 1.3.10\" href=\"https://code.angularjs.org/1.3.10/angular.min.js\" target=\"_blank\">Angular.js</a></li>\n \t<li>Algunas librer\u00edas de <a title=\"las que se requieran...\" href=\"https://code.angularjs.org/1.3.10/\" target=\"_blank\">Angular.js</a></li>\n \t<li><a title=\"Dexie.js\" href=\"http://www.dexie.org/\" target=\"_blank\">Dexie.js</a>, un \"wrapper\" para IndexedDB</li>\n \t<li><a title=\"NO quiero nada con Chrome :p\" href=\"https://www.mozilla.org/es-ES/firefox/new/\" target=\"_blank\">Mozilla Firefox</a></li>\n \t<li><a title=\"Font Awesome 4.3\" href=\"http://fontawesome.io/\" target=\"_blank\">Font Awesome</a>, <a title=\"Bootstrap 3\" href=\"http://getbootstrap.com/\" target=\"_blank\">Bootstrap</a>, y su amigo inseparable <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a> \u00ac\u00ac'</li>\n</ul>\n<h2>\u00bfy si quiero hacer mis propias pruebas?</h2>\n<p style=\"text-align:justify;\">Bueno, supongo que subir\u00e9 el c\u00f3digo a un repo en el <a title=\"Github\" href=\"https://github.com/ChinuxParibus/libreria-angular\" target=\"_blank\">Gato-Pulpo</a>. Soy algo ne\u00f3fito en esto de subir cosas al Gato-Pulpo :P , as\u00ed que de antemano pido disculpas si no est\u00e1 con la frecuencia que desean.</p>\nPaso a sumar +1 a la cuenta ;) \u00a1Que Dios me ayude!\n\n&lt;/script&gt;"}, {"tags": ["datos", "javascript", "javascripteando-ando", "nuevo", "tipos", "validacion"], "title": "\u00a1VAYA LIO CON LOS TIPOS!", "date": "Tue, 10 Feb 2015 15:25:11 +0000", "content": "&lt;script src=\"my own\" title=\"\\\u00a1vaya lio con los tipos\\!\"&gt;\n<p style=\"text-align:justify;\">El t\u00edtulo del post es simplemente hacer menci\u00f3n a uno de los problemas m\u00e1s comunes de Javascript, y es que sus tipos de datos suelen confundirse constantemente, pese a que s\u00f3lo sean <del>seis</del> tres: <a title=\"Datatype: String\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FString\" target=\"_blank\">String</a>, <a title=\"Datatype: Number\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FNumber\" target=\"_blank\">Number</a>, y <a title=\"Datatype: Boolean\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FBoolean\" target=\"_blank\">Boolean</a>, sin incluir al tipo <a title=\"Datatype: Object\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\" target=\"_blank\">Object</a> que es la \"superclase\" de casi todos (\u00bfo todos?) los tipos de datos de Javascript, o <del>el primitivo</del> a los primitivos <a title=\"Datatype: null\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null\" target=\"_blank\">null </a>y\u00a0<a title=\"Datatype: undefined\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2Fundefined\" target=\"_blank\">undefined</a>. El punto es que casi siempre ocurre que un valor \"32\" es pasado como String pero debe ser validado como Number y cosas as\u00ed, \u00a1menudo l\u00edo!...\n<!--more--></p>\n<p style=\"text-align:justify;\">Por fortuna existe una libreria que ayuda mucho en este aspecto, pues permite validar todos los tipos de datos conocidos de Javascript (a.k.a. ECMAScript 5) y algunas cosillas m\u00e1s, esta librer\u00eda se llama <a title=\"is.js\" href=\"http://arasatasaygin.github.io/is.js/\">is.js</a> y b\u00e1sicamente lo que realiza es una validaci\u00f3n con el m\u00e9todo is(), retornando true si corresponde con el valor consultado. He aqu\u00ed algunos ejemplos:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nvar dato = {'arreglo':[1, 3, 6],'cadena': &quot;cadena de texto&quot;, 'numero': 32 , 'fecha' : new Date()};\n\tfunction validarValor(valor){\n\t\tif (is.number(valor))\n\t\t\talert('es un numero');\n\t\telse if (is.string(valor))\n\t\t\talert('es un string');\n\t\telse if (is.array(valor))\n\t\t\talert('es un array');\n\t\telse if (is.date(valor))\n\t\t\talert('es una fecha');\n\t\telse if (is.object(valor))\n\t\t\talert('es un object');\n\t\telse if (is.undefined(valor))\n\t\t\talert('no existe ese valor');\n\t}\n[/code]\n\nY su respectivo HTML...\n\n[code language=\"html\" collapse=\"true\"]\n\t&lt;script src=&quot;is.js&quot;&gt;&lt;/script&gt;\n\t&lt;button id=&quot;dato1&quot; onclick=&quot;validarValor(dato)&quot;&gt;Validar dato&lt;/button&gt;\n\t&lt;button id=&quot;dato2&quot; onclick=&quot;validarValor(dato.arreglo)&quot;&gt;Validar &quot;dato.arreglo&quot;&lt;/button&gt;\n\t&lt;button id=&quot;dato3&quot; onclick=&quot;validarValor(dato.cadena)&quot;&gt;Validar &quot;dato.cadena&quot;&lt;/button&gt;\n\t&lt;button id=&quot;dato4&quot; onclick=&quot;validarValor(dato.numero)&quot;&gt;Validar &quot;dato.numero&quot;&lt;/button&gt;\n\t&lt;button id=&quot;dato5&quot; onclick=&quot;validarValor(dato.fecha)&quot;&gt;Validar &quot;dato.fecha&quot;&lt;/button&gt;\n\t&lt;button id=&quot;dato6&quot; onclick=&quot;validarValor(dato.desconocido)&quot;&gt;Validar &quot;dato.desconocido&quot;&lt;/button&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Cada bot\u00f3n va a incluir una validaci\u00f3n dentro del objeto que se pasa como par\u00e1metro a la funci\u00f3n. \u00bfinteresante, no?</p>\n<p style=\"text-align:justify;\">Pero esta librer\u00eda no se limita a validar tipos de dato, sino que adem\u00e1s puede validar <span title=\"is.function(funcion)\">si un elemento es una funci\u00f3n</span>, <span title=\"is.past(fecha)\">si es una fecha del pasado</span>, <span title=\"is.positive(numero)\">si un n\u00famero es entero positivo</span>, <span title=\"is.any.even([2, 4, 6])\">si todos los elementos de un arreglo son pares</span> o <span title=\"is.ie(6)\">si el navegador usado es Internet Explorer 6</span>. Pueden ver su p\u00e1gina oficial para m\u00e1s detalles.</p>\n<p style=\"text-align:justify;\">Lo que si es cierto es que es una interesante forma de validar tipos de datos y otras cosas para no volverse un l\u00edo con los tipos de dato en Javascript. Buena alternativa, \u00bfno?... ;)</p>\n&lt;/script&gt;\n<p style=\"text-align:justify;\"><strong>Actualizado 20-05-2015: </strong>\u00a1Uy! Yo mismo me hice un l\u00edo con los tipos de datos primitivos y sus <em>envoltorios... </em>Es lo bueno de investigar :D</p>"}, {"tags": ["curioscriptades", "html", "javascript", "jquery", "tutorial"], "title": "DR. JEKYLL Y MR. HYDE (...O EL OTRO LADO DE JQUERY)", "date": "Tue, 10 Feb 2015 20:33:08 +0000", "content": "\n\nDecir que <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a> es lo m\u00e1ximo es como decir que no se necesita del aire para respirar, o lo que llamamos en espa\u00f1ol, una <a title=\"Definici\u00f3n de Falacia\" href=\"https://es.wikipedia.org/wiki/Falacia\" target=\"_blank\">falacia</a>.\n\nY es que <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a> tambi\u00e9n tiene su lado oscuro...\n<!--more-->\n<p style=\"text-align:justify;\">Vamos a ver, que si bien es cierto que <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a> te facilita la vida demasiado, no deja de ser algo opcional, aunque en algunos casos, la <a href=\"https://es.wikipedia.org/w/index.php?title=Pereza&redirect=no\" target=\"_blank\">flojera</a> es tanta que no nos atrevemos a escribir en Javascript puro, una funci\u00f3n para cambiarle el color a un elemento:</p>\n[code language=\"javascript\" collapse=\"true\"]\nfunction cambiarColor(color){\n\tvar elemento = document.getElementById('cambio');\n\telemento.style.background = color;\n}\n[/code]\n\n\u00a1No! Sino que ya nos acostumbramos a:\n\n[code language=\"javascript\" collapse=\"true\"]\nfunction cambiarColor(color){\n\t$('#cambio').css('background', color);\n}\n[/code]\n\nPunto a favor de jQuery, por ahora...\n<p style=\"text-align:justify;\">La sintaxis es t\u00e9cnicamente m\u00e1s limpia de lo que pudieramos esperar, y sus m\u00e9todos y selectores son bastante \u00fatiles al momento de hacer manipulaciones impulsivas-compulsivas del <a title=\"Document Object Model\" href=\"http://www.w3.org/TR/DOM-Level-2-Core/introduction.html\" target=\"_blank\">DOM</a> (como el m\u00e9todo <code><a title=\".closest()\" href=\"http://api.jquery.com/closest/\" target=\"_blank\">.closest()</a></code> o el selector <code><a title=\":nth-child()\" href=\"http://api.jquery.com/nth-child-selector/\" target=\"_blank\">:nth-child()</a></code>, por ejemplo).</p>\n<p style=\"text-align:justify;\">Sin embargo, jQuery se vuelve un dolor de cabeza cuando se trata de escalar aplicaciones, cuando se usan o se necesitan una excesiva cantidad de validaciones abusando del objeto $(), cuando se requieren usar aplicaciones de otras librer\u00edas, como <a title=\"Prototype.js\" href=\"http://prototypejs.org/\" target=\"_blank\">Prototype.js</a> o <a title=\"Angular.js\" href=\"http://angularjs.org\" target=\"_blank\">Angular.js</a>. La consecuencia m\u00e1s visible es el rendimiento de carga de la p\u00e1gina.</p>\n<p style=\"text-align:justify;\">En <a title=\"VanillaJS\" href=\"http://vanilla-js.com/\" target=\"_blank\">VanillaJS</a>, pueden ver una comparaci\u00f3n de rendimiento respecto a usar Javascript puro frente otras librer\u00edas (no s\u00f3lo jQuery). A fin de cuentas, el lenguaje se cre\u00f3 para usarlo, no para \"<a title=\"si, dije machucarlo\" href=\"https://en.wiktionary.org/wiki/machucar#Spanish\" target=\"_blank\">machucarlo</a>\". M\u00e1s all\u00e1 de las ventajas en sintaxis, nos trae desventajas importantes.</p>\n<p style=\"text-align:justify;\">En principio, al acceder a todo el \u00e1rbol del <a title=\"Document Object Model\" href=\"http://www.w3.org/TR/DOM-Level-2-Core/introduction.html\" target=\"_blank\">DOM</a> a trav\u00e9s del objeto $(), crea una especie de <a title=\"Cuello de Botella\" href=\"https://es.wikipedia.org/wiki/Cuello_de_botella_%28inform%C3%A1tica%29\" target=\"_blank\">cuello de botella</a>, luego est\u00e1 el hecho de que para alguien que no est\u00e9 familiarizado con la sintaxis arriba descrita pueda resultar confusa, y am\u00e9n de eso, creas una dependencia de librer\u00edas (en algunos casos, irremplazable como el caso de <a title=\"Bootstrap 3\" href=\"http://getbootstrap.com/\" target=\"_blank\">Bootstrap</a>), algo que en lo personal no estoy de acuerdo.</p>\n<p style=\"text-align:justify;\">Ninguna tecnolog\u00eda es la <a title=\"Panacea universal\" href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panacea</a> que va a resolver todos los problemas, siempre lo he dicho, tampoco digo que la librer\u00eda en cuesti\u00f3n sea mala o desagradable, de hecho trabajo extensivamente con ella, el problema est\u00e1 cuando te pones las <a title=\"...para no ver nada de nada\" href=\"http://www.dontpaniconline.com/media/magazine/604x/a986a6c6e9e09eca77c8d9516d50052a.jpg\" target=\"_blank\">gr\u00edngolas</a> sin probar otras alternativas (que s\u00ed las hay)... :p</p>\n"}, {"tags": ["aprender", "curioscriptades", "ivo-wetzel", "javascript", "lenguaje-de-programacion", "nuevo", "tecnologia", "tutorial"], "title": "UN JARDIN PARA RELAJARSE", "date": "Fri, 13 Feb 2015 12:53:41 +0000", "content": "&lt;script src=\"other pages\" title=\"un jardin para relajarse\"&gt;\n<p style=\"text-align:justify;\">Un jard\u00edn es un lugar para relajarse, recostarse, y tambi\u00e9n para inspeccionar sobre los errores y los aciertos de nuestra vida, y adem\u00e1s para descansar (que vamos a ver, no todo en la vida es c\u00f3digo :) ). Pero hay jardines que se frecuentan para aprender y para renovarse, especialmente si lo que necesitas es una referencia concisa para enfocarte en lo que realmente importa: en lo que no sabes y deseas aprender.</p>\n<p style=\"text-align:justify;\">El <a title=\"Javascript Garden\" href=\"http://bonsaiden.github.io/JavaScript-Garden/es\" target=\"_blank\">Jard\u00edn de JavaScript</a> es una gu\u00eda de documentaci\u00f3n acerca de las partes m\u00e1s peculiares de este lenguaje de programaci\u00f3n. Brinda consejos para evitar los errores m\u00e1s comunes y sutiles, as\u00ed como problemas de rendimiento y de malas pr\u00e1cticas que los programadores menos experimentados en JavaScript pueden resolver en sus esfuerzos por profundizar en el lenguaje.</p>\n<p style=\"text-align:justify;\">Por ejemplo, cuando visit\u00e9 ese jard\u00edn, lo primero que vi fue el <a title=\"Uso de this\" href=\"http://bonsaiden.github.io/JavaScript-Garden/es/#function.this\" target=\"_blank\">uso de <code>this</code></a> y su \u00e1mbito de aplicaci\u00f3n con ejemplos bien gr\u00e1ficos para que sea comprensible tanto para un novato como yo, hasta la gente m\u00e1s experta en este lenguaje, como por ejemplo <a title=\"Gente que sabe...\" href=\"http://stackoverflow.com/users/170224/ivo-wetzel\" target=\"_blank\">Ivo Wetzel</a>, uno de los escritores de esta p\u00e1gina.</p>\n<p style=\"text-align:justify;\">Si bien el Jard\u00edn no prentende ense\u00f1ar JavaScript, es una referencia importante, disponible en todos los idiomas, para conocer ciertas peculiaridades que no se encuentran muy a menudo en <a title=\"...respecto a otros lenguajes\" href=\"http://www.google.com/trends/explore#q=javascript%2C%20php%2C%20python%2C%20java&amp;cmpt=q&amp;tz=\" target=\"_blank\">San Google</a>. A\u00fan as\u00ed, es muy recomendable tener un conocimiento un poco m\u00e1s profundo sobre el lenguaje para entender los temas tratados en la referencia. Un buen comienzo podr\u00eda ser la gu\u00eda de la gente de <a title=\"Mozilla Developer Network\" href=\"https://developer.mozilla.org/es/docs/Web/JavaScript\" target=\"_blank\">MDN</a>.</p>\n<p style=\"text-align:justify;\">\u00a1Disfruten su estad\u00eda en el jard\u00edn! ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "formularios", "html", "javascript", "javascripteando-ando", "tutorial", "validacion"], "title": "VALIDANDO ANDO Y YA NO ME VOY QUEJANDO (PARTE 4. JQUERY VALIDATION Y FINAL)", "date": "Tue, 24 Feb 2015 16:49:33 +0000", "content": "&lt;script src=\"my own\" title=\"parte 4 jquery validation\"&gt;\n<p style=\"text-align:justify;\">En el <a title=\"Parte 3. Validate.js\" href=\"http://wp.me/p5CTtO-2d\" target=\"_blank\">post anterior</a>, se us\u00f3 la librer\u00eda <a title=\"Validate.js\" href=\"https://rickharrison.github.io/validate.js/\" target=\"_blank\">Validate.js</a> para validar nuestro formulario del primer post. Esta vez voy a usar la librer\u00eda <a title=\"jQuery Validation\" href=\"http://jqueryvalidation.org/\" target=\"_blank\">jQuery Validation</a>, para ello necesitamos (obviamente) de <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a>, ya que esta librer\u00eda se usa como una extensi\u00f3n de este framework.</p>\n<!--more-->\n\n<p style=\"text-align:justify;\">Descargamos las librer\u00edas requeridas y las inclu\u00edmos como normalmente se har\u00eda, primero jQuery y luego jQuery Validation:</p>\n\n[code language=\"html\"]\n&lt;script src=&quot;jquery.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;jquery.validate.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;additional-methods.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;localization/messages_es.js&quot;&gt;&lt;/script&gt;\n[/code]\n\n<p style=\"text-align:justify;\">El archivo <em>additional-methods.js</em> contiene algunos m\u00e9todos agregados por otras personas que desarrollaron diferentes implementaciones de esta librer\u00eda, como por ejemplo el m\u00e9todo <code>digits</code> y el m\u00e9todo <code>lettersonly.</code></p>\n<p style=\"text-align:justify;\">El archivo <em>messages_es.js</em> contiene los mensajes localizados para el idioma espa\u00f1ol. Una vez inclu\u00eddos, se escriben las reglas de validaci\u00f3n respectivas para cada campo. Consulta los posts anteriores para ver los requerimientos de validaci\u00f3n:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\n$(document).ready(function() {\n\t$.validator.addMethod(&quot;texto&quot;, function(value, element) {\n\t\treturn /[a-z0-9\\s]+/ig.test(value);\n\t}, $.validator.format(&quot;Caracteres especiales no son permitidos&quot;));\n\n\t$('#formulario').validate({\n\t\trules: {\n\t\t\tnombre: {required: true, lettersonly: true},\n\t\t\tapellido: {required: true, lettersonly: true},\n\t\t\tdireccion: {required: true, texto: true},\n\t\t\tcorreo: {required: true, email: true},\n\t\t\tedad: {required: true, digits: true},\n\t\t\tsexo: &quot;required&quot;,\n\t\t\tcine: {require_from_group: [1, &quot;:checkbox&quot;]},\n\t\t\tradio: {require_from_group: [1, &quot;:checkbox&quot;]},\n\t\t\tteatro: {require_from_group: [1, &quot;:checkbox&quot;]}\n\t\t}\n\t});\n});\n[/code]\n\n<p style=\"text-align:justify;\">En el m\u00e9todo <code>texto</code> se verifica que el valor en el campo contenga s\u00f3lo letras, n\u00fameros y espacios, agregando un mensaje (en espa\u00f1ol) en caso de no ser v\u00e1lido. Por su parte, el m\u00e9todo <code>require_from_group</code> verifica por medio de un selector de jQuery, que se seleccionen al menos uno de los campos marcados por el selector (\u00a1dolor de cabeza resuelto :D !). Pueden ver m\u00e1s ejemplos de esta librer\u00eda en la documentaci\u00f3n de su p\u00e1gina oficial. ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "formularios", "html", "javascript", "javascripteando-ando", "tutorial", "validacion"], "title": "VALIDANDO ANDO Y NO ME VOY QUEJANDO (PARTE 2. JAVASCRIPT)", "date": "Fri, 20 Feb 2015 19:56:10 +0000", "content": "&lt;script src=\"my own\" title=\"parte 2 javascript\"&gt;\n<p style=\"text-align:justify;\">En el <a title=\"Parte 1. Javascript\" href=\"http://wp.me/p5CTtO-1r\" target=\"_blank\">post anterior</a>, hab\u00eda creado un ejemplo de formulario t\u00edpico que requer\u00eda ser validado. He aqu\u00ed el c\u00f3digo:</p>\n\n\n[code language=\"html\" collapse=\"true\"]\n&lt;h3&gt;Ingrese sus datos&lt;/h3&gt;\n&lt;form action=&quot;#&quot; name=&quot;datosPersonales&quot; id=&quot;formulario&quot; onsubmit=&quot;validarFormulario(this)&quot;&gt;\n\t&lt;label for=&quot;nombre&quot;&gt;Nombre:&lt;/label&gt;\n\t&lt;input type=&quot;text&quot; name=&quot;nombre&quot; id=&quot;nombre&quot;&gt;\n\t&lt;label for=&quot;apellido&quot;&gt;Apellido:&lt;/label&gt;\n\t&lt;input type=&quot;text&quot; name=&quot;apellido&quot; id=&quot;apellido&quot;&gt;\n\t&lt;label for=&quot;direccion&quot;&gt;Direcci\u00f3n:&lt;/label&gt;\n\t&lt;textarea style=&quot;resize: none;&quot; name=&quot;direccion&quot; id=&quot;direccion&quot;&gt;&lt;/textarea&gt;\n\t&lt;label for=&quot;correo&quot;&gt;Email: &lt;/label&gt;\n\t&lt;input type=&quot;email&quot; name=&quot;correo&quot; id=&quot;correo&quot;&gt;\n\t&lt;label for=&quot;edad&quot;&gt;Edad:&lt;/label&gt;\n\t&lt;input type=&quot;number&quot; name=&quot;edad&quot; id=&quot;edad&quot;&gt;\n\t&lt;label for=&quot;Sexo&quot;&gt;Sexo:&lt;/label&gt;\n\t&lt;input type=&quot;radio&quot; name=&quot;sexo&quot; id=&quot;sexo_M&quot; value=&quot;M&quot;&gt;Masculino\n\t&lt;input type=&quot;radio&quot; name=&quot;sexo&quot; id=&quot;sexo_F&quot; value=&quot;F&quot;&gt;Femenino\n\t&lt;label for=&quot;actividades&quot;&gt;Actividades:&lt;/label&gt;\n\t&lt;input type=&quot;checkbox&quot; name=&quot;cine&quot; id=&quot;cine&quot; value=&quot;cine&quot;&gt;Cine\n\t&lt;input type=&quot;checkbox&quot; name=&quot;teatro&quot; id=&quot;teatro&quot; value=&quot;teatro&quot;&gt;Teatro\n\t&lt;input type=&quot;checkbox&quot; name=&quot;radio&quot; id=&quot;radio&quot; value=&quot;radio&quot;&gt;Radio\n\t&lt;input type=&quot;submit&quot; value=&quot;Confirmar&quot; id=&quot;confirmar&quot;&gt;\n&lt;/form&gt;\n[/code]\n\n<p style=\"text-align:justify;\">No voy a enfocarme en el CSS, s\u00f3lo en las formas en las que pueden validarse los campos. Revisa el post se\u00f1alado al inicio.<!--more--></p>\n\n<h2>Manos a la ubre...</h2>\n<p style=\"text-align:justify;\">Podemos validar campo por campo usando <code>name</code>, <code>id</code> o <code>value</code> dentro del m\u00e9todo <code>validarFormulario()</code>, sin embargo, una forma f\u00e1cil ser\u00eda usar una peque\u00f1a rutina y usar los mensajes de error por defecto del navegador:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nfunction validarFormulario(form){\n\tfor (var i = 0; i &lt; form.length; i++) {\n\t\tif (!form[i].checkValidity()){\n\t\t\treturn;\n\t\t}\n\t}\n}\n[/code]\n\n<p style=\"text-align:justify;\">El m\u00e9todo <code>checkValidity()</code> tiene implementados una serie de constraints para validar la mayoria de los campos del tipo <code>&lt;input&gt;</code>. La idea es simple: se itera sobre toda la longitud del arreglo y se llama al m\u00e9todo antes mencionado, y \u00e9ste retornar\u00e1 <code>true</code> o <code>false</code> dependiendo del constraint asignado al elemento HTML como atributo. Puedes ver los constraints de validaci\u00f3n para cada elemento <code>&lt;input&gt;</code> <a title=\"MDN Validation-relate Attributes\" href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation#Validation-related_attributes\" target=\"_blank\">en este enlace</a>.</p>\nAqu\u00ed van algunos ejemplos puntuales del uso de estos constraints:\n<ul>\n\t<li>Un campo requerido (no puede estar vac\u00edo):\n<code>&lt;input type=\"text\" <strong>required</strong>&gt;</code></li>\n\t<li>Un campo que s\u00f3lo acepte caracteres alfanum\u00e9ricos y espacios:\n<code>&lt;input type=\"text\" <strong>pattern=\"\\w+\"</strong>&gt;</code> (usamos nuestras amigas, las <a title=\"MDN Regular Expressions\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\" target=\"_blank\">Expresiones Regulares</a> :)</li>\n\t<li>Un campo que acepte s\u00f3lo n\u00fameros entre 1 y 10:\n<code>&lt;input type=\"number\" <strong>pattern=\"\\d+\"</strong> <strong>min=\"1\" max=\"10\"</strong>&gt;</code></li>\n\t<li>Un campo de tipo <code>email</code> ya genera un constraint para validar emails:\n<code>&lt;input <strong>type=\"email\"</strong>&gt;</code></li>\n</ul>\n<p style=\"text-align:justify;\">Ahora bien, esta es una forma sencilla de validar campos, pero tal vez sea poco \u00f3ptima para la pr\u00e1ctica. Por desgracia, el m\u00e9todo <code>checkValidity()</code> <strong>NO</strong> afecta a los elementos de tipo <code>checkbox</code>, para ello podr\u00edamos tomar dichos elementos por separado e ir validando cada uno de ellos usando la referencia absoluta al nombre del formulario, al nombre del elemento y a la bandera <code>checked</code>, por ejemplo.</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nif (\t!document.datosPersonales.cine.checked &amp;&amp;\n\t!document.datosPersonales.teatro.checked &amp;&amp;\n\t!document.datosPersonales.radio.checked) {\n\t\talert('debe seleccionar al menos una opci\u00f3n');\n\t\treturn;\n\t}\n[/code]\n\n<p style=\"text-align:justify;\">Este c\u00f3digo ir\u00eda antes del bucle <code>for</code> que valida el resto de los <code>&lt;input&gt;</code>. Ahora bien, con tan s\u00f3lo ver el c\u00f3digo, se entiende que esta sea una de las razones por las que algunos (muchos) desarrolladores prefieren validar los campos de formulario con librer\u00edas externas, tales como jQuery Validation o validate.js, de las cuales hablar\u00e9 en un pr\u00f3ximo post.</p>\n<p style=\"text-align:justify;\">\u00a1Gracias por su paciencia! ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "formularios", "html", "javascript", "javascripteando-ando", "tutorial", "validacion"], "title": "VALIDANDO ANDO Y NO ME VOY QUEJANDO (PARTE 1. JAVASCRIPT)", "date": "Wed, 18 Feb 2015 20:42:39 +0000", "content": "&lt;script src=\"my own\" title=\"parte 1 validacion nativa\"&gt;\n<p style=\"text-align:justify;\">La validaci\u00f3n de campos de formulario, es un dolor de cabeza t\u00edpico en un desarrollo web (y en Javascript :( ). \u00bfQue tanto debe validarse o \"restringirse\" los datos que deben ser ingresados para \"asegurar\" una entrada limpia de datos? Aparte del sentido com\u00fan, existen diferentes criterios que depender\u00e1n de la velocidad de la carga de la p\u00e1gina, extensi\u00f3n de los campos del formulario, tipos de datos correspondientes en base de datos, seguridad de la aplicaci\u00f3n, y un sinn\u00famero de etc\u00e9teras...\n<!--more--></p>\n<p style=\"text-align:justify;\">Un formulario t\u00edpico de una p\u00e1gina de internet, es un formulario de registro como el que sigue (CSS m\u00e1s, CSS menos):</p>\n<a href=\"https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-140245.png\"><img class=\" size-medium wp-image-90 aligncenter\" src=\"https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-140245.png?w=300\" alt=\"formulario de registro ejemplo\" width=\"300\" height=\"289\" /></a>T\u00edpicas condiciones de ingreso de los datos:\n<ul>\n\t<li>Todos los campos son requeridos, es decir, no debe haber campos vac\u00edos o sin seleccionar.</li>\n\t<li>Los campos \"Nombre\" y \"Apellido\" s\u00f3lo deben aceptar letras y espacios en blanco (pues yo a\u00fan no he visto a nadie llamarse \"Juan12\").</li>\n\t<li>El campo \"Direcci\u00f3n\" debe aceptar letras, n\u00fameros y espacios.</li>\n\t<li>El campo \"Email\" debe ser un email v\u00e1lido.</li>\n\t<li>El campo \"Edad\" s\u00f3lo debe aceptar n\u00fameros (dolor de cabeza n\u00famero 1!!).</li>\n\t<li>En el campo \"Sexo\" debe seleccionarse un \u00edtem. (dolor de cabeza n\u00famero 2!).</li>\n\t<li>En el campo \"Actividades\" debe haber seleccionada al menos una opci\u00f3n (dolor de cabeza n\u00famero 3!).</li>\n\t<li>El bot\u00f3n \"Confirmar\" no debe dejar pasar datos a la aplicaci\u00f3n si algunas de las condiciones anteriores no se cumple.</li>\n</ul>\n<p style=\"text-align:justify;\">Adicionalmente, ning\u00fan campo debe aceptar caracteres especiales (como los corchetes angulares \"&gt;&lt;\" por seguridad). En este ejemplo, es \"sencillo\" saber las condiciones de ingreso de los datos, sin embargo existen cosas \"monstruosas\" y \"enfermizas\".</p>\n<p style=\"text-align:justify;\"><a href=\"https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-143437.png\"><img class=\"  wp-image-91 aligncenter\" src=\"https://jotaeseymas.files.wordpress.com/2015/02/captura-de-pantalla-de-2015-02-18-143437.png?w=300\" alt=\"Formularios como estos dan asco...\" width=\"463\" height=\"307\" /></a>Lamentablemente, hay mucha gente que no conoce que es <a title=\"Don't Repeat Yourself\" href=\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\" target=\"_blank\">DRY</a> o <a title=\"Keep It Simple, Stupid!\" href=\"https://en.wikipedia.org/wiki/KISS_principle\" target=\"_blank\">KISS</a>, y luego inician los problemas para ellos en etapas posteriores del desarrollo.</p>\n<p style=\"text-align:justify;\">Para que exista una validaci\u00f3n efectiva, en principio deber\u00eda estar del lado del cliente, acompa\u00f1ada (si la arquitectura del sistema lo permite) de una <a title=\"Remoci\u00f3n de caracteres no deseados\" href=\"https://en.wikipedia.org/wiki/Code_injection#Preventing_code_injection\" target=\"_blank\">sanitizaci\u00f3n</a> (ll\u00e1menlo paranoia, si lo desean) de los datos en los campos del formulario. En este post, intento utilizar los recursos nativos de Javascript y un poco de l\u00f3gica de programaci\u00f3n para validar este formulario del lado del cliente.</p>\n\n<h2>La API <em>forms</em> de Javascript</h2>\n<p style=\"text-align:justify;\">La API <a title=\"Document.forms\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/document.forms?redirectlocale=en-US&amp;redirectslug=DOM%2Fdocument.forms\" target=\"_blank\">forms</a> de Javascript indexa todos los formularios dentro de un documento HTML, en el orden en el que fueron codificados. As\u00ed, si existen dos o m\u00e1s formularios, el primero puede ser llamado por la sentencia <code>document.forms[0]</code>, y as\u00ed para el resto. Una vez ubicado el formulario a ser validado, pues se acceden a los atributos del campo para realizar las respectivas validaciones, he aqu\u00ed algunos de los m\u00e1s usados:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">El atributo <code>name</code> para identificar el nombre del campo dentro del objeto <code>document.forms[0]</code>.</li>\n\t<li style=\"text-align:justify;\">El atributo <code>id</code> para identificar un campo de forma \u00fanica, y acceder a \u00e9l via consultas de selectores (usando el m\u00e9todo <a title=\"Realiza desplazamientos transversales del DOM\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document.querySelector?redirectlocale=en-US&amp;redirectslug=DOM%2FDocument.querySelector\" target=\"_blank\">querySelector()</a>, por ejemplo).</li>\n\t<li style=\"text-align:justify;\">El atributo <code>value</code> para identificar el valor que posee un elemento en el momento en que \u00e9ste es instanciado.</li>\n</ul>\n<p style=\"text-align:justify;\">Existen adem\u00e1s ciertos atributos que permiten conocer el estado general de un elemento (si est\u00e1 seleccionado, si est\u00e1 vac\u00edo, si tiene el cursor encima o si tiene el foco de atenci\u00f3n). Volviendo al ejemplo anterior, se podr\u00eda mandar el formulario entero: <code>&lt;form action=\"POST\" name=\"datosPersonales\" id=\"formulario\" onsubmit=\"validarFormulario(this)\"&gt;</code>, referenciar el elemento por su nombre directamente: <code>document.datosPersonales</code>, obtenerlo mediante el identificador \u00fanico: <code>document.getElementById(\"formulario\")</code> o\u00a0realizar una consulta mediante selectores: <code>document.querySelector(\"#formulario\")</code>.</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Wed, 18 Feb 2015 18:33:47 +0000"}, {"tags": [], "date": "Wed, 18 Feb 2015 19:03:47 +0000"}, {"tags": [], "date": "Sun, 22 Feb 2015 17:18:50 +0000"}, {"tags": ["aprender", "datos", "formularios", "javascript", "javascripteando-ando", "tutorial", "validacion"], "title": "VALIDANDO ANDO Y NO ME VOY QUEJANDO (PARTE 3. VALIDATE.JS)", "date": "Sun, 22 Feb 2015 21:44:35 +0000", "content": "&lt;script src=\"my own\" title=\"parte 3 validate.js\"&gt;\n<p style=\"text-align:justify;\">Para que no se pierda la secuencia, en el post anterior hab\u00eda realizado las validaciones de <a title=\"Parte 2. Javascript\" href=\"http://wp.me/p5CTtO-1c\" target=\"_blank\">\u00e9ste</a> formulario con Javascript trocho y mocho. Siempre es bueno volver a lo b\u00e1sico, dicen que es bueno para el alma del programador, dicen...</p>\n<!--more-->\n<p style=\"text-align:justify;\">Suele suceder que hay una gran cantidad de librer\u00edas que validan formularios. v\u00eda Javascript o son \"wrappers\" o extensiones de otras librer\u00edas. Sin embargo, estas librer\u00edas casi siempre est\u00e1n atadas a un framework (como el caso de jQuery Validate, que de ella hablar\u00e9 en un pr\u00f3ximo post), pero existen algunas como la librer\u00eda <a title=\"Validate.js\" href=\"https://rickharrison.github.io/validate.js/\" target=\"_blank\">Validate.js</a> que esta bastante <a title=\"Ehm, si...\" href=\"http://www.urbandictionary.com/define.php?term=chido\" target=\"_blank\">chida</a> porque utiliza <a title=\"Javascript Object Notation\" href=\"http://json.org/\" target=\"_blank\">JSON</a> para escribir las validaciones y personalizarlas al m\u00e1ximo.</p>\n<p style=\"text-align:justify;\">Para el caso que cabe, en nuestro formulario, basta con descargar la librer\u00eda e incluirla en nuestra p\u00e1gina como se har\u00eda normalmente:</p>\n\n\n[code language=\"html\"]\n&lt;script src=&quot;validate.min.js&quot;&gt;&lt;/script&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Luego escribimos las validaciones de acuerdo a los par\u00e1metros de la librer\u00eda. Revisa los post anteriores para saber a que corresponden estas validaciones:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nvar validacion = new FormValidator('datosPersonales', [\n\t{ name: 'nombre', rules: 'required|alpha'},\n\t{ name: 'apellido', rules: 'required|alpha'},\n\t{ name: 'direccion', rules: 'required|callback_verificarDireccion'},\n\t{ name: 'correo', rules: 'required|valid_email'},\n\t{ name: 'edad', rules: 'required|integer'},\n\t{ name: 'sexo', rules: 'required'},\n\t{ name: 'cine', rules: 'callback_verificarActividades'},\n\t{ name: 'teatro', rules: 'callback_verificarActividades'},\n\t{ name: 'radio', rules: 'callback_verificarActividades'}\n], function(errors, event){\n\tif (errors.length &gt; 0){\n\t//muestra el primer mensaje de error encontrado\n\t\talert(errors[0].message);\n\t}\n});\nvalidacion.registerCallback('verificarDireccion', function(value){\n\treturn value.match(/[a-z 0-9]+/ig) ? true : false;\n});\nvalidacion.registerCallback('verificarActividades', function(value){\n\treturn (!document.datosPersonales.cine.checked &amp;&amp; !document.datosPersonales.teatro.checked &amp;&amp; !document.datosPersonales.radio.checked) ? false : true;\n});\nvalidacion.setMessage('verificarDireccion', 'Debe introducir s\u00f3lo letras, n\u00fameros o espacios en el campo %s');\nvalidacion.setMessage('verificarActividades', 'Debe seleccionar al menos una actividad');\n[/code]\n\n<p style=\"text-align:justify;\">Estas validaciones deben escribirse despu\u00e9s de la codificaci\u00f3n del formulario (etiqueta de cierre de formulario), ya que la librer\u00eda necesita saber que el formulario est\u00e1 cargado antes de validarlo, es bastante c\u00f3digo, pero afortunadamente se explica muy bien. Al constructor <code>FormValidator()</code> de la librer\u00eda se le pasan tres par\u00e1metros: el nombre del formulario (el valor en el atributo <code>name</code>), el objeto JSON con las validaciones a realizar y una funci\u00f3n an\u00f3nima que es la que va a manejar los errores si los hubiere, junto con el evento <code>onsubmit</code> (de forma obligatoria). La l\u00f3gica de dicha funci\u00f3n an\u00f3nima es bastante sencilla, puesto que la librer\u00eda tiene un arreglo llamado <code>errors</code> que almacena todos los errores encontrados en el proceso de validaci\u00f3n (uno por cada campo validado).</p>\n<p style=\"text-align:justify;\">Los m\u00e9todos <code>registerCallback()</code> y <code>setMessage()</code> se utilizan para manejar validaciones personalizadas y los mensajes que deben retornar dichas validaciones, respectivamente. Es necesario destacar que las funciones pasadas como par\u00e1metro, deben tener el prefijo <code>'callback_'</code> mas el nombre de la funci\u00f3n personalizada, y debe retornar <code>true</code> o <code>false</code> dependiendo de si la l\u00f3gica para validar el campo, cumple con lo programado o no.</p>\n<p style=\"text-align:justify;\">\u00bfRecuerdan el dolor de cabeza al validar los checkboxes? Pues ac\u00e1 se usa el m\u00e9todo <code>registerCallback()</code> para encapsular la l\u00f3gica de nuestra validaci\u00f3n realizada anteriormente. Esta librer\u00eda cuenta con mensajes predefinidos en ingl\u00e9s para cada regla, personalizables con el m\u00e9todo <code>setMessage()</code>. Para m\u00e1s informaci\u00f3n pueden consultar la documentaci\u00f3n de la librer\u00eda en su p\u00e1gina oficial.</p>\n\u00a1A validar se ha dicho! ;)\n&lt;/script&gt;"}, {"tags": ["aprender", "datos", "html", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "mozilla-firefox", "nuevo", "tutorial", "vanilla-js"], "title": "BASE DE DATOS \u00bfEN EL NAVEGADOR?. PARTE 1. LA TEORIA", "date": "Thu, 05 Mar 2015 14:57:33 +0000", "content": "&lt;script src=\"my own\" title=\"base de datos en el navegador. parte 1. la teoria\"&gt;\n<p style=\"text-align:justify;\">Como lo est\u00e1n leyendo, criaturitas del Se\u00f1or. Ya las cosas se est\u00e1n poniendo algo extra\u00f1as en el sub-mundo de los <a title=\"Relational DataBase Management System\" href=\"http://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_bases_de_datos_relacionales\" target=\"_blank\">RDBMS</a>. Claro, salvando las diferencias con Oracle (del cual no voy a hablar :P ) o PostgreSQL (mi segundo favorito, pero de \u00e9l tampoco voy a hablar :P ), una base de datos en el navegador tiene varios usos pr\u00e1cticos y mucha rapidez si se considera trabajar con peque\u00f1os vol\u00famenes de datos.<!--more--></p>\n<p style=\"text-align:justify;\">B\u00e1sicamente, existen 3 API's de navegador para bases de datos, pero yo voy a hablar de aquellas compatibles con <a title=\"...es el navegador que me gusta!\" href=\"https://www.mozilla.org/es-ES/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\"><a title=\"API para acceso a archivos locales\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/File\" target=\"_blank\">File</a>: Bueno, no necesariamente debe ser una base de datos esto de acceder a archivos, pero si la pensamos bien, puede resultar efectivo leer archivos tipo <code>clave:valor</code> como se hace en el est\u00e1ndar de facto <a title=\"Javascript Object Notation\" href=\"http://json.org\" target=\"_blank\">JSON</a>. Podr\u00eda funcionar, \u00bfno?</li>\n\t<li style=\"text-align:justify;\"><a title=\"API para almacenar peque\u00f1as cantidades de datos noSQL\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\" target=\"_blank\">localStorage</a>: Usado para almacenar peque\u00f1as cantidades de datos (&lt;= 5MB) de forma persistente, por ejemplo, en formularios en los que se hayan guardado datos o almacenar un historial de cookies o de peticiones desde la misma m\u00e1quina.</li>\n\t<li style=\"text-align:justify;\"><a title=\"API para almacenar grandes cantidades de datos\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\" target=\"_blank\">IndexedDB</a>: La diferencia con la API anterior, es que \u00e9sta posee mayor capacidad de almacenamiento en el navegador (de acuerdo a lo m\u00e1ximo permisado por el cliente), y lo mejor de esta API es que permite soporte a transacciones SQL, \u00a1genial!</li>\n</ol>\n<p style=\"text-align:justify;\">Existe otra API llamada <a title=\"est\u00e1ndar desactualizado por la W3C\" href=\"http://www.w3.org/TR/webdatabase/\" target=\"_blank\">WebSQL</a>, pero no quise incluirla pues se desconoce su estado de desarrollo actual y su compatibilidad con Firefox. A\u00fan as\u00ed, puedes consultar m\u00e1s informaci\u00f3n y ejemplos respecto a este tema en la p\u00e1gina de los chicos de <a title=\"Web API's en espa\u00f1ol\" href=\"https://developer.mozilla.org/es/docs/Web/Reference/API\" target=\"_blank\">MDN</a>. Ahora bien, la idea no es hablar <a title=\"mucha palabrer\u00eda...\" href=\"http://buscon.rae.es/drae/srv/search?val=ch%E1chara\" target=\"_blank\">ch\u00e1chara</a> sino dar ejemplos pr\u00e1cticos \u00bfno?</p>\n\n<blockquote>\n<p style=\"text-align:justify;\">Hay varias razones por las que puede ser recomendable utilizar el almacenamiento en el cliente. En primer lugar, el almacenamiento en el cliente permite que una aplicaci\u00f3n funcione cuando el usuario no est\u00e1 conectado, posiblemente sincronizando datos cuando vuelve a establecer conexi\u00f3n. En segundo lugar, aumenta el rendimiento, por lo que se puede mostrar una gran cantidad de datos en cuanto el usuario hace clic en el sitio en lugar de esperar a que vuelvan a descargarse. En tercer lugar, es un modelo de programaci\u00f3n m\u00e1s sencillo que no requiere infraestructura de servidor.\u00a0<strong><em>\n- HTML5rocks.com</em></strong></p>\n</blockquote>\n<p style=\"text-align:justify;\">Coincido completamente con el \u00faltimo punto de los chicos de <a title=\"HTML5 Rocks!\" href=\"http://html5rocks.com\" target=\"_blank\">HTML5rocks.com</a>. De hecho, podr\u00edamos tener un <a title=\"Create, Read, Update and Delete\" href=\"http://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" target=\"_blank\">CRUD</a> completo contra el navegador para ilustrar esta afirmaci\u00f3n (aunque no sea <strong>pr\u00e1ctico en la pr\u00e1ctica</strong>, valga la \"rebuznancia\", pero no m\u00e1s por inventar :P ). Sin embargo, los chicos tambi\u00e9n hacen una alerta importante sobre estas API's.</p>\n\n<blockquote>\n<p style=\"text-align:justify;\">Por supuesto, los datos son m\u00e1s vulnerables y el usuario no puede acceder a ellos desde varios clientes, por lo que solo se debe utilizar para datos que no sean muy importantes, concretamente en versiones almacenadas en cach\u00e9 de datos espec\u00edficos que tambi\u00e9n se encuentren \"en la nube\".\n<strong><em>- HTML5rocks.com</em></strong></p>\n</blockquote>\n<p style=\"text-align:justify;\">A pesar de esta recomendaci\u00f3n de seguridad, las API's de almacenamiento local siguen teniendo una importante utilidad pr\u00e1ctica, por ejemplo en el caso de aplicaciones que usan <a title=\"OpenGL en el navegador\" href=\"http://es.wikipedia.org/wiki/WebGL\" target=\"_blank\">WebGL</a>, simulaciones en 3D, renderizaci\u00f3n de gr\u00e1ficos <a title=\"API Canvas para HTML5\" href=\"https://developer.mozilla.org/es/docs/Web/HTML/Canvas\" target=\"_blank\">HTML5</a><a title=\"API Canvas para HTML5\" href=\"https://developer.mozilla.org/es/docs/Web/HTML/Canvas\" target=\"_blank\">Canvas</a> o de gr\u00e1ficos\u00a0vectoriales tipo <a title=\"...est\u00e1 muy interesante!\" href=\"http://fabricjs.com/\" target=\"_blank\">SVG-to-Canvas</a> (del cual har\u00e9 un post m\u00e1s adelante). \u00a1Dios mio, cuantas ideas! :D .</p>\n<p style=\"text-align:justify;\">Existen en el Gato-Pulpo diferentes \"wrappers\" que soportan API's de almacenamiento. Particularmente me decant\u00e9 por uno llamado <a title=\"Dexie.js\" href=\"http://www.dexie.org/\" target=\"_blank\">Dexie.js</a> que es bastante interesante, permite soporte a IndexedDB y tiene una sintaxis bastante sencilla. A efectos de complementar este post, el siguiente ser\u00e1 con ejemplos de uso de esta librer\u00eda, construyendo un CRUD completo para datos en el navegador.</p>\n<p style=\"text-align:justify;\">\u00a1A programar se ha dicho! ;)</p>\n&lt;/script&gt;"}, {"tags": ["datos", "formato", "free", "javascript", "javascripteando-ando", "localizacion", "tipos"], "title": "MANIPULANDO FECHAS, LA VIA F\u00c1CIL", "date": "Mon, 30 Mar 2015 16:29:47 +0000", "content": "&lt;script src=\"my own\" title=\"manipulando fechas la via facil\"&gt;\n<p style=\"text-align:justify;\">Tanto en Javascript como en otros lenguajes, siempre ha sido un \"karma\" (al menos para m\u00ed \u00ac\u00ac') ser capaz de manipular fechas y horas de forma efectiva. Que pueda sumar horas y minutos, saber si un a\u00f1o es bisiesto, o la cl\u00e1sica de \"calcular la edad de una persona con su fecha de nacimiento\". \u00bfa que les suena, verdad?</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a title=\"Moment.js\" href=\"http://momentjs.com/\" target=\"_blank\">Moment.js</a> es una librer\u00eda que hace este \"karma\" m\u00e1s llevadero, y simplifica el <span title=\"transformaci\u00f3n\">parseo</span> de fechas a su m\u00ednima expresi\u00f3n. No s\u00f3lo es muy \u00f9til para realizar todo lo arriba descrito, sino que adem\u00e1s proporciona la interfaz (con algo de magia vud\u00fa y <a title=\"jQuery 1.11\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a>) para hacer cosas tan chidas como el reloj blanco que muestra en su p\u00e1gina web inicial.</p>\n<p style=\"text-align:justify;\">Se pueden descargar cualquiera de las dos versiones: la minificada que pesa s\u00f3lo 11KB o la minificada con localizaciones o idiomas que pesa 42KB (o pueden ser tan <a title=\"Ehm, si...\" href=\"http://www.oxforddictionaries.com/translate/spanish-english/ladillado\" target=\"_blank\">ladillados</a> como yo y hacer copy-paste de la parte local en espa\u00f1ol e incluirla :D ). Usarla nunca hab\u00eda sido tan f\u00e1cil:</p>\n\n\n[code language=\"html\"]\n&lt;script src=&quot;moment.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;moment-es.min.js&quot;&gt;&lt;/script&gt;\n[/code]\n\n<p style=\"text-align:justify;\">El archivo moment-es.min.js con la localizaci\u00f3n en Espa\u00f1ol est\u00e1 en el <a title=\"Mis Gists :D\" href=\"https://gist.github.com/ChinuxParibus/9c1a0643bfa0fc86f520\" target=\"_blank\">Gato-Pulpo</a>. A continuaci\u00f3n algunos ejemplos:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">Saber si un a\u00f1o es bisiesto:</li>\n</ul>\n\n[code language=\"javascript\"]\nconsole.log(moment().isLeapYear()); //&quot;false&quot;\nconsole.log(moment([2000]).isLeapYear()); //&quot;true&quot;\n[/code]\n\n<ul>\n\t<li style=\"text-align:justify;\">Sumar horas y minutos (en formato humano):</li>\n</ul>\n\n[code language=\"javascript\"]\n//crea una duraci\u00f3n espec\u00edfica\nvar lapso = moment.duration({hours: 1, minutes: 30});\n//a\u00f1adir el tiempo y mostrarlo en formato entendible\nconsole.log(moment().add(lapso).format('hh:mm:ssA'));\n[/code]\n\n<ul>\n\t<li style=\"text-align:justify;\">Saber la edad de la persona con su fecha de nacimiento:</li>\n</ul>\n\n[code language=\"javascript\"]\n//diferencia de edad desde la fecha dada hasta hoy y localizada\nconsole.log(moment(&quot;1986-06-30&quot;).fromNow(&quot;L&quot;)); //&quot;29 a\u00f1os&quot;\n[/code]\n\nEstoy viejo :'(\n<p style=\"text-align:justify;\">El potencial de esta librer\u00eda es muy \u00fatil, ya que contrarresta una de las debilidades de Javascript que es precisamente el formato y parseo de fechas, siempre llegando a tiempo ;) .</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "curioscriptades", "datos", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "mozilla-firefox", "nuevo", "tecnologia"], "title": "PROMESAS... PROMESAS...", "date": "Sun, 08 Mar 2015 00:23:08 +0000", "content": "&lt;script src=\"other pages\" title=\"promesas promesas\"&gt;\n\n[youtube https://www.youtube.com/watch?v=llDikI2hTtk]\n\nNo, este post no va de dubstep ni del video de arriba (\u00bfpero si que <a title=\"Ehm, si...\" href=\"http://que-significa.com/significado.php?termino=mola\" target=\"_blank\">mola</a>, no? ;) )<!--more-->\n<h2>\u00bfQu\u00e9 es eso de las \"Promesas\"?</h2>\n<p style=\"text-align:justify;\">Una <em>promesa </em>es un encapsulamiento de una operaci\u00f3n invocada de forma as\u00edncrona. Para ilustrar esto, digamos que se requiere hacer la siguiente operaci\u00f3n:</p>\n\n\n[code language=\"javascript\"]\nvar arreglo = [...]; //10000 elementos\nfor (var i = 0; i &lt; arreglo.length; i++) {\n\t//hacer otras cosas con el arreglo\n\tif (i == 4000){\n\t\treturn i;\n\t}\n};\n\t//...\n\t//hacer m\u00e1s cosas\nvar otraFuncion = function(i){\n\t//hacer otras cosas con i\n};\n\notraFuncion(i);\n[/code]\n\n<p style=\"text-align:justify;\">Tal vez este ejemplo sea un poco rebuscado pero es para aclarar el comportamiento de Javascript cuando la mayor parte del tiempo se programa de forma s\u00edncrona. B\u00e1sicamente, lo que sucede en este caso, es que la funci\u00f3n <code>otraFuncion</code> no va a ejecutarse hasta que no se haya terminado el ciclo <code>for.</code> En este caso, se requiere recorrer el arreglo por lo menos unas 4000 veces, lo cual en t\u00e9rminos de CPU, representa un consumo importante y un retraso en la ejecuci\u00f3n del programa.</p>\n<p style=\"text-align:justify;\">Afortunadamente, Javascript cuenta con los <a title=\"Llamadas de retorno\" href=\"https://en.wikipedia.org/wiki/Callback_%28computer_programming%29\" target=\"_blank\">callbacks</a>, cuya funcionalidad principal consiste en ser pasados como argumentos a funciones del flujo principal del programa. Mientras que en el primer caso, <code>otraFuncion</code> espera a que el ciclo <code>for</code> sea ejecutado para llamarse, en el mecanismo de callbacks, la espera no es necesaria para el flujo principal del programa:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nvar arreglo = [...]; //10000 elementos\nvar cicloFor = function(arreglo){\n\tfor (var i = 0; i &lt; arreglo.length; i++) {\n\t\t//hacer otras cosas con el arreglo\n\t\tif (i == 4000){\n\t\t\treturn i;\n\t\t}\n\t};\n};\nvar otraFuncion = function(i){\n\t//hacer otras cosas con el indice y ejecutarla\n};\nvar miPrograma = function(cicloFor, otraFuncion){\n\tvar indice = cicloFor();\n\tif(indice != 4000) {\n\t\totraFuncion();\n\t} else {\n\t\t//hacer algo m\u00e1s...\n\t}\n};\n\nmiPrograma(cicloFor, otraFuncion);\n[/code]\n\n<p style=\"text-align:justify;\">El programa se ejecutar\u00e1 ligeramente m\u00e1s r\u00e1pido que el primer caso, ya que no hay que esperar a que el ciclo <code>for</code> termine. Adicionalmente se encapsula la l\u00f3gica de la aplicaci\u00f3n en una sola funcion y no en dos. Sin embargo, este \"acercamiento\" presenta al menos tres inconvenientes:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">Funciones como par\u00e1metros, es algo que generalmente causa confusi\u00f3n a los programadores novatos (como yo :P ) en Javascript.</li>\n\t<li style=\"text-align:justify;\">La l\u00f3gica de programaci\u00f3n no siempre puede ser encapsulada de este modo (a veces es obligatorio trabajar de forma s\u00edncrona.</li>\n\t<li style=\"text-align:justify;\">Es muy probable que algunos errores generados por los callbacks no sean capturados.</li>\n</ul>\n<p style=\"text-align:justify;\">Personalmente, cuando escrib\u00ed este ejemplo, se me hizo bastante complicado presentar un ejemplo claro en el que pudieran trabajar, sin mencionar que es seguro que este c\u00f3digo arroje errores impredecibles, bien sea no capturar los errores en el flujo \"secundario\" que generan los callbacks o por la l\u00f3gica de la aplicaci\u00f3n en s\u00ed. Para esto son las promesas.</p>\n\n<h2 style=\"text-align:justify;\">\u00bfQu\u00e9 facilita las \"Promesas\"?</h2>\n<p style=\"text-align:justify;\">Las \"promesas\" pueden ser encadenadas a cualquier objeto en Javascript, permiten manejo as\u00edncrono de errores y una sintaxis m\u00e1s limpia en cuanto a llamadas as\u00edncronas de funciones se refiere. Digamos que una funci\u00f3n retorna una Promesa (en ingl\u00e9s, <code>Promise</code>) cuando el objeto requiere de un flujo alternativo, por ejemplo, en el caso de un flujo condicional t\u00edpico:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nif(condicion_1){\n\t//ejecutar una funcion o algo\n} else if(condicion_2){\n\t//hacer otra cosa\n} else if(condicion_3){\n\t//ejecutar otra funcion\n} else if (...){\n\t//...\n} else if (condicion_N){\n\t//hacer algo m\u00e1s\n}\n[/code]\n\n<p style=\"text-align:justify;\">Este flujo condicional puede ser reescrito como Promesas:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nreturn new Promise(\n\u00a0\u00a0 \u00a0function(){\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//callback que encapsula la Promesa\n\u00a0\u00a0 \u00a0}\n).then(\n\u00a0\u00a0 \u00a0function(valores){\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//comportamiento si callback es exitoso\n\u00a0\u00a0 \u00a0},\n\u00a0\u00a0 \u00a0function(err){\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//comportamiento si callback es err\u00f3neo\n\u00a0\u00a0 \u00a0}\n).then(\n\u00a0\u00a0 \u00a0//otros comportamientos alternativos...\n);\n[/code]\n\n<h2>\u00bfY c\u00f3mo se comporta una \"Promesa\"?</h2>\nUn objeto de tipo <code>Promise</code> tiene tres estados b\u00e1sicos:\n<ul>\n\t<li style=\"text-align:justify;\">Se dice que\u00a0<code></code>est\u00e1 <code>pending</code> (<em>pendiente</em>) si el objeto no ha utilizado ninguno de los callbacks anclados a si mismo. Este es el estado inicial de todo objeto <code>Promise</code>.</li>\n\t<li style=\"text-align:justify;\">Se dice que est\u00e1 <code>fullfilled</code> cuando el objeto utiliz\u00f3 el callback que encapsula, e informa que dicho callback fue realizado de manera exitosa.</li>\n\t<li style=\"text-align:justify;\">Se dice que est\u00e1 <code>rejected</code> cuando el objeto no utiliz\u00f3 el callback que encapsula, e informa que dicho callback gener\u00f3 un error.</li>\n</ul>\n<p style=\"text-align:justify;\">Una vez que el objeto inform\u00f3 que el callback fue utilizado (sea la llamada exitosa o err\u00f3nea), no se puede cambiar su estado, es decir, debe generarse un nuevo objeto <code>Promise</code> si se necesita. Un ejemplo m\u00e1s claro de la utilidad de una Promesa, es cuando se poseen llamadas <a title=\"Asyncronous Javascript and XML\" href=\"https://en.wikipedia.org/wiki/Ajax_%28programming%29\" target=\"_blank\">AJAX</a> a rutas de recursos:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nget('data.json').then(function(response) {\n\tconsole.log(&quot;Success!&quot;, response); //\u00c9xito!\n}, function(error) {\n\tconsole.log(&quot;Failed!&quot;, error); //Error!\n});\n[/code]\n\n<p style=\"text-align:justify;\">Puedes ver m\u00e1s informaci\u00f3n sobre la API Promises de Javascript <a title=\"MDN: Promises\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\">aqu\u00ed</a>, o ver un tuto bien <a title=\"Ehm, si...\" href=\"http://www.spanish-only.com/2008/11/spanish-word-day-chvere/\" target=\"_blank\">ch\u00e9vere</a> <a title=\"HTML5 Rocks!\" href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\" target=\"_blank\">aqu\u00ed</a>.</p>\n<p style=\"text-align:justify;\">Por lo pronto, y de mi parte, <strong>prometo usar las promesas</strong> (valga la \"rebuznancia\" :P ) en alguna parte de los tutos de mi blog... M\u00e1s adelante ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "curioscriptades", "datos", "javascript", "lenguaje-de-programacion", "nuevo", "tecnologia", "vanilla-js"], "title": "LA INCOMPRENDIDA CONSOLA DE JAVASCRIPT", "date": "Fri, 27 Feb 2015 15:18:48 +0000", "content": "&lt;script src=\"other pages\" title=\"la incomprendida consola de javascript\"&gt;\n<p style=\"text-align:justify;\">Es extra\u00f1o que siendo desarrolladores, la opci\u00f3n de <a title=\"...en todas sus formas verbales\" href=\"https://en.wikipedia.org/wiki/Debugging\" target=\"_blank\">debug</a> m\u00e1s com\u00fan sea la de colocar un <code>alert()</code> o un <code>return</code> en contextos donde requerimos el resultado de una funci\u00f3n determinada.</p>\nHay cada cosa en este mundo en la que uno no tiene ni idea...<!--more-->\n<p style=\"text-align:justify;\">Aunque a veces, y siendo exquisitos, se suele usar el <code>console.log()</code> para saber que emite el c\u00f3digo Javascript en un determinado contexto, lo cual t\u00e9cnicamente (y tambi\u00e9n a nivel de debug) est\u00e1 bien, pero en realidad el objeto <code>console</code> de Javascript posee m\u00e1s elementos de los que se conocen normalmente. Por ejemplo, los hermanos de <code>console.log()</code>, <code>console.info()</code>, <code>console.warn()</code> y <code>console.error()</code>.</p>\n<p style=\"text-align:justify;\">Los ejemplos a continuaci\u00f3n, son para ejecutarse l\u00ednea por l\u00ednea en la consola de Javascript (la cual se muestra en cualquier navegador excepto IE como siempre, presionando F12 o Ctrl+Shitf+I si tienes <em>Firefox</em> con la extensi\u00f3n <em>Firebug</em> o <em>Firefox for Developers</em>).</p>\n\n<h2>Sustituci\u00f3n de cadenas</h2>\n<p style=\"text-align:justify;\">Se puede formatear el c\u00f3digo Javascript como si una funci\u00f3n <code>printf()</code> se tratara:</p>\n\n\n[code language=\"javascript\"]\nvar intentos = 3, cuenta = micuenta@cuenta.com;\nconsole.log('Tiene %d intentos para confirmar la cuenta %s', intentos, cuenta);\n[/code]\n\n<code>%s</code> para cadenas, <code>%d</code> o <code>%i</code> para enteros, <code>%o</code> para objetos Javascript y <code>%f</code> para valores decimales.\n<h2>Agrupamiento de mensajes</h2>\n<p style=\"text-align:justify;\">Se pueden agrupar los mensajes de la consola con el m\u00e9todo <code>console.group()</code>, incluso estos grupos se pueden anidar. El \"grupo\" de mensajes saldr\u00e1 como t\u00edtulo en la consola:</p>\n\n\n[code language=\"javascript\"]\nfor(var i = 1; i &lt; 3; i++){\n\tconsole.group('Grupo '+i);\n\tfor(var j = 1; j &lt; 5; j++){\n\t\tconsole.log('Mensaje '+j+' del grupo '+i);\n\t}\n\tconsole.groupEnd();\n}\n[/code]\n\n<p style=\"text-align:justify;\">Si la informaci\u00f3n que se debe mostrar es muy extensa, tambi\u00e9n puedes colapsar los mensajes dentro del t\u00edtulo con el m\u00e9todo <code>console.groupCollapsed().</code></p>\n\n<h2>Tablas \u00bf\u00a1en la consola!?</h2>\n<p style=\"text-align:justify;\">Es posible imprimir datos en la consola de Javascript de forma tabular. B\u00e1sicamente esta funcionalidad depende del navegador y de los datos que se deseen imprimir, y es muy \u00fatil cuando se desean imprimir arrays de objetos Javascript:</p>\n\n\n[code language=\"javascript\"]\nvar Mascota = function(nombre, edad, esPerro){\n\tthis.nombre = nombre;\n\tthis.edad = edad;\n\tthis.esPerro = esPerro;\n};\nvar lista_mascotas = [\n\tnew Mascota('Pepe', 2, true),\n\tnew Mascota('Zato', 1, false),\n\tnew Mascota('Loco', 3, false),\n\tnew Mascota('Mino', 1, true)\n];\nconsole.table(lista_mascotas, ['nombre', 'edad', 'esPerro']);\n[/code]\n\n<p style=\"text-align:justify;\">El navegador decide que array va a formatearse como tabla, bas\u00e1ndose en los datos dentro del array, por lo que probablemente la sentencia <code>console.table([1, 2, 3])</code> no producir\u00e1 ning\u00fan efecto :P .</p>\n<p style=\"text-align:justify;\">Puedes ver m\u00e1s ejemplos de usos desconocidos de la consola de Javascript en <a title=\"...est\u00e1 muy interesante!\" href=\"https://medium.com/@c2c/javascript-console-lesser-known-features-9fe3852ce48b\" target=\"_blank\">este enlace</a>. Particularmente me gust\u00f3 una parte de <a title=\"An\u00e1lisis de Rendimiento de Software\" href=\"http://es.wikipedia.org/wiki/An%C3%A1lisis_de_rendimiento_de_software\" target=\"_blank\">Profiling</a> y <a title=\"Pruebas unitarias\" href=\"http://es.wikipedia.org/wiki/Prueba_unitaria\" target=\"_blank\">Unit Testing</a> b\u00e1sico que puede realizarse en la consola de Javascript. Lo dicho, no lo sab\u00eda ;)</p>\n&lt;/script&gt;"}, {"tags": ["angularjs", "aprender", "datos", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "libreria-angular", "nuevo", "tutorial"], "title": "LIBRERIA ANGULAR. PARTE 0. ANGULAR 101", "date": "Wed, 04 Mar 2015 14:38:50 +0000", "content": "&lt;script src=\"my own\" title=\"angular 101\"&gt;\n<p style=\"text-align:justify;\">Os saludo, Criaturitas del Se\u00f1or, esperando que no se hayan molestado por no continuar el post el mi\u00e9rcoles pasado (andaba de fuerte <a title=\"trabajo\" href=\"etimologias.dechile.net/?laburo\" target=\"_blank\">laburo</a>), de antemano me disculpo por la tardanza, pero vamos que lo bueno se hace esperar, \u00bfno? :P</p>\n<!--more-->\n<h2>Con algo hay que empezar</h2>\n<p style=\"text-align:justify;\"><a title=\"Angular.js\" href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a> es un framework orientado al <a title=\"desarrollo web del lado del cliente\" href=\"http://es.wikipedia.org/wiki/Front-end_y_back-end\" target=\"_blank\">front-end</a> que posee componentes para contextualizar las p\u00e1ginas web de forma sem\u00e1ntica. Es decir, que este framework es capaz de permitirnos escribir nuestras p\u00e1ginas HTML con un significado propio:</p>\n\n\n[code language=\"html\"]\n&lt;libreria&gt;\n\t&lt;galeria seleccionable=&quot;true&quot; slider=&quot;false&quot;&gt;\n\t\t&lt;libro nombre=&quot;Lo que el viento se llev\u00f3&quot; precio=&quot;Bs. 240&quot; comprable=&quot;true&quot;&gt;&lt;/libro&gt;\n\t\t&lt;libro nombre=&quot;Riesgo Calculado&quot; precio=&quot;Bs. 210&quot; comprable=&quot;false&quot;&gt;&lt;/libro&gt;\n\t\t&lt;libro nombre=&quot;Desarrollo con Angular.js&quot; precio=&quot;Bs. 310&quot; comprable=&quot;true&quot;&gt;&lt;/libro&gt;\n\t&lt;/galeria&gt;\n&lt;/libreria&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Antes de llegar a este nivel de especificidad, requerimos aprender algunos conceptos b\u00e1sicos para ir por partes, como <a title=\"Por partes...\" href=\"http://es.wikipedia.org/wiki/Jack_el_Destripador\" target=\"_blank\">Jack el Destripador</a>, que es de lo que va este primer post, pero el objetivo principal es \u00e9ste.</p>\n\n<h2>Arquitectura</h2>\n<p style=\"text-align:justify;\"><a title=\"Angular.js\" href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a> es un framework con una arquitectura similar a <a href=\"http://es.wikipedia.org/wiki/Modelo%E2%80%93vista%E2%80%93controlador\">MVC</a> (Modelo-Vista-Controlador) pero, \u00bfs\u00f3lo en la vista? Vi\u00e9ndolo as\u00ed, es verdad que deber\u00eda ser definido con otras caracter\u00edsticas.</p>\n<p style=\"text-align:justify;\">Hablando en t\u00e9rminos de generalizaci\u00f3n de la arquitectura, un <strong>modelo</strong> representa una abstracci\u00f3n de los datos de la aplicaci\u00f3n, que para efectos de la interfaz bien podr\u00eda representar un campo de formulario, mientras que una <strong>vista</strong> contiene la presentaci\u00f3n al usuario final, pero en este caso, pudieramos decir que no existe. Por otro lado, un <strong>controlador</strong> representa el encapsulamiento de un comportamiento determinado de los datos respecto al sistema en general, que en nuestro caso puede representar un <a title=\"'escuchador' de un evento\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventListener\" target=\"_blank\">listener</a>.</p>\n\n\n[caption id=\"attachment_173\" align=\"aligncenter\" width=\"244\"]<img class=\"wp-image-173 size-full\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-03-151718.png\" alt=\"\" width=\"244\" height=\"187\" /> <span style=\"font-size:13px;font-weight:bold;text-align:center;\">Separa la l\u00f3gica de presentaci\u00f3n con la l\u00f3gica de los datos</span>[/caption]\n<p style=\"text-align:justify;\">Dicho esto, se puede dejar en t\u00e9rminos generales que entre el modelo y la vista puede existir cualquier tipo de interacci\u00f3n (no necesariamente que defina o encapsule comportamientos). De ese modo podemos definir un tipo de arquitectura MV* o <a title=\"Modelo-Vista-Cualquier Cosa\" href=\"http://blog.orbitone.com/post/Angularjs-the-Model-View-Whatever-javascript-framework1\" target=\"_blank\">MVW</a> (acr\u00f3nimo en ingl\u00e9s para Model-View-Whatever), en la que los datos modifican interfaces y las interacciones modifican datos. De este comportamiento se hablar\u00e1 m\u00e1s adelante.</p>\n\n<h2>Componentes</h2>\n<p style=\"text-align:justify;\">Angular.js cuenta con <strong>Directivas</strong>, <strong>Controladores</strong>, <strong>M\u00f3dulos</strong>, <strong>F\u00e1bricas</strong> y <strong>Servicios</strong>, <strong>Filtros</strong> y otras <strong>Utilidades Globales</strong> que complementan la funcionalidad de este framework para definir comportamientos, interacciones, validaciones y todo lo relacionado con interfaces de p\u00e1ginas web. A continuaci\u00f3n se explican en forma sencilla los conceptos involucrados con estos componentes:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><span style=\"color:#7cbbbb;font-weight:bold;\">M\u00f3dulo</span>: La pieza central de Angular.js. (Casi) Todo en Angular es un m\u00f3dulo o un encapsulamiento de un determinado comportamiento, s\u00f3lo que se utiliza en contextos distintos a lo largo de la aplicaci\u00f3n.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#7cbbbb;font-weight:bold;\">Directivas</span>: Son m\u00f3dulos de Angular.js orientados a establecer patrones de comportamiento dentro de las etiquetas HTML.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#7cbbbb;font-weight:bold;\">Controladores</span>: Un controlador es un m\u00f3dulo que act\u00faa como supervisor del comportamiento entre los diferentes modelos o componentes de la aplicaci\u00f3n.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#7cbbbb;font-weight:bold;\">F\u00e1bricas</span>: Son m\u00f3dulos que sirven datos comunes a componentes espec\u00edficos de la aplicaci\u00f3n (requerida por ejemplo para el paso de par\u00e1metros entre controladores).</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#7cbbbb;font-weight:bold;\">Servicios</span>: Son m\u00f3dulos que sirven datos comunes a toda la aplicaci\u00f3n (generalmente requerido cuando se desea obtener datos via <a href=\"http://es.wikipedia.org/wiki/Front-end_y_back-end\">back-end</a>).</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#7cbbbb;font-weight:bold;\">Filtros</span>: Son m\u00f3dulos que se encargan de dar formato a los datos presentados en la aplicaci\u00f3n, tales como: fechas, cadenas de texto, n\u00fameros decimales entre otros.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#7cbbbb;font-weight:bold;\">Utilidades Globales</span>: Consta de una API de m\u00f3dulos con utilidades para diferentes tipos de estructuras de datos (validaciones, iteraciones, mapeo no-relacional, algoritmos map-reduce, animaciones, etc.)</li>\n</ul>\n<p style=\"text-align:justify;\">Existen otros conceptos que ser\u00e1n tratados en la medida que se vaya desarrollando la aplicaci\u00f3n. \u00a1Nos vemos pronto en el pr\u00f3ximo post! ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "curioscriptades", "drag", "drop", "javascript", "mozilla-firefox", "tutorial", "vanilla-js"], "title": "INTERACCIONES EN ELEMENTOS JAVASCRIPT", "date": "Tue, 31 Mar 2015 16:49:55 +0000", "content": "&lt;script src=\"my own\" title=\"interacciones en elementos javascript\"&gt;\n<p style=\"text-align:justify;\">En el dise\u00f1o front-end, se busca que exista la mayor cantidad de interacciones entre el usuario y la interfaz para garantizar una experiencia de usuario satisfactoria, sin sacrificar funcionalidades (<em>look and feel</em>, le dicen).<!--more--></p>\n<p style=\"text-align:justify;\">Con \"experiencias de usuario\" (o <a title=\"Experiencia de Usuario\" href=\"https://en.wikipedia.org/wiki/User_experience\" target=\"_blank\">UX</a> por <em>User Experience</em>) quiero decir que existan interacciones consistentes, o elementos de \u00e9nfasis entre los elementos que se desarrollan, as\u00ed como una armon\u00eda necesaria entre todos los elementos. El color, el contraste, las sombras y las formas son importantes, pero el dinamismo y las interacciones de los elementos tambi\u00e9n deben serlo.</p>\n<p style=\"text-align:justify;\"><a title=\"Interact.js\" href=\"http://interactjs.io/\" target=\"_blank\">Interact.js</a> es una librer\u00eda Javascript que permite (a golpe de Javascript trocho y mocho y un poco de magia vud\u00fa :P ) dise\u00f1ar interacciones entre los elementos gr\u00e1ficos de una p\u00e1gina web y algunos \"gestos\" t\u00e1ctiles para dise\u00f1o responsivo sin necesidad de recurrir a otros recursos o frameworks como <a title=\"jQuery User Interfaces\" href=\"http://jqueryui.com/\" target=\"_blank\">jQuery UI</a>, eliminando as\u00ed las dependencias.</p>\n<p style=\"text-align:justify;\">Pueden ver los eventos, elementos y utilidades con ejemplos pr\u00e1cticos en la p\u00e1gina de la librer\u00eda. Est\u00e1 interesante, de no ser porque se me hace un tanto complejo todo ese rollo de estar pendientes de las coordenadas, que vamos a ver, algunas veces no estamos para poner muchos periquitos y queremos que los programas nos hagan el caf\u00e9 mientras hacemos otras cosas...</p>\n<p style=\"text-align:justify;\">Pero la realidad supera a la ficci\u00f3n. Tendr\u00edas que interactuar con ella ;)</p>\n&lt;/script&gt;"}, {"tags": ["adam-schwartz", "aprender", "curioscriptades", "datos", "free", "javascript", "jquery", "mozilla-firefox", "tecnologia", "vanilla-js", "zack-bloom"], "title": "TAL VEZ NO NECESITES JQUERY", "date": "Fri, 27 Mar 2015 16:29:00 +0000", "content": "<p style=\"text-align:justify;\">&lt;script src=\"other pages\" title=\"tal vez no necesites jquery\"&gt;</p>\n<p style=\"text-align:justify;\">En [casi] todos mis posts, siempre resalto que ninguna tecnolog\u00eda es la <a title=\"Panacea Universal\" href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">panacea</a> que va a resolver todos los problemas o retos que se presenten en el desarrollo de aplicaciones. Independientemente de las habilidades, recursos, flujo de trabajo y equipo que utilices, lo b\u00e1sico, siempre ser\u00e1 lo m\u00e1s simple (y tal vez lo mejor :) ).</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">La librer\u00eda <a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a>, se ha vuelto [casi] un est\u00e1ndar de referencia (y de facto \u00ac\u00ac') en el desarrollo de aplicaciones web. Dada la \"facilidad\" de sus sintaxis y la \"naturalidad\" con la que se puede manipular el <a title=\"Document Object Model\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\" target=\"_blank\">DOM</a> en un documento HTML, est\u00e1 siendo utilizado por millones de personas alrededor del mundo.</p>\n<p style=\"text-align:justify;\">No conforme con eso, jQuery cuenta con una amplia gama de tecnolog\u00edas asociadas que se integran a esta librer\u00eda, tales como <a title=\"jQuery User Interfaces\" href=\"http://jqueryui.com/\" target=\"_blank\">jQuery UI</a>, <a title=\"QUnit Testing JS\" href=\"http://qunitjs.com/\" target=\"_blank\">QUnit</a>, <a title=\"Bootstrap 3\" href=\"http://getbootstrap.com\" target=\"_blank\">Bootstrap</a> y m\u00e1s recientemente <a title=\"Materialize CSS Framework\" href=\"http://materializecss.com/\" target=\"_blank\">MaterializeCSS</a>.</p>\n<p style=\"text-align:justify;\">No me sorprender\u00eda que tenga igual n\u00famero de detractores...</p>\n<p style=\"text-align:justify;\">Mediante esta <a title=\"You Might Not Need jQuery\" href=\"http://youmightnotneedjquery.com/\" target=\"_blank\"><strong>p\u00e1gina</strong></a>, <a title=\"@zackbloom\" href=\"https://twitter.com/zackbloom\" target=\"_blank\">Zack Bloom</a> y <a title=\"@adamfschwartz\" href=\"https://twitter.com/adamfschwartz\" target=\"_blank\">Adam Schwartz</a> m\u00e1s que generar controversia, intentan demostrar lo dicho al principio de este post, que jQuery y cualquier tecnolog\u00eda es sustituible (incluso ha sido desmitificado la dependencia de AutoCAD en Software Libre, pero esa es otra historia).</p>\n<p style=\"text-align:justify;\">En el enlace arriba publicado, se encuentran diferentes ejemplos, entre los m\u00e1s utilizados popularmente por los desarrolladores web (ne\u00f3fitos como yo y con experiencia como los arriba descritos) y su correspondiente sustituto en Javascript trocho y mocho.</p>\n<p style=\"text-align:justify;\">Pero si no les gusta usar Javascript trocho y mocho, y tampoco les gusta jQuery, usen <a title=\"The aero-gel cousin of jQuery\" href=\"http://zeptojs.com/\" target=\"_blank\">Zepto.js</a>, es una buena y confiable alternativa :D</p>\n<p style=\"text-align:justify;\"><strong>Prometo: </strong>proximamente hacer un post sobre Zepto ;)</p>\n&lt;/script&gt;"}, {"tags": ["sin-categoria"], "date": null, "content": "Uso de fabric.js"}, {"tags": [], "date": "Tue, 03 Mar 2015 19:49:19 +0000"}, {"tags": ["angularjs", "datos", "frontend", "html", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "libreria-angular", "tecnologia", "tutorial"], "title": "LIBRERIA ANGULAR. PARTE 1. CONTROLANDO Y DIRIGIENDO", "date": "Wed, 25 Mar 2015 16:07:29 +0000", "content": "&lt;script src=\"my own\" title=\"parte 1. controlando y dirigiendo\"&gt;\n<p style=\"text-align:justify;\">\u00a1Puf! como est\u00e1 de fuerte el <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/es/en/translation.asp?spen=laburo\" target=\"_blank\">laburo</a> que ahora es cuando voy a publicar el post con los tutos de Angular.js que me correspond\u00eda publicar la semana pasada :'( .</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">En este post vamos a empezar a darle forma a nuestra Librer\u00eda Angular e ir tocando temas relacionados con el flujo de trabajo que normalmente se establece en <a title=\"Angular.js\" href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a>.</p>\n<p style=\"text-align:justify;\">Inclu\u00ed un estilo de <a title=\"Bootstrap 3\" href=\"http://getbootstrap.com\" target=\"_blank\">Bootstrap</a> bastante popular y que personalmente me agrada, lo cual no quiere decir que no sea reemplazable, am\u00e9n de los iconos de <a title=\"Font Awesome 4.3\" href=\"http://fontawesome.io/\" target=\"_blank\">Font Awesome 4</a> y <a title=\"jQuery 1.11\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a>, necesario para la ejecuci\u00f3n correcta de las interacciones de Bootstrap (dropdowns, forms y ventanas modales).</p>\n\n\n[code language=\"css\"]\n.libro {\n\tmargin: 5px; padding: 2px;\n\tdisplay: block; height: 240px;\n\tborder: 2px solid #1673A9;\n}\n[/code]\n\n<p style=\"text-align:justify;\">Este estilo est\u00e1 dentro de un archivo <code>index.html.</code></p>\n<p style=\"text-align:justify;\">Una cosa importante que se me olvid\u00f3 mencionar (ups, lo siento :( ) es que <strong>es importante para estos ejemplos, tener un servidor HTTP (no necesariamente Web como Apache) para que todos los m\u00f3dulos de Angular puedan funcionar adecuadamente. </strong>Podr\u00edamos utilizar <code>SimpleHTTPServer</code> que viene con cualquier instalaci\u00f3n de <em>Python</em>.</p>\n<p style=\"text-align:justify;\">Usamos <em>directivas</em> para describir comportamientos, <em>controladores</em> para definir esos comportamientos y <em>m\u00f3dulos</em> para encapsularlos, aunque todo en el fondo sea un m\u00f3dulo. Empezamos a definir nuestro m\u00f3dulo central de la aplicaci\u00f3n y lo colocamos en un archivo <code>controllers.js</code> (donde estar\u00e1n todos los controladores necesarios):</p>\n\n\n[code language=\"javascript\"]\nvar libreria = angular.module('LibreriaApp', []);\n[/code]\n\n<p style=\"text-align:justify;\">Puntos importantes a resaltar:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><code>angular.module</code> es un m\u00e9todo de Angular que devuelve la referencia a un m\u00f3dulo general.</li>\n\t<li style=\"text-align:justify;\"><code>'LibreriaApp'</code> va a ser el nombre de nuestra aplicaci\u00f3n</li>\n\t<li style=\"text-align:justify;\">Los corchetes <code>[] </code>representan un arreglo donde se debe incluir (de requerirse) cada una de las dependencias del m\u00f3dulo, sean m\u00f3dulos externos de Angular o m\u00f3dulos creados con Angular. A este patr\u00f3n de dise\u00f1o, se le conoce como <a title=\"Dependency Injection\" href=\"https://code.angularjs.org/1.3.10/docs/guide/di\" target=\"_blank\">Inyecci\u00f3n de Dependencias</a>. Pero lo dejar\u00e9 vac\u00edo (por ahora ;) ).</li>\n</ul>\n<h2>Dirigiendo</h2>\n<ul>\n\t<li style=\"text-align:justify;\">Las dobles llaves <strong><span style=\"color:#7cbbbb;\">{{}}</span></strong> representan una <em>expresi\u00f3n</em> de Angular; segmentos en los que se evalua c\u00f3digo Javascript.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">ng-model</span></strong> es una directiva que define un modelo o un almac\u00e9n de datos a ser observado por un m\u00f3dulo.</li>\n\t<li style=\"text-align:justify;\">El s\u00edmbolo <strong><span style=\"color:#7cbbbb;\">|</span></strong> representa un <em>filtro;</em> da formato a un modelo observado.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">$scope</span></strong> es el objeto global de Angular que define el alcance (global o local) de una directiva dentro de la aplicaci\u00f3n.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">ng-app</span></strong> es una directiva que define el nombre y el alcance de una aplicaci\u00f3n de Angular. En nuestro caso se llama <code>LibreriaApp</code>.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">ng-controller</span></strong> es una directiva que define el alcance de un controlador. Todos los atributos y m\u00e9todos s\u00f3lo tiene sentido dentro del alcance.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">ng-repeat</span></strong> es una directiva que define la iteraci\u00f3n de la escritura de elementos dentro del alcance de un controlador.</li>\n</ul>\nUna visi\u00f3n general de la interfaz de nuestra aplicaci\u00f3n es esta:\n\n[caption id=\"attachment_239\" align=\"aligncenter\" width=\"527\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png\"><img class=\"wp-image-239 \" src=\"https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png?w=300\" alt=\"\" width=\"527\" height=\"186\" /></a> <span style=\"text-align:center;font-size:13px;font-weight:bold;\">Tiene pinta de librer\u00eda, \u00bfno? Se nota que me encanta el azul... juejuejue </span>[/caption]\n<h2>Controlando</h2>\n<p style=\"text-align:justify;\">El archivo <code>controllers.js</code> y el archivo <code>index.html</code> est\u00e1n en mi repo en el <a title=\"Mi primer repo... :D\" href=\"https://github.com/ChinuxParibus/libreria-angular\" target=\"_blank\">Gato-Pulpo</a>, y pueden revisarlos a gusto <del>pero los dem\u00e1s archivos me resta incluirlos (por mi \"neofitez\" de no saber como subir archivos al Gato-Pulpo)</del>. No obstante, voy a usar uno de los controladores para determinar la sintaxis dentro del archivo <code>controllers.js</code>.</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\n//Controller para las categor\u00edas\nlibreria.controller('CategoriasCtrl', ['$scope', function($scope) {\n\t$scope.categorias = [\n\t\t{categoria: 1, nombre: &quot;Ciencia-Ficci\u00f3n&quot;},\n\t\t{categoria: 2, nombre: &quot;Romance&quot;},\n\t\t{categoria: 3, nombre: &quot;Hist\u00f3rica&quot;},\n\t\t{categoria: 4, nombre: &quot;Misterio&quot;},\n\t];\n\t$scope.nombrarCategoria = function(id){\n\t\treturn $scope.categorias[id-1].nombre;\n\t};\n}]);\n[/code]\n\n<ul>\n\t<li style=\"text-align:justify;\"><code>.controller</code> es un m\u00e9todo de angular para referenciar un controlador</li>\n\t<li style=\"text-align:justify;\"><code>'CategoriasCtrl'</code> es el nombre del controlador.</li>\n\t<li style=\"text-align:justify;\"><code>'$scope'</code> es \"inyectado\" como dependencia para definir el alcance de este controlador.</li>\n\t<li style=\"text-align:justify;\"><code>function($scope){...}</code> es la funci\u00f3n an\u00f3nima de que determina el comportamiento del controlador. Todos los atributos y m\u00e9todos tienen el mismo alcance determinado por <code>$scope</code>.</li>\n</ul>\n<p style=\"text-align:justify;\">Todos los controladores se definen de la misma manera :D .</p>\n<p style=\"text-align:justify;\">El atributo <code>categorias</code> se define como local dentro del alcance del controlador, como un arreglo con la lista de categor\u00edas como objetos:</p>\n\n\n[caption id=\"attachment_242\" align=\"aligncenter\" width=\"188\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/categorias_angular.png\"><img class=\"wp-image-242 size-full\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/categorias_angular.png\" alt=\"\" width=\"188\" height=\"199\" /></a> <span style=\"font-size:13px;text-align:center;font-weight:bold;\">Lista de categor\u00edas</span>[/caption]\n<p style=\"text-align:justify;\">Seguimos sacando partido, contando +1 al tuto... De vuelta al laburo ;)</p>\n<p style=\"text-align:justify;\"><strong>Actualizaci\u00f3n 23-04-2015:</strong> Los archivos ya est\u00e1n en el Gato-Pulpo :D</p>\n&lt;/script&gt;"}, {"tags": [], "title": "BATTLE FOR THE NET", "date": "Thu, 05 Mar 2015 15:10:53 +0000", "content": "If you woke up tomorrow, and your internet looked like this, what would you do?\n\n[caption id=\"attachment_132\" align=\"aligncenter\" width=\"265\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/02/avatar-white-red.gif\"><img class=\" wp-image-132\" src=\"https://jotaeseymas.files.wordpress.com/2015/02/avatar-white-red.gif\" alt=\"\u00bfAnnoying, isn't it?\" width=\"265\" height=\"265\" /></a> <strong>Annoying, isn't it?</strong>[/caption]\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Imagine all your favorite websites taking forever to load, while you get annoying notifications from your ISP suggesting you switch to one of their approved \u201cFast Lane\u201d sites.</p>\n<p style=\"text-align:justify;\">Think about what we would lose: all the weird, alternative, interesting, and enlightening stuff that makes the Internet so much cooler than mainstream Cable TV. What if the only news sites you could reliably connect to were the ones that had deals with companies like Comcast and Verizon?</p>\n<p style=\"text-align:justify;\">On September 10th, just a few days before the FCC\u2019s comment deadline, public interest organizations are issuing an open, international call for websites and internet users to unite for an \u201cInternet Slowdown\u201d to show the world what the web would be like if Team Cable gets their way and trashes net neutrality. Net neutrality is hard to explain, so our hope is that this action will help SHOW the world what\u2019s really at stake if we lose the open Internet.</p>\n<p style=\"text-align:justify;\">If you\u2019ve got a website, blog or tumblr, get the code to join the #InternetSlowdown here: https://battleforthenet.com/sept10th</p>\n<p style=\"text-align:justify;\">Everyone else, here\u2019s a quick list of things you can do to help spread the word about the slowdown:\nhttp://tumblr.fightforthefuture.org/post/96020972118/be-a-part-of-the-great-internet-slowdown</p>\nGet creative! Don\u2019t let us tell you what to do. See you on the net September 10th! v\u00eda <a href=\"https://battleforthenet.com/\">Battle For The Net</a>."}, {"tags": ["sin-categoria"], "date": null, "content": "obviamente tengo que hacer esto... juejuejuejue :v\n\ncuatro partes:\n1. configuraci\u00f3n b\u00e0sica combinar gr\u00e0ficos\n2. obtener datos de una tabla en HTML, JSON\n3. highmaps y highstock\n4. proyecto: gr\u00e0ficas con MEAN.js\n                          MongoDB\n                           Express.js\n                            Angular.js\n                             Node.js"}, {"tags": ["aprender", "datos", "formato", "html", "javascript", "javascripteando-ando", "nuevo", "proyectos", "sebastian-muller"], "title": "VIAJANDO EN EL TIEMPO", "date": "Tue, 31 Mar 2015 16:25:40 +0000", "content": "&lt;script src=\"my own\" title=\"viajando en el tiempo\"&gt;\n<p style=\"text-align:justify;\">Las l\u00edneas de tiempo son importantes para gesti\u00f3n de proyectos, control, cronogramas de planificaci\u00f3n, sistemas <a title=\"Enterprise Resource Planning\" href=\"https://en.wikipedia.org/wiki/Enterprise_resource_planning\" target=\"_blank\">ERP</a>, entre otros. Permiten una visualizaci\u00f3n de actividades que se han venido desarrollando en un proyecto, un sistema, etc. Bien usadas, puede ser un recurso vers\u00e1til (una de las que se me ocurre es una l\u00ednea de tiempo para la duraci\u00f3n de actividades de un proyecto en un <a title=\"Tablero Kanban\" href=\"https://en.wikipedia.org/wiki/Kanban_board\" target=\"_blank\">tablero kanban</a>).</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a title=\"Timesheet.js\" href=\"sbstjn.github.io/timesheet.js/\" target=\"_blank\">Timesheet.js</a> es una de esas librer\u00edas que me \"encontr\u00e9 por ah\u00ed <a title=\"Ehm, si...\" href=\"https://es.wikipedia.org/wiki/Googlear\" target=\"_blank\">googleando</a>\". Es un proyecto prototipo, un envoltorio de un proyecto m\u00e1s grande usando <a title=\"Deploy Static Apps or webpages.\" href=\"https://middlemanapp.com/\" target=\"_blank\">Middleman</a>. Esta librer\u00eda fue creada por <a title=\"Blog de Sebastian M\u00fcller\" href=\"http://sbstjn.com/\" target=\"_blank\">Sebastian M\u00fcller</a> como parte de un proyeto m\u00e1s grande, pero que por su aplicaci\u00f3n pr\u00e1ctica lo liber\u00f3 aparte en el Gato-Pulpo.</p>\n<p style=\"text-align:justify;\">La librer\u00eda est\u00e1 en fase <em>omega</em> (tal cosa no existe, s\u00f3lo es un sarcasmo para decir que <strong>NO</strong> es viable usarla en producci\u00f3n \u00ac\u00ac'), pero as\u00ed como viene la librer\u00eda podemos usarla en proyectos \"acad\u00e9micos\", tras unas cuantas modificaciones al c\u00f3digo, principalmente del CSS que trae por defecto. Nada m\u00e1s descargarla, la inclu\u00edmos en un HTML junto con su CSS y trabajamos con ella.</p>\n\n\n[code language=\"html\"]\n&lt;script src=&quot;timesheet.js&quot;&gt;&lt;/script&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;timesheet.css&quot;&gt;\n[/code]\n\nLa sintaxis no es gran cosa :P\n\n[code language=\"html\" collapse=\"true\"]\n&lt;div id=&quot;timesheet&quot;&gt;\n\t&lt;script&gt;\n\t\tnew Timesheet('timesheet', 2002, 2015, [\n  \t\t  ['2002', '09/2002', 'A freaking awesome time', 'lorem'],\n    \t\t  ['06/2002', '09/2003', 'Some great memories', 'ipsum'],\n\t\t  ['2003', 'Had very bad luck'],\n\t\t  ['10/2003', '2006', 'At least had fun', 'dolor'],\n\t\t  ['02/2005', '05/2006', 'Enjoyed those times as well', 'ipsum'],\n\t\t  ['07/2005', '09/2005', 'Bad luck again', 'default'],\n\t\t  ['10/2005', '2008', 'For a long time, nothing!', 'dolor'],\n\t\t  ['04/2003', '04/2009', 'It happens!', 'lorem']\n\t\t]);\n\t&lt;/script&gt;\t\t\n&lt;/div&gt;\n[/code]\n\nEl constructor acepta cuatro par\u00e1metros obligatorios:\n<ul>\n\t<li>El <code>id</code> del contenedor de la data.</li>\n\t<li><strong>A\u00f1os</strong> de inicio y fin (s\u00f3lamente los a\u00f1os).</li>\n\t<li>Un <code>Array</code> con la data espec\u00edficada en cada \u00ectem:\n<ul>\n\t<li>Fechas de inicio y fin (en formato MM/AAAA o el a\u00f1o).</li>\n\t<li>Breve descripcion.</li>\n\t<li>Atributo <code>class</code> que determina el color de la barra.</li>\n</ul>\n</li>\n</ul>\nY nos da un bonito resultado <span title=\"de f\u00e1brica, por defecto\"><em>out of the box</em></span>:\n<p style=\"text-align:justify;\"><a href=\"https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-31-115034.png\"><img class=\" size-medium wp-image-264 aligncenter\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/captura-de-pantalla-de-2015-03-31-115034.png?w=300\" alt=\"Captura de pantalla de 2015-03-31 11:50:34\" width=\"300\" height=\"122\" /></a>A pesar de todas las modificaciones que eventualmente hubiera que hacerle a esta librer\u00eda, sigue siendo una buena opci\u00f3n para elaborar l\u00edneas de tiempo, y considerando que su propio autor insta a <span title=\"modificar su c\u00f3digo fuente en GitHub\"><em>forkear</em></span> su proyecto en el <a title=\"Repositorio de Sebastian M\u00fcller para Timesheet.js\" href=\"https://github.com/sbstjn/timesheet.js\" target=\"_blank\">Gato-Pulpo</a>, ver\u00e9 si lo incluyo en uno de mis proyectos que tengo en mente, espero que me de tiempo ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "datos", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "nuevo", "tecnologia", "tutorial"], "title": "BASE DE DATOS \u00bfEN EL NAVEGADOR?. PARTE 2. LA PR\u00c1CTICA", "date": "Mon, 16 Mar 2015 15:27:46 +0000", "content": "&lt;script src=\"my own\" title=\"base de datos en el navegador. parte 2. la practica\"&gt;\n<p style=\"text-align:justify;\">Uf... Como me cost\u00f3 escribir este post...</p>\n<p style=\"text-align:justify;\">Despu\u00e9s de una semana de locura por el fuerte <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/es/en/translation.asp?spen=laburo\" target=\"_blank\">laburo</a>, por f\u00edn pude sacar un tiempo para completar el <a title=\"Parte 1. La Teor\u00eda\" href=\"http://wp.me/p5CTtO-16\" target=\"_blank\">post anterior</a>. <!--more-->Es un ejemplo b\u00e1sico de una lista de tareas, quedando pendiente subir este c\u00f3digo al Gato-Pulpo:</p>\n<p style=\"text-align:justify;\">C\u00f3digo HTML:</p>\n\n\n[code language=\"html\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;title&gt;Uso de Dexie.js con IndexedDB&lt;/title&gt;\n\t&lt;style&gt; li{margin-bottom: 10px;} &lt;/style&gt;\n\t&lt;script src=&quot;jquery-1.11.1.min.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;Dexie.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;crud.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;Lista de Tareas&lt;/h1&gt;\n  &lt;form&gt;\n  \t&lt;input type=&quot;text&quot; size=&quot;30&quot; placeholder=&quot;Agrega una nueva tarea&quot; id=&quot;tarea&quot;&gt;\n  &lt;/form&gt;\n  &lt;ul id=&quot;listaTareas&quot;&gt;&lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">C\u00f3digo de <code>crud.js</code> (comentado):</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\n$(function() {\n\n\t//Estructura de datos del objeto global Tarea\n\tvar Tarea = function(descripcion){\n\t\tthis.descripcion = descripcion;\n\t\tthis.fecha = new Date().toString().substring(3,16);\n\t};\n\n\t//Variables globales: instancia de base de datos y &quot;cacheado&quot; de elementos DOM\n\tvar db = new Dexie(&quot;TodoAPP&quot;),\n\t\t\ttarea = $(&quot;#tarea&quot;),\n\t\t\tlistaTareas = $('#listaTareas');\n\n\t//Creaci\u00f3n del esquema de Base de Datos (en SQL ser\u00eda una tabla)\n\tdb.version(1)\n\t\t.stores({\n\t\t\ttareas: '++id, tarea, fecha' //++id simula autoincremento\n\t\t});\n\n\t//Apertura de la base de datos, encadenando la promesa de refrescar la p\u00e1gina\n\tdb.open()\n\t\t.then(refrescar);\n\n\t//A\u00f1adir listener para a\u00f1adir registros a la Base de Datos\n\t$(&quot;form&quot;).on('submit', agregarTarea);\n\n\t//A\u00f1ade listeners del evento click de forma as\u00edncrona\n\tfunction escucharBotones(){\n\t\t$(&quot;button&quot;).each(function(){\n\t\t\t$(this).click(function(){\n\t\t\t\tdb.tareas.where('id')\n\t\t\t\t\t.equals(parseInt($(this).attr(&quot;id&quot;), 10)) //attr(&quot;id&quot;) devuelve String\n\t\t\t\t\t.delete()\n\t\t\t\t\t.then(refrescar);\n\t\t\t});\n\t\t});\n\t}\n\n\t//Nuevo registro es a\u00f1adido a la Base de Datos\n\tfunction agregarTarea(event) {\n\t\tevent.preventDefault();\n\t\tdb.tareas.put(new Tarea(tarea.val()))\n\t\t\t.then(function() {\n\t\t\t\ttarea.val('');\t//Se vacia el &quot;input&quot;\n\t\t\t})\n\t\t\t.then(refrescar);\n\t}\n\n\tfunction refrescar() {\n\t\treturn db.tareas.toArray() //retorna todos los registros como un Array\n\t\t\t.then(listarTareas)\n\t\t\t.then(escucharBotones);\n\t}\n\n\t//Agrega a la lista todos los elementos actualizados\n\tfunction listarTareas(tareas) {\n\t\tvar html = '';\n\t\tlistaTareas.html('');\n\t\ttareas.forEach(function(tarea) {\n\t\t\thtml += nuevaTarea(tarea);\n\t\t});\n\t\tlistaTareas.append(html);\n\t}\n\n\t//Cada elemento de la Base de Datos es asignado como elementos HTML\n\tfunction nuevaTarea(Tarea) {\n\t\treturn '&lt;li&gt;'+Tarea.descripcion+' &lt;em&gt;--Creada: '+Tarea.fecha+'&lt;/em&gt;&lt;button id=&quot;'+Tarea.id+'&quot;&gt;Completada&lt;/button&gt;&lt;/li&gt;';\n\t}\n\n});\n[/code]\n\nEste c\u00f3digo as\u00ed descrito, usa la <a title=\"para m\u00e1s informaci\u00f3n\" href=\"https://www.promisejs.org/\" target=\"_blank\">API Promises</a> de Javascript ES6. Visita el enlace para m\u00e1s informaci\u00f3n. Adicionalmente, bas\u00e9 este c\u00f3digo en esta <a title=\"TODO-offline in GitHub\" href=\"https://github.com/matthew-andrews/offline-todo-dexie/blob/gh-pages/application.js\" target=\"_blank\">implementaci\u00f3n</a>.\n\nMe retiro, de vuelta al laburo ;) .\n&lt;/script&gt;"}, {"tags": ["aprender", "expresiones-regulares", "html", "javascript", "javascripteando-ando", "mozilla-firefox", "tecnologia", "vanilla-js"], "title": "EXPRESIONES REGULARES, UNA PEL\u00cdCULA DE TERROR. PARTE 1", "date": "Tue, 31 Mar 2015 16:40:13 +0000", "content": "&lt;script src=\"my own\" title=\"expresiones regulares una pel&amp;iacute;cula de terror\\. parte 1\"&gt;\n\n[caption id=\"attachment_307\" align=\"aligncenter\" width=\"365\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png\"><img class=\"  wp-image-307\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png?w=300\" alt=\"email-validation-regex\" width=\"365\" height=\"240\" /></a> <strong style=\"font-size:13px;text-align:center;\">Asusta, \u00bfno?</strong>[/caption]\n\nSi esto no les asusta, entonces tienen m\u00e1s est\u00f3mago que yo... A mi me aterra... :'(\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Hay una frase que es a\u00fan m\u00e1s aterradora que la imagen anterior:</p>\n\n<blockquote>\n<p style=\"text-align:justify;\">\"Algunos desarrolladores cuando se enfrentan a un problema piensan que la soluci\u00f3n es usar expresiones regulares. En ese momento, ya tienen dos problemas.\" --\u00a0<em>Jamie Zawinski</em></p>\n</blockquote>\n<p style=\"text-align:justify;\">Y sin atisbo de esperanza,\u00a0nos decepcionamos y nos vamos as\u00ed no m\u00e1s... Pero basta de <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/es/en/translation.asp?spen=ch\u00e1chara\" target=\"_blank\">ch\u00e1charas</a>...</p>\n<p style=\"text-align:justify;\">B\u00e1sicamente, una expresi\u00f3n regular es un patr\u00f3n utilizado para b\u00fasqueda de caracteres en un texto. Sin embargo la definici\u00f3n real va m\u00e1s all\u00e1 de eso. Una expresi\u00f3n regular se puede usar para reemplazar\u00a0cadenas en textos largos, hacer recorridos de \u00e1rboles, nodos y grafos, y \u00a1hasta pueden programarse <a title=\"Aut\u00f3matas Finitos\" href=\"https://es.wikipedia.org/wiki/Aut\u00f3mata_finito\" target=\"_blank\">aut\u00f3matas</a>!</p>\n<p style=\"text-align:justify;\">En Javascript, las expresiones regulares son objetos derivados de la clase <code>RegExp</code>, la cual permite utilizar un constructor de expresiones regulares y una serie de m\u00e9todos que discutiremos a lo largo de este post. Una expresi\u00f3n regular en Javascript se puede construir:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">De la forma <code>var exp = /expresion/;</code></li>\n\t<li style=\"text-align:justify;\">De la forma <code>var exp = new RegExp(\"expresion\");</code></li>\n</ul>\n<p style=\"text-align:justify;\">La <a title=\"Cheat Sheet Javascript\" href=\"http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/\" target=\"_blank\">laaa...aaarga</a> lista de elementos que pueden compararse y buscarse en una expresi\u00f3n regular pueden consultarla en el enlace. Yo voy a hablar de los m\u00e9todos Javascript de <code>RegExp</code>:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">El m\u00e9todo <code>test()</code> prueba una expresi\u00f3n regular, devolviendo <code>true</code> o <code>false</code> si la expresi\u00f3n coincide con el texto pasado como par\u00e1metro. Ejemplo:\n\n[code language=\"javascript\"]\nconsole.log(/\\w+/.test(&quot;Esta es una cadena de prueba&quot;));\n[/code]\n\ndevolver\u00e1 <code>true.</code></li>\n\t<li style=\"text-align:justify;\">El m\u00e9todo <code>exec()</code> hace lo mismo que <code>test()</code>, pero \u00e9ste devuelve un array de informaci\u00f3n pertinente a la comparaci\u00f3n. Ejemplo:\n\n[code language=\"javascript\"]\nconsole.log(/\\w+/.exec(&quot;Esta es una cadena de prueba&quot;));\n[/code]\n\ndevolver\u00e1 <code>[\"Esta\", index: 0, input: \"Esta es una cadena de prueba\"]</code> donde:\n<ul>\n\t<li>La posici\u00f3n 0 es la primera ocurrencia de la cadena encontrada.</li>\n\t<li>La posici\u00f3n 1 (tambien la posici\u00f3n <code>index</code>) es la posici\u00f3n del primer caracter encontrado.</li>\n\t<li>La posici\u00f3n 2 (tambi\u00e9n la posici\u00f3n <code>input</code>) es la cadena evaluada.</li>\n</ul>\n</li>\n</ul>\n<p style=\"text-align:justify;\">Cabe destacar que se pueden tener banderas (llamadas <code>flags</code>) para hacer la comparaci\u00f3n m\u00e1s o menos precisa, a saber:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">El flag <code>i</code> determina que la comparaci\u00f3n\u00a0debe hacerse ignorando may\u00fasculas y min\u00fasculas.</li>\n\t<li style=\"text-align:justify;\">El flag <code>g</code> determina que la comparaci\u00f3n debe hacerse en toda la frase y no s\u00f3lo la primera ocurrencia (en el caso de textos largos de una l\u00ednea).</li>\n\t<li style=\"text-align:justify;\">El flag <code>m</code> determina que la comparaci\u00f3n debe hacerse para todas las lineas del texto (en el caso de textos de un p\u00e1rrafo que hayan sido separados por caracteres de f\u00edn de l\u00ednea \\n). Ejemplo:\n\n[code language=\"javascript\"]\nconsole.log(/esta/i.test(&quot;ESTA ES UNA CADENA&quot;));\n[/code]\n\ndevolver\u00e1 <code>true.</code></li>\n</ul>\nS\u00f3lo un abrebocas de lo que vendr\u00e1... muahahaha *risa malvada* ;)\n\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 24 Mar 2015 18:47:11 +0000"}, {"tags": [], "date": "Tue, 24 Mar 2015 20:06:38 +0000"}, {"tags": [], "date": "Tue, 31 Mar 2015 16:23:16 +0000"}, {"tags": ["aprender", "expresiones-regulares", "html", "javascript", "javascripteando-ando", "mozilla-firefox", "tecnologia", "vanilla-js"], "title": "EXPRESIONES REGULARES, UNA PEL\u00cdCULA DE TERROR. PARTE 2", "date": "Tue, 31 Mar 2015 16:41:09 +0000", "content": "&lt;script src=\"other pages\" title=\"expresiones regulares una pel&amp;iacute;cula de terror\\. parte 2\"&gt;\n\n[caption id=\"attachment_307\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png\"><img class=\"size-medium wp-image-307\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png?w=300\" alt=\"Asusta, \u00bfno?\" width=\"300\" height=\"197\" /></a> <strong style=\"font-size:13px;text-align:center;\">Asusta, \u00bfno?</strong>[/caption]\n\nSi esto no les asusta, entonces tienen m\u00e1s tripas que yo\u2026 A mi me sigue aterrando\u2026 <span class=\"wp-smiley wp-emoji wp-emoji-cry\" title=\":'(\">:'(</span>\n\n<!--more-->\n<p style=\"text-align:justify;\">Poco a poco, e investigando un tanto m\u00e1s, sin <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara\" target=\"_blank\">ch\u00e1charas</a> ni des\u00e1nimos, existen herramientas web que hacen parecer a las expresiones regulares un juego de ni\u00f1os. Por supuesto, entendiendo que la complejidad de estas \u00faltimas puede llegar a ser tan monstruosa como la imagen del inicio de este post. Algunas de estas herramientas son:</p>\n\n<h3 style=\"text-align:justify;\">Regexr</h3>\n<p style=\"text-align:justify;\"><a title=\"Regexr\" href=\"http://www.regexr.com/\" target=\"_blank\">Regexr</a> es una herramienta para construir expresiones regulares que funciona bastante r\u00e1pido. Constru\u00edda por <a title=\"@gskinner\" href=\"https://twitter.com/gskinner/\" target=\"_blank\">Grant Skinner</a>, esta herramienta permite validar, a medida que escribimos la expresi\u00f3n regular Javascript, ir validando al vuelo, probando con un texto espec\u00edfico.</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">Ventajas: </span></strong>Permite validar al vuelo la expresi\u00f3n regular y tiene una ayuda contextual bastante completa.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#d25349;\">Desventajas: </span></strong>Est\u00e1 en ingl\u00e9s y no permite <code title=\"arrastrar y soltar\">drag&amp;drop</code> de expresiones regulares (lo cual ser\u00eda genial :( ).</li>\n</ul>\n<h3>Regexpal</h3>\n<p style=\"text-align:justify;\"><a title=\"Regexpal.com\" href=\"http://regexpal.com/\" target=\"_blank\">Regexpal</a> es una herramienta sencilla que hace el trabajo sucio de la forma m\u00e1s simple posible: escribes la expresi\u00f3n regular Javascript (sin las barras\"/\"), escribes el texto en el recuadro de abajo, luego notar\u00e1s que las ocurrencias encontradas alternan entre amarillo (ocurrencia encontrada) y azul (pr\u00f3xima ocurrencia encontrada), simple, \u00bfno?</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">Ventajas:</span></strong> Simple, muy simple, y tiene una versi\u00f3n de la aplicaci\u00f3n para sistemas Android.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#d25349;\">Desventajas:</span></strong> No tiene una ayuda contextual muy buena, de hecho, es tan simple como la aplicaci\u00f3n (tambi\u00e9n est\u00e1 en ingl\u00e9s).</li>\n</ul>\n<h3>Debuggex</h3>\n<p style=\"text-align:justify;\"><a title=\"Debuggex\" href=\"https://www.debuggex.com/\" target=\"_blank\">Debuggex</a> es una herramienta que pretende hacer las cosas diferentes. En vez de tener simplemente un recuadro de texto donde pruebas la fuente y otro recuadro donde escribes la expresi\u00f3n regular, tiene otro recuadro adicional que valida el flujo de la expresi\u00f3n regular \u00a1graficamente! Lo cual ayuda significativamente a comprender lo que se escribe.</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">Ventajas:</span></strong> La herramienta te analiza la expresi\u00f3n regular mientras la escribes, y el gr\u00e1fico del flujo de la expresi\u00f3n regular tiene un desempe\u00f1o formidable.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#d25349;\">Desventajas:</span></strong> A pesar de ser intuitiva, carece de una ayuda contextual que te diga que debes hacer, pues al estar en ingl\u00e9s, puede parecer dif\u00edcil.</li>\n</ul>\nAunque existan herramientas como estas, la pel\u00edcula no se ha acabado *risa malvada* ;)\n\n&lt;/script&gt;"}, {"tags": ["aprender", "expresiones-regulares", "html", "javascript", "javascripteando-ando", "mozilla-firefox", "tecnologia", "vanilla-js"], "title": "EXPRESIONES REGULARES, UNA PEL\u00cdCULA DE TERROR. PARTE 3", "date": "Tue, 31 Mar 2015 16:46:32 +0000", "content": "&lt;script src=\"my own\" title=\"expresiones regulares una pel&amp;iacute;cula de terror\\. parte 3\"&gt;\n\n[caption id=\"attachment_307\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png\"><img class=\"size-medium wp-image-307\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/email-validation-regex.png?w=300\" alt=\"Asusta, \u00bfno?\" width=\"300\" height=\"197\" /></a> <strong style=\"font-size:13px;text-align:center;\">Asusta, \u00bfno?</strong>[/caption]\n<p style=\"text-align:justify;\">No se si les asuste todav\u00eda\u2026 A mi me sigue causando p\u00e1nico\u2026 <span class=\"wp-smiley wp-emoji wp-emoji-cry\" title=\":'(\">:'(</span></p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Aunque, si le cojo el <a title=\"Ehm, si...\" href=\"http://significado.de/tranquillo\" target=\"_blank\">tranquillo</a>, se que puedo superar ese miedo, as\u00ed, sin tanta <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara\" target=\"_blank\">ch\u00e1chara</a> pues...</p>\n<p style=\"text-align:justify;\">Me puse a inventar y a curucutear <strong><span style=\"color:#7cbbbb;\">#porai</span></strong> e hice tres expresiones regulares para compartir con vosotros. A lo mejor se encuentren optimizadas <strong><span style=\"color:#7cbbbb;\">#porai</span></strong> pero estas las hice yo (cabe destacar que estos patrones s\u00f3lo aplican para Venezuela, despu\u00e9s no digan que no les dije... :P</p>\n\n<h3 style=\"text-align:justify;\">Patr\u00f3n para validar c\u00e9dula / RIF:</h3>\n\n[code lang=\"text\"]/[VEPGJ]-?\\d{6,9}-?\\d?/gi[/code]\n\n<p style=\"text-align:justify;\">B\u00e1sicamente se traduce as\u00ed: selecciona al menos uno de todos los caracteres entre [], seguido de un gui\u00f3n (-) opcional, luego un grupo de 6 a 9 digitos num\u00e9ricos, seguido de otro gui\u00f3n opcional y finalmente un digito opcional. el flag <em>\"g\"</em> para toda la cadena y el flag <em>\"i\"</em> para case insensitive.</p>\n<p style=\"text-align:justify;\"><strong>Justificaci\u00f3n: </strong>Los caracteres \"V\" y \"E\" son para c\u00e9dulas (y algunos RIFs de personas naturales). \"P\" de pasaporte, \"G\" de personas gubernamentales y \"J\" para personas jur\u00eddicas. Algunas veces las c\u00e9dulas y los RIFs pueden venir con guiones (J-12345678-6) o sin ellos (V12345678).</p>\n<p style=\"text-align:justify;\">Puedes ver a <a title=\"Regexpal.com\" href=\"http://regexpal.com/\" target=\"_blank\">Regexpal</a> en acci\u00f3n, como no pueden escribirse <em>flags</em>, se marcan en la barra superior:</p>\n\n\n[caption id=\"attachment_353\" align=\"aligncenter\" width=\"184\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/regexpal.png\"><img class=\"size-full wp-image-353\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/regexpal.png\" alt=\"Regexpal en acci\u00f3n\" width=\"184\" height=\"178\" /></a> <strong style=\"font-size:13px;text-align:center;\">Regexpal en acci\u00f3n</strong>[/caption]\n<h3>Patr\u00f3n para validar n\u00fameros de cuenta bancaria:</h3>\n\n[code lang=\"text\"]/(\\d{4})-(\\d{4})-(\\d{2})-(\\d{10})/g[/code]\n\n<p style=\"text-align:justify;\">Traduciendo el <a title=\"Ehm, si...\" href=\"https://es.wiktionary.org/wiki/galimat%C3%ADas\" target=\"_blank\">galimat\u00edas</a>: un grupo de 4 d\u00edgitos, gui\u00f3n y otro grupo de 4 d\u00edgitos, gui\u00f3n y otro grupo de 2 d\u00edgitos, gui\u00f3n y otro grupo de 10 d\u00edgitos.</p>\n<p style=\"text-align:justify;\"><strong>Justificaci\u00f3n:</strong> Aunque esta expresi\u00f3n regular pudo reescribirse de la forma <code>(\\d{4}){2}-</code> etc\u00e9tera, personalmente, y con fines acad\u00e9micos, considero necesario validar <a title=\"Agrupamiento\" href=\"https://es.wikipedia.org/wiki/Expresi%C3%B3n_regular#Los_par.C3.A9ntesis_.22.28.29.22\" target=\"_blank\">grupos de captura</a> que permitan hacer una separaci\u00f3n l\u00f3gica de los datos, y en este caso particular, cada grupo de 4 d\u00edgitos representa algo diferente, significado que adquiere sentido cuando probamos esta expresi\u00f3n regular en <a title=\"Regexr.com\" href=\"http://regexr.com/\" target=\"_blank\">Regexr</a> usando grupos de sustituci\u00f3n:</p>\n\n\n[caption id=\"attachment_357\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/regexpr.png\"><img class=\"size-medium wp-image-357\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/regexpr.png?w=300\" alt=\"Regexr en acci\u00f3n\" width=\"300\" height=\"90\" /></a> <strong style=\"font-size:13px;text-align:center;\">Regexr en acci\u00f3n</strong>[/caption]\n\nUsando este c\u00f3digo...\n\n[code lang=\"text\"]# estado y municipio: $1\\n# c\u00f3digo de agencia: $2\\n# tipo de cuenta producto: $3\\n# n\u00famero de cuenta cliente: $4[/code]\n\n... en el recuadro S<em>ubstitution, </em>podemos distinguir la siguiente separaci\u00f3n:\n\n[caption id=\"attachment_358\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/separacion.png\"><img class=\"size-medium wp-image-358\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/separacion.png?w=300\" alt=\"Substitution de Regexr en acci\u00f3n\" width=\"300\" height=\"94\" /></a> <strong style=\"font-size:13px;text-align:center;\"><em>Substitution</em> de Regexr en acci\u00f3n</strong>[/caption]\n<h3>Patr\u00f3n para validar c\u00f3digos de \u00e1rea y tel\u00e9fonos locales y celulares:</h3>\n\n[code lang=\"text\"]/0(2(12|3[4589]|4[0-9]|[5-8][1-9]|9[1-5])|(4(12|14|16|24|26)))-?\\d{7}/g[/code]\n\nTraducci\u00f3n: ni de co\u00f1a... :P\n<p style=\"text-align:justify;\"><strong>Justificaci\u00f3n:</strong> Una expresi\u00f3n regular tan compleja, no puede ser estudiada sino gr\u00e1ficamente para una mejor comprensi\u00f3n del patr\u00f3n que valida, es por eso que la explicaci\u00f3n puede verse [un poco] mejor en herramientas como <a title=\"Debuggex.com\" href=\"https://www.debuggex.com/\" target=\"_blank\">Debuggex</a>:</p>\n\n\n[caption id=\"attachment_362\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/debuggex.png\"><img class=\"size-medium wp-image-362\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/debuggex.png?w=300\" alt=\"Debuggex en acci\u00f3n\" width=\"300\" height=\"93\" /></a> <strong style=\"font-size:13px;text-align:center;\">Debuggex en acci\u00f3n</strong>[/caption]\n\nY la expresi\u00f3n regular queda \u00bfsimplificada? gr\u00e1ficamente de la siguiente forma:\n\n[caption id=\"attachment_364\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/debuggex-grafica.png\"><img class=\"size-medium wp-image-364\" src=\"https://jotaeseymas.files.wordpress.com/2015/03/debuggex-grafica.png?w=300\" alt=\"gGr\u00e1fico generado por Debuggex en acci\u00f3n\" width=\"300\" height=\"182\" /></a> <strong style=\"font-size:13px;text-align:center;\">Gr\u00e1fico generado por Debuggex<br /></strong>[/caption]\n<p style=\"text-align:justify;\">Variando el indicador <em>POSITION</em> a la posici\u00f3n <em>START</em>, podemos verificar el flujo de trabajo de la expresi\u00f3n regular, y certificar que valida tanto los c\u00f3digos de operadores m\u00f3viles como los c\u00f3digos de \u00e1rea local que puedes consultar <a title=\"Discado Directo Nacional en Venezuela\" href=\"http://www.a-venezuela.com/ciudades/codigosddn/index.shtml\" target=\"_blank\">aqu\u00ed</a>.</p>\n<p style=\"text-align:justify;\">Fin de la pel\u00edcula de terror... \u00bfven que no da miedo? ;)</p>\n&lt;/script&gt;"}, {"tags": ["sin-categoria"], "date": null, "content": "usos y ejemplos del ORM Backbone"}, {"tags": ["aprender", "formato", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "tecnologia"], "title": "PROGRAMACION MODULAR CON JAVASCRIPT", "date": "Tue, 14 Apr 2015 17:08:27 +0000", "content": "&lt;script src=\"other pages\" title=\"programacion modular con javascript\"&gt;\n<p style=\"text-align:justify;\">Javascript es un lenguaje de <a title=\"Lenguaje de Script\" href=\"https://en.wikipedia.org/wiki/Scripting_language\" target=\"_blank\">scripting</a>, \u00fatil para hacer ciertas tareas que corresponden a un contexto determinado, que en este caso corresponde al Navegador Web. Las p\u00e1ginas y aplicaciones web dependen en mayor o menor medida de \u00e9l, pero [casi] siempre lo vamos a necesitar (por ahora...). Pero, al ser un lenguaje de script, una arquitectura modular era impensable en Javascript.</p>\n<!--more-->\n\n[caption id=\"attachment_329\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/arquitectura.gif\"><img class=\"wp-image-329 size-medium\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/arquitectura.gif?w=300\" alt=\"\" width=\"300\" height=\"201\" /></a> <strong style=\"text-align:center;font-size:13px;\">\u00bfm\u00f3dulos en Javascript? Imposible...</strong>[/caption]\n<p style=\"text-align:justify;\">Afortunadamente, los tiempos cambian, y con la implementaci\u00f3n actual de Javascript 5.1 (y futuras implementaciones como <a title=\"ECMAScript 6 Next\" href=\"http://wiki.ecmascript.org/doku.php?id=harmony:harmony\" target=\"_blank\">Harmony</a> <del>a finales de Mayo</del> en Junio de este a\u00f1o :D ) es posible tener una arquitectura modular como flujo de trabajo en aplicaciones Web. El ejemplo m\u00e1s com\u00fan de esto es el ecosistema de aplicaciones y librerias que conviven bajo <a title=\"Node.js\" href=\"https://nodejs.org/\" target=\"_blank\">Node.js</a>. A\u00fan sin depender tanto de \u00e9l, podemos escribir nuestros propios m\u00f3dulos en Javascript, pero \u00bfqu\u00e9 es un m\u00f3dulo? Veamos:</p>\n\n<blockquote>\n<p style=\"text-align:justify;\">\"En software, un <strong>m\u00f3dulo</strong> [puede ser] parte de un <strong>programa</strong>. Dichos programas [pueden estar] compuestos por uno o m\u00e1s m\u00f3dulos desarrollados independientemente, pero \u00e9stos no son conocidos por el programa hasta que son [combinados o] enlazados. Un m\u00f3dulo puede contener una u varias <strong>rutinas</strong> de c\u00f3digo\"</p>\n<p style=\"text-align:justify;\">-- <em>Traducido desde webopedia.com</em></p>\n</blockquote>\n<p style=\"text-align:justify;\">Para ejemplificar esto, es t\u00edpico en las p\u00e1ginas o aplicaciones web que los scripts est\u00e9n instanciados uno a uno en orden para realizar determinadas funcionalidades:</p>\n\n\n[code language=\"html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\u00a0\u00a0\u00a0 &lt;head&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;title&gt;Ejemplo&lt;/title&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;script src=&quot;assets/js/uno.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;script src=&quot;assets/js/dos.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;script src=&quot;assets/js/tres.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;script src=&quot;assets/js/cuatro.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;script src=&quot;assets/js/cinco.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0\u00a0 &lt;/head&gt;\n\u00a0\u00a0\u00a0 &lt;body&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;!--Cuerpo de la p\u00e1gina--&gt;\n\u00a0\u00a0\u00a0 &lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Cada vez que un <code>&lt;script&gt;&lt;/script&gt;</code> aparezca en el c\u00f3digo (que generalmente aparece dentro de <code>&lt;head&gt;&lt;/head&gt;</code>) es una petici\u00f3n HTTP que debe ser resuelta desde el servidor hacia el navegador. El ahorro en ancho de banda puede ser una muy buena raz\u00f3n para usar m\u00f3dulos en Javascript (pero no es la \u00fanica raz\u00f3n).</p>\n<p style=\"text-align:justify;\">En VanillaJS (o Javascript trocho y mocho, como yo le digo :P ), podemos escribir m\u00f3dulos de la siguiente forma:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\n(function(){\n    //hacer cosas de manera global para todos\n    //los m\u00f3dulos que instancien este script\n}());\n[/code]\n\n<p style=\"text-align:justify;\">Este envoltorio (llamado <a title=\"Manera an\u00f3nima de desarrollar m\u00f3dulos\" href=\"http://bonsaiden.github.io/JavaScript-Garden/es/#function.closures\" target=\"_blank\">closure</a>, en ingl\u00e9s) sirve para unificar varias rutinas generales pero no maneja dependencias de otros scripts, y tampoco <a title=\"Herencia en Javascript\" href=\"http://www.glowind.com/herencia-en-javascript/\" target=\"_blank\">herencia</a> de m\u00f3dulos. Adem\u00e1s de que el m\u00f3dulo es cargado cada vez que se necesite o que aparezca referenciado en una p\u00e1gina (<em>carga s\u00edncrona</em>).</p>\n<p style=\"text-align:justify;\">Pero existen librer\u00edas externas que hacen el trabajo por nosotros (gracias a Dios :D ), tal es el caso de <a title=\"Require.js\" href=\"http://www.requirejs.org\" target=\"_blank\">RequireJS</a> y <a title=\"Melchior.js\" href=\"http://labs.voronianski.com/melchior.js/\" target=\"_blank\">MelchiorJS</a>, que trabajan con <em>carga as\u00edncrona</em> o <a title=\"AMD Review\" href=\"http://addyosmani.com/writing-modular-js/\" target=\"_blank\">AMD</a> (Asyncronous Module Definition).</p>\n<p style=\"text-align:justify;\">El principio de AMD se basa en que en vez de resolver una petici\u00f3n HTTP por cada m\u00f3dulo, se pretenda resolver las dependencias necesarias con una sola petici\u00f3n HTTP de la cual se deriven las dependencias de otros m\u00f3dulos, rutinas y variables y se instancien seg\u00fan se necesiten.</p>\n<p style=\"text-align:justify;\">En RequireJS, y usando el ejemplo anterior podemos hacer uso de AMD de esta forma:</p>\n\n\n[code language=\"html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\u00a0\u00a0\u00a0 &lt;head&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;title&gt;Ejemplo&lt;/title&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;!--\n        &quot;data-main&quot; es usado por RequireJS para determinar\n        la ubicaci\u00f3n del script que tiene las dependencias\n        a ser cargadas de forma as\u00edncrona por la app\n        --&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;script data-main=&quot;assets/js&quot; src=&quot;/ruta/absoluta/a/require.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0\u00a0 &lt;/head&gt;\n\u00a0\u00a0\u00a0 &lt;body&gt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 &lt;!--Cuerpo de la p\u00e1gina--&gt;\n\u00a0\u00a0\u00a0 &lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">En MelchiorJS es exactamente igual. La diferencia de ambas librer\u00edas est\u00e1 en la definici\u00f3n del script de dependencias que manejar\u00e1n. En RequiereJS se definen los m\u00f3dulos as\u00ed:</p>\n\n\n[code language=\"javascript\" collapse=\"true\"]\nrequire([&quot;uno&quot;, &quot;dos&quot;, &quot;tres&quot;, &quot;cuatro&quot;, &quot;cinco&quot;],\nfunction(uno, dos, tres, cuatro, cinco){\n    //hacer cosas con las dependencias directamente\n    //uno.metodo() o cinco.atributo seg\u00fan se necesite\n    //todos los scripts se cargan desde assets/js\n    //definido en el atributo data-main\n});\n[/code]\n\nEn MelchiorJS:\n\n[code language=\"javascript\" collapse=\"true\"]\nmelchiorjs.module(&quot;mi modulo&quot;)\n.require(&quot;uno&quot;)\n.require(&quot;dos&quot;)\n.require(&quot;tres&quot;)\n.require(&quot;cuatro&quot;)\n.require(&quot;cinco&quot;)\n.body(function(){\n    //hacer cosas con las dependencias directamente\n\u00a0\u00a0\u00a0 //uno.metodo() o cinco.atributo seg\u00fan se necesite\n\u00a0\u00a0\u00a0 //todos los scripts se cargan desde assets/js\n\u00a0\u00a0\u00a0 //definido en el atributo data-main\n});\n[/code]\n\n<p style=\"text-align:justify;\">Mientras que RequireJS coloca las dependencias en un Array y se van cargando seg\u00fan se necesiten, en MelchiorJS se encadenan, similar a como si fueran <a title=\"API Promises\" href=\"https://www.promisejs.org/\" target=\"_blank\">Promesas</a>. Personalmente me inclino por MelchiorJS, porque tiene una aproximaci\u00f3n m\u00e1s limpia (en cuanto a sintaxis) de un comportamiento as\u00edncrono de Javascript, sin embargo, el est\u00e1ndar de facto ha sido hasta ahora RequireJS.</p>\n<p style=\"text-align:justify;\">Para la nueva versi\u00f3n de Javascript (a.k.a. Harmony) hay varias propuestas de una API que soporte AMD de forma nativa, dichas propuestas est\u00e1n en <a title=\"CommonJS\" href=\"http://www.commonjs.org\" target=\"_blank\">CommonJS</a>. Pero m\u00e1s all\u00e1 de ser nuevo, lo importante es que el c\u00f3digo sea mantenible, escalable y configurable en la medida de lo posible, sin <a title=\"Panacea Universal\" href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panaceas</a> ni magia vud\u00fa ;)</p>\n<p style=\"text-align:justify;\"><strong>BTW</strong>: M\u00e1s info sobre <a title=\"By Addi Osmani\" href=\"http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html\" target=\"_blank\">patrones de desarrollo modular</a> y una comparaci\u00f3n entre <a title=\"CommonJS vs. RequireJS\" href=\"http://jsmodules.io/cjs.html\" target=\"_blank\">CommonJS vs. RequireJS</a></p>\n<strong>Actualizado 22/06/2015:</strong> <a href=\"https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/\" target=\"_blank\">\u00a1Se\u00f1oras y se\u00f1ores, el futuro est\u00e1 aqu\u00ed!</a>\n\n&lt;/script&gt;"}, {"tags": ["curioscriptades", "free", "frontend", "html", "javascript", "mozilla-firefox", "mozilla-labs", "proyectos", "tecnologia"], "title": "JUNTOS PODEMOS HACER M\u00c1S", "date": "Wed, 15 Apr 2015 23:07:34 +0000", "content": "&lt;script src=\"other pages\" title=\"juntos podemos hacer m&amp;aacute;s\"&gt;\n<p style=\"text-align:justify;\">Las plataformas colaborativas de desarrollo, son ampliamente conocidas y utilizadas en estos tiempos, especialmente para crear ambientes de teletrabajo baratos, multiplataforma y seguros. Como el caso de TeamViewer y otros.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">La gente de Mozilla Labs, cre\u00f3 una librer\u00eda llamada <a title=\"TogetherJS\" href=\"https://togetherjs.com/\" target=\"_blank\">TogetherJS</a> (de ah\u00ed el nombre de este post :) ) que consiste en una plataforma colaborativa escrita nativamente en HTML5, Canvas y, por supuesto, \u00a1Javascript! Es una librer\u00eda bastante interesante, ya que permite:</p>\n\n<ul>\n\t<li>Uso de Chat y Audio Chat, este \u00faltimo basado en el protocolo <a title=\"WebRTC Protocol\" href=\"http://www.webrtc.org/\" target=\"_blank\">WebRTC</a>.</li>\n\t<li style=\"text-align:justify;\">Multiples usuarios en concurrencia.</li>\n\t<li style=\"text-align:justify;\">Sincronizaci\u00f3n de contenidos, un usuario puede ver las modificaciones de otros usuarios en la p\u00e1gina.</li>\n\t<li style=\"text-align:justify;\">Multiples usuarios siguiendo diferentes enlaces desde un mismo dominio.</li>\n\t<li style=\"text-align:justify;\">Observar las interacciones con el mouse de cada usuario conectado.</li>\n</ul>\n\u00a1Y es GRATIS!\n<p style=\"text-align:justify;\">Para usarla, ni siquiera debemos descargar nada. Podemos incluirla directamente en nuestros proyectos de desarrollo web incluyendo la librer\u00eda:</p>\n\n\n[code language=\"html\"]\n&lt;script src=&quot;https://togetherjs.com/togetherjs-min.js&quot;&gt;&lt;/script&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Luego, agregamos un snippet de c\u00f3digo para referenciar a un bot\u00f3n que activar\u00e1 la plataforma colaborativa en nuestra p\u00e1gina:</p>\n\n\n[code language=\"html\"]\n&lt;button onclick=&quot;TogetherJS(this); return false;&quot;&gt;Iniciar TogetherJS&lt;/button&gt;\n[/code]\n\n<p style=\"text-align:justify;\"><em>\u00a1Voil\u00e1!</em> Tenemos una plataforma colaborativa de desarrollo, gratuita y que hace el trabajo necesario y suficiente para el desarrollo Web. Librer\u00edas como esta, son las que motivan a continuar haciendo investigaciones. A que mola, \u00bfno? ;)</p>\n&lt;/script&gt;"}, {"tags": ["y-sin-jquery", "aprender", "datos", "formato", "frontend", "html", "javascript", "javascripteando-ando", "tecnologia", "zepto"], "title": "\u00bfQUEEZEPTO?", "date": "Wed, 01 Apr 2015 16:34:11 +0000", "content": "&lt;script src=\"my own\" title=\"que es esto\"&gt;\n<p style=\"text-align:justify;\">Ehm, si... As\u00ed deber\u00eda decir, pero a veces es bueno escribir con mala <em>hortograf\u00eda </em>para hacer \u00e9nfasis y que le paren a uno. Pero no quiero que me <span title=\"presten atenci\u00f3n\">paren</span> a m\u00ed, p\u00e1renle a <strong>Zepto.js</strong>.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a title=\"Zepto.js\" href=\"http://zeptojs.com/\" target=\"_blank\">Zepto.js</a> es una librer\u00eda similar a <a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a>, pero se describe a si misma como \"el primo ligero y r\u00e1pido de jQuery\". La idea no es reemplazar a la librer\u00eda, sino demostrar lo que siempre digo, que ninguna tecnolog\u00eda es la <a title=\"Panacea Universal\" href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panacea</a> que va a resolver todos los problemas del mundo, siempre es bueno probar alternativas.</p>\n<p style=\"text-align:justify;\">Zepto se perfila como una librer\u00eda <a title=\"Aumentar producci\u00f3n-calidad y Reducir esfuerzo-costo\" href=\"http://www.lean.org/whatslean/\" target=\"_blank\">Lean</a>, desarrollada a un tercio del peso en KB de jQuery pero corriendo 3 veces m\u00e1s r\u00e1pido, optimizado para m\u00f3viles por defecto y una de las caracter\u00edsticas que m\u00e1s me agradan de esta librer\u00eda es que <strong><span style=\"color:#d25349;\">NO</span></strong> provee soporte para Internet Explorer menor a la versi\u00f3n 10+ (yujuuuu!!! :D )</p>\n\n\n[caption id=\"attachment_282\" align=\"aligncenter\" width=\"362\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png\"><img class=\" wp-image-282\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png?w=300\" alt=\"juasjuasjuas...\" width=\"362\" height=\"180\" /></a> <strong style=\"font-size:13px;\">juas juas juas juas...</strong>[/caption]\n<p style=\"text-align:justify;\">La granularidad con la que Zepto est\u00e1 desarrollada me sorprende, en especial porque algunas funcionalidades que est\u00e1n por defecto incluidas en jQuery, tales como llamadas as\u00edncronas via AJAX y manejo de eventos, est\u00e1n en m\u00f3dulos separados (bien espec\u00edficados en su documentaci\u00f3n) que pueden estar opcionales en un desarrollo con Zepto.</p>\n<p style=\"text-align:justify;\">Es decir que nos deja la manipulaci\u00f3n <a title=\"Document Object Model\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\" target=\"_blank\">DOM</a> no transversal de un documento HTML nada m\u00e1s descargar e incluir la librer\u00eda <code>zepto.js</code> o <code>zepto.min.js</code> en nuestros proyectos. La buena noticia es que [casi] todas las funciones que posee jQuery para manipulaci\u00f3n del DOM funcionan del mismo modo con Zepto.</p>\n<p style=\"text-align:justify;\">La \u00bfmala? noticia es que hay \"detalles\" que la hacen diferente:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><strong>Zepto NO itera sobre atributos id</strong> (<code>'#'</code>), lo cual no es malo si se supone que un atributo id debe ser \u00daNICO en el DOM, es decir que debes utilizar otra forma de iterar sobre elementos (usar clases CSS o elementos de lista como <code>'li'</code> pueden ser opciones v\u00e1lidas y saludables para el c\u00f3digo :)</li>\n\t<li style=\"text-align:justify;\"><strong>Zepto NO posee soporte a pseudo-selectores CSS </strong>(del tipo <code>':visible'</code> o <code>':checked'</code>), lo que quiere decir que debes ingeniarte una forma diferente de verificar si un <code>checkbox</code> est\u00e1 <code>checked</code> (usar eventos, por ejemplo). Aunque hay un <a title=\"Zepto-selector.js\" href=\"https://github.com/madrobby/zepto/blob/master/src/selector.js#files\" target=\"_blank\">m\u00f3dulo</a> de Zepto que provee soporte parcial a algunos pseudo-selectores.</li>\n\t<li style=\"text-align:justify;\"><strong>Zepto NO soporta formas abreviadas de campos input</strong> (como <code>'input:text'</code> o <code>'input:number'</code>), esto es consecuencia de no soportar pseudo-selectores completamente, entonces para seleccionar a todos los <code>input</code> de tipo <code>text</code> se debe usar la forma larga: <code>'input[type=text]'</code> para referenciarlos.</li>\n</ul>\n<p style=\"text-align:justify;\">Y es s\u00f3lo el comienzo <em>*risa malvada*</em> ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Wed, 01 Apr 2015 15:21:08 +0000"}, {"tags": ["y-sin-jquery", "drag", "drop", "html", "javascript", "javascripteando-ando", "nuevo", "sin-jquery", "tecnologia", "zepto"], "title": "DRAG & DROP CON ZEPTO", "date": "Sun, 05 Apr 2015 22:35:37 +0000", "content": "&lt;script src=\"my own\" title=\"drag &amp;amp; drop con zepto\"&gt;\n\n\u00a1Al fin! Despu\u00e9s de tanto indagar (y sufrir :'( ) puedo escribo este post...\n\n<!--more-->\n<p style=\"text-align:justify;\"><a title=\"jQuery\" href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> ha hecho que el Drag &amp; Drop (arrastrar y soltar) sea sencillo y f\u00e1cil de manejar, entonces \u00bfpara qu\u00e9 complicarse la vida con otra cosa? Jejeje, no es complicarse, pues siempre he dicho que ninguna tecnolog\u00eda es la <a title=\"Panacea universal\" href=\"http://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">panacea</a> que va a resolver todos los problemas, adem\u00e1s, siempre es bueno tener otras alternativas, \u00bfno? En la variedad est\u00e1 el gusto :P</p>\n<p style=\"text-align:justify;\">En mi campa\u00f1a de \"desapego\" por esa librer\u00eda, y despu\u00e9s de encontrar <a title=\"Zepto.js\" href=\"http://zeptojs.com/\" target=\"_blank\">Zepto</a>, explicado en este <a title=\"\u00bfQue es Zepto?\" href=\"http://wp.me/p5CTtO-38\" target=\"_blank\">post</a>, y usada en este otro <a title=\"Colorea tu vida... y tus p\u00e1ginas Web\" href=\"http://wp.me/p5CTtO-7l\" target=\"_blank\">post</a>, investigu\u00e9 una librer\u00eda que funciona para la clase de interacciones de arrastrar y soltar, as\u00ed como ordenar elementos.</p>\n<p style=\"text-align:justify;\"><a title=\"Zepto-dnd\" href=\"http://ma.rkusa.st/zepto-dnd/\" target=\"_blank\">Zepto-dnd</a> es una librer\u00eda f\u00e1cil de usar, y proporciona, de forma razonablemente sencilla, esta interacci\u00f3n para crear p\u00e1ginas con bastante elementos de UI. Para reforzar este ejemplo, hice una prueba sencilla con tres contenedores en HTML y CSS, y un cuadro que se desplaza entre ellos. Para esto incluimos las librerias necesarias en orden:</p>\n\n\n[code lang=\"html\" collapse=\"true\"]\n\u00a0\u00a0\u00a0 &lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;event.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;data.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;zepto-dnd.js&quot;&gt;&lt;/script&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Luego el esquema de nuestra aplicaci\u00f3n...</p>\n\n\n[code lang=\"html\" collapse=\"true\"]\n\u00a0\u00a0\u00a0 &lt;div class=&quot;recipiente&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;h2&gt;Recipiente 1&lt;/h2&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;div class=&quot;cuadro&quot;&gt;&lt;/div&gt;\n\u00a0\u00a0 \u00a0&lt;/div&gt;\n\u00a0\u00a0 \u00a0&lt;div class=&quot;recipiente&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;h2&gt;Recipiente 2&lt;/h2&gt;\n\u00a0\u00a0 \u00a0&lt;/div&gt;\n\u00a0\u00a0 \u00a0&lt;div class=&quot;recipiente&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;h2&gt;Recipiente 3&lt;/h2&gt;\n\u00a0\u00a0 \u00a0&lt;/div&gt;\n[/code]\n\nUn poco de estilo...\n\n[code lang=\"css\" collapse=\"true\"]\n.cuadro{\n\u00a0\u00a0 \u00a0float: left; margin: 3px;\n\u00a0\u00a0 \u00a0width: 50px; height: 50px;\n\u00a0\u00a0 \u00a0background-color: #7CBBBB;\n\u00a0\u00a0 \u00a0border: 5px solid #D25349;\n}\n.recipiente{\n\u00a0\u00a0 \u00a0float: left; margin: 5px;\n\u00a0\u00a0 \u00a0width: 200px; height: 300px;\n\u00a0\u00a0 \u00a0background-color: white;\n\u00a0\u00a0 \u00a0border: 5px solid #7cbbbb;\n}\n[/code]\n\n...y el c\u00f3digo que importa :)\n\n[code lang=\"javascript\" collapse=\"true\"]\n$(document).ready(function() {\n   $('.cuadro').draggable();\n\u00a0  $('.recipiente').droppable();\n});\n[/code]\n\n<p style=\"text-align:justify;\">Sencillo, \u00bfno? Pues \u00a1no!, ya que para lograr el efecto deseado, tuve que <del>modificar</del> comentar una<del>s</del> l\u00ednea<del>s</del> del n\u00facleo de la librer\u00eda Zepto-dnd, espec\u00edficamente la l\u00ednea 381 as\u00ed como sigue:</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" firstline=\"380\" highlight=\"381\"]\n...\n\u00a0\u00a0\u00a0 // e.dataTransfer.effectAllowed = 'copy'\n...\n[/code]\n\n<p style=\"text-align:justify;\">Lo hice, porque investigando un poco sobre la API Drag &amp; Drop de HTML5 en este <a title=\"HTML5 Rocks Drag &amp; Drop\" href=\"http://www.html5rocks.com/en/tutorials/dnd/basics/\" target=\"_blank\">art\u00edculo</a>, descubr\u00ed que los eventos necesarios para lograr el efecto de arrastrar y soltar son muchos, y la librer\u00eda, por desgracia, solo maneja un efecto a la vez, aunque \u00e9ste pudiera ser personalizado por medio de su API, la librer\u00eda no ofrece muchas opciones para personalizar esto.</p>\n<p style=\"text-align:justify;\">A\u00fan as\u00ed sigue siendo una opci\u00f3n interesante, digna de arrastrar \u00bfverdad? ;)</p>\n&lt;/script&gt;\n\n<strong>Actualizado 22-05-2015:</strong> Basta con comentar la linea 381 y funciona del mismo modo :)"}, {"tags": ["aprender", "curioscriptades", "html", "javascript", "mozilla-firefox", "nuevo", "tecnologia", "vanilla-js"], "title": "HACER UN \"MOCKUP\" CON INKSCAPE Y JAVASCRIPT", "date": "Mon, 06 Apr 2015 15:01:53 +0000", "content": "&lt;script src=\"other pages\" title=\"hacer un mockup con inkscape y javascript\"&gt;\n<p style=\"text-align:justify;\">Un <a title=\"Traducci\u00f3n: &quot;cosa agrandada&quot;\" href=\"https://en.wikipedia.org/wiki/Mockup\" target=\"_blank\"><em>mockup</em></a> es un prototipo (generalmente de la interfaz) de un sistema, que permite a los clientes ver, en cierto grado, la funcionalidad de la aplicaci\u00f3n, antes de que se inicie el desarrollo. Tambi\u00e9n sirve para definir los requerimientos del cliente cuando no est\u00e1n muy claros y evitar cosas indebidas como la tragedia del <a title=\"...\" href=\"https://es.wikipedia.org/wiki/Vasa\" target=\"_blank\">Barco de Vasa</a>.\n<!--more--></p>\n<p style=\"text-align:justify;\">No voy a explicar que es ni como se trabaja con la herramienta <a title=\"Herramienta para dise\u00f1o de gr\u00e1ficos vectoriales (SVG)\" href=\"https://inkscape.org/es/\" target=\"_blank\">Inkscape</a>, mucho menos como y donde se descarga o se instala en las diferentes plataformas (\u00ac\u00ac' busquen en <a title=\"Ehm, si...\" href=\"https://www.youtube.com/watch?v=P5nS_GbBsB0\" target=\"_blank\">Youtube</a> o <em><a title=\"Ehm, si...\" href=\"https://www.google.co.ve/#q=instalar%20inkscape\" target=\"_blank\">Googl\u00e9enlo</a></em>), que este blog va de Javascript \u00a1caramba! Lo que si voy a explicar es que cuando crean un objeto (\u00a1y en Inkscape, todo es un objeto!) pueden a\u00f1adirle interacciones:</p>\n\n\n[caption id=\"attachment_299\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/propiedades.png\"><img class=\"wp-image-299 size-medium\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/propiedades.png?w=300\" alt=\"\u00bflos nombres les parecen familiares?\" width=\"300\" height=\"247\" /></a> <strong style=\"font-size:13px;\">\u00bflos nombres les parecen familiares?</strong>[/caption]\n<p style=\"text-align:justify;\">Una vez guardada su imagen (en formato *.svg) pueden abrirla en el navegador de su preferencia (el m\u00edo es <a title=\"\u00a1Awante zorro!\" href=\"https://www.mozilla.org/es-ES/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>). Dentro de los campos de entrada pueden ingresar c\u00f3digo Javascript trocho y mocho como si nada, como si de un <a title=\"What You See Is What You Get\" href=\"https://en.wikipedia.org/wiki/WYSIWYG\" target=\"_blank\">WYSIWYG</a> se tratara...</p>\n<p style=\"text-align:justify;\">Lo m\u00e1s simple, puede ser usar el evento <code>onclick</code> con la funci\u00f3n <code>window.alert()</code> o la propiedad <code>window.location.href</code> del <a title=\"Document Object Model\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\" target=\"_blank\">DOM</a> para \"simular\" la navegaci\u00f3n entre p\u00e1ginas (que vendr\u00edan a ser otras im\u00e1genes *svg u otros recursos), las posibilidades son [casi] infinitas y muy sencillas, eso s\u00ed.</p>\n<p style=\"text-align:justify;\">Hacer un <em>mockup</em> como punto de partida para el desarrollo de aplicaciones no es trabajo en vano. Grandes corporaciones como Mozilla y Google se benefician de esta tecnolog\u00eda reduciendo el tiempo en un 20 y 30% en fases superiores del desarrollo web. Nada despreciable comparado con un desarrollo simple en el que pudiera existir cambio de requerimientos de \u00faltimo minuto. Dicha pr\u00e1ctica deber\u00eda ser penada :P</p>\n<p style=\"text-align:justify;\">Si te decides a usar herramientas automatizadas porque esta soluci\u00f3n propuesta te parece muy <a title=\"Ehm, si...\" href=\"https://es.wikipedia.org/wiki/Espa%C3%B1ol_chileno\" target=\"_blank\">charcha</a>, puedes revisar este <a title=\"Herramientas para hacer Mockups\" href=\"http://mashable.com/2012/06/07/mockup-tools/\" target=\"_blank\">enlace</a>. Mientras tanto, el Barco de Vasa sigue navegando en los mares de la incertidumbre... ;)</p>\n<p style=\"text-align:justify;\"><strong title=\"By The Way: Por cierto...\">BTW: </strong>El cr\u00e9dito por esta informaci\u00f3n no es m\u00edo, sino de un post que consegu\u00ed por <a href=\"http://eclipsesource.com/blogs/2012/07/03/wireframing-inkscape-javascript/\" target=\"_blank\">aqu\u00ed</a>.</p>\n&lt;/script&gt;"}, {"tags": ["algoritmos", "aprender", "datos", "javascript", "javascripteando-ando", "tecnologia"], "title": "SEEK AND DESTROY (ELEMENTOS DUPLICADOS)", "date": "Sun, 05 Apr 2015 22:49:11 +0000", "content": "&lt;script src=\"my own\" title=\"algoritmos de b&amp;uacute;squeda y eliminaci&amp;oacute;n de elementos num&amp;eacute;ricos repetidos\"&gt;\n<p style=\"text-align:justify;\">Algo tan sencillo en la programaci\u00f3n, como tener un <code>Array</code> con elementos repetidos es tan com\u00fan como tener acn\u00e9 o ir al ba\u00f1o...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Veamos, hay much\u00edsimas formas de eliminar elementos duplicados en un Array, pero para no hacer el post tan largo, voy a irme por tres v\u00edas: usar VanillaJS (a.k.a. Javascript <em>trocho y mocho</em>), usar funciones propias de Javascript\u00a0 prototipadas como <a title=\"Map function\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2Fmap\" target=\"_blank\">map()</a> o <a title=\"Reduce function\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FReduce\" target=\"_blank\">reduce()</a>, o usar una librer\u00eda externa.</p>\n\n<h2 style=\"text-align:justify;\">Caso de estudio</h2>\nPara no generalizar, voy a usar un Array num\u00e9rico:\n\n[code lang=\"javascript\"]\nvar arr = [1, 2, 31, 45, 7, 31, 2, 5, 7, 2];\n[/code]\n\n<h2>V\u00eda VanillaJS</h2>\nOrdeno el arreglo y comparo cada elemento con el siguiente.\n\n[code lang=\"javascript\" collapse=\"true\"]\narr.sort(function(a, b){return a - b;});\nfor (var i = 0; i &lt; arr.length; i++) {\n  if(arr[i] === arr[i+1]){\n    arr.splice(i--, 1);\n  }\n};\nconsole.log(arr);\n[/code]\n\n<p style=\"text-align:justify;\">La funci\u00f3n <code>sort()</code> ordenar\u00e1 el arreglo ascendente o descendentemente si la funci\u00f3n pasada como par\u00e1metro retorna un valor positivo o negativo respectivamente. Lo dem\u00e1s es eliminar el elemento que se est\u00e1 comparando si corresponde con el pr\u00f3ximo valor encontrado.</p>\n\n<h2 style=\"text-align:justify;\">V\u00eda funciones prototipadas</h2>\n<p style=\"text-align:justify;\">Uso la funci\u00f3n prototipada <code>reduce()</code> para recorrer todo el arreglo, compararlo con los duplicados que se encuentren y mudarlos (una sola vez) a un nuevo arreglo.</p>\n\n\n[code lang=\"javascript\" collapse=\"true\"]\nvar miarr = arr.reduce(function(a, elem) {\n  if(a.indexOf(elem) === -1) {\n\u00a0\u00a0  a.push(elem);\n\u00a0\u00a0}\n\u00a0\u00a0return a;\n}, []);\nconsole.log(miarr);\n[/code]\n\n<p style=\"text-align:justify;\">La funci\u00f3n prototipada <code>reduce()</code> recibe varios par\u00e1metros, que dependiendo del contexto ayudan a lo mismo, esto es, reducir todos los elementos de un arreglo a un \u00fanico valor, o al menos al retorno de un \u00fanico valor.</p>\n\n<h2 style=\"text-align:justify;\">V\u00eda librer\u00edas externas</h2>\n<p style=\"text-align:justify;\">Las dos anteriores est\u00e1n muy bien, pero, si lo necesitamos para <em><strong>ayer</strong></em> \u00bftiene sentido ponerse creativos? Pues, no. Afortunadamente existen varias librer\u00edas que hacen el trabajo pesado por nosotros, una de ellas es <a title=\"Underscore.js\" href=\"underscorejs.org/\" target=\"_blank\">Underscore.js</a>.</p>\n<p style=\"text-align:justify;\">La inclu\u00edmos en nuestro c\u00f3digo HTML:</p>\n\n\n[code lang=\"html\"]&lt;script src=&quot;underscore.js&quot;&gt;&lt;/script&gt;[/code]\n\n<p style=\"text-align:justify;\">Y usamos la funci\u00f3n <code>uniq()</code>:</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" highlight=\"1\"]\narr = _.uniq(arr);\nconsole.log(arr);\n[/code]\n\n<p style=\"text-align:justify;\">Entendiendo que el caracter _ representa el <a title=\"Namespaces\" href=\"http://www.codeproject.com/Articles/19030/Namespaces-in-JavaScript\" target=\"_blank\">espacio de nombres</a> por el cual se rige la librer\u00eda. Pero sobre esas cosas, y en especial sobre esta librer\u00eda, hablar\u00e9 m\u00e1s adelante en otro post.</p>\n<p style=\"text-align:justify;\">Espero no duplicarme ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Mon, 06 Apr 2015 13:41:13 +0000"}, {"tags": [], "date": "Fri, 10 Apr 2015 16:32:40 +0000"}, {"tags": [], "date": "Tue, 14 Apr 2015 14:45:28 +0000"}, {"tags": ["sin-categoria"], "title": "CLONANDO OBJETOS EN JAVASCRIPT", "date": "Tue, 14 Apr 2015 15:43:08 +0000", "content": "Un compa\u00f1ero que hizo un excelente trabajo sobre Clonaci\u00f3n de Objetos en Javascript"}, {"tags": [], "date": "Mon, 20 Apr 2015 15:04:30 +0000"}, {"tags": [], "date": "Mon, 20 Apr 2015 15:27:12 +0000"}, {"tags": [], "date": "Mon, 20 Apr 2015 15:31:27 +0000"}, {"tags": [], "date": "Mon, 20 Apr 2015 15:47:58 +0000"}, {"tags": [], "date": "Mon, 20 Apr 2015 15:50:31 +0000"}, {"tags": [], "title": "ACERCA DE MI", "date": "Tue, 21 Apr 2015 13:58:17 +0000", "content": "<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/avatar-cat.gif\"><img class=\" size-medium wp-image-373 aligncenter\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/avatar-cat.gif?w=300\" alt=\"avatar-cat\" width=\"300\" height=\"300\" /></a>Ehm, bueno, si...\n<p style=\"text-align:justify;\">Es un hecho, me parece un poco narcisista decir qui\u00e9n soy o hablar de m\u00ed como si tal cosa. La gente se suele definir en funci\u00f3n de lo hace y no de lo que es, pero a\u00fan m\u00e1s grave, tampoco se definen por lo que pueden llegar a ser, qued\u00e1ndose girando en una noria como el gato de la imagen.</p>\n<p style=\"text-align:justify;\"><strong>Venezolano, so\u00f1ador y loco.</strong> mitad <em>Jedi</em>, mitad <em>Sith</em>, mitad <em>geek</em>, mitad <em>\"jaquer\"</em>. Si, con mala ortograf\u00eda y cuatro mitades que suman m\u00e1s que uno :) . Odio a muerte la mala ortograf\u00eda y amo apasionadamente el chocolate, pero supongo que eso es irrelevante :( ...</p>\n<p style=\"text-align:justify;\">Siempre en constante aprendizaje, reci\u00e9n migrado del mundo acad\u00e9mico y acartonado del PHP, del Java y del MySQL al apasionante mundo de Javascript, que para m\u00ed es como mudarse de Caracas a M\u00e9rida (los venezolanos entender\u00e1n a que me refiero) ;)</p>\n\n<h2 style=\"text-align:justify;\">Pero, se que esta es la parte m\u00e1s importante...</h2>\nMe llamo <a title=\"\u00a1Este soy yo!\" href=\"https://ve.linkedin.com/in/jhonyalbertogrilletmedina\" target=\"_blank\">Jhony Alberto Grillet Medina</a>, y este es mi blog :D"}, {"tags": [], "date": "Tue, 21 Apr 2015 13:30:39 +0000"}, {"tags": [], "title": "MANIFIESTO", "date": "Wed, 22 Apr 2015 12:58:37 +0000", "content": "<div class=\"_5pbx userContent\">\n<h2 style=\"text-align:center;\">MANIFIESTO DE INSUMISION SELECTIVA</h2>\n<ul>\n\t<li style=\"text-align:justify;\"><span style=\"color:#d25349;\">MANIFIESTO</span>: Carta abierta de expresi\u00f3n de opiniones, generalmente consensuadas, basadas en principios generales, \u00e9ticas individuales y muy personales.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#d25349;\">INSUMISION</span>: Estado del ser humano en el cual se declara racional y an\u00e1rquicamente libre de todo sistema, <span style=\"color:#d25349;\">AGENTE</span> o entidad contraria a sus principios y escala de valores.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#d25349;\">SELECTIVO</span>: Acci\u00f3n y efecto de seleccionar, que generalmente implica la canalizaci\u00f3n de acciones hacia un objetivo o un fin determinado y espec\u00edfico.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#d25349;\">AGENTE</span>: Cualquier entidad (humana, animal o material) que, independiemente del sexo, atente con imponer normas y/o sanciones que impliquen el perjuicio \u00e9tico de la escala de valores de un individuo.</li>\n\t<li style=\"text-align:justify;\"><span style=\"color:#d25349;\">INDIVIDUO</span>: Entidad racional capaz de mantener una escala de valores \u00e9tica y s\u00f3lida contra toda circunstancia negativa o sistema.</li>\n</ul>\n<ol>\n\t<li style=\"text-align:justify;\">El tiempo es el recurso m\u00e1s valioso del individuo, pues este no es renovable.</li>\n\t<li style=\"text-align:justify;\">Los Agentes NO son Individuos.</li>\n\t<li style=\"text-align:justify;\">La libertad de expresi\u00f3n es un derecho consagrado en la Carta de los Derechos Humanos de la ONU, por tanto es IRRENUNCIABLE.</li>\n\t<li style=\"text-align:justify;\">La esclavitud fue abolida en muchas naciones (inclu\u00edda <strong>Venezuela</strong>), a pesar de que los diferentes sistemas y Agentes no reconozcan esto.</li>\n\t<li style=\"text-align:justify;\">El respeto parte desde la base individual de cada individuo, valga la redundancia, entendido en t\u00e9rminos del presente manifiesto. Es decir, que una escala de valores \u00e9ticos consolidados ante cualquier efecto del entorno, implicar\u00e1 ipso facto un profundo respeto por las actividades de los dem\u00e1s individuos, NO as\u00ed de los Agentes.</li>\n\t<li style=\"text-align:justify;\">La ley de acci\u00f3n y reacci\u00f3n en la ciencia f\u00edsica, o lo que en algunas doctrinas religiosas se considera como \"Ley del Karma\", establece en principio que toda fuerza accionadora generar\u00e1 otra fuerza reaccionadora de igual magnitud, pero en sentido contrario a la fuerza accionadora. En esto se basa tambi\u00e9n la insumisi\u00f3n.</li>\n\t<li style=\"text-align:justify;\">Las normativas, sistemas y <span style=\"color:#d25349;\">AGENTES</span> nunca estar\u00e1n por encima de los individuos que los crearon.</li>\n\t<li style=\"text-align:justify;\">En atenci\u00f3n al principio 7 del presente manifiesto, el respeto entendido en el punto 5 del presente manifiesto, nunca ser\u00e1 contravenido o cercenado por NINGUNA normativa, de ser as\u00ed o de considerarse as\u00ed por el <span style=\"color:#d25349;\">INDIVIDUO</span>, actuar\u00e1 en el marco del punto 6, contra el sistema o <span style=\"color:#d25349;\">AGENTE</span> que genere la \"fuerza\" esclavizadora y/o alienante.</li>\n\t<li style=\"text-align:justify;\">El ejercicio del punto 8, implicar\u00e1 una responsabilidad extr\u00ednseca y una intr\u00ednseca, que debe ser asumida por el individuo, sin perjuicio \u00e9tico o moral de sus convicciones, esto es, sin quejas, de manera consensuada y en pleno uso de las facultades mentales como sujeto de derecho.</li>\n\t<li style=\"text-align:justify;\">Las responsabilidades por las consecuencias acontecidas durante el ejercicio del punto 8, no significar\u00e1n desmotivaci\u00f3n o desmejora en la aplicaci\u00f3n de la fuerza, al contrario, implica mayor compromiso con los objetivos, principios y realizaci\u00f3n personal del individuo, siempre en perjuicio del <span style=\"color:#d25349;\">AGENTE</span> y en beneficio de otros individuos. Este \u00faltimo principio es el objetivo final del presente manifiesto.</li>\n</ol>\n<blockquote>\"Cuando la tiran\u00eda se hace ley, la rebeli\u00f3n es un derecho...\"</blockquote>\n<h2 style=\"text-align:center;\">FIN DEL MANIFIESTO</h2>\n</div>"}, {"tags": ["algoritmos", "aprender", "curioscriptades", "datos", "html", "javascript", "mozilla-firefox", "nuevo", "proyectos", "tecnologia"], "title": "LOS FANTASMAS PELEAN EN EL NAVEGADOR. PHANTOMJS VS. SLIMERJS", "date": "Wed, 06 May 2015 13:14:03 +0000", "content": "&lt;script src=\"my own\" title=\"phantomjs vs\\. slimerjs\"&gt;\n\n\u00a1Es enserio! Aqu\u00ed est\u00e1 la prueba ;)\n\nhttps://www.youtube.com/watch?v=Fe93CLbHjxQ\n\nEhm, no, no era eso (a pesar de que no supero el <a title=\"Ehm, si...\" href=\"https://en.wikipedia.org/wiki/Chroma_key\" target=\"_blank\">chroma-key</a> del video, ni la \u00e9poca)...\n\n<!--more-->\n<p style=\"text-align:justify;\">En realidad, los fantasmas se pelean por el control del navegador web. Particularmente hay dos que \"pelean\" bastante fuerte, pero que tienen conceptos similares en cuanto a utilidad. Se tratan de <a title=\"PhantomJS\" href=\"http://phantomjs.org/\" target=\"_blank\">PhantomJS</a> y de <a title=\"SlimerJS\" href=\"http://slimerjs.org/index.html\" target=\"_blank\">SlimerJS</a>.</p>\n\n<h2>UNA R\u00c1PIDA COMPARACI\u00d3N</h2>\n<table border=\"1\">\n<thead>\n<tr>\n<th><span style=\"color:#d25349;\">ITEM</span></th>\n<th><span style=\"color:#16bec6;\">PhantomJS</span></th>\n<th><span style=\"color:#019739;\">SlimerJS</span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left;\"><span style=\"color:#d25349;\"><strong>Logo</strong></span></td>\n<td><span style=\"color:#16bec6;\"><a href=\"https://jotaeseymas.files.wordpress.com/2015/05/phantomjs.png\"><img class=\"alignnone wp-image-466\" src=\"https://jotaeseymas.files.wordpress.com/2015/05/phantomjs.png\" alt=\"phantomjs\" width=\"200\" height=\"200\" /></a></span></td>\n<td><a href=\"https://jotaeseymas.files.wordpress.com/2015/05/slimerjs1.png\"><img class=\"alignnone wp-image-469\" src=\"https://jotaeseymas.files.wordpress.com/2015/05/slimerjs1.png\" alt=\"slimerjs\" width=\"200\" height=\"200\" /></a></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Versi\u00f3n Actual</strong></span></td>\n<td style=\"text-align:center;\"><span style=\"color:#16bec6;\">2.0.0</span></td>\n<td style=\"text-align:center;\"><span style=\"color:#019739;\">0.9.5</span></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Motor</strong></span></td>\n<td style=\"text-align:center;\"><span style=\"color:#16bec6;\">Chrome / WebKit</span></td>\n<td style=\"text-align:center;\"><span style=\"color:#019739;\">Firefox / Gecko</span></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Lenguaje de Programaci\u00f3n</strong></span></td>\n<td style=\"text-align:center;\"><span style=\"color:#16bec6;\">C + Javascript</span></td>\n<td style=\"text-align:center;\"><span style=\"color:#019739;\">Xul + Javascript</span></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Headless (sin cabeceras)</strong></span></td>\n<td style=\"text-align:center;\"><span style=\"color:#16bec6;\">Si</span></td>\n<td style=\"text-align:center;\"><span style=\"color:#019739;\">No</span></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Est\u00e1ndar AMD</strong></span></td>\n<td style=\"text-align:center;\"><span style=\"color:#16bec6;\">RequireJS</span></td>\n<td style=\"text-align:center;\"><span style=\"color:#019739;\">CommonJS</span></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Requiere compilaci\u00f3n (*)</strong></span></td>\n<td style=\"text-align:center;\"><strong><span style=\"color:#16bec6;\">SI</span></strong></td>\n<td style=\"text-align:center;\"><strong><span style=\"color:#019739;\">NO</span></strong></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Peso (en MB) (*)\n</strong></span></td>\n<td style=\"text-align:center;\"><strong><span style=\"color:#16bec6;\">150</span></strong></td>\n<td style=\"text-align:center;\"><strong><span style=\"color:#019739;\">20</span></strong></td>\n</tr>\n<tr>\n<td><span style=\"color:#d25349;\"><strong>Caracter\u00edsticas</strong></span></td>\n<td colspan=\"2\">\n<ul>\n\t<li><span style=\"color:#458b74;\">Manipulaci\u00f3n del DOM</span></li>\n\t<li><span style=\"color:#458b74;\">Automatizaci\u00f3n de Eventos del Navegador</span></li>\n\t<li><span style=\"color:#458b74;\">Workflow para Pruebas</span></li>\n\t<li><span style=\"color:#458b74;\">Rendimiento y Estad\u00edsticas</span></li>\n\t<li><span style=\"color:#458b74;\">Webscraping</span></li>\n\t<li><span style=\"color:#458b74;\">Monitoreo de Red</span></li>\n\t<li><span style=\"color:#458b74;\">Capturas de Pantalla</span></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p style=\"text-align:justify;\">\u00a1<a title=\"\u00a1Caray!\" href=\"https://jotaeseymas.files.wordpress.com/2015/05/8c6c8-mono.jpg\" target=\"_blank\">Changos</a>! Hab\u00eda olvidado lo importante que es explicar de que va este post antes de lanzar la tabla. \u00a1Ni\u00f1os, no intenten eso en casa! :(</p>\n<p style=\"text-align:justify;\">A ver... Aunque mi experiencia es poca con los <a title=\"Navegador sin GUI\" href=\"http://blog.arhg.net/2009/10/what-is-headless-browser.html\" target=\"_blank\"><em>headless-browsers</em></a>, de investigar por aqu\u00ed y por all\u00e1, me di cuenta que son muy \u00fatiles para todo lo que describo arriba, especialmente para aplicaciones web. Ambos poseen una API Javascript muy rica en funcionalidades que permiten al toolkit, realizar la automatizaci\u00f3n de pruebas, capturas de pantalla, monitoreo, y un largo etc\u00e9tera.</p>\n<p style=\"text-align:justify;\">Un <em>headless-browser,</em> permite manipular eventos del navegador sin necesidad de la interacci\u00f3n de un usuario, pues por medio del script desarrollado a nuestro gusto, podemos simular dicha interacci\u00f3n con nuestra aplicaci\u00f3n web.</p>\n<p style=\"text-align:justify;\">Dicho esto, y considerando los <span style=\"color:#d25349;\"><strong>(*)</strong></span> all\u00e1 arriba, mi decisi\u00f3n es <span style=\"color:#0f9635;\">SlimerJS</span>, porque me gusta mucho m\u00e1s mi navegador <a title=\"FIrefox for Developers\" href=\"https://www.mozilla.org/es-ES/firefox/developer/\" target=\"_blank\">Mozilla Firefox</a> (uso la versi\u00f3n Aurora para desarrolladores) sobre Google Chrome y su harto consumo de memoria, adem\u00e1s no requiere compilaci\u00f3n.</p>\n<p style=\"text-align:justify;\">Habl\u00e9 un poco sobre ellos, pero en adelante, espero continuar probando ambos <em>headless-browser\u00a0 </em>cual fantasma que camina... \u00a1Boo! ;)</p>\n&lt;/script&gt;"}, {"tags": ["angularjs", "datos", "frontend", "html", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "libreria-angular", "tecnologia", "tutorial"], "title": "LIBRERIA ANGULAR. PARTE 2. ENRUTANDO", "date": "Sun, 26 Apr 2015 21:41:19 +0000", "content": "<p style=\"text-align:justify;\">&lt;script src=\"my own\" title=\"parte 2. enrutando\"&gt;</p>\n<p style=\"text-align:justify;\">Se que no es mi\u00e9rcoles, que ya ha pasado un mes desde el <a title=\"Parte 1. Controlando y Dirigiendo\" href=\"http://wp.me/p5CTtO-2P\">\u00faltimo post</a> y que quiz\u00e1s no tenga excusa por su paciencia... Pero aqu\u00ed estamos de nuevo, sacando la info necesaria (y el tiempo y la paciencia, etc\u00e9tera) para este tuto :P</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Si revisaron mi repo en el <a title=\"Mi repo...\" href=\"https://github.com/chinuxparibus/libreria-angular\" target=\"_blank\">Gato-Pulpo</a>, se dar\u00e1n cuenta que est\u00e1 muy diferente a como lo dej\u00e9 la primera vez que estaba subiendo archivos cual ne\u00f3fito cuando aprende algo nuevo. Entre las cosas que hice, est\u00e1 la refactorizaci\u00f3n del c\u00f3digo, pero vamos por partes como <a title=\"Ehm, si...\" href=\"https://es.wikipedia.org/wiki/Jack_el_Destripador\" target=\"_blank\">Jack El Destripador</a>.</p>\n\n<h2 style=\"text-align:justify;\">Controlando</h2>\n<p style=\"text-align:justify;\">En el archivo <code>app/controllers.js</code> inclu\u00ed un nuevo controlador que se encarga de darle sentido a los templates de nuestra aplicaci\u00f3n, dejando una p\u00e1gina de inicio m\u00e1s modularizada, llamado <code>TemplateCtrl</code>:</p>\n\n\n[code lang=\"js\" collapse=\"true\"]\n//Controller para administrar los templates\nlibreria.controller('TemplateCtrl', ['$scope', function($scope) {\n\u00a0\u00a0 \u00a0var rootDir = 'templates/';\n\u00a0\u00a0 \u00a0$scope.templates = [\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0{url : rootDir+'menu_superior.html'},\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0{url : rootDir+'nuevo_libro.html'},\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0{url : rootDir+'nueva_categoria.html'},\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0{url : rootDir+'comprar.html'}\n\u00a0\u00a0 \u00a0];\n}]);\n[/code]\n\n<p style=\"text-align:justify;\">Nada de misterioso, en realidad es un m\u00f3dulo cuya sintaxis ya expliqu\u00e9 en el post anterior a este tuto. Ahora nuestro archivo <code>index.html</code>, dentro del <code>body</code> queda as\u00ed:</p>\n\n\n[code lang=\"html\" collapse=\"true\" highlight=\"3,6,9,12,15\"]\n\u00a0\u00a0\u00a0 &lt;div ng-controller=&quot;TemplateCtrl&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;!-- Template Men\u00fa Superior --&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;div ng-include=&quot;templates[0].url&quot;&gt;&lt;/div&gt;\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;!-- Lista de Libros --&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;div ng-view&gt;&lt;/div&gt;\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;!-- Modal Agregar Nuevo Libro --&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;div ng-include=&quot;templates[1].url&quot;&gt;&lt;/div&gt;\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;!-- Modal Agregar Nueva Categor\u00eda --&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;div ng-include=&quot;templates[2].url&quot;&gt;&lt;/div&gt;\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;!-- Modal Comprar Libro --&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;div ng-include=&quot;templates[3].url&quot;&gt;&lt;/div&gt;\n\u00a0\u00a0 \u00a0&lt;/div&gt;\n[/code]\n\n<h2>Dirigiendo</h2>\n<p style=\"text-align:justify;\">En las l\u00edneas resaltadas del c\u00f3digo anterior vemos dos nuevas directivas que usamos para refactorizar el c\u00f3digo:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">ng-include</span></strong> es una directiva que se utiliza para incluir c\u00f3digo html est\u00e1tico dentro de la vista principal. En este caso se incluyen por esta v\u00eda el men\u00fa superior y el resto de ventanas modales, refactorizadas en los archivos que est\u00e1n en el directorio <code>templates</code>.</li>\n\t<li style=\"text-align:justify;\"><strong><span style=\"color:#7cbbbb;\">ng-view</span></strong> es una directiva usada para inclu\u00edr c\u00f3digo html din\u00e1mico, o que por la naturaleza misma de los datos a ser presentados, cambiar\u00e1 constantemente dentro de la aplicaci\u00f3n. En este caso, esta directiva se usa en conjunto con el m\u00f3dulo o dependencia <strong><span style=\"color:#7cbbbb;\">'ngRoute'</span></strong> que se explicar\u00e1 m\u00e1s adelante.</li>\n</ul>\nAdicionalmente hay otro elemento a ser resaltado aparte:\n<ul>\n\t<li style=\"text-align:justify;\">El objeto global <strong><span style=\"color:#7cbbbb;\">$parent</span></strong> que est\u00e1 referenciado en el archivo <code>templates/menu_superior.html</code>, se utiliza debido a que al estar incluyendo vistas mediante la directiva <strong><span style=\"color:#7cbbbb;\">ng-include</span></strong>. cada inclusi\u00f3n crea un <strong><span style=\"color:#7cbbbb;\">$scope</span></strong> local para cada vista, entonces este objeto se encarga de trasladar el control a un <strong><span style=\"color:#7cbbbb;\">$scope</span></strong> superior, llamado <a title=\"Angular JS API for $rootScope\" href=\"https://code.angularjs.org/1.3.10/docs/api/ng/service/$rootScope\" target=\"_blank\">$rootScope</a>.</li>\n</ul>\n[caption id=\"attachment_424\" align=\"aligncenter\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/scopes_angular.png\"><img class=\"wp-image-424 size-medium\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/scopes_angular.png?w=300\" alt=\"Ilustraci\u00f3n de $rootScope. $parent le transfiere el $scope.\" width=\"300\" height=\"155\" /></a> <strong style=\"font-size:13px;text-align:center;\">Ilustraci\u00f3n de $rootScope. $parent le transfiere el $scope.</strong>[/caption]\n<h2 style=\"text-align:justify;\">Enrutando</h2>\n<p style=\"text-align:justify;\">Si bien el concepto de <a title=\"Routing.\" href=\"http://www.webopedia.com/TERM/R/routing.html\" target=\"_blank\">rutas</a> no es nuevo, Angular.js le da una \"vuelta de tuerca\". En tal sentido, el framework procura realizar aplicaciones <a title=\"Single Page Application\" href=\"http://https://en.wikipedia.org/wiki/Single-page_application\" target=\"_blank\">SPA</a> y conservar una arquitectura \"<a title=\"Module Pattern in Javascript\" href=\"http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html\" target=\"_blank\">modularizada</a>\" utilizando para ello URLs definidas por el usuario.</p>\n<p style=\"text-align:justify;\">Para lograr esto, es necesario \"<a title=\"Dependency Injection Module Pattern\" href=\"https://code.angularjs.org/1.3.10/docs/guide/di\" target=\"_blank\">inyectar una dependencia</a>\" de Angular.js, el m\u00f3dulo <a title=\"Route module for Angular.js\" href=\"https://code.angularjs.org/1.3.10/angular-route.min.js\" target=\"_blank\"><code>angular-route.min.js</code></a>. Para ello, primero lo incluimos en <code>index.html</code> (en mi caso reside f\u00edsicamente en el directorio <code>external</code>):</p>\n\n\n[code lang=\"html\"]\n&lt;script src=&quot;external/angular-route.min.js&quot;&gt;&lt;/script&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Luego, en el archivo <code>app/controllers.js</code> inyectamos la dependencia en el m\u00f3dulo:</p>\n\n\n[code lang=\"javascript\"]\n//                 se incluye la dependencia -\\\nvar libreria = angular.module('LibreriaApp', ['ngRoute']);\n[/code]\n\n<p style=\"text-align:justify;\">Para crear la arquitectura modular que deseamos, hice un archivo llamado <code>router.js</code> dentro del directorio <code>app</code> que contendr\u00e1 la configuraci\u00f3n de todas las rutas de nuestra aplicaci\u00f3n.</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" highlight=\"2,4,7,11\"]\n//Se instancia el m\u00f3dulo de manera global\nvar libreria = angular.module('LibreriaApp');\n\nlibreria.config(['$routeProvider', function($routeProvider){\n\u00a0\u00a0\u00a0 var rootDir = 'templates';\n\u00a0\u00a0\u00a0 $routeProvider\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .when('/', {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 templateUrl: rootDir+'/libros.html',\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 controller: 'LibrosCtrl'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 })\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .otherwise({ redirectTo: '/' });\n}]);\n[/code]\n\n<ul>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 2 se instancia la aplicaci\u00f3n de manera global para <code>app/router.js</code>.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 4, .<code>config </code>es el m\u00e9todo de angular que maneja las dependencias de configuraci\u00f3n de las rutas. Requiere dos par\u00e1metros obligatorios.\n<ul>\n\t<li style=\"text-align:justify;\"><code>$routeProvider</code>, que es el objeto de Angular que provee acceso a URLs y,</li>\n\t<li style=\"text-align:justify;\">una funci\u00f3n an\u00f3nima que almacene la configuraci\u00f3n de las rutas dentro de <code>$routeProvider</code>.</li>\n</ul>\n</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 7, el objeto <code>$routeProvider</code> tiene dos funciones:\n<ul>\n\t<li style=\"text-align:justify;\">La funci\u00f3n <code>.when()</code> que acepta dos par\u00e1metros:\n<ul>\n\t<li style=\"text-align:justify;\">un string con la URL personalizada y,</li>\n\t<li style=\"text-align:justify;\">un objeto que define dos atributos:\n<ul>\n\t<li style=\"text-align:justify;\"><code>templateUrl</code>: c\u00f3digo html que va a insertarse en la secci\u00f3n donde est\u00e9 definida la directiva <strong><span style=\"color:#7cbbbb;\">ng-view</span></strong>.</li>\n\t<li style=\"text-align:justify;\"><code>controller</code>: string del controlador que va a manejar el <strong><span style=\"color:#7cbbbb;\">$scope</span></strong> de dicho template.</li>\n</ul>\n</li>\n</ul>\n</li>\n\t<li style=\"text-align:justify;\">La funci\u00f3n <code>.otherwise()</code>, en la linea 11, que define un objeto con la ruta o redirecci\u00f3n por defecto, en caso de que ninguna de las URLs definidas con el m\u00e9todo <code>.when()</code> sea encontrada.</li>\n</ul>\n</li>\n\t<li style=\"text-align:justify;\">Respecto a la \u00faltima l\u00ednea, considere que puede invocar infinitas funciones <code>.when()</code> dependiendo de las rutas que se necesiten, pero solo un <code>.otherwise()</code>.</li>\n</ul>\nSigo aumentando +1 a la cuenta. Esta quedando muy <a title=\"Ehm, si...\" href=\"http://www.urbandictionary.com/define.php?term=chido\" target=\"_blank\">chido</a> ;)\n\n&lt;/script&gt;"}, {"tags": ["sin-categoria"], "date": null, "content": "Ejemplos de comparaci\u00f3n de dedesarrollo de pruebas unitarias en estos dos frameworks"}, {"tags": ["sin-categoria"], "date": null, "content": "https://material.angularjs.org/#/"}, {"tags": ["sin-categoria"], "date": null, "content": "Angular.js + Material Design en http://ui.lumapps.com/"}, {"tags": ["sin-categoria"], "date": null, "content": "Polymer.js en https://polymer-project.appspot.com/0.5/\nReact.js en http://facebook.github.io/react/"}, {"tags": ["aprender", "curioscriptades", "formato", "javascript", "lenguaje-de-programacion", "tecnologia"], "title": "E.. LE.. VA.. TION...", "date": "Tue, 05 May 2015 18:37:12 +0000", "content": "&lt;script src=\"other pages\" title=\"e\\.{2}le\\.{2}va\\.{2}tion\\.{3}\"&gt;\n\nhttp://www.youtube.com/watch?v=19KstSgU-c0\n\nEhm, si. Mucho mola esta rola peeero... No voy a hablar de ellos... :P\n\n<!--more-->\n<p style=\"text-align:justify;\">Javascript, as\u00ed como todos los lenguajes de programaci\u00f3n tiene sus curiosidades. Ac\u00e1 no son pocas las que se \"<strong>elevan</strong>\", m\u00e1s si hablamos de un lenguaje de script, d\u00e9bilmente tipado y basado en prototipos.</p>\n\n<h2 style=\"text-align:justify;\"><em>Hoisting</em> o Elevaci\u00f3n</h2>\n\u00bfCu\u00e1l ser\u00e1 el valor de la variable <code>b</code> si ejecutamos el siguiente c\u00f3digo?\n\n[code lang=\"javascript\"]\nvar b = 1;\nfunction a(){\n    var b = 10;\n\u00a0\u00a0 \u00a0return;\n}\na();\nconsole.log(b);\n[/code]\n\n<p style=\"text-align:justify;\">Si respondiste que el valor es 10, no hiciste bien tu tarea :P \u00a1Intenta de nuevo! El valor es 1</p>\n<p style=\"text-align:justify;\">Ahora una leve modificaci\u00f3n. Adivina cual ser\u00e1 el valor de la variable <code>b</code></p>\n\n\n[code lang=\"javascript\"]\nvar b = 1;\nfunction a(){\n    b = 10;\n\u00a0\u00a0 \u00a0return;\n}\na();\nconsole.log(b);\n[/code]\n\n<p style=\"text-align:justify;\">Si piensas que la respuesta es 1, debes estudiar m\u00e1s :P . \u00a1Piensa de nuevo! La respuesta es 10</p>\n<p style=\"text-align:justify;\">En Javascript, como en [casi] todos los lenguajes de programaci\u00f3n, existe un alcance global y pueden existir m\u00faltiples alcances locales. Sin embargo, Javascript tiene la peculiaridad de \"elevar\" la declaraci\u00f3n de variables al contexto superior m\u00e1s inmediato. Existen 4 contextos:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><strong>De funci\u00f3n:</strong> todo lo que se encuentra dentro de la sentencia <code>function(){ ... }.</code></li>\n\t<li style=\"text-align:justify;\"><strong>De declaraci\u00f3n: </strong>s\u00f3lo existe en el script cuando se declara una variable con la sentencia <code>var</code> antes de declarar cualquier otra funci\u00f3n<code>.</code></li>\n\t<li style=\"text-align:justify;\"><strong>De condici\u00f3n:</strong> cuando se declaran variables dentro de condicionales <code>if(){ ... }</code>.</li>\n\t<li style=\"text-align:justify;\"><strong>De espacio de nombre:</strong> cuando se declaran variables o funciones con la sentencia var dentro del prototipado de un objeto, como <code>var objeto = {valor: function(){ ... } };</code>.</li>\n</ul>\n<p style=\"text-align:justify;\">El <em>hoisting </em>es una caracter\u00edstica bastante peculiar, pues s\u00f3lo se da en casos en los que un contexto de declaraci\u00f3n pretende modificar un contexto de funci\u00f3n o viceversa. En ambos casos, la declaraci\u00f3n ser\u00e1 global.</p>\n<p style=\"text-align:justify;\">En el primer ejemplo, el contexto de funci\u00f3n intenta modificar la variable en el contexto de declaraci\u00f3n, esto es, cada vez que es interpretada la sentencia <code>var</code>, \u00e9sta incluye una variable <em>dentro del contexto en el que es instanciado</em>, dicho proceso ocurre <strong><em>una sola vez </em></strong>dentro de todo el script. La variable <code>b</code> no cambia su valor porque un contexto inferior intenta cambiarlo (enti\u00e9ndase por inferior el hecho de estar en un \"bloque\" inferior, o <em>debajo</em> de la declaraci\u00f3n).</p>\n<p style=\"text-align:justify;\">En el segundo ejemplo ocurre lo mismo, solo que en vez de intentar modificar el valor de la variable en el contexto de funci\u00f3n, lo \"eleva\" al contexto de declaraci\u00f3n, modificando as\u00ed su valor.</p>\n<p style=\"text-align:justify;\">Esto es un bug que pareciera intencional dentro del lenguaje, sin embargo, se recomienda evitarlo en aplicaciones que tengan uso masivo de Javascript, ya que puede resultar en comportamientos impredecibles.</p>\n<p style=\"text-align:justify;\">Con respecto a la forma de manejar los tipos de alcance para evitar el <em>hoisting</em>, el estandar ECMAScript 5.1:</p>\n\n<blockquote>\n<p style=\"text-align:justify;\"><span id=\"result_box\" class=\"\" lang=\"es\"><span class=\"hps\">Si</span> <span class=\"hps\">la declaraci\u00f3n de</span> <span class=\"hps\">variables</span> <span class=\"hps\">se produce</span> <span class=\"hps\">dentro de una</span> <span class=\"hps\">declaraci\u00f3n de una funci\u00f3n</span>, <span class=\"hps\">las variables se definen</span> <span class=\"hps\">con \u00e1mbito de</span> <span class=\"hps\">funci\u00f3n local</span> <span class=\"hps\">en esa funci\u00f3n</span>, <span class=\"hps\">tal como se describe</span> <span class=\"hps\">en la secci\u00f3n</span> <span class=\"hps\">10.1.3</span>.. <span class=\"hps\">De lo contrario</span>, se definen <span class=\"hps\">con</span> <span class=\"hps\">alcance</span> <span class=\"hps atn\">global (</span>es decir, que <span class=\"hps\">se crean como</span> <span class=\"hps\">miembros del</span> <span class=\"hps\">objeto global</span>, <span class=\"hps\">tal como se describe</span> <span class=\"hps\">en la secci\u00f3n</span> <span class=\"hps\">10.1.3</span>), atribuyendo <span class=\"hps\">el uso de</span> <span class=\"hps\">la propiedad</span>\u00a0<em>DontDelete</em>. <span class=\"hps\">Las variables se</span> <span class=\"hps\">crean cuando</span> <span class=\"hps\">se entra en el</span> <span class=\"hps\">\u00e1mbito</span> <span class=\"hps\">de ejecuci\u00f3n, pero u</span><span class=\"hps\">n</span> <span class=\"hps\">bloque</span> <span class=\"hps\">no define</span> <span class=\"hps\">un nuevo \u00e1mbito</span> <span class=\"hps\">de ejecuci\u00f3n.</span> <span class=\"hps\">S\u00f3lo</span> el p<span class=\"hps\">rograma</span> <span class=\"hps\">y</span> <span class=\"hps\">la declaraci\u00f3n de funciones</span> <span class=\"hps\">producen</span> <span class=\"hps\">un nuevo \u00e1mbito</span>.<span class=\"hps\">\n</span></span></p>\n</blockquote>\nY ya con <a title=\"Scoping and Hoisting\" href=\"http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html\" target=\"_blank\">esto</a>, me \"elevo\"... ;)\n\n&lt;/script&gt;"}, {"tags": [], "date": "Sun, 26 Apr 2015 19:29:06 +0000"}, {"tags": ["y-sin-jquery", "formato", "free", "frontend", "html", "javascript", "javascripteando-ando", "nuevo", "tecnologia", "vanilla-js"], "title": "JUGAR CON JAVASCRIPT PERO SIN JAVASCRIPT", "date": "Wed, 29 Apr 2015 19:04:13 +0000", "content": "&lt;script src=\"other pages\" title=\"jugar con javascript pero sin javascript\"&gt;\n<p style=\"text-align:justify;\">\u00a1Ah! El desarrollo <a title=\"Front-end Development\" href=\"https://en.wikipedia.org/wiki/Front_end_development\" target=\"_blank\">front-end</a>. Esa <em>cosa</em> et\u00e9rea, ef\u00edmera y absurdamente creativa que a veces, cual capricho de una mente inquieta, permite crear dise\u00f1os geniales de p\u00e1ginas web, y otras veces hace desastres como un tif\u00f3n inesperado y proh\u00edbe que la \"musa\" deje fluir el trabajo.</p>\n<p style=\"text-align:justify;\">Pero hay <em>cosas</em> que pueden hacer que <em>esa cosa</em> sea m\u00e1s llevadera...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a title=\"Librer\u00eda Patterns\" href=\"http://patternslib.com\" target=\"_blank\">Patterns</a> es una librer\u00eda que tiene lo mejor de dos mundos. Incluye c\u00f3digo VanillaJS (a.k.a. Javascript trocho y mocho :P ) para m\u00faltiples <em>patrones</em> (\u00a1<em>hovio</em>! :( ) que generalmente se utilizan en el dise\u00f1o de interfaces de p\u00e1ginas web, tales como <em title=\"Elementos deslizantes\">sliders</em>, <em title=\"Notificaciones\">tooltips</em>, <em title=\"Formularios\">forms</em>, <em title=\"Elementos agrupados\">accordions</em>, <em title=\"Calendarios de tama\u00f1o full\">calendars</em> entre otros elementos de interfaz. Incluye tambien animaciones predeterminadas y un sistema de grid de doce columnas, similar al del framework CSS <a title=\"Foundation 5\" href=\"http://foundation.zurb.com/apps/docs/#!/grid\" target=\"_blank\">Foundation</a>.</p>\n<p style=\"text-align:justify;\">Lo mejor de todo esto es que no tenemos que escribir \u00a1ni una sola l\u00ednea de c\u00f3digo Javascript!</p>\n\n<h2 style=\"text-align:justify;\">Hey, me gusta pero \u00bfc\u00f3mo funciona?</h2>\n<ol>\n\t<li>\u00a1Todo es a gusto del consumidor!\n<table>\n<tbody>\n<tr>\n<td>\n\n[caption id=\"attachment_437\" align=\"alignnone\" width=\"336\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140638.png\"><img class=\" wp-image-437\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140638.png?w=300\" alt=\"Las funcionalidades principales\" width=\"336\" height=\"159\" /></a> <strong style=\"font-size:13px;text-align:center;\">Seleccionamos entre las funcionalidades \"principales\"...</strong>[/caption]</td>\n<td>\n\n[caption id=\"attachment_438\" align=\"alignnone\" width=\"300\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140934.png\"><img class=\"size-medium wp-image-438\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/captura-de-pantalla-de-2015-04-29-140934.png?w=300\" alt=\"...y las &quot;secundarias&quot;\" width=\"300\" height=\"159\" /></a> <strong style=\"font-size:13px;text-align:center;\">...y/o las \"secundarias\"</strong>[/caption]</td>\n</tr>\n</tbody>\n</table>\n</li>\n\t<li>La inclu\u00edmos en nuestro desarrollo...\n\n[code lang=\"html\"]&lt;script src=&quot;patterns-1.5.0.js&quot;&gt;&lt;/script&gt;[/code]\n\n</li>\n\t<li>...y seguimos los patrones propuestos por la librer\u00eda en su <a title=\"Official Docs\" href=\"http://patternslib.com/index.html#documentation\" target=\"_blank\">documentaci\u00f3n</a>.</li>\n</ol>\n<p style=\"text-align:justify;\">Podemos crear perfectamente un <a title=\"\u00bfQu\u00e9 es un &quot;Mockup&quot;?\" href=\"http://wp.me/p5CTtO-4K\" target=\"_blank\">mockup</a> de una p\u00e1gina web completa, o \u00bfpor qu\u00e9 no? Una p\u00e1gina web completa, sin necesidad de usar otros elementos o frameworks como <a title=\"jQuery\" href=\"http://jquery.com\" target=\"_blank\">jQuery</a>. o <a title=\"Angular.js\" href=\"http://angularjs.org\" target=\"_blank\">Angular.js</a>. Incluso, en el caso en el que ver\u00eda el uso masivo de esta librer\u00eda es para dise\u00f1adores de interfaces web que, sin meterse en un desarrollo Javascript, pueden tener una \"visi\u00f3n\" de la p\u00e1gina en corto tiempo.</p>\n<p style=\"text-align:justify;\">\u00a1Y es que de verdad es muy sencillo! \u00bfno me creen? Entonces les dejo algunos ejemplos:</p>\n\n\n[code lang=\"html\" collapse=\"true\" title=\"Recortador de im\u00e1genes\"]\n&lt;div class=&quot;preview&quot;&gt;\n\u00a0\u00a0\u00a0 &lt;img id=&quot;crop-preview&quot; src=&quot;image-to-crop.jpg&quot; /&gt;\n&lt;/div&gt;\n...\n&lt;form action=&quot;/some/action&quot;&gt;\n\u00a0\u00a0\u00a0 ...\n\u00a0\u00a0\u00a0 &lt;img src=&quot;image-to-crop.jpg&quot; class=&quot;pat-image-crop&quot; data-pat-image-crop=&quot;preview-id: #crop-preview&quot; /&gt;\n\u00a0\u00a0\u00a0 ...\n&lt;/form&gt;\n[/code]\n\n<strong>...con algo de CSS:</strong>\n\n[code lang=\"css\" collapse=\"true\" title=\"CSS en Recortador de im\u00e1genes\"]\n.preview {\n    width: 168px;\n    height: 168px;\n    overflow: hidden;\n}\n\n.preview img {\n    width: auto;\n    height: auto;\n    margin: 0;\n    padding: 0;\n}\n[/code]\n\n\n[code lang=\"html\" collapse=\"true\" title=\"\u00c1rbol de directorios\"]\n&lt;ul class=&quot;pat-expandable&quot;&gt;\n &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;\n &lt;li class=&quot;folder open&quot;&gt;&lt;span class=&quot;toggle&quot;&gt;&lt;/span&gt;Folder name\n &lt;ul&gt;\n &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt;&lt;/li&gt;\n &lt;li class=&quot;folder closed&quot;&gt;&lt;span class=&quot;toggle&quot;&gt;&lt;/span&gt;Folder name\n &lt;ul&gt;\n &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt;&lt;/li&gt;\n &lt;/ul&gt;\n &lt;/li&gt;\n &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;\n &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;\n &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;\n &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;\n &lt;li class=&quot;document&quot;&gt;&lt;a href=&quot;#&quot;&gt;Document name&lt;/a&gt; &lt;/li&gt;\n &lt;/ul&gt;\n &lt;/li&gt;\n &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;\n &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;\n &lt;li class=&quot;folder&quot;&gt;Folder name&lt;/li&gt;\n&lt;/ul&gt;\n[/code]\n\n\n[code lang=\"html\" collapse=\"true\" title=\"Galer\u00eda de im\u00e1genes\"]\n&lt;ul class=&quot;pat-gallery&quot;&gt;\n &lt;li&gt;&lt;a href=&quot;full1.jpg&quot;&gt;&lt;img src=&quot;thumb1.jpg&quot; title=&quot;Image 1 caption&quot;/&gt;&lt;/a&gt;&lt;/li&gt;\n &lt;li&gt;&lt;a href=&quot;full2.jpg&quot;&gt;&lt;img src=&quot;thumb2.jpg&quot; title=&quot;Image 2 caption&quot;/&gt;&lt;/a&gt;&lt;/li&gt;\n &lt;li&gt;&lt;a href=&quot;full3.jpg&quot;&gt;&lt;img src=&quot;thumb3.jpg&quot; title=&quot;Image 3 caption&quot;/&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Una librer\u00eda que tiene potencial, tiene mucho potencial ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Wed, 29 Apr 2015 18:29:52 +0000"}, {"tags": [], "date": "Wed, 29 Apr 2015 18:32:05 +0000"}, {"tags": ["y-sin-jquery", "aprender", "formato", "frontend", "html", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "mozilla-firefox", "nuevo", "proyectos", "tecnologia", "zepto"], "title": "COLOREA TU VIDA... Y TUS P\u00c1GINAS WEB", "date": "Wed, 06 May 2015 20:41:32 +0000", "content": "&lt;script src=\"my own\" title=\"colorea tu vida y tus p&amp;aacute;ginas web\"&gt;\n<p style=\"text-align:justify;\">Siempre es importante el color en un desarrollo web. Hay veces en que es lo \u00fanico importante (especialmente para clientes que no conocen mucho del negocio y un \"periquito\" es m\u00e1s importante que la funcionalidad de la aplicaci\u00f3n misma).</p>\n<p style=\"text-align:justify;\">Por desgracia para algunos, no siempre la elecci\u00f3n de los colores depende de los desarrolladores, pues a menudo nos encontramos con restricciones en las paletas de colores, sea por cuestiones corporativas o porque al cliente le gusta m\u00e1s el \"azul\". Una cuesti\u00f3n as\u00ed, no siempre es tan trivial de dirimir.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a title=\"PleaseJS\" href=\"http://www.checkman.io/please/\" target=\"_blank\">Please.js</a> es una librer\u00eda Javascript que b\u00e1sicamente su funci\u00f3n es generar colores... Parece una funci\u00f3n trivial a simple vista, sin embargo vemos que esta librer\u00eda puede ofrecer cosas maravillosas como este <a title=\"CodePen\" href=\"http://codepen.io\" target=\"_blank\">pen</a> de paleta de colores an\u00e1logos que hice con <a title=\"Zepto.js\" href=\"http://zeptojs.com/\" target=\"_blank\">Zepto</a> y la librer\u00eda mencionada.</p>\nhttp://codepen.io/ChinuxParibus/pen/VLvGrR\n<p style=\"text-align:justify;\">Es probable que a algunos no les funcione por cuestiones del navegador y eso. En fin, la idea es simple: hacer click en el bot\u00f3n \"Nueva Paleta\" y la librer\u00eda genera 6 colores con 20\u00b0 de desfase entre cada uno, eso para permanecer en una tonalidad espec\u00edfica en el dise\u00f1o front-end que est\u00e9n realizando.</p>\n<p style=\"text-align:justify;\">La librer\u00eda ofrece muchas m\u00e1s funcionalidades, pero les dejo a ustedes que elijan el mejor color ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Wed, 06 May 2015 12:44:58 +0000"}, {"tags": [], "date": "Wed, 06 May 2015 12:53:03 +0000"}, {"tags": [], "date": "Wed, 06 May 2015 13:14:07 +0000"}, {"tags": ["angularjs", "datos", "frontend", "html", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "libreria-angular", "tecnologia", "tutorial"], "title": "LIBRERIA ANGULAR. PARTE 3. FABRICANDO", "date": "Wed, 13 May 2015 14:30:03 +0000", "content": "&lt;script src=\"my own\" title=\"parte 3. fabricando\"&gt;\n<p style=\"text-align:justify;\"><em>Como cambian las cosas cuando nos ponemos a inventar</em>. Creo que lo vi en una comiquita venezolana...</p>\n<p style=\"text-align:justify;\">\u00bfQu\u00e9 creen? Hoy es mi\u00e9rcoles, y dado que me he retrasado tanto por el <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/es/en/translation.asp?spen=laburo\" target=\"_blank\">laburo</a> y por otras cosas m\u00e1s. He decidido publicar sin m\u00e1s demora la siguiente parte de la creaci\u00f3n de nuestra librer\u00eda que va quedando <a title=\"Ehm, si...\" href=\"http://www.urbandictionary.com/define.php?term=CHULA\" target=\"_blank\">chula</a>, \u00bfno? En el <a title=\"Parte 2. Enrutando\" href=\"http://wp.me/p5CTtO-4U\" target=\"_blank\">post</a> anterior expliqu\u00e9 las <strong>Rutas</strong>, y en esta parte explicar\u00e9 las <strong>F\u00e1bricas</strong>, sin olvidar algunas modificaciones adicionales... \u00a1Manos a la ubre!</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">Controlando</h2>\n<p style=\"text-align:justify;\">Si se dieron cuenta en mi <a title=\"Mi repo de Github\" href=\"https://github.com/chinuxparibus/libreria-angular\" target=\"_blank\">repo</a>, hay varios cambios importantes, y uno de ellos es precisamente el hecho de que la lista de libros y la lista de categor\u00edas desapareci\u00f3 de los respectivos controladores definidos en <code>controllers.js</code>. \u00bfQu\u00e9 pas\u00f3? Separ\u00e9 los datos del controlador, mediante un m\u00f3dulo separado para los datos que voy a explicar m\u00e1s adelante, y agregu\u00e9 un nuevo m\u00e9todo para cada controlador.</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"En controllers.js\" firstline=\"22\"]\n...\n$scope.filtrarLibros = function(){\n\treturn libreria.filtrarLibros(parseInt($routeParams.categoria));\n};\n...\n[/code]\n\n<p style=\"text-align:justify;\">Este m\u00e9todo filtrar\u00e1 las lista de libros por categor\u00eda.</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"En controllers.js\" firstline=\"32\"]\n...\n$scope.addCategoria = function(nombre){\n\tcategorias.addCategoria(nombre);\n};\n...\n[/code]\n\n<p style=\"text-align:justify;\">Este m\u00e9todo a\u00f1adir\u00e1 una nueva categor\u00eda.</p>\n\n<h2>Dirigiendo</h2>\n<p style=\"text-align:justify;\">Tenemos un nuevo template llamado <code>categorias.html</code> que se renderiza cuando se filtran las categorias. Dentro del mismo template (que es una \"copia\" del template <code>libros.html</code>) todo el filtrado de libros se hace en esta linea:</p>\n\n\n[code lang=\"html\" collapse=\"true\" title=\"En categorias.html\" firstline=\"2\" highlight=\"3\"]\n...\n&lt;div class=&quot;libro col-xs-6 col-sm-2 text-center pull-left&quot; ng-repeat=&quot;libro in filtrarLibros() | orderBy: $index&quot;&gt;\n...\n[/code]\n\n<p style=\"text-align:justify;\">La funci\u00f3n <code>filtrarLibros()</code> del controlador <code>LibrosCtrl</code> se usa para realizar el fitrado en la lista retornada por dicha funci\u00f3n. El filtrado se ejecuta tomando como referencia el par\u00e1metro establecido en la ruta se\u00f1alada dentro del template <code>menu_superior.html</code> el cual fue levemente modificado as\u00ed:</p>\n\n\n[code lang=\"html\" collapse=\"true\" title=\"En menu_superior.html\" firstline=\"26\" highlight=\"28\"]\n...\n\t&lt;li ng-repeat=&quot;categoria in categorias&quot;&gt;\n\t\t&lt;a href=&quot;#/categorias/{{categoria.categoria}}&quot;&gt;&lt;i class=&quot;fa fa-caret-square-o-right fa-fw&quot;&gt;&lt;/i&gt;{{categoria.nombre | uppercase}}&lt;/a&gt;\n\t&lt;/li&gt;\n...\n[/code]\n\n<p style=\"text-align:justify;\">Ahora necesitamos definir la url #<code class=\"xml string\">/categorias/{{categoria.categoria}}</code> a la que apunta el link de cada categor\u00eda.</p>\n\n<h2 style=\"text-align:justify;\">Enrutando</h2>\n<p style=\"text-align:justify;\">Definimos la nueva ruta que va a renderizar el template con todas las url definidas en el punto anterior en nuestro archivo <code>router.js</code>.</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" firstline=\"9\" highlight=\"10\" title=\"En router.js\"]\n...\n.when('/categorias/:categoria', {\n\ttemplateUrl: rootDir+'/categorias.html',\n\tcontroller: 'LibrosCtrl'\n})\n...\n[/code]\n\n<p style=\"text-align:justify;\">En la linea 10, la secci\u00f3n de la url se\u00f1alada con : indica un par\u00e1metro variable que va a ser manejado por el objeto global de Angular llamado <code>$routeParams, </code>el cual puede ser instanciado desde cualquier parte de la aplicaci\u00f3n, siempre que se \"inyecte\" la dependencia de ese objeto en el m\u00f3dulo requerido, tal y como se puede apreciar en la definici\u00f3n modificada de los controladores en el archivo <code>controllers.js</code>.</p>\n\n<h2 style=\"text-align:justify;\">Fabricando</h2>\n<p style=\"text-align:justify;\">Una f\u00e1brica es un m\u00f3dulo de Angular que se encarga, ni m\u00e1s ni menos, de \"fabricar\" (valga la redundancia) datos comunes a toda la aplicaci\u00f3n y proveerlos donde se \"inyecte\" dicho m\u00f3dulo. Piensen en ello como una base de datos con tablas nomencladoras en el caso de SQL.</p>\n<p style=\"text-align:justify;\">La idea central de la f\u00e1brica es buscar que datos comunes pueden existir (entre dos controladores, por ejemplo), para retornarlos agrupados en un objeto definido dentro de la f\u00e1brica. En nuestro caso, elabor\u00e9 dos f\u00e1bricas, las cuales est\u00e1n definidas en el archivo <code>app/factories.js</code>.</p>\n<p style=\"text-align:justify;\">Veamos en detalle la definici\u00f3n de una de ellas:</p>\n\n\n[code language=\"javascript\" collapse=\"true\" title=\"En factories.js\" gutter=\"false\"]\n\nlibreria.factory('categorias', [function() {\n\tvar categorias = {}; //Se define el objeto a ser retornado\n\n\t// Refactorizado desde CategoriasCtrl\n\tcategorias.listaCategorias = [\n\t\t{categoria: 1, nombre: &quot;Ciencia-Ficci\u00f3n&quot;},\n\t\t{categoria: 2, nombre: &quot;Romance&quot;},\n\t\t{categoria: 3, nombre: &quot;Hist\u00f3rica&quot;},\n\t\t{categoria: 4, nombre: &quot;Misterio&quot;},\n\t];\n\n\t// M\u00e9todo para a\u00f1adir categor\u00edas\n\tcategorias.addCategoria = function(name){\n\t\tcategorias.listaCategorias.push(\n\t\t\t{categoria: categorias.listaCategorias.length+1, nombre: name}\n\t\t);\n\t}\n\n\treturn categorias;\n}]);\n[/code]\n\n<p style=\"text-align:justify;\">La definici\u00f3n es muy similar a la de un controlador, salvo que usamos la palabra reservada <code>factory </code>para denotar que se trata de una f\u00e1brica. Por la forma en la que Angular estructura la las f\u00e1bricas, se requiere retornar de manera obligatoria un objeto para cada f\u00e1brica definida. Por convenci\u00f3n, recomiendo usar el mismo nombre de la f\u00e1brica como el nombre de la variable que contendr\u00e1 el objeto a retornar.</p>\n<p style=\"text-align:justify;\">La aplicaci\u00f3n funciona de manera transparente...</p>\n\n\n[caption id=\"attachment_239\" align=\"aligncenter\" width=\"484\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png\"><img class=\"wp-image-239 \" src=\"https://jotaeseymas.files.wordpress.com/2015/03/libreria_angular.png?w=150\" alt=\"Tiene pinta de librer\u00eda, \u00bfno? Se nota que me encanta el azul... juejuejue \" width=\"484\" height=\"171\" /></a> <span style=\"text-align:center;font-size:13px;font-weight:bold;\">Tiene pinta de librer\u00eda, \u00bfno? Se nota que me encanta el azul... juejuejue<br /> </span>[/caption]\n\n... y el filtro responde como se espera.\n\n[caption id=\"attachment_508\" align=\"aligncenter\" width=\"318\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/05/filtro_de_libros.png\"><img class=\" wp-image-508\" src=\"https://jotaeseymas.files.wordpress.com/2015/05/filtro_de_libros.png?w=150\" alt=\"\u00a1Funciona! Me cost\u00f3 hacerlo pero vali\u00f3 la pena \" width=\"318\" height=\"297\" /></a> <span style=\"text-align:center;font-size:13px;font-weight:bold;\">\u00a1Funciona! Me cost\u00f3 hacerlo pero vali\u00f3 la pena<br /></span>[/caption]\n<p style=\"text-align:justify;\">Sigo aumentando +1 a la cuenta. \u00a1Que emoci\u00f3n! ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Wed, 13 May 2015 05:05:39 +0000"}, {"tags": ["algoritmos", "aprender", "curioscriptades", "datos", "javascript", "lenguaje-de-programacion", "tecnologia", "tipos"], "title": "ALGUNAS PECULIARIDADES DE JAVASCRIPT", "date": "Wed, 20 May 2015 17:13:43 +0000", "content": "&lt;script src=\"my own\" title=\"algunas peculiaridades de javascript\"&gt;\n<p style=\"text-align:justify;\">\u00a1Que onda! Espero que todo ande <a title=\"Ehm, si...\" href=\"http://www.urbandictionary.com/define.php?term=chido\" target=\"_blank\">chido</a>...</p>\n<p style=\"text-align:justify;\">Dejando de lado el cotorreo t\u00edpico, y leyendo algunos libros interesantes (ya saben, hay que estudiar :) ), me encontr\u00e9 con algunas particularidades de Javascript que [creo] no existen en otro lenguaje de programaci\u00f3n. Cosas que lo hacen a\u00fan m\u00e1s interesante de lo que ya es (para m\u00ed, digo :P ).</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">Hoisting de Funciones</h2>\n<p style=\"text-align:justify;\">En este <a title=\"Sobre Hoisting\" href=\"https://jotaeseymas.wordpress.com/2015/05/05/e-le-va-tion/\" target=\"_blank\">post</a> habl\u00e9 un poco sobre el Hoisting de c\u00f3digo, y m\u00e1s breve a\u00fan sobre el Hoisting de funciones. S\u00f3lo he visto en Javascript (y tal vez en PHP :/ ) que es posible usar una funci\u00f3n antes de su declaraci\u00f3n formal, puesto que el int\u00e9rprete de Javascript lo <em>eleva</em> en un contexto global. Es decir, que esto:</p>\n\n\n[code lang=\"javascript\" title=\"C\u00f3digo normal\" collapse=\"true\"]\n\tfunction miFuncion(){\n\t\tconsole.log(&quot;Hola mundo!&quot;);\n\t}\n\n\tmiFuncion(); //devuelve &quot;Hola mundo!&quot;\n[/code]\n\n<p style=\"text-align:justify;\">Funciona exactamente igual que esto:</p>\n\n\n[code lang=\"javascript\" title=\"C\u00f3digo hoisting\" collapse=\"true\"]\n\tmiFuncion(); //devuelve &quot;Hola mundo!&quot;\n\n\tfunction miFuncion(){\n\t\tconsole.log(&quot;Hola mundo!&quot;);\n\t}\n[/code]\n\n<h2>Coerci\u00f3n en tipos de datos</h2>\n<p style=\"text-align:justify;\">En este <a title=\"Vaya l\u00edo con los tipos\" href=\"https://jotaeseymas.wordpress.com/2015/02/10/vaya-lio-con-los-tipos/\" target=\"_blank\">post</a> habl\u00e9 (y correg\u00ed :D ) un poco sobre los tipos de datos primitivos en Javascript, as\u00ed como una forma sencilla de validar dichos tipos de dato como instancia de sus <em>envoltorios.</em> Y es que el problema parte precisamente del int\u00e9rprete de Javascript, puesto que es posible validar a nivel de primitivos (variables con valores simples) y/o a nivel de referencias (Objetos, Arrays o tipos personalizados). Por ejemplo, a nivel de primitivos es f\u00e1cil confundir un valor undefined con un valor null:</p>\n\n\n[code lang=\"javascript\" title=\"Comparaci\u00f3n coercionada\" collapse=\"true\"]\nconsole.log(undefined == null); //devuelve &quot;true&quot;\n[/code]\n\n<p style=\"text-align:justify;\">Lo cual evidentemente, es un error y generar\u00e1 un error en la l\u00f3gica de negocio que estemos implementando. Eso es la coerci\u00f3n en tipos de datos, la <em>instancia</em> de la variable es diferente del <em>valor</em> de la variable. El int\u00e9rprete de Javascript siempre buscar\u00e1 convertir un tipo de dato al valor m\u00e1s primitivo posible. Para evitar esto, se debe comparar en ambos niveles:</p>\n\n\n[code lang=\"javascript\" title=\"Comparaci\u00f3n en ambos niveles\" collapse=\"true\"]\nconsole.log(undefined === null); //devuelve &quot;false&quot;\n[/code]\n\n<h2><em>Aridad</em> infinita</h2>\n<p style=\"text-align:justify;\">La <a title=\"Aridad\" href=\"http://es.wikipedia.org/wiki/Aridad\" target=\"_blank\"><em>aridad </em></a>en programaci\u00f3n, en atenci\u00f3n al concepto original, se refiere al n\u00famero de argumentos que requiere un operador para realizar efectivamente una operaci\u00f3n. Si establecemos una funci\u00f3n o procedimiento como un operador matem\u00e1tico, dentro de Javascript, este concepto es bastante extensible. Javascript es el \u00fanico lenguaje que permite, dentro de su declaraci\u00f3n de funciones, \u00a1un n\u00famero infinito de argumentos!</p>\n<p style=\"text-align:justify;\">\u00a1Ojo! No se confunda este concepto con las caracter\u00edsticas de otros lenguajes de programaci\u00f3n en los que se acepta que una funci\u00f3n tenga un n\u00famero variable de argumentos. Javascript se distingue precisamente porque esa cantidad m\u00ednima de par\u00e1metros se puede aumentar en tiempo de ejecuci\u00f3n.</p>\n<p style=\"text-align:justify;\">Esto es posible gracias al atributo <code>arguments</code> que poseen todas las funciones declaradas en Javascript. Este atributo es un Array de todos los argumentos de una funci\u00f3n, el cual puede modificar su tama\u00f1o. Por ejemplo:</p>\n\n\n[code lang=\"javascript\" title=\"Funci\u00f3n con argumentos variables\" collapse=\"true\"]\nvar sumarNumeros = function(){\n\tvar suma = 0;\n\tfor (var i = 0; i &lt; arguments.length; i++) {\n\t\tsuma += arguments[i];\n\t};\n\tconsole.log('La suma es %d', suma);\n}\n\nsumarNumeros(2, 2); //devuelve &quot;La suma es 4&quot;\nsumarNumeros(1, 2, 3, 4); //devuelve &quot;La suma es 10&quot;\nsumarNumeros(); //devuelve &quot;La suma es 0&quot;\n[/code]\n\n<p style=\"text-align:justify;\">Por cierto, si una funci\u00f3n es declarada de esta forma (llamada <em>declaraci\u00f3n por referencia</em>), el int\u00e9rprete de Javascript no puede hacerle Hoisting. \u00a1Hagan la prueba! Sean curiosos y peculiares ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "datos", "formato", "free", "javascript", "localizacion", "proyectos", "sin-jquery", "tipos", "vanilla-js"], "title": "CINCO", "date": "Wed, 20 May 2015 18:07:45 +0000", "content": "&lt;script src=\"my own\" title=\"cinco\"&gt;\n\nhttps://www.youtube.com/watch?v=mpdcKmaHk_s\n\n<strong>Placer culposo:</strong> me gustaba esta canci\u00f3n... <strong><span style=\"color:#d25349;\">NO</span></strong> el grupo, por si acaso :(\n\n<!--more-->\n\nY si, hay gente bien <a title=\"Ehm, si...\" href=\"http://www.oxforddictionaries.com/translate/spanish-english/ladillado\" target=\"_blank\">ladillada</a>... <a title=\"El creador de Five.js\" href=\"https://github.com/jackdcrawford\" target=\"_blank\">Jack Crawford</a> es uno de ellos...\n\n<a title=\"FiveJS\" href=\"http://jackdcrawford.github.io/five/\" target=\"_blank\">Five.js</a> es una librer\u00eda que... Ehm, esteeee... O sea, pues... Nada... Usa el n\u00famero 5...\n\nPues, lo dicho, la incluimos...\n\n[code lang=\"html\"]&lt;script src=&quot;./five.js&quot;&gt;&lt;/script&gt;[/code]\n\n... y la usamos. Veamos algunos ejemplos:\n\n[code lang=\"javascript\" collapse=\"true\" title=\"Lo b\u00e1sico\"]five(); //devuelve 5[/code]\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"En c\u00f3digo Morse\"]five.morseCode(); //devuelve di-di-di-di-dit[/code]\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"En n\u00fameros romanos\"]five.roman(); //devuelve V[/code]\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"Los jugadores favoritos del creador\"]five.fab(); //devuelve ['Juwan Howard','Ray Jackson','Jimmy King','Jalen Rose','Chris Webber'][/code]\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"En klingon! :3\"]five.klingon(); //devuelve vagh[/code]\n\nY ya. ;)\n\n&lt;/script&gt;"}, {"tags": ["algoritmos", "aprender", "datos", "formato", "frontend", "html", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "nuevo", "tecnologia", "tutorial"], "title": "\u00bfDONDE APRENDER JAVASCRIPT?", "date": "Thu, 21 May 2015 15:21:44 +0000", "content": "&lt;script src=\"other pages\" title=\"\\\u00bfdonde aprender javascript\\?\"&gt;\n<p style=\"text-align:justify;\">En este <a title=\"Donde Investigar Javascript\" href=\"https://jotaeseymas.wordpress.com/2015/02/06/donde-investigar-javascript/\" target=\"_blank\">post</a>, publicaba algunas fuentes de informaci\u00f3n en las que se pod\u00eda investigar Javascript para conocerlo, o bien para tener una base de consulta cuando las dudas atacan. Sin embargo, para los nuevos (como yo) se nos hace un poco dif\u00edcil seguir la t\u00f3nica de algunas p\u00e1ginas, bien sea porque estan en ingl\u00e9s, o bien sea porque no tenemos ni idea de Javascript.</p>\n<p style=\"text-align:justify;\">He aqu\u00ed algunas fuentes de informaci\u00f3n para aprender Javascript, gratis y desde cero...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">JAVASCRIPT FOR CATS</h2>\n[caption id=\"\" align=\"aligncenter\" width=\"513\"]<img src=\"http://jsforcats.com/images/substack-cats.png\" alt=\"cat\" width=\"513\" height=\"360\" /> <strong>\u00a1Miau! :3</strong>[/caption]\n<p style=\"text-align:justify;\">\u00a1Ahora los gatos tambi\u00e9n pueden aprender Javascript! :D No, enserio, esa p\u00e1gina me dio demasiada risa. Pese a que est\u00e1 en ingl\u00e9s, no es muy compleja de entender y cubre lo b\u00e1sico para aprender el lenguaje. Pincha <a title=\"Javascript For Cats\" href=\"http://jsforcats.com\" target=\"_blank\">aqu\u00ed</a>.</p>\n\n<h2>CEVICHE.JS</h2>\n<blockquote>\n<p style=\"text-align:justify;\">La empresa La Buena Espina es una cadena de restaurantes de comida peruana que logr\u00f3 crecer gracias al boom gastron\u00f3mico local. De tener un local familiar ahora tienen varios restaurantes en todo el pa\u00eds, por lo que decidieron lanzar un sitio web donde muestren informaci\u00f3n sobre su carta y sus locales.</p>\n<p style=\"text-align:justify;\">El due\u00f1o de La Buena Espina te ha pedido personalmente realizar el sitio y quiere que visitarla sea una experiencia tan buena como su comida, as\u00ed que es tu deber como desarrollador crear una aplicaci\u00f3n con contenido f\u00e1cilmente mantenible y de un aspecto visual impactante.</p>\n<p style=\"text-align:justify;\"><em>- Tomado desde cevichejs.com</em></p>\n</blockquote>\n<p style=\"text-align:justify;\">Me parece genial la idea de aprender Javascript de manera pr\u00e1ctica, en la medida que explicas conceptos y los aplicas en un ejemplo real. Lo mejor de esta p\u00e1gina es que \u00a1est\u00e1 en espa\u00f1ol! Pincha <a title=\"CevicheJS\" href=\"http://cevichejs.com\" target=\"_blank\">aqu\u00ed</a>.</p>\n\n<h2 style=\"text-align:justify;\">ELOQUENT JAVASCRIPT</h2>\n[caption id=\"\" align=\"aligncenter\" width=\"426\"]<a href=\"http://www.amazon.com/gp/product/1593275846/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1593275846&amp;linkCode=as2&amp;tag=marijhaver-20&amp;linkId=VPXXXSRYC5COG5R5\"><img src=\"http://eloquentjavascript.net/img/cover.png\" alt=\"Cover image\" width=\"426\" height=\"552\" /></a> <strong>P\u00e1jaro secretario (no muy \"elocuente\" :/ )</strong>[/caption]\n<p style=\"text-align:justify;\">Para gente m\u00e1s seria pueden usar esta p\u00e1gina, que en realidad es un libro escrito con la intenci\u00f3n de explicar el lenguaje de manera sencilla (y elocuente, Doh! :/ ). Se puede descargar en formato PDF o en formato EPUB y leerlo off-line, sin embargo est\u00e1 en ingl\u00e9s :( . Pincha <a title=\"Eloquent Javascript\" href=\"http://eloquentjavascript.net/\" target=\"_blank\">aqu\u00ed</a>.</p>\n<p style=\"text-align:justify;\">Independientemente del medio que elijan, lo importante es aprender ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "curioscriptades", "datos", "formato", "frontend", "html", "javascript", "lenguaje-de-programacion", "nuevo", "proyectos", "sin-jquery", "tecnologia"], "title": "MANIPULACION DE DATOS EN JAVASCRIPT", "date": "Sun, 14 Jun 2015 01:16:14 +0000", "content": "<p style=\"text-align:justify;\">Supongamos que tenemos la siguiente estructura de datos, muy com\u00fan en Javascript:</p>\n[code lang=\"javascript\" title=\"Data de prueba\" collapse=\"true\"]\nvar info = {\nurl: &quot;www.miblog.com/&quot;,\ndata: [\n{\nuuid: '24338405-1258-425a-9b43-333c7d36fd1d',\nuser: 'Abbi',\ndate: 'Tue Dec 16 2014 16:08:34 GMT-0430 (VET)'\nposts: [\n{\ntitle: 'Lorem Ipsum'\ncontent: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga facere ut numquam possimus excepturi eaque eum, voluptatibus, temporibus voluptatem rem corporis itaque laborum! Repellat commodi quisquam sit facilis, reprehenderit nulla animi cumque quis reiciendis unde voluptatum quos ipsum odit accusamus delectus libero provident est itaque minus rerum voluptas error et veritatis. Asperiores aliquam distinctio animi fugiat illum et vel quam quia, enim consequatur libero voluptates suscipit ducimus ipsa blanditiis officiis quis incidunt magni perferendis, quas quos. Eius placeat beatae reiciendis vel omnis excepturi ut facere dolores, tempore quo quas obcaecati maiores ipsam, culpa explicabo officiis. Dolore laborum molestias mollitia aliquid.'\n},\n]\n},\n{\nuuid: '0f9d960c-492d-4f0b-b249-d62c17ed1126',\nuser: 'Dick323',\ndate: 'Sat Aug 23 2014 15:10:17 GMT-0430 (VET)'\nposts: [\n{\ntitle: 'Lorem Sentrum'\ncontent: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magnam eum non iure ad maxime, nihil eos, dolorem ab assumenda rem. Recusandae quaerat officia, impedit incidunt mollitia sunt quos aliquam suscipit nihil nam repellat dolorum sequi, omnis accusantium iusto at similique voluptatem officiis porro sapiente illo unde. Animi quisquam asperiores, quis omnis voluptatum, nesciunt. Deleniti aperiam fugiat est provident, quas doloremque quam expedita aut nemo repellendus totam possimus esse dolorem consequuntur accusamus asperiores veritatis explicabo eveniet dolore porro nostrum tenetur id mollitia? Nihil reprehenderit quaerat omnis esse sint quos debitis nobis necessitatibus expedita animi, suscipit, porro eligendi, voluptatum, iusto non modi cum libero ratione quasi sed totam placeat doloribus. Veritatis molestias minus mollitia ut nam. Deleniti maiores, neque tenetur reprehenderit doloremque. Sed aperiam, accusamus ipsum neque illum libero consequuntur eligendi sit aspernatur repellat ea consequatur nam similique tempora placeat deleniti ipsa, fugit aliquam explicabo est asperiores ducimus porro! Eaque, deserunt. Rem ab facilis et laborum. Vero unde et reprehenderit ipsum? Cum animi sit, magnam accusantium asperiores nobis accusamus modi corrupti voluptate tenetur, illum amet ratione totam quos eius dolor nulla inventore! Soluta nobis quo modi minus nesciunt ex laborum dolorem cumque aliquid, quod! Nihil fugiat voluptas et sunt dolores, ipsa odit, assumenda expedita corrupti laborum tempora nemo dolorum blanditiis accusantium earum culpa dolorem quibusdam quas iusto quis sed! Voluptas laudantium quaerat accusantium necessitatibus cum eveniet animi distinctio vel ipsa, suscipit asperiores dolorum eligendi magni itaque natus in facere recusandae ad maxime obcaecati hic tempore iste, quae harum aliquid. Saepe temporibus, quod fuga sed. Perspiciatis, sint, ex.'\n},\n{\ntitle: 'Lorem Ipsum'\ncontent: 'asdd Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sunt, dolore. fasd Lorem ipsum dolor sit amet.'\n}\n]\n},\n//...(mucha m\u00e1s data)\n]\n};\n[/code]\n<p style=\"text-align:justify;\">La forma como la obtuvimos es irrelevante (por ahora :twisted: ). En cualquier caso, siempre se hace necesario realizar manipulaciones \"m\u00e1gicas\"(a veces a fuerza de Javascript trocho y mocho) en estructuras de datos Javascript que pueden compararse a \"consultas SQL relacionales\", cosas del tipo: \"Ordenar los elementos por fecha\", \"obtener los usuarios que tienen m\u00e1s posts publicados\", \"el n\u00famero de posts por usuario y por fecha en un gr\u00e1fico de <em>interpolaci\u00f3n</em> <em>planetaria</em>\", y un largu\u00edsimo etc\u00e9tera &gt;:( .</p>\n<p style=\"text-align:justify;\">Mientras que un script en Javascript es capaz de crecer hasta m\u00e1s de 2000 l\u00edneas de c\u00f3digo (las he visto o_O ) para poder manipular este tipo de estructuras complejas de datos, hay librer\u00edas que nos pueden hacer la vida mucho m\u00e1s sencilla.</p>\n\n<h2 style=\"text-align:justify;\"><!--more--> UNDERSCORE.JS</h2>\n<p style=\"text-align:justify;\"><a href=\"http://underscorejs.org\" target=\"_blank\">Underscore.js</a> es una de esas librer\u00edas tipo <em>navaja suiza</em> que sirven para much\u00edsimas cosas en la manipulaci\u00f3n de datos. En su p\u00e1gina web tienen la documentaci\u00f3n oficial de los 112 m\u00e9todos <em>helpers</em> que realmente ayudan a una sintaxis m\u00e1s limpia del c\u00f3digo (y reducir muchas l\u00edneas). Por ejemplo, supongamos que tenemos la siguiente estructura:</p>\n[code lang=\"javascript\" title=\"Ejemplo\" collapse=\"true\"]\nvar frases = [\n{extraido_de: 'www.pagina1.com/frases', frase: &quot;A Dios rogando y con el mazo dando&quot;},\n{extraido_de: 'http://recurso.pagina3.net', frase: &quot;El que nace barrig\u00f3n ni que lo fajen chiquito&quot;},\n{extraido_de: 'miotrapagina.com', frase: &quot;El que madruga, Dios lo ayuda&quot;},\n{extraido_de: 'otrapagina.com', frase: &quot;Camar\u00f3n que se duerme, se lo lleva la corriente&quot;}\n];\n[/code]\n<p style=\"text-align:justify;\">Si quisieramos conocer cuantas veces se repite cada palabra por frase encontrada, en Javascript trocho y mocho tendr\u00edamos que hacer maromas, en Underscore.js, es incluir la librer\u00eda y usar los <em>helpers</em>:</p>\n[code lang=\"javascript\" collapse=\"true\" title=\"C\u00f3digo fuente\"]\nconsole.log(\n_.chain(frases) //encadena la ejecuci\u00f3n de funciones sobre una misma instancia\n.map(function(elemento) { return elemento.frase.split(' '); }) //a cada elemento se le aplica esta funci\u00f3n\n.flatten() //transforma la matriz resultado en un arreglo unidimensional\n.reduce(function(palabras, palabra) { //el resultado es agrupado en una estructura \u00fanica de datos\npalabras[palabra] = (palabras[palabra] || 0) + 1;\nreturn palabras;\n}, {})\n.value();\n)\n// =&amp;gt; Object({Dios: 2, que: 3, ...})\n[/code]\n<p style=\"text-align:justify;\">\u00a1Pero hay m\u00e1s! XD</p>\n\n<h2 style=\"text-align:justify;\">LODASH</h2>\n<p style=\"text-align:justify;\"><a href=\"https://lodash.com\" target=\"_blank\">Lodash</a> es un fork de Underscore.js que comprende m\u00e1s funciones que su ancestro (\u00a1241 funciones, <em>deal with it</em>! 8-) ). El ejemplo anterior ser\u00eda exactamente igual con esta librer\u00eda, y al igual que la anterior, puedes ver en este <a href=\"https://lodash.com/docs\" target=\"_blank\">enlace</a> la documentaci\u00f3n oficial de todos sus <em>helpers</em>.</p>\n<p style=\"text-align:justify;\">:?: Pero, \u00bfpor qu\u00e9 la dejas de \u00faltimo y no realizas alg\u00fan ejemplo con esta librer\u00eda? :?:</p>\n<p style=\"text-align:justify;\"><strong><em>Respuesta:</em></strong> Porque los posts que vienen, van a utilizar <strong>esta</strong> librer\u00eda extensivamente, jejeje.</p>\n<p style=\"text-align:justify;\">Underscore.js no es mala, de hecho hay proyectos Open Source muy importantes que la usan como componente de sus sistemas, tal es el caso de <a href=\"http://backbonejs.org/\" target=\"_blank\">Backbone.js</a> o <a href=\"http://documentcloud.org\" target=\"_blank\">DocumentCloud</a>. Incluso, tengo un <a href=\"https://jotaeseymas.wordpress.com/2015/04/05/seek-and-destroy-elementos-duplicados/\" target=\"_blank\">post</a> que usa la funci\u00f3n <code>_.uniq()</code> para eliminar elementos \u00fanicos en un <em>Array</em>.</p>\n<p style=\"text-align:justify;\">\u00a1Hasta los posts que vienen! <em>*risa malvada*</em> ;)</p>"}, {"tags": ["aprender", "datos", "expresiones-regulares", "formularios", "frontend", "html", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "material-design", "tipos", "tutorial", "validacion"], "title": "VALIDANDO CAMPOS DE FORMULARIO CON ANGULAR.JS. PARTE 1. LA TEOR\u00cdA", "date": "Mon, 08 Jun 2015 02:51:04 +0000", "content": "&lt;script src=\"my own\" title=\"parte 1 la teor&amp;iacute;a\"&gt;\n<p style=\"text-align:justify;\">Considerando la cantidad de tiempo que tengo sin escribir, deber\u00eda ganarme un premio. O d\u00e1rselo a ustedes por la paciencia que han tenido conmigo. \u00a1Muchas gracias! :)</p>\n<p style=\"text-align:justify;\">Para variar, paso de muy fuerte <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/es/en/translation.asp?spen=laburo\" target=\"_blank\">laburo</a> a no tener [casi] nada que hacer, lo cual me record\u00f3 lo empolvado que estaba el blog, y pues nada. \u00a1Manos a la ubre!</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a>, siempre facilit\u00e1ndole (hasta cierto punto) la vida de los desarrolladores front-end (como yo), cuenta con objetos globales (los cuales veremos m\u00e1s adelante) que definen el estado del campo de un formulario.</p>\n\n<h2 style=\"text-align:justify;\">Un poco de preparaci\u00f3n</h2>\nPara esta \"receta\" necesitamos:\n<ul>\n\t<li><a href=\"https://code.angularjs.org/1.3.10/\" target=\"_blank\">Angular.js</a> (por supuesto :D ), usaremos la versi\u00f3n 1.3.10.</li>\n\t<li>M\u00f3dulo <a href=\"https://code.angularjs.org/1.3.10/angular-messages.min.js\" target=\"_blank\"><code>ngMessages</code></a> (en <code>angular-messages.min.js</code>).</li>\n\t<li><a href=\"http://materializecss.com/getting-started.html\" target=\"_blank\">MaterializeCSS</a> y su inseparable amigo <a href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> en su \u00faltima versi\u00f3n ( :( ).</li>\n</ul>\n<h2 style=\"text-align:justify;\">Hablando de objetos...</h2>\n<p style=\"text-align:justify;\">Angular.js provee muchos objetos globales que permiten supervisar el estado de un campo de formulario espec\u00edfico, en nuestro ejemplo, vamos a ver cinco de ellos y su significado dentro de la validaci\u00f3n que realiza el framework. A saber:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">Objeto <code>$error</code>: Se instancia cada vez que un formulario, un modelo o un template no cumple con ciertas validaciones previamente especificadas. En el caso de los formularios, <code>$error</code> aparece cuando las validaciones nativas (como <code>pattern</code> o <code>required</code>), expresadas en el campo de formulario no se cumplen.</li>\n\t<li style=\"text-align:justify;\">Objeto <code>$pristine</code>: Se instancia cuando un campo de formulario, o todo el formulario no ha registrado interacci\u00f3n de datos con el usuario (sucede cuando la p\u00e1gina se carga por primera vez o se recarga).</li>\n\t<li style=\"text-align:justify;\">Objeto <code>$dirty</code>: Se instancia cuando un campo de formulario ya ha registrado interacci\u00f3n de datos con el usuario. Una vez instanciado este objeto, el estado del formulario no puede volver a ser <code>$pristine</code> <code>(</code>a menos que se recargue la p\u00e1gina).</li>\n\t<li style=\"text-align:justify;\">Objeto <code>$invalid</code>: Se instancia cuando alg\u00fan campo del formulario no cumple con alguna de las validaciones nativas expresadas en dicho campo. Generalmente, los navegadores colocan una sombra roja alrededor del campo como indicaci\u00f3n visual de que la data recibida es inv\u00e1lida.</li>\n\t<li style=\"text-align:justify;\">Objeto <code>$valid</code>: Se instancia cuando un formulario ya est\u00e1 validado en todos sus campos, y es generalmente el estado final de un formulario.</li>\n</ul>\n<p style=\"text-align:justify;\">Mientras que el objeto <code>$error</code> contiene el estado global de todos los campos y validaciones nativas del formulario, los dem\u00e1s s\u00f3lo guardan un valor booleano indicando si el estado del campo de formulario corresponde a alguno de ellos. Por lo general, un campo de formulario siempre tiende a instanciar a dos de ellos a la vez.</p>\n<p style=\"text-align:justify;\">\u00a1<a href=\"https://jotaeseymas.files.wordpress.com/2015/05/8c6c8-mono.jpg\" target=\"_blank\">Changos</a>! Ya me extend\u00ed demasiado con la teor\u00eda :( . Ser\u00e1 en el pr\u00f3ximo post que ya pasemos a la pr\u00e1ctica ;)</p>\n<p style=\"text-align:justify;\">&lt;/script&gt;</p>"}, {"tags": ["aprender", "datos", "formato", "frontend", "html", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "tecnologia"], "title": "20 FRAMEWORKS MV* EN JAVASCRIPT", "date": "Fri, 12 Jun 2015 14:06:36 +0000", "content": "&lt;script src=\"other pages\" title=\"20 frameworks mv* en javascript\"&gt;\n<p style=\"text-align:justify;\">Cuando estamos en un proyecto (independiemente de la naturaleza del mismo) la implementaci\u00f3n de los m\u00e9todos a usar, a menudo viene <em>casada</em> con la idea de usar una determinada herramienta (tambi\u00e9n decidida al inicio del proyecto). Esto se hace un poco m\u00e1s claro cuando estamos hablando de un proyecto de software.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">La tecnolog\u00eda a usar, [casi] siempre viene asociada con una serie de requisitos (lenguaje de programaci\u00f3n, arquitectura, o el sempiterno \"es lo que dice el cliente\" &gt;:( ), satisfechos al inicio del proyecto en \"reuniones\", etc\u00e9tera. Sin embargo, en tecnolog\u00eda, todos los lenguajes de programaci\u00f3n tienen sus ventajas y desventajas.</p>\n<p style=\"text-align:justify;\">En Javascript, ha ocurrido que dicho lenguaje ha pasado de ser un lenguaje para el navegador, a ser una especie de Panacea que es capaz de estar en servidores, disp\u00f3sitivos m\u00f3viles, y en casi cualquier dispositivo con conexi\u00f3n a internet. No me extra\u00f1ar\u00eda que estuviera en electrodom\u00e9sticos :/</p>\n<p style=\"text-align:justify;\">En este <a href=\"http://www.faridesign.net/2012/04/20-javascript-frameworks-mvvm-templating-licenses-etc/\" target=\"_blank\">enlace</a>, hay una lista de 20 frameworks Javascript que trabajan con Arquitectura MV* del lado del front-end (inserte en el \"*\" lo que considere importante para usted), cada uno con diferentes funcionalidades y para diferentes \u00e1reas, utiliza el que consideres m\u00e1s apropiado para tu proyecto. Personalmente me quedo con <a href=\"http://backbonejs.org\" target=\"_blank\">Backbone.js</a> y <a href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a>, y probar que tal es <a href=\"http://knockoutjs.com/\" target=\"_blank\">Knockout.js</a> y <a href=\"http://sammyjs.org/\" target=\"_blank\">Sammy.js</a>. ;)</p>\n&lt;/script&gt;"}, {"tags": ["algoritmos", "aprender", "datos", "free", "html", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "nuevo", "tecnologia"], "title": "\u00bfDONDE JUGAR CON JAVASCRIPT?", "date": "Thu, 21 May 2015 20:36:54 +0000", "content": "&lt;script src=\"other pages\" title=\"\\\u00bfdonde jugar con javascript\\?\"&gt;\n<p style=\"text-align:justify;\">En posts anteriores, he publicado como aprender e investigar, aunque ambos son m\u00e9todos muy buenos para aprender, ocurre que no todas las audiencias son capaces de entender los contenidos, y algunos (sobre todo los m\u00e1s peque\u00f1os) no les gusta navegar mucho tiempo por una p\u00e1gina web con puras letras.</p>\n<p style=\"text-align:justify;\">Pero hay p\u00e1ginas que cambian considerablemente el panorama, he aqu\u00ed algunos ejemplos...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">CODE STUDIO</h2>\n<p style=\"text-align:justify;\">Dirigido a ni\u00f1os de 4 a\u00f1os en adelante, <a title=\"Code Studio\" href=\"http://studio.code.org/\" target=\"_blank\">Code Studio</a> es una web que se especializa en la ense\u00f1anza de la programaci\u00f3n usando Javascript en forma de bloques. Para ello, se vale de elementos multimedia muy bien apreciados por los m\u00e1s peque\u00f1os, como Angry Birds, Frozen y otros personajes... \u00a1A m\u00ed me encanta!</p>\n\n<h2 style=\"text-align:justify;\">CODE COMBAT</h2>\n<p style=\"text-align:justify;\">Dirigido a todo tipo de p\u00fablico, <a title=\"CodeCombat\" href=\"http://codecombat.com/\" target=\"_blank\">CodeCombat</a> es ligeramente diferente. Se vale de un juego de rol en el cual debemos dirigir a un personaje por pasadizos medievales repletos de trampas, luchar con dragones y armar nuestro personaje con las m\u00e1s poderosas herramientas, vali\u00e9ndose del ingenio y la creatividad del usuario para completar las misiones.</p>\n\n<h2 style=\"text-align:justify;\">ELEVATOR SAGA</h2>\n<p style=\"text-align:justify;\">Dirigido a un p\u00fablico m\u00e1s adulto y m\u00e1s <a title=\"Ehm, si...\" href=\"http://www.wordreference.com/definicion/ducho\" target=\"_blank\">ducho</a> en Javascript. El reto que planta <a title=\"Elevator Saga\" href=\"http://play.elevatorsaga.com\" target=\"_blank\">Elevator Saga</a> es \"sencillo\": llevar personas por los pisos en un tiempo determinado por el reto. Con excelente documentaci\u00f3n y muy retador para los niveles superiores. Yo no he pasado del segundo jejeje :D . Necesito investigar m\u00e1s al respecto...</p>\n<p style=\"text-align:justify;\">Con esto cierro el ciclo \"acad\u00e9mico\"... \u00a1Happy Gaming! ;)</p>\n&lt;/script&gt;"}, {"tags": ["algoritmos", "curioscriptades", "datos", "free", "javascript", "proyectos", "tecnologia"], "title": "SIMULACI\u00d3N DE COMPUTADORES IBM.... \u00a1EN EL NAVEGADOR!", "date": "Fri, 22 May 2015 17:36:09 +0000", "content": "&lt;script src=\"other pages\" title=\"simulaci&amp;oacute;n de computadores ibm en el navegador\"&gt;\n<p style=\"text-align:justify;\">Tengo que admitirlo: \u00a1soy un <a title=\"Ehm, si...\" href=\"https://en.wikipedia.org/wiki/Millennials\" target=\"_blank\">Millenial</a>! Eso explica porque mi pasi\u00f3n por la tecnolog\u00eda retro...</p>\n<p style=\"text-align:justify;\">Recuerdo que aprend\u00ed computaci\u00f3n a los 12 a\u00f1os, en una Compaq Presario PC XT: CPU Intel Pentium II de 1GHz y 256MB de RAM con <em>Mocosoft Guindous 95</em> instalado. Una como esta...</p>\n\n\n[caption id=\"attachment_542\" align=\"aligncenter\" width=\"301\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/05/aaaccc.gif\"><img class=\" wp-image-542\" src=\"https://jotaeseymas.files.wordpress.com/2015/05/aaaccc.gif?w=150\" alt=\"Compaq Presario PC XT :3\" width=\"301\" height=\"237\" /></a> <strong>Compaq Presario PC XT :3</strong>[/caption]\n<p style=\"text-align:justify;\">Pero no voy a hablar de m\u00ed porque lloro... :'(</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a title=\"PC.js\" href=\"http://www.pcjs.org/\" target=\"_blank\">PCjs.org</a> es una p\u00e1gina web que posee simulaciones de m\u00e1quinas IBM antiguas con diferentes aplicaciones y caracter\u00edsticas. Lo novedoso es que dichas m\u00e1quinas fueron \u00a1escritas enteramente en Javascript! Puedes ver, entre otros computadores, el del m\u00edtico juego DONKEY.BAS.</p>\n\n\n[caption id=\"\" align=\"aligncenter\" width=\"403\"]<img class=\"shrinkToFit transparent\" src=\"http://www.pcjs.org/devices/pc/machine/5150/cga/64kb/donkey/screenshot.png\" alt=\"http://www.pcjs.org/devices/pc/machine/5150/cga/64kb/donkey/screenshot.png\" width=\"403\" height=\"364\" /> <strong>Muuuuy viejo...</strong>[/caption]\n\n*snif*, *snif*, *snif*... \u00a1De las cosas que se pueden recordar con Javascript! ;)\n\n&lt;/script&gt;"}, {"tags": [], "title": "AAA+CCC", "date": "Fri, 22 May 2015 17:41:30 +0000"}, {"tags": ["aprender", "datos", "expresiones-regulares", "formularios", "frontend", "html", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "material-design", "tipos", "tutorial", "validacion"], "title": "VALIDANDO CAMPOS DE FORMULARIO CON ANGULAR.JS. PARTE 2. LA PR\u00c1CTICA", "date": "Mon, 08 Jun 2015 14:31:09 +0000", "content": "&lt;script src=\"my own\" title=\"parte 2 la pr\u00e1ctica\"&gt;\n<p style=\"text-align:justify;\">En el <a href=\"http://wp.me/p5CTtO-1a\" target=\"_blank\">post</a> anterior expliqu\u00e9 un poco la teor\u00eda de que iba la validaci\u00f3n de campos de formulario en Angular.js. Ac\u00e1 aplico un poco bastante de esa teor\u00eda.</p>\n<p style=\"text-align:justify;\">No voy a enfocarme en el CSS porque el framework utilizado es bastante expl\u00edcito con la sintaxis, y adem\u00e1s , me interesa m\u00e1s la parte <em>Angular</em> del asunto...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">Explicando el c\u00f3digo...</h2>\n<p style=\"text-align:justify;\">Pueden ver el <a href=\"https://github.com/ChinuxParibus/post-validar-formularios\" target=\"_blank\">repo</a> para m\u00e1s informaci\u00f3n respecto al c\u00f3digo, s\u00f3lo me interesa explicar la cuesti\u00f3n de las directivas y eso...</p>\n\n\n[caption id=\"attachment_566\" align=\"aligncenter\" width=\"499\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_pristine.png\"><img class=\" wp-image-566\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_pristine.png?w=150\" alt=\"Formulario retocado con Material Design ( :3 )\" width=\"499\" height=\"292\" /></a> <strong>Formulario retocado con Material Design ( :3 )</strong>[/caption]\n<p style=\"text-align:justify;\">Para esto, inclu\u00edmos Angular.js y el m\u00f3dulo de ngMessages para encapsular la l\u00f3gica de validaci\u00f3n:</p>\n\n\n[code lang=\"html\" title=\"Inclusi\u00f3n de librer\u00edas\" collapse=\"true\"]\n&lt;script src=&quot;angular.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;angular-messages.min.js&quot;&gt;&lt;/script&gt;\n[/code]\n\n<p style=\"text-align:justify;\">...y un poco de CSS usando <em>helpers </em>de Angular.js:</p>\n\n\n[code lang=\"css\" title=\"usando helpers CSS\" firstline=\"8\" collapse=\"true\"]\ninput.ng-invalid.ng-dirty, textarea.ng-invalid.ng-dirty{ border-bottom: 1px solid #D25349; }\ninput.ng-valid.ng-dirty, textarea.ng-valid.ng-dirty{ border-bottom: 2px solid #019739; }\n[/code]\n\n<p style=\"text-align:justify;\">Aqu\u00ed un fragmento de c\u00f3digo que posee bastante informaci\u00f3n (suficiente para explicar el resto del formulario):</p>\n\n\n[code lang=\"html\" collapse=\"true\" title=\"Archivo: formulario.html\" firstline=\"15\" highlight=\"16, 22, 26, 27\"]\n&lt;script&gt;\n\tangular.module('messages', ['ngMessages']);\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=&quot;messages&quot;&gt;\n\t&lt;div class=&quot;container&quot;&gt;\n\t&lt;h3&gt;Ingrese sus datos&lt;/h3&gt;\n\t&lt;form name=&quot;registro&quot; novalidate&gt;\n\t\t&lt;div class=&quot;row&quot;&gt;\n\t\t\t&lt;section class=&quot;input-field col s12 m6&quot;&gt;\n\t\t\t\t&lt;label for=&quot;nombre&quot;&gt;Nombre:&lt;/label&gt;\n\t\t\t\t&lt;input type=&quot;text&quot; ng-model=&quot;data.nombre&quot; name=&quot;nombre&quot; required pattern=&quot;[\u00f1\u00e1\u00e9\u00ed\u00f3\u00faA-Za-z ]+&quot;&gt;\n\t\t  \t&lt;div ng-messages=&quot;registro.nombre.$error&quot; ng-messages-include=&quot;errores.html&quot; ng-hide=&quot;registro.nombre.$pristine&quot;&gt;&lt;/div&gt;\n\t\t\t&lt;/section&gt;\n\t...\n[/code]\n\nTenemos mucho que explicar respecto a este c\u00f3digo...\n<ul>\n\t<li>En la l\u00ednea 16 se resalta el hecho de que el m\u00f3dulo <code>ngMessages</code> se inyecta como dependencia de nuestra aplicaci\u00f3n.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 22 se resalta el atributo <code>novalidate</code>, el cual deshabilita la validaci\u00f3n HTML nativa que realiza el navegador, as\u00ed como los mensajes predeterminados y el m\u00e9todo <code>checkValidity()</code> visto es posts anteriores.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 26, se resalta lo siguiente:\n<ul>\n\t<li style=\"text-align:justify;\">El valor de <code>ng-model</code> es elegido a discreci\u00f3n, sin embargo, Angular.js realiza la validaci\u00f3n del campo usando el valor del atributo <code>name</code>.</li>\n\t<li style=\"text-align:justify;\">Si el atributo <code>name</code> no existe, Angular.js usa el valor de <code>ng-model</code>, sin embargo, esto se deber\u00eda evitar si est\u00e1 presente el atributo <code>novalidate</code> en el formulario.</li>\n\t<li style=\"text-align:justify;\">Cada validaci\u00f3n inclu\u00edda es un atributo asignado al objeto global <code>$error</code>, en la forma: <code>&lt;nombre-formulario&gt;.&lt;nombre-campo&gt;.$error.&lt;validaci\u00f3n&gt;</code></li>\n</ul>\n</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 27, se resalta lo siguiente:\n<ul>\n\t<li style=\"text-align:justify;\">La directiva <code>ng-messages</code> agrupa todos los mensajes de error a ser mostrados cuando la validaci\u00f3n no se cumple, por eso, debe observar el comportamiento de <code>$error</code>.</li>\n\t<li style=\"text-align:justify;\">La directiva <code>ng-messages-include</code> indica un template donde se pueden agrupar todos los mensajes de error a ser llamados durante la interacci\u00f3n. Para ello, es importante evitar abrir el archivo directamente en el navegador. Aqu\u00ed la directiva <code>ng-message</code> se aplica un mensaje para una validaci\u00f3n en espec\u00edfico:\n\n[code lang=\"html\" collapse=\"true\" title=\"Archivo: errores.html\"]\n&lt;div ng-message=&quot;required&quot; class=&quot;red darken-2 center-align white-text&quot;&gt;Este campo es requerido!&lt;/div&gt;\n&lt;div ng-message=&quot;pattern&quot; class=&quot;red darken-2 center-align white-text&quot;&gt;No cumple con el patr\u00f3n solicitado&lt;/div&gt;\n[/code]\n\n</li>\n\t<li style=\"text-align:justify;\">Para asegurar que alguno de los mensajes no se muestren cuando no exista interacci\u00f3n en el campo, se usa la directiva <code>ng-hide</code>, observando el valor del objeto <code>$pristine</code> en el mismo.</li>\n</ul>\n</li>\n</ul>\n[caption id=\"attachment_551\" align=\"aligncenter\" width=\"483\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_invalid.png\"><img class=\" wp-image-551\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_invalid.png?w=150\" alt=\"Las validaciones haciendo lo suyo...\" width=\"483\" height=\"313\" /></a> <strong>Las validaciones haciendo lo suyo...</strong>[/caption]\n<p style=\"text-align:justify;\">Como valor agregado, el formulario no habilita el env\u00edo de los datos (bot\u00f3n submit) hasta tanto no se hayan validado todos los campos del formulario</p>\n\n\n[caption id=\"attachment_552\" align=\"aligncenter\" width=\"481\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_valid.png\"><img class=\" wp-image-552\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/pantallazo_valid.png?w=150\" alt=\"...y aqu\u00ed cuando todo va bien\" width=\"481\" height=\"269\" /></a> <strong>...y aqu\u00ed cuando todo va bien</strong>[/caption]\n<p style=\"text-align:justify;\">Hay mucho por hacer con este formulario, y las validaciones de Angular.js. En algunos casos puede resultar m\u00e1s pr\u00e1ctico usar las directivas de Angular.js (como <code>ng-required</code> y <code>ng-pattern</code>) encapsulando su l\u00f3gica dentro de un controlador, y cosas por el estilo.</p>\n<p style=\"text-align:justify;\">Si deseas profundizar en la validaci\u00f3n de campos de formulario con ng-messages, puedes empezar con <a href=\"http://www.yearofmoo.com/2014/05/how-to-use-ngmessages-in-angularjs.html\" target=\"_blank\">este</a> art\u00edculo. Cualquier m\u00e9todo es v\u00e1lido... ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Mon, 08 Jun 2015 01:20:43 +0000"}, {"tags": [], "date": "Mon, 08 Jun 2015 01:20:48 +0000"}, {"tags": [], "date": "Mon, 08 Jun 2015 13:28:19 +0000"}, {"tags": ["angularjs", "datos", "frontend", "html", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "libreria-angular", "tecnologia", "tutorial"], "title": "LIBRER\u00cdA ANGULAR. PARTE 3,5. SIRVIENDO", "date": "Tue, 09 Jun 2015 14:07:06 +0000", "content": "&lt;script src=\"my own\" title=\"parte 3,5. sirviendo\"&gt;\n<p style=\"text-align:justify;\">Entre el 3 y el 4, y antes de ponerme a escribir el siguiente post del tutorial, consider\u00e9 importante abordar una parte importante (y tal vez m\u00e1s natural para el desarrollador) de Angular.js, y para eso es este \"post intermedio\" ( :P ). Se trata de los <em>servicios</em> en Angular.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">Sirviendo</h2>\n<p style=\"text-align:justify;\">Hay muchos conceptos de arquitectura de sistemas que involucra la implantaci\u00f3n de un \"servicio\", visto desde el enfoque tradicional. En patrones de dise\u00f1o, el modelo <em>closure </em>de Javascript provee una forma adecuada para conceptualizar un servicio, el cual (en Javascript, hablando del <em>closure</em>) no es m\u00e1s que un objeto global que tiene un comportamiento o influencia sobre cierta area del sistema en particular, pero que convive separado del resto del sistema.</p>\n\n\n[caption id=\"attachment_580\" align=\"aligncenter\" width=\"412\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/javawebservices.jpg\"><img class=\" wp-image-580\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/javawebservices.jpg?w=150\" alt=\"&quot;A grosso modo&quot; lo que son servicios web\" width=\"412\" height=\"247\" /></a> <strong>\"A grosso modo\" lo que son servicios web</strong>[/caption]\n<p style=\"text-align:justify;\">Dicho esto, Angular.js tiene su forma particular de crear servicios bajo el mismo principio. En mi caso, dise\u00f1\u00e9 un servicio que provee m\u00e9todos de acceso a la interfaz de <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\" target=\"_blank\">IndexedDB</a> en el navegador, todo eso con el prop\u00f3sito de tener un componente CRUD de acceso a datos \u00a1a lo Javascript! :D</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"Archivo: external/service.js\" highlight=\"3, 6, 9, 20, 30, 33, 35, 37, 38\"]\nvar libreria = angular.module('libreria-angular'); //Se instancia de manera global\n\nlibreria.service('$crud', ['$q', function($q) {\n\n\t// Instancia de Dexie\n\tvar _db = new Dexie('libreria-angular');\n\n\t// Estructura prototipo del objeto Libro\n\tvar _Libro = function(o){\n\t\tthis.titulo = o.titulo;\n\t\tthis.autor = o.autor;\n\t\tthis.anio = o.anio;\n\t\tthis.categoria = o.categoria;\n\t\tthis.precio = o.precio;\n\t\tthis.inventario = o.inventario;\n\t\tthis.existente = o.existente;\n\t};\n\n\t// TODO: Configuraci\u00f3n gen\u00e9rica del esquema con $provide\n\t_db.version(1)\n\t\t.stores({\n\t\t\tlistaLibros: '++id, titulo, autor, anio, categoria, precio, inventario, existente'\n\t\t});\n\n\t//Abrir conexi\u00f3n con BD ~ Cerrar conexi\u00f3n con BD\n\tvar _abrir = function(){ _db.open(); };\n\tvar _cerrar = function(){ _db.close(); };\n\n\t// Instancia del API Promises Q+ de Angular\n\tvar _q = $q.defer();\n\n\tthis.agregar = function(data){\n\t\t_abrir();\n\t\t_db.listaLibros.put(new _Libro(data)).then(function(data){\n\t\t\t_q.resolve(data); // N\u00famero de objetos insertados en la BD\n\t\t});\n\t\t_cerrar();\n\t\treturn _q.promise;\n\t};\n\t...\n}]);\n[/code]\n\n<p style=\"text-align:justify;\">Vale decir que el resto del c\u00f3digo fuente del servicio (y las dem\u00e1s actualizaciones :) ) est\u00e1 en mi <a href=\"https://github.com/ChinuxParibus/libreria-angular/blob/master/app/service.js\" target=\"_blank\">repo</a>. Ahora bien, hay mucho que resaltar:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">L\u00ednea 3</span>: Tal y como definimos una <em>factory </em>en el <a href=\"https://jotaeseymas.wordpress.com/2015/05/13/libreria-angular-parte-3-fabricando/\" target=\"_blank\">post</a> anterior de este tutorial, usamos la palabra reservada <code>service</code> en este caso, luego el nombre del servicio, inyectando como dependencia el objeto global <code>$q</code> (del cual voy a hablar m\u00e1s adelante).</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">L\u00ednea 6</span>: Uso <a href=\"http://www.dexie.org/\" target=\"_blank\">Dexie.js</a> en su versi\u00f3n minificada como componente de acceso a IndexedDB. Ac\u00e1 se define la instancia de la base de datos a ser creada, pueden ver su <a href=\"https://github.com/dfahlander/Dexie.js/wiki/API%20Reference\" target=\"_blank\">documentaci\u00f3n</a> para m\u00e1s informaci\u00f3n.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">L\u00ednea 9</span>: No hay mucho que decir, salvo que es el patr\u00f3n de dise\u00f1o que nos sirve de prototipo para tener un acceso uniforme de los datos ingresados en la Base de Datos, en comparaci\u00f3n con la estructura presentada en la <em>factory</em> creada.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">Linea 20</span>: Se define el esquema de la base de datos. En IndexedDB, cada columna de una tabla relacional SQL es vista como \"\u00edndice\" de un mismo esquema. Queda pendiente el tema de realizar configuraciones de servicios con el objeto global <code>$provide</code> de Angular.js.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">L\u00ednea 30</span>: El objeto global <code>$q</code> y su m\u00e9todo <code>$q.defer()</code> forman parte de la API Promises propia de Angular.js. En este <a href=\"https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/\" target=\"_blank\">post</a> hablaba sobre Promises en Javascript, pero no dije que fuera la \u00fanica forma de implementarlas (jejeje, <a href=\"http://media-cache-ec0.pinimg.com/736x/4f/59/bd/4f59bd459c6decc713992bf16eb37d25.jpg\" target=\"_blank\"><em>zorry</em></a> :D ).\n\nLa <a href=\"http://documentup.com/kriskowal/q/\" target=\"_blank\">API Promises Q+</a> es un enfoque distinto del visto en el post mencionado anteriormente. Fue creado por <a href=\"https://github.com/kriskowal\" target=\"_blank\">Kris Kowal</a>, uno de los colaboradores de Angular.js. Este enfoque propone un manejo as\u00edncrono y adem\u00e1s paralelo de la resoluci\u00f3n de Promises.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">L\u00edneas 33 y 37</span>: Ning\u00fan misterio: abren y cierran conexi\u00f3n con la Base de Datos. En IndexedDB es buena pr\u00e1ctica no dejar conexiones abiertas luego de realizar transacciones.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\"> L\u00ednea 35</span>: El m\u00e9todo <code>agregar()</code> y todos los m\u00e9todos del servicio <code>$crud</code>, tienen la misma aproximaci\u00f3n as\u00edncrona de resoluci\u00f3n de Promises. Esto es as\u00ed por la aproximaci\u00f3n que utiliza la libreria Dexie.js para hacer transacciones a IndexedDB retornando Promises a ser resueltas. Esto es, luego de realizar la transacci\u00f3n, se hallan los datos que quedaron \"por resolver\" (m\u00e9todo <code>$q.defer()</code>)\u00a0 en el envio de Promises.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">L\u00ednea 38</span>: Se retorna el Promise a ser manejado m\u00e1s adelante con la finalidad de hacerlo \"gen\u00e9rico\".</li>\n</ul>\n<p style=\"text-align:justify;\">Todos los m\u00e9todos del servicio <code>$crud</code> tienen este enfoque de resoluci\u00f3n de Promises, lo cual requiere que, en donde vaya a ser utilizado, sea resuelto de la forma indicada en este <a href=\"https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/\" target=\"_blank\">post</a>, lo cual (y no todo es color de rosa) representa una complejidad extra en nuestro c\u00f3digo.</p>\n\n<h2 style=\"text-align:justify;\">\u00bfFabricando o Sirviendo?</h2>\n<p style=\"text-align:justify;\">Mucho se ha dicho (y se ha escrito) sobre el uso de services o factories en Angular.js, sin embargo es importante resaltar que: \u00a1SON SIMILARES!, pues en realidad ambas aproximaciones representan un <em>closure</em>, con la \u00daNICA diferencia observable que en un <em>factory </em>se retorna un objeto, mientras que en un <em>service</em> no.</p>\n<p style=\"text-align:justify;\">La decisi\u00f3n de usar uno u otro, deber\u00eda ser definido por una cuesti\u00f3n propia de la arquitectura que est\u00e9s dise\u00f1ando, pero en cualquier caso, es bueno saber que cuentas con componentes variados que puedes utilizar en cualquier momento y para funcionalidades espec\u00edficas dentro de tu aplicaci\u00f3n. Aunque no es fijo ni est\u00e1ndar, se estila el uso un factory para compartir datos entre controladores, mientras que un service trabaja como interfaz de otras secciones de la aplicaci\u00f3n.</p>\n<p style=\"text-align:justify;\">Ahora a sumar +0,5 al tutorial. \u00a1Hasta el pr\u00f3ximo post! ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 09 Jun 2015 14:37:24 +0000"}, {"tags": ["algoritmos", "datos", "formato", "javascript", "la-piedra-angular", "lenguaje-de-programacion", "libreria-angular", "nuevo", "proyectos", "tecnologia"], "title": "REESCRIBIENDO CONTROLADORES EN ANGULAR.JS", "date": "Fri, 12 Jun 2015 16:32:07 +0000", "content": "&lt;script src=\"my own\" title=\"reescribiendo controladores en angular.js\"&gt;\n<p style=\"text-align:justify;\"><em>\"Entre gustos y colores no se han escrito autores\"</em>, dicen <strong><span style=\"color:#7cbbbb;\">#porai</span></strong>. Eso es cierto hasta que decides por un gusto en particular. En este caso, hablo espec\u00edficamente de la manera de escribir c\u00f3digo (Javascript, por supuesto XD ).</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">La librer\u00eda <a href=\"http://davej.github.io/angular-classy/\" target=\"_blank\">Angular-Classy</a>, propone un estilo de escribir controladores en Angular.js un tanto m\u00e1s estructurado y, tal vez, un tanto m\u00e1s entendible para una persona acostumbrada al orden y a una estructura ordenada (no quiero decir que yo no lo sea, s\u00f3lo que prefiero las cosas <em>simples </em>a las cosas<em> ordenadas</em>).</p>\n<p style=\"text-align:justify;\">Nada milagroso ni hol\u00edstico, inclu\u00edmos la librer\u00eda (despu\u00e9s de Angular.js, claro) y la \"inyectamos\" como dependencia en la aplicaci\u00f3n. Bueno, ya que estamos en ese plan, y como para echarle un vistazo a la librer\u00eda (aparte de quitarme un poco el prejuicio :twisted: ), vamos a \"reescribir\" los controladores que llevamos hasta ahora en mi <a href=\"https://jotaeseymas.wordpress.com/2015/03/25/libreria-angular-parte-1-controlando-y-dirigiendo/\" target=\"_blank\">tutorial</a>:</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"Archivo: app/controllers-classy.js\"]\nvar libreria = angular.module('LibreriaApp', ['ngRoute', 'classy']);\n\nlibreria.classy.controller({\n\tname: &quot;TemplateCtrl&quot;,\n\n\tinject: ['$scope'],\n\n\tdata: {\n\t\ttemplates: [\n\t\t\t{url : 'templates/menu_superior.html'},\n\t\t\t{url : 'templates/nuevo_libro.html'},\n\t\t\t{url : 'templates/nueva_categoria.html'},\n\t\t\t{url : 'templates/comprar.html'}\n\t\t]\n\t}\n});\n\nlibreria.classy.controller({\n\tname: &quot;CategoriasCtrl&quot;,\n\n\tinject: ['$scope', 'categorias'],\n\n\tdata: {\n\t\tcategorias: 'categorias.listaCategorias',\n\t\tS_categorias: 'categorias'\n\t},\n\n\tmethods: {\n\t\tnombrarCategoria: function(id){\n\t\t\treturn this.$.categorias[id-1].nombre\n\t\t},\n\n\t\taddCategoria: function(nombre){\n\t\t\tthis.S_categorias.addCategoria(nombre);\n\t\t}\n\t}\n});\n\nlibreria.classy.controller({\n\tname: &quot;LibrosCtrl&quot;,\n\n\tinject: ['$scope', 'libreria', '$routeParams'],\n\n\tdata: {\n\t\tlistaLibros: 'libreria.listaLibros'\n\t},\n\n\tmethods: {\n\t\tfiltrarLibros: function(){\n\t\t\treturn this.libreria.filtrarLibros(parseInt(this.$routeParams.categoria));\n\t\t}\n\t}\n});\n[/code]\n\n<p style=\"text-align:justify;\">Respecto a como estaba antes:</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"Archivo: app/controllers.js\"]\n//M\u00f3dulo principal de la aplicaci\u00f3n, con Inyecci\u00f3n de Dependencias\nvar libreria = angular.module('LibreriaApp', ['ngRoute']);\n\n//Controller para administrar los templates\nlibreria.controller('TemplateCtrl', ['$scope', function($scope) {\n\tvar rootDir = 'templates/';\n\t$scope.templates = [\n\t\t{url : rootDir+'menu_superior.html'},\n\t\t{url : rootDir+'nuevo_libro.html'},\n\t\t{url : rootDir+'nueva_categoria.html'},\n\t\t{url : rootDir+'comprar.html'}\n\t];\n}]);\n\n//Controller para administrar las categor\u00edas\nlibreria.controller('CategoriasCtrl', ['$scope', 'categorias', function($scope, categorias) {\n\t$scope.categorias = categorias.listaCategorias;\n\n\t$scope.nombrarCategoria = function(id){\n\t\treturn $scope.categorias[id-1].nombre;\n\t};\n\n\t$scope.addCategoria = function(nombre){\n\t\tcategorias.addCategoria(nombre);\n\t}\n\n}]);\n\n//Controller para administrar los libros\nlibreria.controller('LibrosCtrl', ['$scope', 'libreria', '$routeParams', function($scope, libreria, $routeParams) {\n\t$scope.listaLibros = libreria.listaLibros;\n\n\t$scope.filtrarLibros = function(){\n\t\treturn libreria.filtrarLibros(parseInt($routeParams.categoria));\n\t};\n\n}]);\n[/code]\n\n<p style=\"text-align:justify;\">\u00bf53 l\u00edneas de Angular-Classy versus 37 l\u00edneas de Angular simple? Mmm, no me parece... o_O</p>\n<p style=\"text-align:justify;\">Aunque ciertamente se ve un poco m\u00e1s estructurado, el coste son m\u00e1s l\u00edneas de c\u00f3digo, que a\u00f1aden un poco m\u00e1s de \"complejidad\" a la aplicaci\u00f3n. La ventaja en este caso es tener nuestro c\u00f3digo fuente con un poco m\u00e1s de claridad. En cualquier caso, pueden ver la documentaci\u00f3n de la librer\u00eda para m\u00e1s informaci\u00f3n, y mi <a href=\"https://github.com/ChinuxParibus/libreria-angular\" target=\"_blank\">repo</a> para ver el c\u00f3digo fuente.</p>\n<p style=\"text-align:justify;\">Pero, y debo insistir: \"<em>entre gustos y colores, no se han escrito autores\"</em> ;)</p>\n&lt;/script&gt;"}, {"tags": ["y-sin-jquery", "algoritmos", "aprender", "datos", "formato", "frontend", "javascript", "javascripteando-ando", "json", "lenguaje-de-programacion", "nuevo", "sin-jquery", "tecnologia"], "title": "FALSIFICANDO DATOS PARA MOCKING DE DOCUMENTOS JSON", "date": "Sat, 13 Jun 2015 03:32:41 +0000", "content": "&lt;script src=\"my own\" title=\"falsificando datos para mocking de documentos json\"&gt;\n<p style=\"text-align:justify;\">El <a href=\"https://en.wikipedia.org/wiki/Mock_object\" target=\"_blank\">mocking</a> es un t\u00e9rmino muy extendido en la programaci\u00f3n orientada a objetos. Consiste en la falsificaci\u00f3n de un objeto con el prop\u00f3sito de orientar el desarrollo a pruebas y/o a prototipos r\u00e1pidos. Esto ciertamente tiene sus ventajas si estamos utilizando <a href=\"https://en.wikipedia.org/wiki/Test-driven_development\" target=\"_blank\">TDD</a>.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n\n[caption id=\"attachment_609\" align=\"aligncenter\" width=\"192\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png\"><img class=\" wp-image-609\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/687474703a2f2f696d6775722e636f6d2f4b69696e512e706e67.png?w=110\" alt=\"Muahahaha...\" width=\"192\" height=\"261\" /></a> <strong>Muahahaha...</strong>[/caption]\n<p style=\"text-align:justify;\"><a href=\"https://github.com/marak/faker.js\" target=\"_blank\">Faker.js</a> es una librer\u00eda que sirve a ese prop\u00f3sito. Genera datos aleatorios como nombres completos, <em>usernames</em>, y correos electr\u00f3nicos. Estas capacidades, en conjunto con un documento <a href=\"http://json.org\" target=\"_blank\">JSON</a>, nos permite una fuente muy r\u00e1pida y confiable de datos para probar APIs <a href=\"https://en.wikipedia.org/wiki/Representational_State_Transfer\" target=\"_blank\">RESTful</a>, servidores JSON y l\u00f3gica de acceso a datos en aplicaciones que usen librer\u00edas como <a href=\"http://expressjs.com/\" target=\"_blank\">Express.js</a> o <a href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a>. Veamos algunos ejemplos:</p>\n\n\n[code lang=\"javascript\" title=\"Documento JSON\" collapse=\"true\"]\n{\n\tid: faker.random.uuid(),\n\tusername: faker.internet.userName(),\n\tpassword: faker.internet.password(),\n\tname: faker.name.findName(),\n\taddress: faker.address.streetAddress(),\n\tphone: faker.phone.phoneNumber()\n}\n[/code]\n\n<p style=\"text-align:justify;\">Pueden ver en su documentaci\u00f3n oficial todos los m\u00e9todos que poseen con solo incluir la librer\u00eda. Ac\u00e1 el resultado, tomando en cuenta que ser\u00e1 diferente para ustedes cada vez que ejecuten o recarguen la p\u00e1gina:</p>\n\n\n[caption id=\"attachment_606\" align=\"aligncenter\" width=\"489\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/demo_faker.png\"><img class=\" wp-image-606\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/demo_faker.png?w=150\" alt=\"Con un poco de magia HTML XD\" width=\"489\" height=\"202\" /></a> <strong>Con un poco de \"magia\" HTML XD</strong>[/caption]\n<p style=\"text-align:justify;\"><strong>Promesa: </strong>Escribir varios posts orientados al mocking de documentos JSON. ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Sat, 13 Jun 2015 03:25:25 +0000"}, {"tags": [], "date": "Sat, 13 Jun 2015 03:30:28 +0000"}, {"tags": ["aprender", "datos", "formato", "free", "html", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "nuevo", "tecnologia"], "title": "\u00bfQUE LIBRERIAS JAVASCRIPT DEBO USAR PARA MI PROYECTO?", "date": "Tue, 16 Jun 2015 13:20:08 +0000", "content": "&lt;script src=\"other pages\" title=\"que librerias javascript debo usar para mi proyecto\"&gt;\n\nLa respuesta es: depende, \u00bfde que depende? pues...\n\nhttp://www.youtube.com/watch?v=GtujUCURgtM\n\nEhm, no... Jejeje...\n\n<!--more-->\n<p style=\"text-align:justify;\">Existen p\u00e1ginas que pueden responder mejor esta pregunta, incluso con una referencia concisa que permite identificar r\u00e1pidamente lo que necesito para mi proyecto. Hay muchas m\u00e1s que \u00e9stas, pero me han servido mucho para buscar r\u00e1pidamente.</p>\n\n<h2 style=\"text-align:justify;\">JAVASCRIPTING.COM</h2>\n<p style=\"text-align:justify;\"><a href=\"https://www.javascripting.com/\" target=\"_blank\">Javascripting.com</a> tiene un complet\u00edsimo abanico de librer\u00edas clasificadas por categor\u00edas que facilitan la b\u00fasqueda de una en particular desde animaciones con Sprites y CSS3 hasta como poner huevos de pascua en nuestra p\u00e1gina con <a href=\"https://github.com/mikeflynn/egg.js\" target=\"_blank\">Egg.js</a> (librer\u00eda que por cierto, me parece genial XD ).</p>\n\n<h2 style=\"text-align:justify;\">MICRO.JS</h2>\n<p style=\"text-align:justify;\"><a href=\"http://microjs.com/#\" target=\"_blank\">Micro.js</a> es m\u00e1s modesta. Pretende, como su nombre lo dice, presentar un cat\u00e1logo nada despreciable de librer\u00edas Javascript (\u00a1inclu\u00edda la misma p\u00e1gina entera! :mrgreen: ), todas ellas minimizadas hasta menos de 5KB. Cada una de estas librer\u00edas tiene una utilidad puntual, pudiendo elegir entre varias librer\u00edas \"m\u00e1gicas\" que realizan su labor realmente bien.</p>\n<p style=\"text-align:justify;\">Insisto, ninguna tecnolog\u00eda es la <a href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panacea</a> que va a resolver todos los problemas. En investigar y probar est\u00e1 la soluci\u00f3n ;)</p>\n&lt;/script&gt;"}, {"tags": ["algoritmos", "aprender", "base-de-datos", "datos", "formato", "javascript", "json", "lenguaje-de-programacion", "tecnologia", "tipos", "vanilla-js"], "title": "TYPICO DE: JSON", "date": "Tue, 16 Jun 2015 16:15:36 +0000", "content": "&lt;script src=\"other pages\" title=\"typico de: json\"&gt;\n\nhttp://www.youtube.com/watch?v=PT3wNIs8C_U\n<p style=\"text-align:justify;\">Ehm, jejejeje ^^' Pensaba poner una imagen, pero me gust\u00f3 la letra y la m\u00fasica...</p>\n<p style=\"text-align:justify;\">Pero no, JSON no es ese, bueno, no es ese del que voy a hablar en este post...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">\u00bfQu\u00e9 es JSON entonces?</h2>\n<p style=\"text-align:justify;\"><a href=\"http://json.org/\" target=\"_blank\">JSON</a> es el acr\u00f3nimo para JavaScript Object Notation, o en espa\u00f1ol: Notaci\u00f3n de Objeto Javascript. B\u00e1sicamente es un est\u00e1ndar propuesto y consolidado por la <a href=\"https://es.wikipedia.org/wiki/Ecma_International\" target=\"_blank\">ECMA</a> el cual contempla el intercambio de informaci\u00f3n mediante un protocolo ligero, sencillo, f\u00e1cil de entender por humanos (y tal vez algunos animales :mrgreen: ) y f\u00e1cil de <a href=\"http://www.alegsa.com.ar/Dic/parseo.php\" target=\"_blank\">parsear</a> por m\u00e1quinas (n\u00f3tese que dije <em>m\u00e1quinas</em> y no <em>computadores</em>).</p>\n<p style=\"text-align:justify;\">De acuerdo con su p\u00e1gina oficial:</p>\n\n<blockquote>\n<p style=\"text-align:justify;\"><span id=\"result_box\" class=\"\" lang=\"es\"><span class=\"alt-edited\">JSON es un formato de texto que es completamente independiente del lenguaje, pero utiliza las convenciones que son familiares para los programadores en C, incluyendo C, C ++, C #, Java, JavaScript, Perl, Python, y muchos otros. Estas propiedades hacen de JSON un lenguaje ideal para el intercambio de datos.<em> --Traducido de json.org</em>\n</span></span></p>\n</blockquote>\n<p style=\"text-align:justify;\">El est\u00e1ndar JSON est\u00e1 construido sobre dos estructuras de datos:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\">Una colecci\u00f3n de pares clave-valor, que en otros lenguajes representa un <em>objeto</em>, un <em>diccionario</em> o una <em>tabla hash</em>.</li>\n\t<li style=\"text-align:justify;\">Una lista de valores, que en otros lenguajes representa un <em>arreglo</em>, una <em>lista</em> o un <em>vector</em>.</li>\n</ol>\n[caption id=\"attachment_627\" align=\"aligncenter\" width=\"471\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/object.gif\"><img class=\" wp-image-627\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/object.gif?w=150\" alt=\"Definici\u00f3n gen\u00e9rica de JSON\" width=\"471\" height=\"88\" /></a> <strong>Definici\u00f3n gen\u00e9rica de JSON</strong>[/caption]\n<p style=\"text-align:justify;\">Cada valor de cada clave puede representarse por alguno de los tipos de JSON: <em>string</em>, <em>array</em>, <em>number</em>, <em>true</em>, <em>false</em>, <em>null</em>, <em>object</em> o <em>array</em>.</p>\n<p style=\"text-align:justify;\">Inicialmente, el acr\u00f3nimo no se refiere espec\u00edficamente a Javascript, puesto que ese es el nombre \"comercial\" del <a href=\"https://es.wikipedia.org/wiki/ECMAScript\" target=\"_blank\">ECMAScript</a> implementado por Netscape en sus tiempos, sino que estaba orientado a ser un est\u00e1ndar de comunicaci\u00f3n gen\u00e9rico y/o una forma de representar los datos, ya que:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\">Los tipos de datos son los mismos primitivos de [casi] todos los lenguajes de programaci\u00f3n, y</li>\n\t<li style=\"text-align:justify;\">los conceptos de Objetos y Arreglos existen en la mayor\u00eda de los lenguajes de programaci\u00f3n.</li>\n</ol>\n\n<hr />\n<p style=\"text-align:justify;\"><span style=\"text-decoration:underline;\"><strong>Intenci\u00f3n:</strong></span> El hecho de intentar definir el est\u00e1ndar JSON brevemente en este post se debe a que voy a utilizar este marco de referencia como inicio de los posts que vienen respecto a un conjunto de repositorios que encontr\u00e9 en el <a href=\"https://github.com/typicode\" target=\"_blank\">Gato-Pulpo</a>, basados en facilitar el desarrollo de documentos JSON, los cuales son:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\"><a href=\"https://github.com/typicode/lowdb\" target=\"_blank\">lowdb</a>.</li>\n\t<li style=\"text-align:justify;\"><a href=\"https://github.com/typicode/json-server\" target=\"_blank\">json-server</a>.</li>\n</ul>\nSe los <a href=\"https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/\" target=\"_blank\">dije</a>... *risa malvada* ;)\n\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 16 Jun 2015 15:34:10 +0000"}, {"tags": [], "date": "Tue, 16 Jun 2015 19:48:02 +0000"}, {"tags": ["algoritmos", "free", "google", "html", "javascript", "lenguaje-de-programacion", "nodeameste", "nuevo", "tecnologia"], "title": "NODEAMESTE...", "date": "Tue, 16 Jun 2015 20:31:40 +0000", "content": "&lt;script src=\"my own\" title=\"nodeameste\"&gt;\n\nMe disculpo de antemano si el t\u00edtulo les parece ofensivo... :mrgreen: Nada personal...\n\n[caption id=\"attachment_633\" align=\"aligncenter\" width=\"225\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/cvyvi9wm_400x400.png\"><img class=\" wp-image-633\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/cvyvi9wm_400x400.png?w=150\" alt=\"XD\" width=\"225\" height=\"225\" /></a> XD[/caption]\n\n<!--more-->\n<h2 style=\"text-align:justify;\">Un nuevo chico se muda al vecindario: Node.js</h2>\n<p style=\"text-align:justify;\">Mucho se ha hablado sobre <a href=\"https://nodejs.org/\" target=\"_blank\">Node.js</a> en muchos lugares en la web. Se han realizado aplicaciones, migraciones, servidores, cursos online y offline, sistemas de despliegue en la nube, integraciones con otros lenguajes de programaci\u00f3n como Ruby y Python, y pare usted de contar. Redundar en esto ser\u00eda llover sobre mojado...</p>\n<p style=\"text-align:justify;\">Lo que sucede, es que a pesar de todos los posts de este blog que hacen referencia a su p\u00e1gina oficial, no he profundizado demasiado (en parte por temor, en parte por desconocimiento de la \"librer\u00eda\") en este tema.</p>\n\n<h2 style=\"text-align:justify;\">Pero, \u00bfqu\u00e9 es Node.js?</h2>\n<p style=\"text-align:justify;\">Node.js est\u00e1 basado en el motor <a href=\"https://code.google.com/p/v8/\" target=\"_blank\">V8</a> (no de <em>ocho cilindros</em>, precisamente :P ) que usa el navegador Google Chrome. A partir de la liberaci\u00f3n del c\u00f3digo fuente, <a href=\"https://www.linkedin.com/in/ryandahl\" target=\"_blank\">Ryan Dahl</a>, desarrollador de la empresa <a href=\"https://www.joyent.com/\" target=\"_blank\">Joyent</a>, en el 2009, ha creado un entorno de desarrollo Javascript (como una especie de m\u00e1quina virtual) que corre sobre cualquier plataforma. En esencia, es como si hubiera una consola de navegador, pero del lado del servidor. Esto derrib\u00f3 el paradigma de que Javascript es un lenguaje limitado meramente al lado del cliente.</p>\n\n<h2 style=\"text-align:justify;\">\u00bfPara que sirve Node.js?</h2>\nPara muchas cosas, en principio:\n<ul>\n\t<li>... para implementar servidores HTTP <strong>realmente</strong> r\u00e1pidos (\u00a1hasta 1000% m\u00e1s que Apache!).</li>\n\t<li>... para desarrollo de m\u00e1quinas virtuales en la nube.</li>\n\t<li>... para dise\u00f1ar <a href=\"https://es.wikipedia.org/wiki/Middleware\" target=\"_blank\"><em>middlewares</em></a> que conecten servicios web.</li>\n\t<li>... para arquitecturas desacopladas (<em><a href=\"https://en.wikipedia.org/wiki/Loose_coupling\" target=\"_blank\">loose coupling</a></em>).</li>\n\t<li>... para integrar componentes web de diferentes lenguajes de programaci\u00f3n.</li>\n\t<li>... para automatizaci\u00f3n de tareas de desarrollo web (<a href=\"https://en.wikipedia.org/wiki/Workflow\" target=\"_blank\">workflows</a>).</li>\n\t<li>... para streaming de acceso a archivos (Javascript nativamente no posee esta funci\u00f3n).</li>\n\t<li>... y un largo etc\u00e9tera!</li>\n</ul>\n<h2>\u00bfD\u00f3nde lo descargo?</h2>\n<p style=\"text-align:justify;\">Desde su p\u00e1gina oficial est\u00e1 el instalador (para Mocosoft Guindous o manzanitaOS) o el c\u00f3digo fuente para compilar en GNU/Linux. Recomiendo personalmente descargar el c\u00f3digo fuente y compilarlo aunque en Guindous, no hay mucho que hacer... :twisted:</p>\n<p style=\"text-align:justify;\">Una vez instalado (y luego de varios caf\u00e9s), podemos desarrollar un servidor HTTP usando Javascript trocho y mocho nada m\u00e1s terminar:</p>\n\n\n[code lang=\"javascript\" title=\"Ejemplo de servidor HTTP\" collapse=\"true\"]\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World\\n');\n}).listen(1337, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:1337/');\n[/code]\n\n<p style=\"text-align:justify;\">Guardamos bajo el nombre <code>app.js</code>, y en consola (<code>bash</code> en GNU/Linux, <code>cmd</code> en Guindous) escribimos:</p>\n\n\n[code lang=\"bash\"]$ node app.js[/code]\n\n<p style=\"text-align:justify;\">Luego vamos a un navegador y \u00a1voil\u00e1! M\u00e1gicamente tenemos un servidor HTTP con una respuesta de texto. Por ahora no voy a profundizar mucho en la sintaxis, que es un post inicial, \u00a1caramba!... :D</p>\n<p style=\"text-align:justify;\">Todo esto, utilizando mecanismos que existen en Javascript tales como: manejo de eventos, simulaci\u00f3n de procesos multihilo, orientaci\u00f3n a objetos, comunicaci\u00f3n as\u00edncrona, prototipado, etc\u00e9tera... Es mucho m\u00e1s lo que se podr\u00eda decir de este entorno de desarrollo, pero es mejor dejarle a ustedes esa tarea. Lo m\u00edo es investigar y programar ;)</p>\n&lt;/script&gt;"}, {"tags": ["angularjs", "aprender", "curioscriptades", "es6", "free", "google", "html", "javascript", "lenguaje-de-programacion", "nuevo", "post-format-aside", "proyectos", "tecnologia"], "title": "SE\u00d1ORAS Y SE\u00d1ORES. \u00a1EL FUTURO EST\u00c1 AQU\u00cd!", "date": "Thu, 18 Jun 2015 14:24:45 +0000", "content": "&lt;script src=\"other pages\" title=\"se\u00f1oras y se\u00f1ores el futuro esta aqui\"&gt;\n<p style=\"text-align:justify;\">Curiosamente, el futuro estaba anunciado desde hace rato, solo que no se hab\u00eda hecho oficial jejeje :mrgreen: . De hecho, ven\u00eda hablando de eso someramente hace tiempo por <a href=\"https://jotaeseymas.wordpress.com/2015/02/06/donde-investigar-javascript/\" target=\"_blank\">aqu\u00ed</a> y por <a href=\"https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/\" target=\"_blank\">aqu\u00ed</a>. Pero la verdad, la esperaba en Mayo...</p>\n<p style=\"text-align:justify;\">\u00bfQu\u00e9 esperaba? Que la versi\u00f3n de ECMAScript 6 (a.k.a Javascript versi\u00f3n 6 o \"Harmony\") se hiciera oficial, y hoy 18 de Junio de 2015 \u00a1la han hecho <strong><a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" target=\"_blank\">oficial</a></strong>! :D Si bien la noticia no es nueva, puesto que han habido una serie de tecnolog\u00edas, conferencias y librer\u00edas que vienen usando e investigando ES6 desde el a\u00f1o pasado como <a href=\"http://jsrocks.org/\" target=\"_blank\">ES6Rocks</a> y <a href=\"https://babeljs.io/\" target=\"_blank\">Babel Transpiler</a>.</p>\n\n<h2 style=\"text-align:justify;\">\u00bfQu\u00e9 sigue?</h2>\n<p style=\"text-align:justify;\">Nada, esperar los movimientos de las compa\u00f1\u00edas que quieran montarse en la cresta de la ola, como Google y su framework Angular.js que en poco tiempo debe estar sacando un Release versi\u00f3n 2.0 con todas las nuevas funcionalidades de ES6 (Actualmente est\u00e1 en fase <a href=\"http://angular.io\" target=\"_blank\">alpha</a>), y su transpilador <a href=\"https://github.com/google/traceur-compiler/\" target=\"_blank\">Google Traceur</a>.</p>\n...y aprender Javascript 6, \u00bfque m\u00e1s? ;)\n\n&lt;/script&gt;"}, {"tags": ["algoritmos", "aprender", "base-de-datos", "datos", "formato", "free", "html", "javascript", "json", "lenguaje-de-programacion", "nodeameste", "nuevo", "proyectos", "tecnologia"], "title": "TYPICO DE: LOWDB", "date": "Mon, 22 Jun 2015 15:40:16 +0000", "content": "&lt;script src=\"my own\" title=\"typico de: lowdb\"&gt;\n<p style=\"text-align:justify;\">En este <a href=\"https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/\" target=\"_blank\">post</a>, hab\u00eda iniciado el camino que nos toca andar por el ecosistema <a href=\"https://nodejs.org/\" target=\"_blank\">Node.js</a>. Si a\u00fan no lo has instalado en tu m\u00e1quina, \u00bfqu\u00e9 est\u00e1s esperando? \u00a1<a href=\"https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/\" target=\"_blank\">el futuro est\u00e1 aqu\u00ed</a>! Y hay cientos de tutoriales (incluido el oficial) que indican como hacerlo ;) La idea ac\u00e1 es otra: usar la librer\u00eda, con lo que nos toca o para lo que nos toca...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\"><em>lowdb,</em> una base de datos JSON est\u00e1tica</h2>\n<p style=\"text-align:justify;\"><a href=\"https://github.com/typicode/lowdb\" target=\"_blank\">lowdb</a> es una librer\u00eda Javascript que permite <em>simular </em>el comportamiento de una base de datos No SQL orientada a documentos (<a href=\"http://json.org\" target=\"_blank\">JSON</a> es perfecto para esto), usando para su acceso, un entorno Node.js. Para ello, la librer\u00eda provee dos formas de hacerlo, usando un archivo JSON y usando la memoria RAM disponible. Usamos el instalador de paquetes de Node.js para instalar la librer\u00eda:</p>\n\n\n[code lang=\"bash\"]$ npm install lowdb[/code]\n\n<p style=\"text-align:justify;\">Se llama <em>lowdb</em> porque para manipular la \"base de datos\" utiliza todos los m\u00e9todos disponibles en la librer\u00eda <a href=\"https://lodash.com/docs\" target=\"_blank\">lodash</a>, de la cual habl\u00e9 brevemente en este <a href=\"https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/\" target=\"_blank\">post</a>. La idea es simular consultas y resultados, as\u00ed que prepararemos el terreno :D .</p>\n\n<h2 style=\"text-align:justify;\">Preparando el terreno...</h2>\n<p style=\"text-align:justify;\">Primero buscamos una fuente de informaci\u00f3n JSON. Yo us\u00e9 un extracto CSV de las visitas de mi blog (\u00a1un mill\u00f3n de gracias a ustedes :mrgreen: !) transformadas al formato requerido usando esta <a href=\"http://csvtojson.com/\" target=\"_blank\">p\u00e1gina</a>. El documento final quedar\u00eda as\u00ed:</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"Archivo: summary.json\" gutter=\"false\"]\n{\n  &quot;summary&quot;: [\n    {\n      &quot;pais&quot;: &quot;Venezuela&quot;,\n      &quot;visitas&quot;: 17\n    },\n    {\n      &quot;pais&quot;: &quot;Ecuador&quot;,\n      &quot;visitas&quot;: 9\n    },\n    {\n      &quot;pais&quot;: &quot;Costa Rica&quot;,\n      &quot;visitas&quot;: 12\n    },\n    {\n      &quot;pais&quot;: &quot;Espa\u00f1a&quot;,\n      &quot;visitas&quot;: 32\n    },\n    {\n      &quot;pais&quot;: &quot;El Salvador&quot;,\n      &quot;visitas&quot;: 7\n    },\n    {\n      &quot;pais&quot;: &quot;Argentina&quot;,\n      &quot;visitas&quot;: 20\n    },\n    {\n      &quot;pais&quot;: &quot;Estados Unidos&quot;,\n      &quot;visitas&quot;: 6\n    },\n    {\n      &quot;pais&quot;: &quot;Colombia&quot;,\n      &quot;visitas&quot;: 45\n    },\n    {\n      &quot;pais&quot;: &quot;Nicaragua&quot;,\n      &quot;visitas&quot;: 2\n    },\n    {\n      &quot;pais&quot;: &quot;Chile&quot;,\n      &quot;visitas&quot;: 7\n    },\n    {\n      &quot;pais&quot;: &quot;Honduras&quot;,\n      &quot;visitas&quot;: 2\n    },\n    {\n      &quot;pais&quot;: &quot;M\u00e9xico&quot;,\n      &quot;visitas&quot;: 35\n    },\n    {\n      &quot;pais&quot;: &quot;Francia&quot;,\n      &quot;visitas&quot;: 1\n    },\n    {\n      &quot;pais&quot;: &quot;Per\u00fa&quot;,\n      &quot;visitas&quot;: 43\n    },\n    {\n      &quot;pais&quot;: &quot;Bolivia&quot;,\n      &quot;visitas&quot;: 9\n    },\n    {\n      &quot;pais&quot;: &quot;Rep\u00fablica Dominicana&quot;,\n      &quot;visitas&quot;: 1\n    }\n  ]\n}\n[/code]\n\n<p style=\"text-align:justify;\">Luego, escribimos un peque\u00f1o script en el mismo directorio donde ejecutamos el comando de instalaci\u00f3n de la librer\u00eda y empezamos a jugar:</p>\n\n\n[code lang=\"javascript\" collapse=\"true\" title=\"Archivo: app.js\" highlight=\"2,6\"]\n//instancia de lowdb\nvar lowdb = require('lowdb'),\n//Base de datos a partir de disco\n    db = lowdb('summary.json'),\n//nombre de la base de datos.\n    data = db('summary');\n\nconsole.log('*** 5 Pa\u00edses con mayor cantidad de visitas ***')\nconsole.log(data.chain().sortByOrder('visitas', false).take(5).value());\nconsole.log(); //nueva l\u00ednea\n\nconsole.log('*** Pa\u00eds con menor cantidad de visitas ***')\nconsole.log(data.chain().sortBy('visitas').first().value());\nconsole.log();\n\nconsole.log('*** Promedio de visitas ***')\nconsole.log(data.reduce(function(suma, item){\n\tsuma += item.visitas;\n\treturn suma;\n}, 0)/data.value().length);\n\n[/code]\n\n<p style=\"text-align:justify;\">S\u00f3lo para resaltar, la l\u00ednea 2 es la sintaxis de como Node.js llama a sus dependencias usando el formato <a href=\"https://en.wikipedia.org/wiki/Asynchronous_module_definition\" target=\"_blank\">AMD</a> de <a href=\"http://requirejs.org/\" target=\"_blank\">RequireJS</a>, del cual habl\u00e9 en este <a href=\"https://jotaeseymas.wordpress.com/2015/04/14/programacion-modular-con-javascript/\" target=\"_blank\">post</a>. Mientras que en la l\u00ednea 6, aunque se instancia la variable de acceso de ese modo, no tiene nada que ver con el nombre del archivo, sino con el hecho de que el primer campo del documento JSON se llama <em>summary</em>.</p>\n\n<h2 style=\"text-align:justify;\">Resultados</h2>\n<p style=\"text-align:justify;\">He aqu\u00ed el resultado de ejecutar el comando <code>node app.js</code> en el mismo directorio:</p>\n\n\n[code collapse=\"true\" title=\"Resultado de consola\"]\n*** 5 Pa\u00edses con mayor cantidad de visitas ***\n[ { pais: 'Colombia', visitas: 45 },\n  { pais: 'Per\u00fa', visitas: 43 },\n  { pais: 'M\u00e9xico', visitas: 35 },\n  { pais: 'Espa\u00f1a', visitas: 32 },\n  { pais: 'Argentina', visitas: 20 } ]\n\n*** Pa\u00eds con menor cantidad de visitas ***\n{ pais: 'Francia', visitas: 1 }\n\n*** Promedio de visitas ***\n15.5\n[/code]\n\n<p style=\"text-align:justify;\">Con la documentaci\u00f3n de la librer\u00eda <em>lodash</em> a la mano, se vuelve bastante interesante proponer combinaciones, trabajar con documentos JSON m\u00e1s complejos (con datos vinculados, por ejemplo), usar documentos no uniformes o iterar sobre propiedades no anidadas *risa malvada* :twisted: .</p>\n<p style=\"text-align:justify;\">La creatividad es un rasgo <em>typico de</em> las mentes curiosas ;)</p>\n<p style=\"text-align:justify;\">&lt;/script&gt;</p>"}, {"tags": ["aprender", "curioscriptades", "expresiones-regulares", "formato", "javascript", "lenguaje-de-programacion", "mozilla-firefox", "mozilla-labs", "post-format-aside", "tipos", "tutorial"], "title": "RE-INTRODUCCION A JAVASCRIPT \u00a1A LO MOZILLA!", "date": "Mon, 22 Jun 2015 18:13:12 +0000", "content": "&lt;script src=\"other pages\" title=\"re-introducci&amp;oacute;n a javascript a lo mozilla\"&gt;\n<p style=\"text-align:justify;\">La \u00faltima actualizaci\u00f3n de este art\u00edculo fue el 17 de Mayo, eso indica que es importante para los muchachos de <a href=\"https://developer.mozilla.org/es/\" target=\"_blank\">MDN</a> no solamente comercializar su producto estrella <a href=\"https://www.mozilla.org/es-ES/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>, sino que tambi\u00e9n se preocupa por los desarrolladores web, lo cual es una interesante forma de retroalimentaci\u00f3n.</p>\n<p style=\"text-align:justify;\">En este <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Una_re-introducci%C3%B3n_a_JavaScript\" target=\"_blank\">art\u00edculo</a> de los chicos de MDN, dan un repaso por las caracter\u00edsticas m\u00e1s relevantes de Javascript, con algunas p\u00edldoras de historia y otros detalles: ejemplos, resultados, aplicaciones espec\u00edficas para el navegador, etc\u00e9tera.</p>\n<p style=\"text-align:justify;\">Interesante lectura para los que estamos aprendiendo... permanentemente... ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "free", "javascript", "lenguaje-de-programacion", "post-format-link", "tecnologia", "tipos", "vanilla-js"], "title": "JAVASCRIPT. EL LENGUAJE M\u00c1S INCOMPRENDIDO DEL MUNDO", "date": "Mon, 22 Jun 2015 18:24:09 +0000", "content": "&lt;script src=\"other pages\" title=\"javascript. el lenguaje mas incomprendido del mundo\"&gt;\n<p style=\"text-align:justify;\">Este <a href=\"http://javascript.crockford.com/javascript.html\" target=\"_blank\">art\u00edculo</a> escrito por <a href=\"http://www.crockford.com/\" target=\"_blank\">Douglas Crockford</a> no tiene desperdicio. En el se diserta sobre el porque Javascript ha sido tan malinterpretado durante todos los a\u00f1os de su desarrollo desde que sali\u00f3 como tecnolog\u00eda asociada al navegador Netscape Navigator. Se que muchos conocen la historia, y si no, pues revisen el art\u00edculo. ;)</p>\n&lt;/script&gt;"}, {"tags": ["algoritmos", "aprender", "curioscriptades", "expresiones-regulares", "formato", "frontend", "html", "javascript", "lenguaje-de-programacion", "post-format-link"], "title": "\u00bfQU\u00c9 M!3&%@$~ ES ESO?", "date": "Fri, 26 Jun 2015 19:04:46 +0000", "content": "&lt;script src=\"other pages\" title=\"\u00bfqu\u00e9 m!3&amp;%@$~ es eso?\"&gt;\n\n[code lang=\"javascript\" gutter=\"false\"]\n[,,,].join() // ==&gt; &quot;,,&quot;\n[/code]\n\n<p style=\"text-align:center;\"><span style=\"color:#d25349;\"><strong>\u00bfDONDE C@#\u00b0 EST\u00c1 LA OTRA COMA QUE FALTA?</strong>\n</span></p>\n<p style=\"text-align:justify;\">Sucede a menudo que cosas muy <span style=\"color:#7cbbbb;\"><strong>#WTF</strong></span> como esa y muchas otras nos suceden a los programadores muy a menudo, especialmente en un lenguaje tan \"desordenado\" como Javascript. En esta <a href=\"http://wtfjs.com/\" target=\"_blank\">p\u00e1gina</a> se recolectan varias de esas incertidumbres con una clara explicaci\u00f3n de porqu\u00e9 sucede. En el caso de arriba pues, para la notaci\u00f3n de array solo hay dos elementos separados por una coma... No todo es lo que parece ;)</p>\n<p style=\"text-align:justify;\">&lt;/script&gt;</p>"}, {"tags": ["aprender", "datos", "formato", "free", "javascript", "json", "lenguaje-de-programacion", "nodeameste", "nuevo", "tecnologia"], "title": "MANEJAR PAQUETES EN NODE.JS 101", "date": "Sat, 27 Jun 2015 23:46:28 +0000", "content": "&lt;script src=\"my own\" title=\"manejar paquetes en node.js 101\"&gt;\n<p style=\"text-align:justify;\">En un <a href=\"https://jotaeseymas.wordpress.com/2015/06/22/typico-de-lowdb-2/\" target=\"_blank\">post</a> anterior hab\u00eda mencionado la opci\u00f3n <code>install</code> para instalar paquetes en Node.js, pero no s\u00f3lo de instalar paquetes vive el desarrollador de apps con Node.js :mrgreen:</p>\n<p style=\"text-align:justify;\">Por supuesto que hay m\u00e1s opciones, he aqu\u00ed algunas de ellas (porque son muchas)</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">Instalando localmente</h2>\n<p style=\"text-align:justify;\">Para ello usamos una consola (<code>bash</code> en GNU/Linux o <code>cmd</code> en Gu\u00edndous) y escribimos <code>npm install <em>paquete</em></code>, Node.js se encargar\u00e1 de crear una carpeta llamada <code>node_modules</code> en el directorio actual, y dentro instalar\u00e1 <em><code>paquete</code></em> junto con todas sus dependencias. De no encontrarlo u ocurrir un error, npm emitir\u00e1 mensajes y guardar\u00e1 un archivo llamado <code>npm-debug.log</code> con la traza del error.</p>\n\n<h2 style=\"text-align:justify;\">Instalando globalmente</h2>\nPara ello usamos el mismo comando usando la opci\u00f3n <code>-g</code>: <code>npm -g install <em>paquete</em></code>\n<span style=\"color:#d25349;\">\u00a1Ojo, se necesita ser <code>root</code> o un user con permisos <code>sudo</code> para ejecutar el comando!</span>\n<p style=\"text-align:justify;\">Una vez ejecutado el comando, Node.js instalar\u00e1 <code>paquete</code> en el repositorio global de instalaci\u00f3n (en GNU/Linux es <code>/usr/local/lib/node_modules/</code>)</p>\n\n<h2 style=\"text-align:justify;\">Enlazando dependencias locales, globalmente</h2>\n<p style=\"text-align:justify;\">Para esto usamos el comando <code>npm link <em>paquete</em></code>, esto permite crear un enlace simb\u00f3lico del paquete de nuestra aplicaci\u00f3n al paquete global. Esto es \u00fatil a nivel de desarrollo ya que permite realizar las pruebas de nuestra aplicaci\u00f3n sin necesidad de descargar nada sino los paquetes del repositorio global, y tambi\u00e9n permite hacer un despliegue r\u00e1pido del entorno de desarrollo.</p>\n<p style=\"text-align:justify;\">Sin embargo, esta pr\u00e1ctica no es deseable en entornos de producci\u00f3n, puesto que los enlaces pueden romperse con facilidad (bastar\u00eda con cambiar de directorio, por ejemplo), dando error a inestabilidades de la aplicaci\u00f3n.</p>\n\n<h2 style=\"text-align:justify;\">Ver \u00e1rbol de paquetes instalados</h2>\n<p style=\"text-align:justify;\">Para esto usamos el comando <code>npm list</code> (con la opcion <code>-g</code> si queremos saber los paquetes instalados globalmente). Esto generar\u00e1 una lista de paquetes con todas las dependencias actualizadas en cada paquete, as\u00ed como la versi\u00f3n de cada uno.</p>\n<p style=\"text-align:justify;\">En mi caso, y con este comando, me encontr\u00e9 con una dificultad inherente, y es que se ven todas las dependencias instaladas. Pero me preguntaba si pod\u00eda hacer una lista de los paquetes instalados sin dependencias, porque...</p>\n\n\n[caption id=\"attachment_673\" align=\"aligncenter\" width=\"377\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-27-140923.png\"><img class=\" wp-image-673\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-27-140923.png?w=150\" alt=\"\u00a11492 lineas, ay caramba!\" width=\"377\" height=\"221\" /></a> <strong>\u00a11492 lineas, ay caramba! :o<br /></strong>[/caption]\n<p style=\"text-align:justify;\">Investigando un poco <span style=\"color:#7cbbbb;\"><strong>#porai</strong></span>, me encontr\u00e9 con un <a href=\"http://ilee.co.uk/list-node-packages-wo-dependencies/\" target=\"_blank\">enlace</a> que dec\u00eda que era posible (pero que no estaba inclu\u00eddo en la documentaci\u00f3n oficial), usando un poco de magia vud\u00fa y el par\u00e1metro <code>--depth</code> con valor 0 para medir la profundidad de detalle del \u00e1rbol de dependencias:</p>\n\n\n[code lang=\"bash\" gutter=\"false\"]$ npm -g list --depth=0[/code]\n\n<p style=\"text-align:justify;\">Devuelve la lista de paquetes instalados globalmente (sin reflejar las dependencias)<code></code>, en mi caso 16 l\u00edneas nada m\u00e1s \u00a1que alivio! XD</p>\n<p style=\"text-align:justify;\">Me quedaron cositas pendientes, pero esto es un 101. <strong>NPM</strong>, o sea: !No Pidan Mucho! ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Sat, 27 Jun 2015 23:29:38 +0000"}, {"tags": ["aprender", "base-de-datos", "datos", "formato", "frontend", "html", "javascript", "json", "lenguaje-de-programacion", "nodeameste", "nuevo", "tecnologia"], "title": "TYPICO DE: JSON-SERVER", "date": "Mon, 29 Jun 2015 21:05:32 +0000", "content": "&lt;script src=\"my own\" title=\"typico de: json-server\"&gt;\n<p style=\"text-align:justify;\">En este <a href=\"https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/\" target=\"_blank\">post</a>, hab\u00eda iniciado el camino que nos toca andar por el ecosistema <a href=\"https://nodejs.org/\" target=\"_blank\">Node.js</a>. Si a\u00fan no lo has instalado en tu m\u00e1quina, \u00bfqu\u00e9 est\u00e1s esperando? \u00a1<a href=\"https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/\" target=\"_blank\">el futuro est\u00e1 aqu\u00ed</a>! Y hay cientos de tutoriales (incluido el oficial) que indican como hacerlo <span class=\"wp-smiley wp-emoji wp-emoji-wink\" title=\";)\">;)</span> La idea ac\u00e1 es otra: usar la librer\u00eda, con lo que nos toca o para lo que nos toca\u2026</p>\n<!--more-->\n<h2><em>json-server, </em>servidor mocking de documentos JSON</h2>\n<p style=\"text-align:justify;\">Continuando con los posts de la gente de <a href=\"https://github.com/typicode\" target=\"_blank\">typicode</a>, voy a realizar un ejemplo de API <a href=\"https://en.wikipedia.org/wiki/Representational_State_Transfer\" target=\"_blank\">REST</a> <a href=\"https://en.wikipedia.org/wiki/Mock_object\" target=\"_blank\">mocking</a> para servir datos en formato JSON, para ello voy a usar la librer\u00eda <a href=\"https://github.com/typicode/json-server\" target=\"_blank\">json-server</a>.</p>\n<p style=\"text-align:justify;\">Esta librer\u00eda se debe instalar globalmente con Node.js, si no est\u00e1s familiarizado con la instalaci\u00f3n de paquetes, este <a href=\"https://jotaeseymas.wordpress.com/2015/06/27/manejar-paquetes-en-node-js-101/\" target=\"_blank\">post</a> puede ayudar :D.</p>\n\n\n[code lang=\"bash\" gutter=\"false\"]\n$ npm install -g json-server\n[/code]\n\n<p style=\"text-align:justify;\">Adicionalmente a eso, vamos a usar <a href=\"https://github.com/marak/faker.js\" target=\"_blank\">faker</a>, una librer\u00eda que usamos en un <a href=\"https://jotaeseymas.wordpress.com/2015/06/12/falsificando-datos-para-mocking-de-documentos-json/\" target=\"_blank\">post</a> anterior. \u00c9sta la vamos a instalar tambi\u00e9n por la misma via, solo que esta vez localmente:</p>\n\n\n[code lang=\"bash\" gutter=\"false\"]\n$ npm install faker\n[/code]\n\nLuego un poco de \"magia vud\u00fa\" :P\n\n[code lang=\"javascript\" title=\"Archivo data.js\" collapse=\"true\"]\nmodule.exports = function(){\n\tvar faker = require('faker'),\n\tdata = {users: []};\n\n\tfor (var i = 1; i &lt;= 100; i++) {\n\t\tdata.users.push({\n\t\t\tid: i,\n\t\t\tname: faker.name.findName(),\n\t\t\tnickname: faker.internet.userName(),\n\t\t\tregister_date: faker.date.past(),\n\t\t\temail: faker.internet.email(),\n\t\t\tenabled: faker.random.number() ? true : false\n\t\t});\n\t}\n\n\treturn data;\n}\n[/code]\n\n<p style=\"text-align:justify;\">Vale decir que se puede usar cualquier formato para guardar los datos, siempre en funci\u00f3n de lo que desees probar o hacer mocking. Una vez guardado <span style=\"color:#d25349;\">en el mismo directorio</span> en el que instalaste la librer\u00eda faker.js, abres una consola y ejecutas (<span style=\"color:#d25349;\">en el mismo directorio</span>):</p>\n\n\n[code lang=\"bash\" gutter=\"false\"]\n$ json-server data.js\n[/code]\n\nAparecer\u00e1 algo similar a esto:\n\n[caption id=\"attachment_681\" align=\"aligncenter\" width=\"411\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-162634.png\"><img class=\" wp-image-681\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-162634.png?w=150\" alt=\"Bastante amigable... XD\" width=\"411\" height=\"156\" /></a> <strong>Bastante amigable... XD</strong>[/caption]\n\nUps, se colaron mis marcadores jejeje ^^' ...\n\nSi no se ve el enlace, solo tienes que ir a la URL <a href=\"http://localhost:3000\" target=\"_blank\">http://localhost:3000</a> y te saldr\u00e1 algo muy parecido a esto:\n\n[caption id=\"attachment_684\" align=\"aligncenter\" width=\"421\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-163123.png\"><img class=\" wp-image-684\" src=\"https://jotaeseymas.files.wordpress.com/2015/06/captura-de-pantalla-de-2015-06-29-163123.png?w=150\" alt=\"\u00a1y si funciona...! :D\" width=\"421\" height=\"250\" /></a> <strong>\u00a1y si funciona...! :D</strong>[/caption]\n<p style=\"text-align:justify;\">Lo dem\u00e1s es historia, puedes usar tu API REST con consultas del tipo <code>http://localhost:3000/users</code> para todos los usuarios o <code>http://localhost:3000/users/3</code> para un usuario particular, f\u00edjate en los ejemplos de la documentaci\u00f3n para m\u00e1s ayuda y opciones de configuraci\u00f3n.</p>\n<p style=\"text-align:justify;\">Recuerda que la creatividad es un rasgo <em>typico de</em> las mentes curiosas ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Mon, 29 Jun 2015 20:53:54 +0000"}, {"tags": [], "date": "Mon, 29 Jun 2015 20:58:32 +0000"}, {"tags": ["curioscriptades", "datos", "free", "javascript", "lenguaje-de-programacion", "post-format-image", "proyectos", "tecnologia"], "title": "JAVASCRIPT EN UNA IMAGEN...", "date": "Fri, 03 Jul 2015 14:12:53 +0000", "content": "&lt;script src=\"other pages\" title=\"javascript en una imagen\"&gt;\n<p style=\"text-align:justify;\">Sobran las palabras que decir... El proyecto es simple aunque muy bien elaborado, pues resume de manera bien did\u00e1ctica la parte de programaci\u00f3n funcional y conceptos OOP (Programaci\u00f3n Orientada a Objetos, en ingl\u00e9s) de Javascript, precisamente \u00a1en una imagen!</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a href=\"https://jotaeseymas.files.wordpress.com/2015/07/js-in-one-pic.png\"><img class=\"  wp-image-692 aligncenter\" src=\"https://jotaeseymas.files.wordpress.com/2015/07/js-in-one-pic.png?w=42\" alt=\"js in one pic\" width=\"378\" height=\"1341\" /></a>La misma imagen vista como \u00e1rbol interactivo puede ser vista desde <a href=\"http://coodict.github.io/javascript-in-one-pic/\" target=\"_blank\">este</a> enlace... ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Fri, 03 Jul 2015 13:58:17 +0000"}, {"tags": ["y-sin-jquery", "algoritmos", "angularjs", "aprender", "base-de-datos", "curioscriptades", "es6", "formato", "frontend", "html", "javascript", "json", "lenguaje-de-programacion", "tecnologia"], "title": "ACERCA DE: SINGLE PAGE APPLICATIONS (SPA)", "date": "Sun, 05 Jul 2015 16:05:04 +0000", "content": "&lt;script src=\"other pages\" title=\"acerca de: single page applications (SPA)\"&gt;\n\nhttp://www.youtube.com/watch?v=h4ZMeY0OKy0\n\nCreo que las <a href=\"https://en.wikipedia.org/wiki/Single-page_application\" target=\"_blank\">SPA</a>, mejor explicado, creo que imposible... :mrgreen:\n\n<!--more-->\n<p style=\"text-align:justify;\">Hay mucho que decir sobre este tipo de dise\u00f1o, como por ejemplo, que tecnolog\u00edas se requieren para implementar el dise\u00f1o de SPA, que tiene relaci\u00f3n directa con el concepto de <a href=\"http://itsnat.sourceforge.net/php/spim/spi_manifesto_es.php\" target=\"_blank\">SPI</a> (Single Page Interface) y con <a href=\"https://en.wikipedia.org/wiki/User_experience\" target=\"_blank\">UX</a> (User Experience), y algunas t\u00e9cnicas de programaci\u00f3n o patrones de dise\u00f1o que nos ayudaran a alcanzar un dise\u00f1o bajo este tipo.</p>\n<p style=\"text-align:justify;\">Como se explica en el video, Javascript se ha convertido en referente para el desarrollo de SPA masivamente, lo cual no quiere decir que no se puedan desarrollar en otros lenguajes como Python o Java, pero Javascript presenta varias ventajas notables respecto a los dem\u00e1s lenguajes: manejo de <a href=\"http://json.org\" target=\"_blank\">JSON</a> nativo, no requiere plugins adicionales, s\u00f3lo requiere tecnolog\u00edas del lado del navegador (HTML5, CSS3 y Javascript), y tambi\u00e9n por cuestiones de mantenibilidad, <a href=\"https://en.wikipedia.org/wiki/End-to-end_principle\" target=\"_blank\">E2E</a> (End to End), testing, y un largo etc\u00e9tera.</p>\n<p style=\"text-align:justify;\">Pese a que podemos desarrollar una SPA con Javascript trocho y mocho, he aqu\u00ed algunos frameworks Javascript que implementan este concepto nativamente, ayud\u00e1ndonos a ahorrar un poco de tiempo (y dolores de cabeza XD )</p>\n\n<h2 style=\"text-align:justify;\">Angular.js</h2>\n<p style=\"text-align:justify;\">Mi querido <a href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a> no pod\u00eda faltar a la cita. Sencillamente por su forma de trabajar con los datos (en formato JSON), manipulaci\u00f3n del DOM \u00a1sin jQuery! y llamadas AJAX nativamente, y eso sin mencionar que lo mantiene Google en conjunto con una comunidad muy activa de m\u00e1s de 40.000 desarrolladores, lo hacen uno de los frameworks m\u00e1s id\u00f3neos para SPA.</p>\n\n\n[caption id=\"attachment_695\" align=\"aligncenter\" width=\"455\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/07/sobre-angular-spa.png\"><img class=\" wp-image-695\" src=\"https://jotaeseymas.files.wordpress.com/2015/07/sobre-angular-spa.png?w=150\" alt=\"Conceptos como Inyecci\u00f3n de dependencias y Two-Way Data binding son importantes para SPA\" width=\"455\" height=\"206\" /></a> <strong>Conceptos como Inyecci\u00f3n de dependencias y <em>Two-Way Data binding</em> son importantes para SPA</strong>[/caption]\n<h2 style=\"text-align:justify;\">Meteor</h2>\n<p style=\"text-align:justify;\">Hace tiempo que vengo escuchando sobre el framework <a href=\"https://www.meteor.com/\" target=\"_blank\">Meteor</a>, aunque confieso desconocerlo [casi] por completo, no le hago el feo :D. En su p\u00e1gina principal pueden ver las caracter\u00edsticas que tiene. Me llama la atenci\u00f3n su sistema unificado de paquetes que incluye: manejo nativo de templates, hot deployment y una <a href=\"http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/\" target=\"_blank\">API isom\u00f3rfica</a>, entre otras cosas. Nada mal...</p>\n\n\n[caption id=\"attachment_696\" align=\"aligncenter\" width=\"438\"]<strong><a href=\"https://jotaeseymas.files.wordpress.com/2015/07/sobre-meteor-spa.png\"><img class=\" wp-image-696\" src=\"https://jotaeseymas.files.wordpress.com/2015/07/sobre-meteor-spa.png?w=150\" alt=\"Cifras nada despreciables... 8-)\" width=\"438\" height=\"111\" /></a></strong> <strong>Cifras nada despreciables... 8-)</strong>[/caption]\n<h2>Aurelia</h2>\n<p style=\"text-align:justify;\"><a href=\"http://aurelia.io/\" target=\"_blank\">Aurelia</a> es un proyecto que naci\u00f3 como un fork de <a href=\"http://durandaljs.com/\" target=\"_blank\">DurandalJS</a>, potenciado en la experiencia de <a href=\"https://twitter.com/EisenbergEffect\" target=\"_blank\">Rob Eisenberg</a>, ex-miembro del core team developers de Angular. Desde Enero del 2015, este framework se enfoc\u00f3 principalmente en brindar soporte para sintaxis <a href=\"https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/\" target=\"_blank\">ES6</a> y ES7 de forma que no se requiriera instalar nada m\u00e1s. Su enfoque es tener todo lo necesario \"out-of-the-box\".</p>\n\n\n[caption id=\"attachment_698\" align=\"aligncenter\" width=\"470\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/07/sobre-aurelia-spa.png\"><img class=\" wp-image-698\" src=\"https://jotaeseymas.files.wordpress.com/2015/07/sobre-aurelia-spa.png?w=150\" alt=\"ES6 y ES7 y apenas fue aprobado el mes pasado... interesante... :twisted:\" width=\"470\" height=\"116\" /></a> <strong>Soporte nativo de ES6 y ES7 y apenas ES6 fue aprobado el mes pasado... interesante... :twisted:</strong>[/caption]\n<p style=\"text-align:justify;\">Lo que siempre digo, ninguna tecnolog\u00eda es la <a href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panacea</a> que va a resolver todos los problemas,\u00a0 y como estos, hay cientos en Javascript (y por lo menos \"se\" de <a href=\"https://jotaeseymas.wordpress.com/2015/06/12/20-frameworks-mv-en-javascript/\" target=\"_blank\">20 de ellos</a>). Todo depende de lo que quieras usar, del usuario final, y de otros factores ajenos al desarrollo. Lo importante es no dejar de inventar... ;)</p>\n<p style=\"text-align:justify;\"><strong>Posdata:</strong> Pueden ver una comparaci\u00f3n de Aurelia vs. Angular en este <a href=\"http://ilikekillnerds.com/2015/01/aurelia-vs-angularjs-round-one-fight/\" target=\"_blank\">enlace</a>.</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Sun, 05 Jul 2015 15:26:39 +0000"}, {"tags": [], "date": "Sun, 05 Jul 2015 15:37:59 +0000"}, {"tags": [], "date": "Sun, 05 Jul 2015 15:49:15 +0000"}, {"tags": ["algoritmos", "curioscriptades", "frontend", "html", "javascript", "lenguaje-de-programacion", "post-format-aside", "sin-jquery", "tecnologia", "wat"], "title": "GENTE SIN OFICIO...", "date": "Fri, 10 Jul 2015 13:38:25 +0000", "content": "&lt;script src=\"other pages\" title=\"gente sin oficio\"&gt;\n\nHay gente que definitivamente no tiene oficio... :?\n<p style=\"text-align:justify;\"><a href=\"https://github.com/fbrandel/ParisHilton.js\" target=\"_blank\">ParisHilton.js</a> nace como una \u00bfbroma? de alguien realmente <a href=\"http://www.oxforddictionaries.com/translate/spanish-english/ladillado\" target=\"_blank\">ladillado</a>... A ver, una librer\u00eda que contiene una sola l\u00ednea de c\u00f3digo y que lo \u00fanico que hace es:</p>\n\n\n[code lang=\"javascript\"]document.head.innerHTML = '';[/code]\n\nClaro, eso, y la versi\u00f3n minificada:\n\n[code lang=\"javascript\"]document.head.innerHTML = ''[/code]\n\n<p style=\"text-align:justify;\">Ehm, no se, bueno... Eliminar el <code>&lt;head&gt;&lt;/head&gt;</code> de un documento HTML, pues... o_O</p>\n&lt;/script&gt;"}, {"tags": [], "title": "DEC\u00c1LOGO HACKER", "date": "Mon, 13 Jul 2015 02:46:03 +0000", "content": "<h1 style=\"text-align:center;\"><span style=\"text-decoration:underline;\"><strong>DEC\u00c1LOGO HACKER</strong></span></h1>\n<ul>\n\t<li>\n<h2><em><strong>Dar antes que recibir</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">No malentiendan, simplemente se trata de crear conciencia de comunidad a tu alrededor, de ser consciente de tu potencial y de lo que puedes compartir con otros(as) para ayudarles y ayudarte a ti mismo. De eso se trata...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>NO pedir permiso</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">En este punto, no hay mucho que decir. En el <a href=\"https://jotaeseymas.wordpress.com/manifiesto-de-insumision-selectiva/\" target=\"_blank\">manifiesto de insumisi\u00f3n selectiva</a> est\u00e1n algunos puntos relacionados a esto. Tomar la iniciativa no significa que le vaya a caer bien a todo el mundo, pero, nada se pierde con intentar...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>HACER &gt;&gt;&gt; hablar</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">Traduce: \"Hacer es mucho m\u00e1s que hablar\". A veces nos quedamos en la planificaci\u00f3n, conceptualizaci\u00f3n, y todo lo que termine en ...ci\u00f3n. Es divertido pero, si est\u00e1s procurando que las cosas cambien, es m\u00e1s convincente dar ejemplos...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>\u00a1NO HAY EXCUSAS!</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">Eso es muy importante, y ya que la \u00fanica persona interesada en aprender eres t\u00fa mismo(a), simplemente es cuesti\u00f3n de ser consciente que tambi\u00e9n puedes sabotear tu aprendizaje. Si vas a hacer algo, hazlo, act\u00faa...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>Resuelve problemas</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">Resolver problemas no significa comerte un libro de matem\u00e1ticas y hacerlo todo, no esa clase de problemas. Se trata del tipo de problemas que ser\u00edan \u00fatiles a ti, a lo que crees y a tu comunidad en general, empezando con los que te rodean...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>Sigue tu curiosidad (no importa que fracases)</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">Steve Jobs dec\u00eda que el fracaso es el combustible del \u00e9xito, lo dice alguien que fue despedido de la compa\u00f1\u00eda que \u00e9l mismo fund\u00f3. Eso significa que habr\u00e1 alg\u00fan sacrificio que hacer por seguir tu pasi\u00f3n y el logro de tus metas...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>Conoce tus herramientas [y comunidades]</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">As\u00ed como un plomero sabe que no puede reparar una tuber\u00eda con una llave de cruz, as\u00ed mismo tu debes saber en todo momento que sirve para cada cosa, si no en tu cabeza, pues escribe un blog, o preg\u00fantale a tu vecino, \u00a1que para eso est\u00e1n!...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>Siempre aprende algo nuevo</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">Eso de no reinventar la rueda es relativo, te diviertes much\u00edsimo en el proceso. Pero, ok, no es v\u00e1lido si tienes que terminar un proyecto para \"ayer\". Pero te aseguro que siempre hay tiempo para esto... Y debo insistir: \u00a1es genial!</p>\n\n<ul>\n\t<li>\n<h2><em><strong>Invol\u00facrate</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">\u00bfno eres un orador muy elocuente? \u00bfno sabes como funciona tal tecnolog\u00eda? \u00bfsientes que como no te ense\u00f1aron, culpas al universo por no saber? Intenta involucrarte y conocer m\u00e1s de lo que te rodea, que a ti tambi\u00e9n te importa...</p>\n\n<ul>\n\t<li>\n<h2><em><strong>Divi\u00e9rtete en el proceso</strong></em></h2>\n</li>\n</ul>\n<p style=\"text-align:justify;\">Nada de lo anterior tiene sentido si no te diviertes haci\u00e9ndolo. En mi opini\u00f3n personal siempre suelo sonre\u00edrle a la gente, sacarle la lengua, o hacer alguna <em>musara\u00f1a </em>( :mrgreen: ), especialmente a la gente que piensa que est\u00e1s loco...</p>\n<p style=\"text-align:center;\"><strong>\"Si te dicen que est\u00e1s loco, entonces est\u00e1s en el camino correcto...\"</strong></p>\n<p style=\"text-align:justify;\">Extra\u00eddo de: <a href=\"https://www.fayerwayer.com/2015/05/el-decalogo-de-la-cultura-hacker/?utm_content=bufferf3acf&amp;utm_medium=social&amp;utm_source=facebook.com&amp;utm_campaign=buffer\" target=\"_blank\">FayerWaver</a></p>"}, {"tags": [], "date": "Sun, 26 Jul 2015 12:05:05 +0000"}, {"tags": ["sin-categoria"], "date": null, "content": "<del>https://github.com/typicode/json-server -&gt; servidor mocking API RESTful de JSON</del>\n<del>https://github.com/typicode/pegasus -&gt; carga asincrona de scripts</del>\n<del>https://github.com/typicode/lowdb -&gt; \"Base de datos\" JSON est\u00e1tica.</del>\nhttps://github.com/typicode/hotel -&gt; Administracion de servidores Node.js"}, {"tags": ["aprender", "datos", "formato", "html", "javascript", "javascripteando-ando", "jquery", "json", "lenguaje-de-programacion", "tecnologia"], "title": "TYPICO DE: PEGASUS", "date": "Sun, 26 Jul 2015 12:28:53 +0000", "content": "&lt;script src=\"my own\" title=\"typico de: pegasus\"&gt;\n<p style=\"text-align:justify;\">Os saludo gente, disculp\u00e1ndome de antemano por la tardanza. Hace tiempo ya que no publico nada en el blog y se me hace que no voy a llegar a superar las visitas del mes pasado :oops: (\u00a1pero un mill\u00f3n de gracias de nuevo! :mrgreen: ).</p>\n<p style=\"text-align:justify;\">Pero nada, a lo que vengo.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\"><em>pegasus</em>, carga as\u00edncrona de datos en Javascript</h2>\n<p style=\"text-align:justify;\">Para este post, voy a utilizar <a href=\"https://github.com/typicode/pegasus\" target=\"_blank\">pegasus</a>, una librer\u00eda de la gente de <a href=\"https://github.com/typicode\" target=\"_blank\">typicode</a> que se encarga de la resoluci\u00f3n de peticiones <a href=\"https://es.wikipedia.org/wiki/AJAX\" target=\"_blank\">AJAX</a> de forma diferida, permitiendo que la carga de los scripts javascript sea mucho m\u00e1s r\u00e1pida. Vale decir que puede ser utilizada con cualquier librer\u00eda sin interrumpir su normal funcionamiento.</p>\n<p style=\"text-align:justify;\">Para ambos escenarios, usar\u00e9 la versi\u00f3n CDN de <a href=\"http://code.jquery.com/jquery-1.11.3.js\" target=\"_blank\">jQuery</a> y una petici\u00f3n AJAX simple a una p\u00e1gina de prueba llamada <a href=\"http://jsonplaceholder.typicode.com/\" target=\"_blank\">jsonplaceholder</a>, creada y soportada tambi\u00e9n por la gente de typicode. La intenci\u00f3n es medir los tiempos de carga, ejecuci\u00f3n y rendimiento de la aplicaci\u00f3n sin pegasus y con pegasus. \u00a1Manos a la ubre!</p>\n\n<h2 style=\"text-align:justify;\">Escenario uno, sin pegasus</h2>\n<p style=\"text-align:justify;\">Un archivo html con lo descrito:</p>\n\n\n[code lang=\"html\" collapse=\"true\" title=\"Archivo: script.html\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;script src=&quot;http://code.jquery.com/jquery-1.11.3.js&quot;&gt;&lt;/script&gt;\n\t&lt;title&gt;Pegasus Test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\t&lt;script&gt;\n\t\tvar root = 'http://jsonplaceholder.typicode.com';\n\t\tvar marca = 'Sin pegasus';\n\n\t\tconsole.time(marca);\n\t\tvar request = $.ajax({\n\t\t\turl: root + '/posts',\n\t\t\tmethod: 'GET'\n\t\t});\n\t&lt;/script&gt;\n\t&lt;h1&gt;Prueba de Scripts&lt;/h1&gt;\n\t&lt;script&gt;\n\t\trequest.then(function(data) {\n\t\t\tconsole.log('Data cargada!');\n\t\t});\n\t\tconsole.timeEnd(marca);\n\t&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\"><strong>NOTA</strong>: <code>console.time()</code> y <code>console.timeEnd()</code> son usados para medir el tiempo de ejecuci\u00f3n de c\u00f3digo Javascript mediante una diferencial de tiempo, puedes ver este <a href=\"https://jotaeseymas.wordpress.com/2015/02/27/la-incomprendida-consola-de-javascript/\" target=\"_blank\">post</a> para m\u00e1s informaci\u00f3n al respecto.</p>\n\n\n[caption id=\"attachment_714\" align=\"aligncenter\" width=\"325\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/07/load-sin-pegasus1.png\"><img class=\" wp-image-714\" src=\"https://jotaeseymas.files.wordpress.com/2015/07/load-sin-pegasus1.png?w=150\" alt=\"TIempo de Carga\" width=\"325\" height=\"78\" /></a> <strong>TIempo de Ejecuci\u00f3n (Sin pegasus)<br /></strong>[/caption]\n\n[caption id=\"attachment_715\" align=\"aligncenter\" width=\"573\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/07/rend-sin-pegasus1.png\"><img class=\" wp-image-715\" src=\"https://jotaeseymas.files.wordpress.com/2015/07/rend-sin-pegasus1.png?w=150\" alt=\"Tiempo de Rendimiento\" width=\"573\" height=\"42\" /></a> <strong>Tiempo de Rendimiento (Sin pegasus)<br /></strong>[/caption]\n<h2>Escenario dos, con pegasus</h2>\n<p style=\"text-align:justify;\">Algunas modificaciones al archivo <code>script.html</code>:</p>\n\n\n[code lang=\"html\" title=\"Archivo: script.html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;script src=&quot;http://code.jquery.com/jquery-1.11.3.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;https://raw.githubusercontent.com/typicode/pegasus/master/dist/pegasus.js&quot;&gt;&lt;/script&gt;\n\t&lt;title&gt;Pegasus Test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\t&lt;script&gt;\n\t\tvar root = 'http://jsonplaceholder.typicode.com';\n\t\tvar marca = 'Sin pegasus';\n\n\t\tconsole.time(marca);\n\n\t\tvar request = pegasus(root+'/posts');\n\t&lt;/script&gt;\n\t&lt;h1&gt;Prueba de Scripts&lt;/h1&gt;\n\t&lt;script&gt;\n\t\trequest.then(function(data) {\n\t\t\tconsole.log('Data cargada!');\n\t\t});\n\t\tconsole.timeEnd(marca);\n\t&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\"><strong>NOTA</strong>: Estoy usando <a href=\"https://www.mozilla.org/es-ES/firefox/new/\" target=\"_blank\">Firefox</a> for Developers Edition, versi\u00f3n Aurora 41.2 sin ning\u00fan aditivo (o sea, sin <em>Firebug</em>) para las pruebas.</p>\n\n\n[caption id=\"attachment_719\" align=\"aligncenter\" width=\"320\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/07/load-con-pegasus.png\"><img class=\"wp-image-719 \" src=\"https://jotaeseymas.files.wordpress.com/2015/07/load-con-pegasus.png?w=150\" alt=\"\" width=\"320\" height=\"77\" /></a> <strong>TIempo de Ejecuci\u00f3n (Con pegasus)</strong>[/caption]\n\n[caption id=\"attachment_720\" align=\"aligncenter\" width=\"574\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/07/rend-con-pegasus.png\"><img class=\" wp-image-720\" src=\"https://jotaeseymas.files.wordpress.com/2015/07/rend-con-pegasus.png?w=150\" alt=\"TIempo de Rendimiento (Con pegasus)\" width=\"574\" height=\"54\" /></a> <strong>TIempo de Rendimiento (Con pegasus)</strong>[/caption]\n<h2>Conclusiones</h2>\n<p style=\"text-align:justify;\">S\u00f3lo puedo decir: \u00a1Uau! De 27.06 a 4.48ms dice mucho del desempe\u00f1o de esta librer\u00eda, tiene potencial, tiene mucho potencial :!:</p>\n<p style=\"text-align:justify;\">Ni que decir del rendimiento (\u00a1gracias Aurora por la ayuda prestada! XD ). La barra roja indica que el cacheo de la data correspondiente a cada script en el navegador se realiza mucho antes de cargar los datos, lo cual indica un porcentaje (peque\u00f1o, pero visible en t\u00e9rminos de ejecuci\u00f3n) salvado en el rendimiento de la aplicaci\u00f3n.</p>\n<p style=\"text-align:justify;\">Recuerda que la creatividad es un rasgo <em>typico de</em> las mentes curiosas ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Sun, 26 Jul 2015 12:05:07 +0000"}, {"tags": [], "date": "Sun, 26 Jul 2015 12:18:38 +0000"}, {"tags": [], "date": "Sun, 26 Jul 2015 12:18:41 +0000"}, {"tags": ["aprender", "datos", "free", "frontend", "html", "javascript", "lenguaje-de-programacion", "nodeameste", "nuevo", "post-format-aside"], "title": "EDITANDO JAVASCRIPT EN VIVO Y DIRECTO", "date": "Thu, 06 Aug 2015 14:23:31 +0000", "content": "&lt;script src=\"other pages\" title=\"editando javascript en vivo y directo\"&gt;\n\nSi, si se puede editar c\u00f3digo javascript en \"caliente\" :roll:\n<p style=\"text-align:justify;\"><a href=\"http://amokjs.com/\" target=\"_blank\">Amok</a> es una librer\u00eda hecha sobre <a href=\"https://nodejs.org/\" target=\"_blank\">Node.js</a> en la que puedes editar c\u00f3digo HTML, CSS y/o Javascript al tiempo que ves el resultado en una instancia del navegador. Aunque tiene soporte para Google Chrome y <a href=\"https://www.chromium.org/Home\" target=\"_blank\">Chromium</a> (el \"fork\" de Google Chrome para Linux), no tiene soporte para <a href=\"https://www.mozilla.org/es-ES/firefox/new/\" target=\"_blank\">Mozilla Firefox</a> (mi navegador favorito :P ) si no fuera por la tremenda utilidad que tiene esta librer\u00eda, le dar\u00eda una valoraci\u00f3n negativa. \u00bfInstalarlo? Pues lo instalas como cualquier paquete en Node.js.</p>\n\n\n[code lang=\"bash\" gutter=\"false\"]\n$ npm install -g amok\n[/code]\n\n<p style=\"text-align:justify;\">Recuerda que debes tener m\u00ednimo la versi\u00f3n 0.12 de Node.js y permisos de root como requisito para poder usarlo. Puedes ver la p\u00e1gina de la librer\u00eda para mayor informaci\u00f3n.</p>\n<p style=\"text-align:justify;\">Aunque hay otras alternativas (que personalmente prefiero) como <a href=\"http://livereload.com/\" target=\"_blank\">LiveReload</a> que usa un servidor HTTP independientemente de la instancia del navegador, esta librer\u00eda es interesante, muy interesante ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "coco-mongo-xd", "datos", "javascript", "json", "nosql", "nuevo", "proyectos", "sql", "tecnologia"], "title": "ACERCA DE: MONGODB. PARTE 0. MONGODB 101", "date": "Sun, 23 Aug 2015 23:55:02 +0000", "content": "&lt; script title=\"mongodb 101\" src=\"other pages\" &gt;\n<p style=\"text-align:justify;\">Pido disculpas por mi retraso con los posts, se que os tengo una deuda \u00a1ENORME! :'(</p>\n<p style=\"text-align:justify;\">No he estado <a href=\"http://maracucholario.blogspot.com/2011/07/cambimbear.html\" target=\"_blank\">cambimbeando</a>, no ha sido f\u00e1cil sentarse ac\u00e1 a escribir, sobre todo cuando no tienes la disciplina necesaria (ni la costumbre :mrgreen: ). Pero basta de <a href=\"http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara\" target=\"_blank\">ch\u00e1charas</a>.</p>\n<!--more-->\n<p style=\"text-align:justify;\">Antes de echarles el cuento de la herramienta como corresponder\u00eda, tendr\u00eda que echarles un \"cuento\" sobre bases de datos no relacionales (o No SQL, como dicen <span style=\"color:#7cbbbb;\"><strong>#porai</strong></span>), pero para eso est\u00e1 nuestro amigo <a href=\"https://www.google.co.ve/?gws_rd=ssl#q=no+sql\" target=\"_blank\">San Google</a> que nos ayuda [\u00bfsiempre?] a aclarar nuestras dudas XD .</p>\n<p style=\"text-align:justify;\"><a href=\"https://www.mongodb.org\" target=\"_blank\">MongoDB</a> es una herramienta de Gesti\u00f3n de Bases de Datos No SQL, utilizada para [tratar de] solucionar los \"vac\u00edos\" del mundo de RBDMS t\u00edpicos como SQLite o PostgreSQL: escalabilidad, rendimiento y agilidad en el modelado de los datos, esto \u00faltimo cobra mucho m\u00e1s sentido si vemos un ejemplo [\u00bft\u00edpico?] de un Modelo Entidad-Relaci\u00f3n en SQL.</p>\n\n\n[caption id=\"attachment_728\" align=\"aligncenter\" width=\"415\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/modelo_entidad_relacion_matriculacion1.png\"><img class=\" wp-image-728\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/modelo_entidad_relacion_matriculacion1.png?w=150\" alt=\"M\u00e1s expl\u00edcito, imposible... XD\" width=\"415\" height=\"360\" /></a> <strong>M\u00e1s expl\u00edcito, imposible... XD</strong>[/caption]\n<p style=\"text-align:justify;\">MongoDB est\u00e1 orientado a almacenar documentos t\u00edpicos de <a href=\"http://json.org/\" target=\"_blank\">JSON</a>, por lo que no tenemos que reinventar la rueda :roll: , es decir, si conoces <a href=\"https://jotaeseymas.wordpress.com/2015/06/16/typico-de-json/\" target=\"_blank\">el est\u00e1ndar JSON</a>, sabes modelar un documento en MongoDB.</p>\nAlgunas caracter\u00edsticas que hacen a MongoDB y a cualquier base de datos No SQL son:\n<ol>\n\t<li style=\"text-align:justify;\">Ausencia de <em>constraints</em>: No hay claves primarias, ni for\u00e1neas.</li>\n\t<li style=\"text-align:justify;\">Ausencia de <em>joins</em>: Al no haber claves relacionadas ni multivaluadas, no existen consultas del tipo JOIN entre dos \"tablas\".</li>\n\t<li style=\"text-align:justify;\">Ausencia de tablas y/o esquemas: La separaci\u00f3n de colecciones (el equivalente a tablas en No SQL) es por espacio de nombres directamente, esto es, el nombre de la colecci\u00f3n.</li>\n\t<li style=\"text-align:justify;\">Ausencia de transacciones: Tampoco existe un lenguaje de script formal para definirlas.</li>\n\t<li style=\"text-align:justify;\">Desnormalizaci\u00f3n: Aunque es deseable y posible en MongoDB, cada documento pudiera no tener la misma estructura formal (<a href=\"https://es.wikipedia.org/wiki/Tercera_forma_normal\" target=\"_blank\">3NF</a> en SQL) de modelado de datos.</li>\n\t<li style=\"text-align:justify;\">No [siempre] es posible tener tener <a href=\"https://es.wikipedia.org/wiki/ACID\" target=\"_blank\">ACID</a>: En el caso particular de MongoDB [al menos] se garantiza la \"A\" de atomicidad en las operaciones.</li>\n</ol>\n<p style=\"text-align:justify;\">Y la raz\u00f3n por la que hablo de MongoDB es: su int\u00e9rprete de comandos est\u00e1 escrita \u00a1en Javascript! Aunque si se dieron cuenta en el t\u00edtulo, no ser\u00e1 el \u00fanico post que escribir\u00e9 sobre este gestor de bases de datos No SQL ;) .</p>\n&lt; /script &gt;"}, {"tags": [], "date": "Sun, 23 Aug 2015 23:02:46 +0000"}, {"tags": [], "date": "Sun, 23 Aug 2015 23:28:52 +0000"}, {"tags": [], "date": "Mon, 24 Aug 2015 00:31:30 +0000"}, {"tags": [], "date": "Mon, 24 Aug 2015 00:43:05 +0000"}, {"tags": [], "date": "Mon, 24 Aug 2015 00:43:07 +0000"}, {"tags": ["algoritmos", "angularjs", "aprender", "datos", "formularios", "frontend", "html", "javascript", "la-piedra-angular", "libreria-angular", "tutorial", "validacion"], "title": "LIBRERIA ANGULAR. PARTE 4. VALIDANDO", "date": "Thu, 27 Aug 2015 19:36:41 +0000", "content": "&lt; script src=\"my own\" title=\"parte 4. validando\"&gt;\n<p style=\"text-align:justify;\">Al fiiiiiiiiin XD ... Despu\u00e9s de darme un <a href=\"http://www.wordreference.com/es/en/translation.asp?spen=chance\" target=\"_blank\">chance</a> de validar la informaci\u00f3n (y el <a href=\"https://github.com/ChinuxParibus/libreria-angular\" target=\"_blank\">c\u00f3digo</a> ^^'<code> </code>) que me permitiera terminar de escribir este post, y luego de much\u00edsimos d\u00edas desde que escrib\u00ed el \u00faltimo <a href=\"https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/\" target=\"_blank\">post</a> sobre la <a href=\"https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/\" target=\"_blank\">Librer\u00eda Angular</a>, me echo una escapada para finalmente publicarlo :mrgreen:</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">Controlando</h2>\n<p style=\"text-align:justify;\">En nuestro archivo <code>controllers.js</code> a\u00f1adimos un nuevo m\u00e9todo a <code>LibrosCtrl</code> para agregar nuevos libros, usando el m\u00e9todo de la f\u00e1brica <code>libros</code>:</p>\n\n\n[code lang=\"javascript\" title=\"Archivo: app/controllers.js\" collapse=\"true\" firstline=\"37\"]\n...\n$scope.addLibro = function(libro) {\n\t//TODO: Validaci\u00f3n de campos vac\u00edos e inconsistencia de valores\n\tif (typeof libro === &quot;object&quot;){\n\t\tlibreria.addLibro(libro);\n\t} else {\n\t\tconsole.log(&quot;No se pudo insertar el libro!&quot;);\n\t}\n};\n...\n[/code]\n\n<h2 style=\"text-align:justify;\">Dirigiendo</h2>\n<p style=\"text-align:justify;\">Implementamos una directiva nueva para usar las clases propias del framework Bootstrap CSS de forma condicional: <code>ng-class</code>. Esta directiva permite determinar, dependiendo del resultado de evaluar una expresi\u00f3n como <em>true</em> o <em>false</em>, si se aplica una clase CSS o no a un elemento HTML. En el ejemplo vemos la inclusi\u00f3n de la directiva en los templates de formulario, por ejemplo:</p>\n\n\n[code lang=\"html\" title=\"Archivo: templates/nuevo_libro.html\" collapse=\"true\" firstline=\"26\" highlight=\"27\"]\n...\n\n&lt;div class=&quot;form-group&quot; ng-class=&quot;{'has-error': libroForm.categoria.$invalid &amp;&amp; libroForm.categoria.$dirty, 'has-success': libroForm.categoria.$valid &amp;&amp; libroForm.categoria.$dirty}&quot; ng-controller=&quot;CategoriasCtrl&quot;&gt;\n\t&lt;label class=&quot;control-label&quot; for=&quot;categoria&quot;&gt;Categor\u00eda&lt;/label&gt;\n\t&lt;select class=&quot;form-control&quot; ng-model=&quot;libro.categoria&quot; name=&quot;categoria&quot; id=&quot;categoria&quot; required ng-options=&quot;categoria.categoria as categoria.nombre | uppercase for categoria in categorias&quot;&gt;\n&lt;option value=&quot;&quot;&gt;- SELECCIONE -&lt;/option&gt;\n\t&lt;/select&gt;\n&lt;/div&gt;\n\n...\n[/code]\n\n<p style=\"text-align:justify;\">Para rellenar el <code>&lt;select&gt;</code> con las categor\u00edas de la f\u00e1brica <code>categorias</code>, se usa la directiva <code>ng-options</code>, la cual permite mediante una <a href=\"https://code.angularjs.org/1.3.10/docs/api/ng/directive/select\" target=\"_blank\">sintaxis</a> espec\u00edfica, extraer y formatear informaci\u00f3n por cada \u00edtem o como se desee. Puedes ver los objetos condicionales de estado para campos de formulario en este <a href=\"https://jotaeseymas.wordpress.com/2015/06/07/validando-campos-de-formulario-con-angular-js-parte-1-la-teoria/\" target=\"_blank\">post</a>.</p>\n\n<h2>Fabricando</h2>\n<p style=\"text-align:justify;\">En nuestro archivo <code>app/factories.js</code> inclu\u00edmos un m\u00e9todo que se usa en el controlador para hacer <code>push</code> al arreglo de libros, visualizando el nuevo libro autom\u00e1ticamente en la lista de libros.</p>\n\n\n[code lang=\"javascript\" title=\"Archivo: app/factories.js\" collapse=\"true\" firstline=\"51\"]\n...\nlibreria.addLibro = function(libro) {\n\t//propiedad que define la visualizaci\u00f3n del bot\u00f3n &quot;Comprar&quot;\n\tlibro.existente = libro.existente || libro.inventario &gt; 0 ? true : false;\n\tlibreria.listaLibros.push(libro);\n}\n...\n[/code]\n\nY el funcionamiento es excelente!\n\n[caption id=\"attachment_742\" align=\"aligncenter\" width=\"517\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-libro.png\"><img class=\" wp-image-742\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-libro.png?w=150\" alt=\"Formulario Agregar Nuevo Libro\" width=\"517\" height=\"386\" /></a> <strong>Formulario Agregar Nuevo Libro</strong>[/caption]\n\n[caption id=\"attachment_741\" align=\"aligncenter\" width=\"518\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-invalido.png\"><img class=\" wp-image-741\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-invalido.png?w=150\" alt=\"Validaci\u00f3n funcionando\" width=\"518\" height=\"411\" /></a> <strong>Validaci\u00f3n funcionando</strong>[/caption]\n\n[caption id=\"attachment_743\" align=\"aligncenter\" width=\"519\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-valido.png\"><img class=\" wp-image-743\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-agregar-valido.png?w=150\" alt=\"Se habilita la inserci\u00f3n cuando todos los campos del formulario son v\u00e1lidos\" width=\"519\" height=\"412\" /></a> <strong>Se habilita la inserci\u00f3n cuando todos los campos del formulario son v\u00e1lidos</strong>[/caption]\n\n[caption id=\"attachment_744\" align=\"aligncenter\" width=\"573\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-libro-agregado.png\"><img class=\" wp-image-744\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/angular-libro-agregado.png?w=150\" alt=\"Libro insertado! :roll:\" width=\"573\" height=\"271\" /></a> <strong>Libro insertado! :roll:</strong>[/caption]\n\nY entonces, queda pendiente la persistencia de los libros insertados y unas cosillas que vi <strong><span style=\"color:#7cbbbb;\">#porai</span></strong> :twisted:\n\nMientras, puedo sumar +0,5 a la cuenta *risa malvada* ;)\n\n&lt;/script&gt;"}, {"tags": [], "date": "Thu, 27 Aug 2015 15:54:51 +0000"}, {"tags": [], "date": "Thu, 27 Aug 2015 15:54:54 +0000"}, {"tags": [], "date": "Thu, 27 Aug 2015 15:54:56 +0000"}, {"tags": [], "date": "Thu, 27 Aug 2015 15:54:59 +0000"}, {"tags": ["aprender", "curioscriptades", "datos", "formato", "javier-garzas", "kent-beck", "lenguaje-de-programacion", "tdd", "tecnologia"], "title": "COMO DEBER\u00cdA SER EL DESARROLLO: TDD Y/O BDD. UNA SIGNIFICATIVA INTRODUCCI\u00d3N", "date": "Fri, 28 Aug 2015 18:40:27 +0000", "content": "&lt; script src=\"other pages\" title=\"como deber\u00eda ser el desarrollo: tdd y bdd\" &gt;\n<p style=\"text-align:justify;\">Cuando dicen: \"vamos a implementar pruebas automatizadas\", es como as\u00ed (y tal vez peor):</p>\nhttp://www.youtube.com/watch?v=a1Y73sPHKxw\n<p style=\"text-align:justify;\">Y es que para nosotros, los desarrolladores nuevos reci\u00e9n salidos del horno universitario que venimos del Pascal, con suerte del Java y de la dupla C/C++ (Borland C/C++ en mi caso :'( ), y dependiendo de la \"\u00bfexperiencia?\", del PHP y del MySQL (pre-Oracle, claro &gt;:( ), que \"ahora\" se piense en TDD (a.k.a. Desarrollo Orientado por Pruebas o <em>Test-Driven Development</em> si les gusta el ingl\u00e9s) es como para quedarse como la ardilla del video (yo lo hice ^^' ).</p>\n<!--more-->\n<p style=\"text-align:justify;\"><a href=\"https://en.wikipedia.org/wiki/Test-driven_development\" target=\"_blank\">TDD</a> no es un concepto nuevo, la verdad, seg\u00fan <a href=\"http://www.javiergarzas.com/2015/07/utilizamos-la-novedosa-tecnica-de-tdd-novedosa-seguro.html\" target=\"_blank\">Javier Garz\u00e1s</a> es bastante anciano (el concepto de TDD, no <a href=\"http://www.javiergarzas.com/javier_garzas_curriculum\" target=\"_blank\">Javier</a> jijiji :oops: ), pero como m\u00e1s sabe el diablo, por viejo que por diablo, vaya Dios a saber a qui\u00e9n se le ocurri\u00f3 la idea de sacar la naftalina del TDD y refrescarla para estos d\u00edas. \u00a1Ah, si, ya me acord\u00e9! <a href=\"https://en.wikipedia.org/wiki/Kent_Beck\" target=\"_blank\">Kent Beck</a>, por all\u00e1 en el 2008 :) .</p>\n<p style=\"text-align:justify;\">B\u00e1sicamente, en TDD, las pruebas se escriben primero, antes que el c\u00f3digo. Ya pensar as\u00ed representa algunas barreras para los programadores n\u00f3veles (como yo) que quieren escribir c\u00f3digo a la primera jejeje 8-) , y como toda metodolog\u00eda tiene una serie de pasos y de principios a seguir para llevar a buen t\u00e9rmino un TDD:</p>\n\n\n[caption id=\"attachment_766\" align=\"aligncenter\" width=\"374\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/tdd-red-green-refactor.png\"><img class=\" wp-image-766\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/tdd-red-green-refactor.png?w=150\" alt=\"El mantra del TDD\" width=\"374\" height=\"242\" /></a> <strong>El mantra del TDD :roll:<br /></strong>[/caption]\n<p style=\"text-align:justify;\">Me explico, para que cada prueba tenga impacto sobre el c\u00f3digo que se escribe, debe pasar las siguientes etapas:</p>\n\n<h2 style=\"text-align:justify;\"><span style=\"color:#d25349;\">RED: ESCRIBE UNA PRUEBA QUE FALLE</span></h2>\n<p style=\"text-align:justify;\">Digamos que tienes un requisito funcional bien especificado, entonces la idea es escribir la prueba que satisfaga ese requisito. Eventualmente, la prueba fallar\u00e1, puesto que no hemos escrito c\u00f3digo alguno para comprobar si la funcionalidad descrita en el requisito es realmente lo que se espera en el software que se est\u00e1 desarrollando, adem\u00e1s de considerar que se debe escribir una sola prueba por funcionalidad. Esta prueba debe respetar el principio <a href=\"https://en.wikipedia.org/wiki/KISS_principle\" target=\"_blank\">KISS</a> XD .</p>\n\n<h2><span style=\"color:#019739;\">GREEN: ESCRIBE C\u00d3DIGO QUE PASE LA PRUEBA</span></h2>\n<p style=\"text-align:justify;\">Ejecutamos la prueba (en el lenguaje de tu preferencia o de preferencia del cliente, dej\u00e9moslo as\u00ed :| ), \u00a1y falla! Eso es lo que queremos ac\u00e1, porque ahora debemos pensar: \u00bfque cosas satisfacen la prueba? Si la prueba es que, por ejemplo, debe sumar dos n\u00fameros y dar un resultado particular, pues ya tienes dos elementos importantes: los n\u00fameros y el resultado, am\u00e9n de otros elementos de forma del c\u00f3digo que cumplan con el principio <a href=\"https://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29\" target=\"_blank\">SOLID</a> XD .</p>\n\n<h2><strong>REFACTOR: ESCRIBE OPTIMIZACIONES PARA TU C\u00d3DIGO</strong></h2>\n<p style=\"text-align:justify;\">En el proceso bidireccional de escribir pruebas para el c\u00f3digo y viceversa, siempre existe una forma m\u00e1s \u00f3ptima de hacerlo, ac\u00e1 la idea es m\u00e1s bien, darle un poco de calidad al c\u00f3digo. A ver, siempre habr\u00e1 m\u00e1s de una forma de pensar en como pasar las pruebas, sin embargo, sucede que nos quedamos con la primera por lo reducido de los tiempos de entrega, entre otras cosas que impiden que tu c\u00f3digo respete el <a href=\"https://en.wikipedia.org/wiki/Don't_repeat_yourself\" target=\"_blank\">DRY</a> XD , y todo se te vuelve un copy-paste.</p>\n<p style=\"text-align:justify;\">Por ahora no pretendo ahondar en muchos conceptos respecto a este tema, mucho menos en c\u00f3digo (eso lo voy a dejar para posts siguientes :twisted: *risa malvada*) , pero si dejar en claro que ninguna herramienta, metodolog\u00eda o tecnolog\u00eda es la <a href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panacea</a> que va a resolver todos tus problemas en desarrollo de software, hace falta \"probar\" ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Fri, 28 Aug 2015 16:44:14 +0000"}, {"tags": [], "date": "Sat, 29 Aug 2015 23:45:31 +0000"}, {"tags": ["curioscriptades", "formato", "free", "frontend", "html", "javascript", "post-format-aside", "tecnologia"], "title": "CREAR TIPOGRAFIAS CON JAVASCRIPT", "date": "Sun, 06 Sep 2015 21:50:03 +0000", "content": "&lt; script src=\"other pages\" title=\"crear tipografias con javascript\" &gt;\n<p style=\"text-align:justify;\"><a href=\"http://www.pluminjs.com/\" target=\"_blank\">Plum\u00edn.js</a> es una librer\u00eda que se utiliza para crear tipograf\u00edas web usando sintaxis de Javascript y glifos, ni m\u00e1s ni menos :D . Lo interesante de esta librer\u00eda es que puede ser usada en conjunto con otras librer\u00edas interesantes: <a href=\"http://nodebox.github.io/opentype.js/\" target=\"_blank\">Opentype.js</a> como parser de fuentes, y <a href=\"http://paperjs.org\" target=\"_blank\">Paper.js</a> como manejador de glifos, para crear interacciones \u00fatiles, como por ejemplo, en un IDE de componentes de interfaz de usuario :twisted: . Ya creo que sospechan porqu\u00e9 publico una mini-entrada, espero que si ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "curioscriptades", "expresiones-regulares", "free", "javascript", "json", "lenguaje-de-programacion", "nosql", "tecnologia"], "title": "MOCKING DE DATOS PARA DOCUMENTOS JSON", "date": "Wed, 02 Sep 2015 15:45:54 +0000", "content": "&lt; script src=\"other pages\" title=\"mockin de datos para documentos JSON\" &gt;\n<p style=\"text-align:justify;\">Si, se que est\u00e1 medio repetido el que contin\u00fae hablando de <a href=\"http://json.org/\" target=\"_blank\">JSON</a> y de como hacer mocking de datos, el tema ac\u00e1 es que soy nuevo y... *DRAMA* ... XD</p>\n<p style=\"text-align:justify;\">Nah :mrgreen: ,\u00a0 hablando enserio, he hablado y he usado la librer\u00eda <a href=\"https://github.com/marak/faker.js\" target=\"_blank\">Faker.js</a> en algunos <a href=\"https://jotaeseymas.wordpress.com/?s=faker\" target=\"_blank\">posts</a> anteriores (y la seguir\u00e9 usando :D ), sin mencionar el hecho de que en el universo Javascript, existen un <a href=\"https://es.wiktionary.org/wiki/jurgo#Espa.C3.B1ol\" target=\"_blank\">jurgo</a> de librer\u00edas <span style=\"color:#7cbbbb;\"><strong>#porai</strong></span> que sirven para lo mismo.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\nHe aqu\u00ed dos de ellas:\n<h2>CHANCE.JS</h2>\n<p style=\"text-align:justify;\"><a href=\"http://chancejs.com/\" target=\"_blank\">Chance.js</a> es una librer\u00eda que genera valores aleatorios mediante helpers que puedes ver en su documentaci\u00f3n oficial. Se descarga (completa o minificada) y se incluye en la p\u00e1gina. No hay mucho que decir de esta librer\u00eda salvo mostrar algunos ejemplos:</p>\n\n\n[code lang=\"javascript\" gutter=\"false\" title=\"Usando Chance.js\" collapse=\"true\"]\n// Devuelve un texto\nconsole.log(chance.paragraph());\n\n// Devuelve un color en notacion hexa #RRGGBB\nconsole.log(chance.color());\n\n// Devuelve un pa\u00eds\nconsole.log(chance.country({ full: true }));\n[/code]\n\n<h2>RANDEXP.JS</h2>\n<p style=\"text-align:justify;\"><a href=\"http://fent.github.io/randexp.js/\" target=\"_blank\">Randexp.js</a> es una librer\u00eda un poco (bastante, much\u00edsimo) m\u00e1s compleja que la anterior para generar valores, ya que para construirlos, se requiere utilizar expresiones regulares, lo que me recuerda la pel\u00edcula de terror que hace alg\u00fan tiempo <a href=\"https://jotaeseymas.wordpress.com/2015/03/31/expresiones-regulares-una-pelicula-de-terror-parte-1/\" target=\"_blank\">publiqu\u00e9</a> <span style=\"color:#7cbbbb;\"><strong>#porai</strong></span>, veamos algunos \"sencillos\" ejemplos :twisted:</p>\n\n\n[code lang=\"javascript\" gutter=\"false\" title=\"Usando RandExp.js\" collapse=\"true\"]\n//Password simple\nconsole.log(new RandExp('\\w{6,30}'));\n\n// Tiempo\nconsole.log(new RandExp('(1[0-2]|0[1-9])(:[0-5]\\d){2} (A|P)M'));\n\n// De mi propia cosecha, un n\u00famero telef\u00f3nico v\u00e1lido en Venezuela \nconsole.log(new RandExp('0(2(12|3[4589]|4[0-9]|[5-8][1-9]|9[1-5])|(4(12|14|16|24|26)))-\\d{7}'));\n[/code]\n\n<p style=\"text-align:justify;\">Me falt\u00f3 mencionar aparte a <a href=\"http://json-schema-faker.js.org/\" target=\"_blank\">JSON Schema Faker</a> basado en Faker.js, pero eso m\u00e1s que una librer\u00eda, es una p\u00e1gina completa basada en la librer\u00eda para hacer mocking de un documento JSON, usando JSON... O_o , pero bueno, igual las opciones est\u00e1n, a usarlas y listo ;)</p>\n&lt;/script&gt;\n\n&nbsp;"}, {"tags": ["y-sin-jquery", "aprender", "datos", "formato", "frontend", "html", "javascript", "javascripteando-ando", "json", "sin-jquery", "tecnologia", "zepto"], "title": "USO DE TEMPLATES HANDLEBARS CON ZEPTO. MITAD I. SINTAXIS, ITERACIONES Y CONDICIONALES", "date": "Sun, 30 Aug 2015 01:28:16 +0000", "content": "&lt; script src=\"my own\" title=\"uso de templates handlebars con zepto\" &gt;\n\n[caption id=\"attachment_777\" align=\"aligncenter\" width=\"236\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg\"><img class=\" wp-image-777\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg?w=150\" alt=\"Bigotes con estilo!!!\" width=\"236\" height=\"236\" /></a> <strong>Bigotes con estilo!!!</strong>[/caption]\n\n\u00bfUn post con bigotes al comienzo? Suena interesante... :mrgreen:\n\n<!--more-->\n<p style=\"text-align:justify;\"><a href=\"http://handlebarsjs.com/\" target=\"_blank\">Handlebars</a> es una libreria Javascript que proporciona un <a href=\"https://en.wikipedia.org/wiki/Web_template_system\" target=\"_blank\">sistema de templates</a> sem\u00e1nticos HTML que se pueden [pre]compilar y usar transversalmente en cualquier aplicaci\u00f3n web. Est\u00e1 basado en el otrora sistema de templates multilenguaje <a href=\"http://mustache.github.io/\" target=\"_blank\">Mustache</a>, por lo que sus funcionalidades son similares (en <a href=\"https://github.com/wycats/handlebars.js#differences-between-handlebarsjs-and-mustache\" target=\"_blank\">algunas</a> cosas) a ese sistema. Adicionalmente, incluye una serie de funciones, helpers y bloques sem\u00e1nticos, entre otras <a href=\"http://handlebarsjs.com/builtin_helpers.html\" target=\"_blank\">especias</a> que hacen de Handlebars una opci\u00f3n interesante para construir templates en un desarrollo front-end.</p>\n<p style=\"text-align:justify;\">Algunas de las funcionalidades m\u00e1s interesantes de esta librer\u00eda, he decidido incluirlas en un solo post, pero como quedaba muy muy largo ( :roll: ) lo separ\u00e9 en dos mitades:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\">Mitad I (este post): Sintaxis, Bloques de Iteraciones y Bloques Condicionales.</li>\n\t<li style=\"text-align:justify;\">Mitad II: Rutas a Objetos, Registro de helpers, y Templates Parciales.</li>\n</ol>\n<p style=\"text-align:justify;\">Adicionalmente, usar\u00e9 <a href=\"http://zeptojs.com\" target=\"_blank\">Zepto</a> para insertar el c\u00f3digo HTML, y para el mocking de los datos del template, usar\u00e9 <a href=\"https://github.com/marak/faker.js\" target=\"_blank\">Faker.js</a>, una librer\u00eda que no necesita mucha presentaci\u00f3n puesto que habl\u00e9 de ella en un <a href=\"https://jotaeseymas.wordpress.com/2015/06/12/falsificando-datos-para-mocking-de-documentos-json/\" target=\"_blank\">post</a> anterior XD . \u00a1Empec\u00e9mos ya!</p>\n\n<h2>ESTRUCTURA INICIAL</h2>\n<p style=\"text-align:justify;\">El c\u00f3digo que vamos a usar es una s\u00f3la p\u00e1gina con la inclusi\u00f3n de las librer\u00edas y la data. Primero presento el c\u00f3digo y luego explico de que va en cada l\u00ednea:</p>\n\n<div style=\"font-size:14px;\">\n\n[code lang=\"html\" collapse=\"true\" title=\"Archivo: index.html\" highlight=\"9,12,13,14,15,16,18,20,22,24,25,26,28,30,31,32,36,53,56,59,62\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n\u00a0\u00a0 \u00a0&lt;meta charset=&quot;UTF-8&quot;&gt;\n\u00a0\u00a0 \u00a0&lt;title&gt;Ejemplo Handlebars&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\u00a0\u00a0 \u00a0&lt;h1&gt;Lista de usuarios con Handlebars&lt;/h1&gt;\n\u00a0\u00a0 \u00a0&lt;div class=&quot;template&quot;&gt;&lt;/div&gt;\n\n\u00a0\u00a0 \u00a0&lt;!-- Templates e instancia de Javascript --&gt;\u00a0\u00a0 \u00a0\n\u00a0\u00a0 \u00a0&lt;script src=&quot;handlebars-v3.0.0.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script id=&quot;userlist&quot; type=&quot;text/x-handlebars-template&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0{{#each userList}}\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;div style=&quot;border: 1px solid \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {{!-- Comentario dentro del template --}}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {{!-- Escrito as\u00ed para mayor legibilidad del c\u00f3digo --}}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {{#if enabled}}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 green {{!-- Verde si usuario est\u00e1 habilitado --}}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {{else}}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 red {{!-- Rojo si usuario est\u00e1 deshabilitado --}}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {{/if}}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ; width: 350px; height: 150px; margin: 10px; float: left;&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;h2&gt;{{name}}&lt;/h2&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;p&gt;&lt;strong&gt;{{address}}&lt;/strong&gt;&lt;/p&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;p&gt;&lt;em&gt;Tel\u00e9fono: {{phone}}&lt;/em&gt;&lt;/p&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;/div&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0{{/each}}\n\u00a0\u00a0 \u00a0&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;event.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;faker.min.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0$(function(){\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//espa\u00f1ol\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0faker.locale = 'es';\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0var listaUsuarios = []; //arreglo de usuarios;\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0for (var i = 0; i &lt; 9; i++) {\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//crea un \u00fanico usuario cada vez que se declara la variable\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0var usuario = {\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0name: faker.name.findName(),\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0address: faker.address.streetAddress(),\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0phone: faker.phone.phoneNumber(),\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0enabled: faker.random.number() ? true : false\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0};\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//Se agrega al arreglo de usuarios\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0listaUsuarios.push(usuario);\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0}; \u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//Se encapsula la lista\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0var lista = {userList: listaUsuarios};\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//se convierte de sem\u00e1ntica Handlebars a HTML plano\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0var source = $('#userlist').html(),\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//se compila el template HTML para insertar datos\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0template = Handlebars.compile(source);\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0//se insertan datos y se a\u00f1aden al cuerpo HTML\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0$('.template').append(template(lista));\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0});\n\u00a0\u00a0 \u00a0&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n</div>\n<h2 style=\"text-align:justify;\">SINTAXIS</h2>\n<p style=\"text-align:justify;\">Despu\u00e9s de descargar la librer\u00eda, en la l\u00ednea 12 la inclu\u00edmos (de forma local, en mi caso). Ignorando todo lo dem\u00e1s (por ahora :oops: ), en la l\u00edneas 56, 59 y 62 se hace la magia para compilar el template con la data requerida, obteniendo el c\u00f3digo HTML, compil\u00e1ndolo e insertando con Zepto, la data correspondiente, respectivamente, cuando se agrega el template en la secci\u00f3n de nuestra vista que deseamos (en este caso, la l\u00ednea 9)</p>\n<p style=\"text-align:justify;\">Entre las l\u00edneas 40 y 50, simplemente se hace un mocking de datos para usar en nuestra vista con Faker.js, asegur\u00e1ndonos, en la l\u00ednea 36, de que los datos que se van a generar est\u00e1n localizados al espa\u00f1ol :)</p>\n<p style=\"text-align:justify;\">Finalmente, entre las l\u00edneas 13 y 29, se escribe el template que se va a a\u00f1adir a nuestra vista principal. Ac\u00e1 es importante usar la convenci\u00f3n <code>type=\"text/x-handlebars-template\"</code> para que el navegador no confunda este c\u00f3digo con Javascript trocho y mocho y con otros \"bloques\" dentro del template mismo.</p>\n<p style=\"text-align:justify;\">Un \"bloque\" est\u00e1 delimitado por dos expresiones, una de inicio y una de fin. Las expresiones son interpolaciones de variables o de helpers de Handlebars para diferentes funcionalidades.</p>\n\n<h2 style=\"text-align:justify;\">BLOQUES DE ITERACIONES</h2>\n<p style=\"text-align:justify;\">Las l\u00edneas 14 y 28 representan un bloque de iteraci\u00f3n, el cual no hace m\u00e1s que renderizar los diferentes valores que se encuentran dentro de la propiedad <code>userlist</code> (siempre que dicha propiedad sea un array), encapsulada en la l\u00ednea 53, y aplicar el bloque interno sobre cada elemento que contenga la propiedad.</p>\n\n<h2>BLOQUES CONDICIONALES</h2>\n<p style=\"text-align:justify;\">En las l\u00edneas 18, 20 y 22 se muestra un bloque condicional, el cual consiste en renderizar uno u otro valor dependiendo de si la expresi\u00f3n resultado del bloque <code>{{#if expresion}}</code> evalua a <em>true</em> o a <em>false</em>. En este caso, la propiedad CSS <code>border</code> ser\u00e1 <span style=\"color:#019a70;\"><code>green</code></span> si la variable <code>enabled</code> de la data insertada es <em>true</em> y <span style=\"color:#d25349;\"><code>red</code></span> si dicho valor es <em>false</em>.</p>\n<p style=\"text-align:justify;\">FInalmente, este es el resultado de tanto jaleo (que ser\u00e1 completamente diferente si actualizamos la p\u00e1gina) ^^'</p>\n\n\n[caption id=\"attachment_776\" align=\"aligncenter\" width=\"440\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/handlebar-resultado.png\"><img class=\" wp-image-776\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/handlebar-resultado.png?w=150\" alt=\"... y nuestro template arroja esto :D !\" width=\"440\" height=\"185\" /></a> <strong>... y nuestro template arroja esto :D !</strong>[/caption]\n<p style=\"text-align:justify;\">Handlebars tiene muchas m\u00e1s funcionalidades que las mencionadas ac\u00e1, como podr\u00e1s darte cuenta en su API nada m\u00e1s al ingresar. Nada, \u00a1feliz bigote! ;)</p>\n\n\n[caption id=\"attachment_784\" align=\"aligncenter\" width=\"353\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif\"><img class=\" wp-image-784\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif?w=150\" alt=\"XD XD XD\" width=\"353\" height=\"219\" /></a> <strong>XD XD XD</strong>[/caption]\n\n&lt;/script&gt;"}, {"tags": [], "date": "Sat, 29 Aug 2015 23:47:47 +0000"}, {"tags": [], "date": "Sun, 30 Aug 2015 00:45:39 +0000"}, {"tags": ["curioscriptades", "es6", "free", "frontend", "html", "javascript", "json", "lenguaje-de-programacion", "tipos"], "title": "\u00bfPOR QU\u00c9 HAY TANTOS FRAMEWORKS JAVASCRIPT?", "date": "Sun, 30 Aug 2015 21:48:22 +0000", "content": "&lt; script src=\"my own\" title=\"por qu\u00e9 hay tantos frameworks javascript\" &gt;\n\nBuena pregunta... :roll:\n<p style=\"text-align:justify;\">Hace tiempo, pubiqu\u00e9 un <a href=\"https://jotaeseymas.wordpress.com/2015/06/12/20-frameworks-mv-en-javascript/\" target=\"_blank\">enlace</a> donde se mostraban al menos 20 frameworks MV* en Javascript, pero la realidad supera a cualquier lista, y es que la lista es casi interminable: no s\u00f3lo frameworks, tambi\u00e9n librer\u00edas, utilidades, complementos (a.k.a. polyfills) y vaya usted a saber cuantas <a href=\"https://jotaeseymas.wordpress.com/2015/07/10/gente-sin-oficio/\" target=\"_blank\">cosas</a> m\u00e1s. No en vano es el lenguaje N\u00b0 1 preferido en el <a href=\"https://github.com/blog/2047-language-trends-on-github\" target=\"_blank\">Gato-pulpo</a>, adem\u00e1s de contar con m\u00e1s de 1000 \"cosas\" hechas en <a href=\"https://www.javascripting.com/\" target=\"_blank\">Javascripting.com</a> y m\u00e1s de 500 \"micro-cosas\" en <a href=\"http://microjs.com/#\" target=\"_blank\">microjs.com</a>.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Pero, pens\u00e1ndolo bien, debe haber una raz\u00f3n para que esto suceda, a ver, una de las cosas que debo admitir (como programador novato) es que Javascript no es el lenguaje m\u00e1s bonito, ni el m\u00e1s apropiado para empezar a programar, pero el poder que proporciona es bastante grande *risa malvada* :twisted: . Me recuerda al pobre de Tetsuo...</p>\nhttp://www.youtube.com/watch?v=Awc1ZJVxXhU\n<p style=\"text-align:justify;\">\"El poder sin control, corrompe, destruye y erradica...\" 8-) Para pensarlo, te doy cuatro razones:</p>\n\n<h2>RAZ\u00d3N 1. LIBERTAD, LIBERTAD <em>EVERYWHERE</em></h2>\n<p style=\"text-align:justify;\">El hecho de que no sea bonito, no quiere decir que no sea funcional, y con funcional me refiero a que sirva para lo que se necesita. De hecho, la gran mayor\u00eda de patrones de dise\u00f1o orientado a objetos existentes pueden modelarse en Javascript como se ve en algunas <a href=\"http://www.dofactory.com/javascript/design-patterns\" target=\"_blank\">publicaciones</a>. Esa es una de las funcionalidades m\u00e1s apetecidas por un desarrollador: un lenguaje que me permita hacer lo que quiera, salvando, las limitaciones apropiadas de contexto, hardware, etc. :D</p>\n\n<h2 style=\"text-align:justify;\">RAZ\u00d3N 2. NO NECESITO APRENDER OTRO LENGUAJE DE PROGRAMACI\u00d3N</h2>\n<p style=\"text-align:justify;\">Otra de las razones es que un desarrollador web frontend (como yo ^^' ), puede simplemente prescindir de otros lenguajes de programaci\u00f3n y usar Javascript para \"todo\" dentro de una aplicaci\u00f3n web, m\u00e1s a\u00fan teniendo a <a href=\"https://nodejs.org/\" target=\"_blank\">Node.js</a>, muy popular y mencionado por estos d\u00edas, sin mencionar que puedo combinar bases de datos (<a href=\"https://www.mongodb.org\" target=\"_blank\">MongoDB</a>), protocolos de comunicaci\u00f3n (<a href=\"http://json.org\" target=\"_blank\">JSON</a>), y desarrollo frontend (<a href=\"https://angularjs.org\" target=\"_blank\">Angular.js</a>), simulaciones 3D, (<a href=\"http://threejs.org/\" target=\"_blank\">three.js</a>), y muchas cosas m\u00e1s con \u00a1un s\u00f3lo lenguaje! :D</p>\n\n<h2>RAZ\u00d3N 3. \u00a1AHORA [CASI] TODO EST\u00c1 EN LA WEB!</h2>\n<p style=\"text-align:justify;\">Javascript tiene una limitaci\u00f3n importante, y es la de estar supeditado a un cliente web (navegador) con un int\u00e9rprete del lenguaje. Sin embargo esta \"limitaci\u00f3n\" no ha impedido que cada vez m\u00e1s y m\u00e1s aplicaciones est\u00e9n migrando de un entorno de escritorio a un entorno web. Aplicaciones como LinkedIn, Reddit o PayPal han migrado sus sistemas a web mediante Javascript. <a href=\"https://en.wikipedia.org/wiki/Internet_of_Things\" target=\"_blank\">IoT</a> (a.k.a. <em>Internet of Things</em>) y sus tecnolog\u00edas relacionadas tambi\u00e9n han influido en esta migraci\u00f3n :D</p>\n\n<h2>RAZ\u00d3N 4. APLICACIONES \"H\u00cdBRIDAS\" PARA DISPOSITIVOS M\u00d3VILES</h2>\n<p style=\"text-align:justify;\">\u00bfTe toca programar apps para dispositivos con Android OS? Entonces te toca meterte un pu\u00f1al con <em>Java</em> y el <em>Android Studio</em> o lo que sea que uses para programar. Pero si sabes Javascript, HTML5 y CSS3, \u00a1buenas noticias! Ya tienes el 90% de lo requerido para programar aplicaciones para disp\u00f3sitivos m\u00f3viles usando plataformas h\u00edbridas de compilaci\u00f3n como <a href=\"http://phonegap.com/\" target=\"_blank\">PhoneGap</a>, <a href=\"http://ionicframework.com/\" target=\"_blank\">Ionic</a> o <a href=\"https://software.intel.com/en-us/intel-xdk\" target=\"_blank\">Intel XDK</a>, entre otras plataformas, \u00bfInteresante, no? :D</p>\n<p style=\"text-align:justify;\">Puede que no est\u00e9s de acuerdo conmigo, pero no busco eso, busco que te enamores un poco m\u00e1s de este lenguaje que si bien no es la <a href=\"https://es.wikipedia.org/wiki/Panacea_universal\" target=\"_blank\">Panacea</a>, es muy bonito una vez que lo \"dominas\", pero, sinceramente, yo espero no dominarlo nunca y sorprenderme siempre ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "coco-mongo-xd", "javascript", "json", "nosql", "nuevo", "tecnologia", "tutorial"], "title": "ACERCA DE: MONGODB. PARTE 1. INSTALACI\u00d3N B\u00c1SICA Y SHELL JAVASCRIPT", "date": "Mon, 21 Sep 2015 14:46:39 +0000", "content": "&lt; script src=\"other pages\" title=\"instalacion basica y shell javascript\" &gt;\n<p style=\"text-align:justify;\">En el <a href=\"https://jotaeseymas.wordpress.com/2015/08/23/acerca-de-mongodb-parte-0-101/\" target=\"_blank\">post</a> anterior, hubo una breve introducci\u00f3n acerca de <a href=\"https://www.mongodb.org\" target=\"_blank\">MongoDB</a>. Despu\u00e9s de haber presentado el examen final de certificaci\u00f3n en la <a href=\"https://university.mongodb.com\" target=\"_blank\">Universidad</a> de MongoDB (un poco de flores para mi jijiji XD ), tengo un poco m\u00e1s de tiempo para continuar la serie, esta vez con una instalaci\u00f3n b\u00e1sica y una introducci\u00f3n a la shell de MongoDB.</p>\n<p style=\"text-align:justify;\"><strong>Importante:</strong> Todos los ejemplos en estos posts acerca de MongoDB est\u00e1n siendo ejecutados en un computador con sistema operativo Debian GNU/Linux 8 Jessie de 64-bits y MongoDB con la versi\u00f3n comunitaria 3.0.6 instalada. El escritorio que tengas instalado es irrelevante para el uso de este gestor de base de datos NoSQL, por ejemplo, yo uso LXDE y me va de maravilla :mrgreen: .</p>\n<!--more-->\n<h2 style=\"text-align:justify;\">Instalaci\u00f3n</h2>\n<p style=\"text-align:justify;\">La instalaci\u00f3n b\u00e1sica en Debian GNU/Linux 8 Jessie es <a href=\"http://docs.mongodb.org/manual/tutorial/install-mongodb-on-debian/\" target=\"_blank\">trivial</a>: descargar llave de seguridad de repos, instalar repos, actualizar con <code>apt-get update</code> y luego instalar con <code>apt-get install mongodb-org</code>, \u00bff\u00e1cil, no?</p>\n<p style=\"text-align:justify;\">Iniciamos el servicio de mongo ejecutando algo <em>similar</em> a esto (<strong>NOTA</strong>: los par\u00e1metros son totalmente opcionales y configurables, adem\u00e1s de que puedes hacerlo en modo superusuario directamente):</p>\n\n\n[code language=\"bash\"]\n$ sudo mongod --dbpath=/var/data/db --logpath=/var/log/mongodb\n[/code]\n\n<p style=\"text-align:justify;\">La opci\u00f3n <code>--dbpath</code> corresponde al directorio donde se almacenar\u00e1n tus colecciones f\u00edsicamente, mientras que la opci\u00f3n <code>--logpath</code> corresponde al directorio donde se almacenar\u00e1n los eventos y errores que arroje MongoDB.</p>\n<p style=\"text-align:justify;\">Una instalaci\u00f3n menos trivial implicar\u00eda entrar en asuntos arquitect\u00f3nicos de <a href=\"http://docs.mongodb.org/manual/core/sharding-introduction/\" target=\"_blank\">sharding</a>, <a href=\"http://docs.mongodb.org/manual/core/replication-introduction/\" target=\"_blank\">replica sets</a> y dem\u00e1s hierbas arom\u00e1ticas que tiene MongoDB para nosotros :D .</p>\n<p style=\"text-align:justify;\">Lo interesante (por ahora) es estudiar la shell de MongoDB hecha en Javascript :P</p>\n\n<h2 style=\"text-align:justify;\">Shell de Comandos Javascript</h2>\nAbrimos un terminal y escribimos:\n\n[code language=\"bash\"]\n$ mongo\n[/code]\n\nObtenemos algo <em>parecido</em> a esto:\n\n[code language=\"bash\"]\nMongoDB shell version: 3.0.6\nconnecting to: test\nServer has startup warnings: \n2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] \n2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is 'always'.\n2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\n2015-09-18T13:42:48.163-0430 I CONTROL  [initandlisten] \n&amp;gt; \n[/code]\n\n... y ya estamos listos para ejecutar comandos.\n<p style=\"text-align:justify;\">La sintaxis de los comandos es muy similar a la de objetos en Javascript, con espacios de nombre bien definidos:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">El comando <span style=\"color:#d25349;\"><strong><code>use &lt;database&gt;</code></strong></span> para conectarse a una base de datos (si no existe, la crea, pero no existir\u00e1 f\u00edsicamente hasta que no se inserte al menos un documento en una colecci\u00f3n)</li>\n\t<li style=\"text-align:justify;\">El comando <span style=\"color:#d25349;\"><code>show (dbs | collections)</code></span> permite listar las colecciones (opci\u00f3n <span style=\"color:#d25349;\"><code>collections</code></span>) o bases de datos (opci\u00f3n <span style=\"color:#d25349;\"><code>dbs</code></span>) existentes.</li>\n\t<li style=\"text-align:justify;\">El comando <span style=\"color:#d25349;\"><code>help</code></span> permite mostrar la ayuda b\u00e1sica de la shell de comandos.</li>\n\t<li style=\"text-align:justify;\">Una vez conectado a una base de datos, [casi] todos los comandos en la shell de MongoDB son de esta manera: <span style=\"color:#d25349;\"><code>db.&lt;collection&gt;.&lt;command&gt;()</code></span>. Donde <span style=\"color:#d25349;\"><code>db</code></span> es el objeto global de conexi\u00f3n de la shell, <span style=\"color:#d25349;\"><code>&lt;collection&gt;</code></span> es una colecci\u00f3n v\u00e1lida dentro de la base de datos seleccionada (con alg\u00fan documento insertado), y <span style=\"color:#d25349;\"><code>&lt;command&gt;()</code></span> es el comando a ejecutar sobre la colecci\u00f3n, sobre documentos, o sobre la metadata de la colecci\u00f3n.</li>\n</ul>\nHasta el pr\u00f3ximo post... :twisted: ;)\n\n&lt;/script&gt;"}, {"tags": ["aprender", "curioscriptades", "formato", "free", "html", "javascript", "javier-garzas", "tdd", "tecnologia"], "title": "COMO DEBER\u00cdA SER EL DESARROLLO: TDD Y/O BDD. TIPOS DE PRUEBAS (...Y PARA EL DESARROLLADOR)", "date": "Tue, 22 Sep 2015 21:29:13 +0000", "content": "&lt; script src=\"other pages\" title=\"tipos de pruebas para el desarrollador\"&gt;\n<p style=\"text-align:justify;\">En el <a href=\"https://jotaeseymas.wordpress.com/2015/08/28/como-deberia-ser-el-desarrollo-tdd-yo-bdd-una-significativa-introduccion/\" target=\"_blank\">post</a> anterior, habl\u00e9 sobre como deber\u00eda ser, en t\u00e9rminos generales, un desarrollo TDD, sin embargo existen algunos hechos t\u00edpicos respecto a la implementaci\u00f3n de dichas pruebas:</p>\n\n<ul>\n\t<li>\u00bfPor d\u00f3nde empiezo a automatizar?</li>\n\t<li style=\"text-align:justify;\">Tengo el cliente de mi app en Noruega y el servidor est\u00e1 en Argentina \u00bfcorro las pruebas remotamente?</li>\n\t<li style=\"text-align:justify;\">\u00bfLas pruebas se pueden \"clusterizar\"? Porque tengo mi app distribuida en 20 servidores distintos...</li>\n\t<li>\u00bfEs muy caro eso de \"automatizar pruebas\"?</li>\n\t<li>\u00bfVan a despedir o reemplazar al personal que haga pruebas manuales? Ehm... :|</li>\n\t<li style=\"text-align:justify;\">Tengo un sistema de censo que maneja datos vinculados de diferentes servidores, con web sem\u00e1ntica y mensajeria de colas usando <a href=\"http://zeromq.org/\" target=\"_blank\">ZeroMQ</a> montado en una plataforma .NET, Java y C++. NO PUEDO automatizar pruebas en un entorno tan complejo...</li>\n\t<li style=\"text-align:justify;\">... [y mi favorita] \u00bfqui\u00e9n va a hacer las pruebas? o_O</li>\n</ul>\n<p style=\"text-align:justify;\">La respuesta a [la mayor\u00eda de] esas preguntas no siempre es trivial, la cuesti\u00f3n va m\u00e1s all\u00e1 de lo operacional, tambi\u00e9n es un tema organizacional, cultural y, por encima de todo..., conceptual.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">Identificando los tipos de pruebas</h2>\n<p style=\"text-align:justify;\">Pese a que los autores no se ponen de acuerdo (a\u00fan hoy :/ ) sobre como clasificar los tipos de pruebas, en general, existen 6 tipos de pruebas que m\u00e1s frecuentemente se realizan en el desarrollo de sistemas orientado a TDD:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\"><strong>Pruebas unitarias</strong>: Definen las funcionalidades primarias, generalmente asociadas a historias de usuario (si usas SCRUM) o a casos de uso (si usas RUP o similares). Ya ac\u00e1 hay todo un universo de clasificaciones sobre las que se pueden trabajar. Casi siempre se realizan primero, dentro del alcance de los componentes que se van a desarrollar.</li>\n\t<li style=\"text-align:justify;\"><strong>Pruebas funcionales:</strong> Definen el aspecto de la integraci\u00f3n de los componentes (en el entorno de desarrollo, no de producci\u00f3n) desarrollados de forma estable y con pruebas unitarias. Generalmente asociadas a m\u00f3dulos completos o interfaces que describan procesos completos dentro de la aplicaci\u00f3n.</li>\n\t<li style=\"text-align:justify;\"><em>Pruebas de rendimiento:</em> Definen el aspecto operacional del desempe\u00f1o de la aplicaci\u00f3n en un ambiente similar al de producci\u00f3n. En este punto se eval\u00faan: concurrencia, gesti\u00f3n de hilos, gesti\u00f3n de la memoria RAM, conexiones distribuidas, cambio entre interfaces bajo estr\u00e9s de la red y conectividad con la base de datos.</li>\n\t<li style=\"text-align:justify;\"><em>Pruebas de integraci\u00f3n:</em> Definen el aspecto de despliegue de la aplicaci\u00f3n en el ambiente de producci\u00f3n, [opcionalmente] sin interacci\u00f3n del usuario final. Generalmente, este tipo de pruebas define los par\u00e1metros de la integraci\u00f3n continua, el cual es un concepto que expresa los hitos de entrega de las funcionalidades al cliente cada cierto tiempo fijo.</li>\n\t<li style=\"text-align:justify;\"><em>Pruebas de regresi\u00f3n: </em> En las pruebas de regresi\u00f3n se define cual de las trazas (versiones del sistema guardadas en el control de versiones) presenta la mayor\u00eda de las funcionalidades requeridas por el cliente, siguiendo un patr\u00f3n de <a href=\"http://semver.org/lang/es/\" target=\"_blank\">versionamiento sem\u00e1ntico</a> y considerando las caracter\u00edsticas definidas durante la prueba anterior.</li>\n\t<li style=\"text-align:justify;\"><em>Pruebas de aceptaci\u00f3n:</em> Una vez definida una versi\u00f3n del sistema (conocida hasta este punto como \"estable\") que cumple con las caracter\u00edsticas que requer\u00eda el cliente, se dice que esta prueba es \"aceptada\" en vez de aprobada. Significa entonces, que el cliente est\u00e1 satisfecho con la calidad del producto y se puede \"detener\" el <em><strong><span style=\"color:#d25349;\">ciclo de pruebas</span></strong></em>.</li>\n</ol>\n<p style=\"text-align:justify;\">\u00bfCiclo de pruebas? Si, <span style=\"color:#d25349;\"><em><strong>ciclo de pruebas</strong></em></span>. Cada uno de los tipos de prueba debe ser ejecutados \"n\" veces hasta cumplir con los requerimientos (si usas metodolog\u00edas de desarrollo estructuradas) o historias de usuario (si usas metodolog\u00edas \u00e1giles). En algunos casos, con cada tipo de prueba son ejecutados \"n\" veces hasta pasar al siguiente tipo de prueba.</p>\n<p style=\"text-align:justify;\">Para los desarrolladores ser\u00eda muy conveniente utilizar los dos tipos de prueba se\u00f1alados en negrita, al menos para cumplir, en una fase temprana del desarrollo e independientemente de la metodolog\u00eda usada, con los requerimientos necesarios para entregar una versi\u00f3n estable del sistema en desarrollo.</p>\n<p style=\"text-align:justify;\">En un pr\u00f3ximo post, hablar\u00e9 sobre algunas tecnolog\u00edas existentes en Javascript y usarlas (claro! :mrgreen: ). Hace falta \"probar\" ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "curioscriptades", "datos", "expresiones-regulares", "formato", "formularios", "free", "frontend", "google", "javascript", "mozilla-firefox", "nuevo", "post-format-link", "tecnologia", "validacion", "wat"], "title": "EL MEJOR FRAMEWORK JAVASCRIPT QUE HE VISTO HASTA AHORA...", "date": "Thu, 24 Sep 2015 14:57:20 +0000", "content": "&lt; script src=\"other pages\" title=\"el mejor framework javascript\"&gt;\n\n...y traduzco literalmente lo de la <a href=\"http://html9responsiveboilerstrapjs.com/\" target=\"_blank\">p\u00e1gina</a> que visit\u00e9 HOY:\n<blockquote>\"H9RBS.js (v0.0001) is a flexible, dependency-free, lightweight, device-agnostic, modular, baked-in, component framework MVC library shoelacestrap to help you kickstart your responsive CSS-based app architecture backbone kitchensink tweetybirds...\"</blockquote>\nO sea, lo mejor pues... XD ;)\n\n&lt;/script&gt;"}, {"tags": ["curioscriptades", "datos", "expresiones-regulares", "html", "javascript", "json", "lenguaje-de-programacion", "post-format-aside", "wat"], "title": "\u00bfQUIERES CREAR EL NOMBRE PARA TU BANDA?", "date": "Mon, 28 Sep 2015 17:54:37 +0000", "content": "&lt; script src=\"other pages\" title=\"creando el nombre para tu banda\"&gt;\n<p style=\"text-align:justify;\">Javascript, siempre resolviendo los problemas cotidianos :mrgreen: , presenta ahora una soluci\u00f3n eficiente a una cuesti\u00f3n no tan trivial: Imagina por un segundo que quieres formar una banda de (inserte g\u00e9nero musical aqu\u00ed... XD ) y de repente te falla la creatividad... Pues ahora con Javascript puedes crear el nombre de tu banda con <a href=\"https://github.com/Prismatik/bandname\" target=\"_blank\">bandname</a>.\nP.D.: P\u00edcale al Me Gusta si lo le\u00edste con voz de infomercial ;)</p>\n&lt;/script&gt;"}, {"tags": ["y-sin-jquery", "algoritmos", "aprender", "expresiones-regulares", "free", "frontend", "html", "javascript", "javascripteando-ando", "lenguaje-de-programacion", "mozilla-firefox", "post-format-link", "sin-jquery", "tecnologia", "zepto"], "title": "CONZEPTO: GENERACI\u00d3N DE UN LAYOUT MULTICOLUMNA", "date": "Sun, 04 Oct 2015 19:19:48 +0000", "content": "&lt; script src=\"my own\" title=\"generaci&amp;oacute;n de un layout multicolumna\"&gt;\n<p style=\"text-align:justify;\">\u00a1Feliz fin del comienzo de semana! O si est\u00e1s leyendo esto el lunes: \u00a1feliz inicio de semana! :mrgreen: Ya un poco m\u00e1s aliviado de haber culminado unos <a href=\"https://ve.linkedin.com/in/jhonyalbertogrilletmedina\" target=\"_blank\">cursillos</a> <span style=\"color:#7cbbbb;\"><strong>#porai</strong></span>, al fin puedo continuar con los posts, que es lo que mola jijiji XD .</p>\n<p style=\"text-align:justify;\">En esta ocasi\u00f3n, y sin m\u00e1s pre\u00e1mbulos, presento uno de mis proyectos m\u00e1s bonitos (despu\u00e9s de la <a href=\"https://jotaeseymas.wordpress.com/2015/02/18/libreria-angular-parte-1-primero-lo-primero/\" target=\"_blank\">Librer\u00eda Angular</a> y mi trabajo \u00a1claro est\u00e1! ^^' )...</p>\n<p style=\"text-align:justify;\"><a href=\"https://github.com/ChinuxParibus/zepto-grid\" target=\"_blank\">zepto-grid.js</a> es un plugin de <a href=\"http://zeptojs.com\" target=\"_blank\">Zepto.js</a> que desarroll\u00e9 pensando en generar un layout multicolumna pero sin necesidad de cargar CSS con clases, sino que quer\u00eda probar que es posible en otras alternativas (<a href=\"http://vanilla-js.com/\" target=\"_blank\">VanillaJS</a> incluso), y pues sali\u00f3 esto :D</p>\n<p style=\"text-align:justify;\">Sencilo, todo el c\u00f3digo de ejemplo, as\u00ed como la librer\u00eda en s\u00ed, est\u00e1n en el Gato-pulpo.</p>\n<p style=\"text-align:justify;\">Espero lo disfruten y lo aprecien... ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "curioscriptades", "datos", "free", "javascript", "json", "nosql", "tecnologia"], "title": "NUESTRO INS\u00d3LITO UNIVERSO... DEL NOSQL", "date": "Fri, 09 Oct 2015 15:15:16 +0000", "content": "&lt; script src=\"other pages\" title=\"nuestro ins&amp;oacute;lito universo del nosql\"&gt;\n<p style=\"text-align:justify;\">Se que, de alg\u00fan modo, siempre nos las arreglamos para volver a nuestra \"zona de confort\" o nuestro \"martillo\", haciendo alusi\u00f3n a la frase \"an\u00f3nima\" que encontr\u00e9 <strong><span style=\"color:#7cbbbb;\">#porai</span></strong>: \"al que sabe manejar un martillo, todos los problemas le parecen clavos\". Y es que sucede que en el universo <a href=\"https://es.wikipedia.org/wiki/SQL\" target=\"_blank\">SQL</a> [parecieran] no haber muchos martillos que usar, pues generalmente suele decantarse por una soluci\u00f3n con <a href=\"http://www.postgresql.org/\" target=\"_blank\">PostgreSQL</a> o <a href=\"https://www.mysql.com/\" target=\"_blank\"><em>maiesecuele</em></a> (no pongo el nombre porque desde que lo asimil\u00f3 el \"<a href=\"http://www.oracle.com/index.html\" target=\"_blank\">Or\u00e1culo</a>\", se ha vuelto m\u00e1s corporativo que el Co#@%&amp;... &gt;:( ), o incluso el primo ligero de ambos, <a href=\"https://www.sqlite.org/\" target=\"_blank\">SQLite 3</a>.</p>\n<p style=\"text-align:justify;\">Pero no es el \u00fanico universo... :twisted:</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">NoSQL o \"Not Only SQL\", es un t\u00e9rmino difundido en estas cuestiones del desarrollo de software desde el 2009, y viene a suplementar las carencias del SQL:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">Falta de agilidad</span>: una migraci\u00f3n de <em>maiesecuele</em> a PostgreSQL no es (o no deber\u00eda ser) tan trivial como para ignorar estructuras, relaciones, operaciones y dialectos SQL entre las diferentes plataformas, eso representa un problema en <a href=\"http://www.reactivemanifesto.org/es\" target=\"_blank\">sistemas reactivos</a>.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">Poca resiliencia</span>: o cambio en las estructuras de base de datos. Aunque es permitido hacerlo en caliente incluso, la integridad de los datos es sacrificada, por lo que dichos cambios estructurales afectar\u00e1n significativamente el rendimiento y la data.</li>\n\t<li style=\"text-align:justify;\"><span style=\"text-decoration:underline;\">Lento en escalabilidad</span>: Pese a que <a href=\"http://www.webopedia.com/TERM/R/RDBMS.html\" target=\"_blank\">RBDMS</a> como PostgreSQL ofrecen como virtud, el hecho de soportar grandes cantidades de datos, tal cosa en la pr\u00e1ctica es dif\u00edcil de obtener sin un soporte de infraestructura y una inversi\u00f3n considerable.</li>\n</ol>\n<p style=\"text-align:justify;\">Por otro lado, y mientras en el universo SQL existen alrededor de <a href=\"https://en.wikipedia.org/wiki/List_of_relational_database_management_systems\" target=\"_blank\">100 RBDMS</a>, en el universo NoSQL existen m\u00e1s de <a href=\"http://nosql-database.org/\" target=\"_blank\">200 DBMS</a> <strong>no relacionales </strong>:mrgreen: , el cual es un t\u00e9rmino que dice mucho acerca de porque actualmente se han vuelto tan populares y tan demandados:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\">Ser <strong>no relacionales</strong> supone la carencia de operaciones SQL entre tablas tales como JOINS, CONSTRAINTS, entre otras, \u00bfsimplificando? el manejo de los datos.</li>\n\t<li style=\"text-align:justify;\">Lo anterior supone tambi\u00e9n una incre\u00edble capacidad de <strong>escalamiento horizontal</strong>, ya que los registros no necesariamente tendr\u00edan que tener el mismo contenido.</li>\n\t<li style=\"text-align:justify;\"><strong>No posee esquemas</strong>, lo cual representa una ventaja a nivel arquitect\u00f3nico, ya que los datos pueden ser distribuidos en formas diametralemente opuestas al SQL tales como \u00c1rboles, Grafos, Listas Enlazadas, Colas, Pilas, etc...</li>\n\t<li style=\"text-align:justify;\">La gran mayor\u00eda de DBMS no relacionales <strong>soportan cambios \"en caliente\"</strong> a nivel de estructura, configuraci\u00f3n y ordenamiento de los datos, sin que esto afecte la integridad de ni el rendimiento.</li>\n</ol>\n<p style=\"text-align:justify;\">Considero una gran ventaja que muchos DBMS no relacionales tengan <strong>APIs nativas para Javascript</strong>, que es la raz\u00f3n por la que escribo este post y al menos dos posts conceptuales m\u00e1s sobre el universo NoSQL ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Fri, 09 Oct 2015 15:14:37 +0000"}, {"tags": ["y-sin-jquery", "algoritmos", "aprender", "formato", "formularios", "frontend", "html", "javascript", "javascripteando-ando", "nuevo", "sin-jquery", "tecnologia"], "title": "JQUERY NO ES EL \u00daNICO. PROBANDO MINIFIED.JS", "date": "Thu, 22 Oct 2015 02:33:03 +0000", "content": "&lt; script src=\"my own\" title=\"probando minified.js\"&gt;\n<p style=\"text-align:justify;\">En una aplicaci\u00f3n web Javascript \"sencilla\", es mucho lo que puedes necesitar: desde un framework CSS hasta una librer\u00eda de manipulaci\u00f3n del <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\" target=\"_blank\">DOM</a> y puede que alg\u00fan manejador de templates HTML. Y como si esto no fuera suficiente, tambi\u00e9n pudieras necesitar integraci\u00f3n con Backend (API REST y esas cosas ^^' ), programaci\u00f3n as\u00edncrona (con <a href=\"https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/\" target=\"_blank\">Promises</a> o callbacks ^^' ) e incluso manipulaci\u00f3n de objetos (<a href=\"https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/\" target=\"_blank\">underscore.js</a> lo hace muy bien). T\u00edpicamente (o de facto) pensar\u00edas en <a href=\"http://getbootstrap.com/\" target=\"_blank\">Bootstrap CSS</a>, jQuery y <a href=\"https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/\" target=\"_blank\">Handlebars</a> para resolver...</p>\n<p style=\"text-align:justify;\">\u00a1Que bueno que jQuery no es el \u00fanico!</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Buscando y rebuscando nuevas formas de matar a jQuery (como siempre yo de asesino :mrgreen: ), me encontr\u00e9 con una grata sorpresa que no me decepcion\u00f3 en lo absoluto. Se trata de <a href=\"http://minifiedjs.com/\" target=\"_blank\">Minified</a>, una librer\u00eda muy potente que para ser un peso ligero, no tiene nada que envidiarle a jQuery, \u00bfpor qu\u00e9?</p>\n\n<h2 style=\"text-align:justify;\">QUE ME GUST\u00d3 DE MINIFIED...</h2>\n<ol>\n\t<li style=\"text-align:justify;\"><strong>Realmente ligero:</strong> Todas las funciones de Minified (que no son <a href=\"http://minifiedjs.com/api/\" target=\"_blank\">pocas</a>) caben en \u00a18KB!</li>\n\t<li style=\"text-align:justify;\"><strong>API consistente</strong>: Las funciones universales <code>.get()</code> y <code>.set()</code> fueron las que m\u00e1s me impresionaron. Eso de usar funciones \u00fanicas para todo me parece genial.</li>\n\t<li style=\"text-align:justify;\"><strong>Modular</strong>: Minified tiene 5 m\u00f3dulos claramente identificados que ver\u00e1s m\u00e1s adelante.</li>\n\t<li style=\"text-align:justify;\"><strong>Todo en uno</strong>: Los 5 m\u00f3dulos con los que cuenta Minified comprenden manipulaci\u00f3n del DOM y eventos, manejo de transiciones y animaciones CSS sencillas (fade y slide), creaci\u00f3n de nodos, manejo de objetos Javascript y un sistema de templates HTML bastante parecido a Handlebars.</li>\n\t<li style=\"text-align:justify;\"><strong>Programaci\u00f3n As\u00edncrona</strong>: Minified implementa una forma m\u00ednima de la API Promises A+ \u00a1por defecto!</li>\n</ol>\n<h2>BIEN... AHORA \u00a1MANOS AL C\u00d3DIGO!</h2>\n<p style=\"text-align:justify;\">Para probar mi punto ac\u00e1, decid\u00ed hacer una lista de tareas bien sencilla, que permita a\u00f1adir y borrar tareas, muy similar a lo que hice en <a href=\"https://jotaeseymas.wordpress.com/2015/03/16/base-de-datos-en-el-navegador-parte-2-la-practica/\" target=\"_blank\">esta aplicaci\u00f3n</a> pero sin persistencia, usando todos los m\u00f3dulos de Minified. Para los CSS use <a href=\"http://getskeleton.com/\" target=\"_blank\">Skeleton</a> y <a href=\"https://octicons.github.com/\" target=\"_blank\">Octicons</a> como pack de \u00edconos.</p>\n<p style=\"text-align:justify;\">En los comentarios est\u00e1 la informaci\u00f3n relevante del c\u00f3digo. Para mayor informaci\u00f3n consulta la API de Minified :D :</p>\n\n\n[code lang=\"javascript\" title=\"Archivo: todoApp.js\" collapse=\"true\"]\n/* Aunque no se est\u00e9 usando Node.js, Minified.js usa su propia forma de AMD (Asyncronous Module Definition) */\nvar MINI = require('minified');\n\n/* Definici\u00f3n de espacios de nombre para todas las funciones de Minified.js */\nvar _ = MINI._,\t\t\t\t// Helper de funciones Javascript (basado en &quot;_&quot;)\n\t\t$ = MINI.$,\t\t\t\t// Manipulaci\u00f3n de DOM (como jQuery o Zepto)\n\t\t$$ = MINI.$$,\t\t\t// Efectos especiales y transiciones CSS\n\t\tEE = MINI.EE,\t\t\t// Creaci\u00f3n de nodos y elementos del DOM\n\t\tHTML = MINI.HTML;\t// Compilaci\u00f3n de templates HTML (basado en mustache)\n\n/* Manejador del Evento onload (como en jQuery o Zepto)*/\n$(function() {\n\t// &quot;_&quot; tiene [casi] las mismas funciones de Underscore\n\tvar today = _.formatValue('dd-MM-yyyy hh:mm a', new Date()),\n\t// Sintaxis de templates como mustache\n\t\t\ttemplate = '\n\n&lt;div class=&quot;todo&quot;&gt;\n\n&lt;h3 style=&quot;display: inline-block;&quot;&gt;{{title}}&lt;span class=&quot;u-pull-left&quot; style=&quot;margin-right: 5px;&quot;&gt;&lt;i class=&quot;octicon octicon-x&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/h3&gt;\n\n\n&lt;span class=&quot;u-pull-right&quot;&gt;{{date}}&lt;/span&gt;\n\n{{content}}\n&lt;/div&gt;\n\n\n\n'\n\t//EE() permite crear elementos y nodos del DOM, tambi\u00e9n permite anidar elementos y crear formas complejas de interacci\u00f3n\n\t\t\ttodoForm = EE('form', {'@id': 'todoForm'}, [\n\t\t\t\tEE('input', {'@id': 'title', '@type': 'text', '@placeholder': 'T\u00edtulo', '$marginRight': '5px'}),\n\t\t\t\tEE('input', {'@id': 'content', '@type': 'text', '@placeholder': 'Descripci\u00f3n', '@size': '69', '$marginRight': '5px'}),\n\t\t\t\tEE('button', {'@id': 'newTodo', 'className': 'button-primary'}, 'Nueva Tarea')\n\t\t\t]);\n\n\t// .add() a\u00f1ade un nodo hijo al selector\n\t$('#form').add(todoForm);\n\n\t// .toggle() permite crear mapas de animaciones o cambios entre dos estados\n\tvar toggleForm = $('#form').toggle(\n\t//$$slide y $$fade maneja interacci\u00f3n autom\u00e1tica slideIn y slideOut / fadeIn y fadeOut respectivamente\n\t\t{'$$slide': 0},\n\t\t{'$$slide': 1},\n\t\t300\n\t);\n\n\t// Manejo de eventos personalizados (click, change, focus, hover)\n\t$('#add').onClick(function() {\n\t\ttoggleForm();\n\t});\n\n\t$('#newTodo').onClick(function() {\n\t\tvar todo = {\n\t\t\ttitle: $('#title').get('value'), //Universal .get()\n\t\t\tdate: today,\n\t\t\tcontent: $('#content').get('value')\n\t\t};\n\n\t\ttoggleForm();\n\n\t\t$('#title, #content').set({'value': ''}); //Universal .set()\n\n\t\t//HTML() permite la &quot;compilaci\u00f3n&quot; de templates con objetos\n\t\t$('#todo-list').add(HTML(template, todo));\n\n\t\t//Manejador de eventos as\u00edncronos\n\t\t$('.octicon-x').onClick(closeTodoHandler);\n\t});\n\n\tfunction closeTodoHandler(e, index) {\n\t\tvar self = this; // Viejo truco ^^'\n\t\tthis.up('.todo')\n\t\t\t.animate({'$$fade': 1, '$$fade': 0}, 300) //Manejo de transiciones\n\t\t\t.then(function() { //Manejo de API Promises A+\n\t\t\t\tself.up('.todo').remove();\n\t\t\t});\n\t}\n\n});\n[/code]\n\nY la vista principal\n\n[code lang=\"html\" collapse=\"true\" title=\"Archivo: index.html\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;link rel=&quot;stylesheet&quot; href=&quot;skeletonCSS/css/skeleton.css&quot;&gt;\n\t&lt;link rel=&quot;stylesheet&quot; href=&quot;skeletonCSS/css/normalize.css&quot;&gt;\n\t&lt;link rel=&quot;stylesheet&quot; href=&quot;octicons/octicons.css&quot;&gt;\n\t&lt;title&gt;Lista de Tareas Minified&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n\n&lt;div class=&quot;container&quot;&gt;\n\n\n&lt;div class=&quot;row&quot;&gt;\n\n\n&lt;h2&gt;Lista de Tareas&lt;/h2&gt;\n\n\n\t\t\t&lt;button id=&quot;add&quot; class=&quot;button-primary&quot;&gt;A\u00f1adir Nueva Tarea&lt;/button&gt;\n\n\n&lt;hr&gt;\n\n\n\n\n&lt;div id=&quot;form&quot;&gt;\n\t\t\t\t&lt;!-- Formulario de nueva tarea --&gt;\n\t\t\t&lt;/div&gt;\n\n\n\n\n&lt;div id=&quot;todo-list&quot;&gt;\n\t\t\t\t&lt;!-- Lista de tareas --&gt;\n\t\t\t&lt;/div&gt;\n\n\n\t\t&lt;/div&gt;\n\n\n\t&lt;/div&gt;\n\n\n\t&lt;script src=&quot;minified.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;todoApp.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\nHasta una pr\u00f3xima peque\u00f1a oportunidad :)\n<p style=\"text-align:justify;\">Posdata: Todos estos archivos fuente <del>estar\u00e1n</del> est\u00e1n en mi <a href=\"https://github.com/ChinuxParibus/post-minified\" target=\"_blank\">Gato-Pulpo</a> ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "coco-mongo-xd", "javascript", "json", "nosql", "nuevo", "tecnologia", "tutorial"], "title": "ACERCA DE: MONGODB. PARTE 2. CRUD DE OPERACIONES", "date": "Tue, 27 Oct 2015 19:48:16 +0000", "content": "&lt; script src=\"my own\" title=\"crud de operaciones\" &gt;\n<p style=\"text-align:justify;\">En el <a href=\"https://jotaeseymas.wordpress.com/2015/09/21/acerca-de-mongodb-parte-1-instalacion-basica-y-shell-javascript/\" target=\"_blank\">post</a> anterior, se mostraron algunos comandos b\u00e1sicos de manejo en la shell; aquellos que tienen relaci\u00f3n con la parte <em>operacional</em> de la shell de MongoDB en Javascript. En este post voy a mostrar algunos comandos relacionados con programaci\u00f3n en MongoDB, es decir, lo que corresponde al CRUD de operaciones.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">CRUD es el acr\u00f3nimo de las cuatro operaciones b\u00e1sicas que debe permitir realizar todo sistema de almacenamiento respecto a la informaci\u00f3n que maneja:</p>\n\n<ol>\n\t<li style=\"text-align:justify;\"><strong>C</strong> por <em><strong>C</strong>reate</em> (crear y almacenar nueva informaci\u00f3n)</li>\n\t<li style=\"text-align:justify;\"><strong>R</strong> por <em><strong>R</strong>ead</em> (leer y obtener informaci\u00f3n almacenada)</li>\n\t<li style=\"text-align:justify;\"><strong>U</strong> por <em><strong>U</strong>pdate</em> (modificar informaci\u00f3n almacenada)</li>\n\t<li style=\"text-align:justify;\"><strong>D</strong> por <em><strong>D</strong>elete</em> (borrar informaci\u00f3n almacenada)</li>\n</ol>\n<p style=\"text-align:justify;\">MongoDB por medio de su shell de comandos permite realizar todas estas operaciones, y unas cuantas m\u00e1s que poseen otra sintaxis en el mundo SQL. Pero antes de probar la sintaxis, hay que tomar en cuenta algunos puntos importantes:</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">Tanto las bases de datos como las colecciones que permite crear MongoDB, existen o se crean cuando se inserta el primer documento en la colecci\u00f3n.</li>\n\t<li style=\"text-align:justify;\">Una base de datos debe \"usarse\" primero para ser borrada (algo realmente extra\u00f1o :?: , considerando que en SQL esto se realiza con la sentencia <code>DROP DATABASE &lt;database&gt;</code>).</li>\n\t<li style=\"text-align:justify;\">Por defecto, MongoDB se conecta a la base de datos \"test\", pero este comportamiento puede ser modificado desde la shell o desde el archivo de configuraci\u00f3n, no en caliente, aunque se puede cambiar la conexi\u00f3n una vez abierta la shell.</li>\n</ul>\nA continuaci\u00f3n la ejecuci\u00f3n de algunos comandos dentro de la shell (recuerda que abres la shell de MongoDB con el comando <code>mongo</code>) :mrgreen: :\n\n[code lang=\"bash\" collapse=\"true\" highlight=\"1,3,11,12,13,14,15,39,41,43,45\" title=\"CRUD de operaciones\"]\n&gt; show collections\nsystem.indexes\n&gt; db.test.insert({\n... numberField: 42,\n... stringField: &quot;Clave con string&quot;,\n... boolField: true,\n... arrayField: ['valores', 'compuestos', false, 10],\n... objectField: {n: 1, s: &quot;String&quot;, b: true, a: [1, 2, 3]}\n... });\nWriteResult({ &quot;nInserted&quot; : 1 })\n&gt; db.test.update({numberField: 42}, {$set: {newField: &quot;Campo nuevo&quot;}});\nWriteResult({ &quot;nMatched&quot; : 1, &quot;nUpserted&quot; : 0, &quot;nModified&quot; : 1 })\n&gt; db.test.find()\n{ &quot;_id&quot; : ObjectId(&quot;562f9d5e0d9d0cd53245d0f2&quot;), &quot;numberField&quot; : 42, &quot;stringField&quot; : &quot;Clave con string&quot;, &quot;boolField&quot; : true, &quot;arrayField&quot; : [ &quot;valores&quot;, &quot;compuestos&quot;, false, 10 ], &quot;objectField&quot; : { &quot;n&quot; : 1, &quot;s&quot; : &quot;String&quot;, &quot;b&quot; : true, &quot;a&quot; : [ 1, 2, 3 ] }, &quot;newField&quot; : &quot;Campo nuevo&quot; }\n&gt; db.test.find().pretty()\n{\n\t&quot;_id&quot; : ObjectId(&quot;562f9d5e0d9d0cd53245d0f2&quot;),\n\t&quot;numberField&quot; : 42,\n\t&quot;stringField&quot; : &quot;Clave con string&quot;,\n\t&quot;boolField&quot; : true,\n\t&quot;arrayField&quot; : [\n\t\t&quot;valores&quot;,\n\t\t&quot;compuestos&quot;,\n\t\tfalse,\n\t\t10\n\t],\n\t&quot;objectField&quot; : {\n\t\t&quot;n&quot; : 1,\n\t\t&quot;s&quot; : &quot;String&quot;,\n\t\t&quot;b&quot; : true,\n\t\t&quot;a&quot; : [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3\n\t\t]\n\t},\n\t&quot;newField&quot; : &quot;Campo nuevo&quot;\n}\n&gt; for ( var i = 0 ; i &lt; 100 ; i++ ) { db.test.insert({&quot;_id&quot;: i, &quot;a&quot;: i, &quot;b&quot;: &quot;cadena &quot;+i, &quot;c&quot;: Math.random() &gt; 0.5 ? true : false } ) }\nWriteResult({ &quot;nInserted&quot; : 1 })\n&gt; db.test.count()\n101\n&gt; db.test.find({&quot;_id&quot;: 21})\n{ &quot;_id&quot; : 21, &quot;a&quot; : 21, &quot;b&quot; : &quot;cadena 21&quot;, &quot;c&quot; : true }\n&gt; db.test.remove({numberField: 42});\nWriteResult({ &quot;nRemoved&quot; : 1 })\n&gt; db.test.count()\n100\n&gt;\n[/code]\n\n<ul>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 1, se listan las colecciones disponibles en la base de datos usada (en este caso, usamos la base de datos por defecto: \"test\"). <code>system.indexes</code> es una colecci\u00f3n que existe en todas las bases de datos una vez que tienen documentos insertados.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 3, insertamos un documento usando el m\u00e9todo <code><a href=\"https://docs.mongodb.org/manual/tutorial/insert-documents/\" target=\"_blank\">insert()</a></code> dentro de una colecci\u00f3n que no existe [a\u00fan]. N\u00f3tese que cuando dejo una sentencia incompleta, la shell de MongoDB me permite completarla o corregirla en la l\u00ednea siguiente.</li>\n\t<li style=\"text-align:justify;\">Los documentos se insertan con la sintaxis de Objetos JSON en todos los , y puedes combinar distintos valores seg\u00fan necesites. Igualmente para los par\u00e1metros de configuraci\u00f3n, y todos los par\u00e1metros de las funciones de la shell de MongoDB.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 11, con el m\u00e9todo <code><a href=\"https://docs.mongodb.org/manual/tutorial/modify-documents/\" target=\"_blank\">update()</a></code> podemos modificar <strong>UN</strong> documento que coincida con la selecci\u00f3n (primer par\u00e1metro). Si no a\u00f1adimos el operador <code><strong>$set</strong></code>, MongoDB har\u00e1 reemplazo completo seg\u00fan lo que se indique en la modificaci\u00f3n (segundo par\u00e1metro).</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 12, podemos ver la respuesta de la shell de comandos, indic\u00e1ndonos la cantidad de documentos insertados, modificados, eliminados o seleccionados seg\u00fan corresponda con el comando ejecutado.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 13, con el m\u00e9todo <code><a href=\"https://docs.mongodb.org/manual/tutorial/query-documents/\" target=\"_blank\">find()</a></code> podemos listar todos los documentos existentes en la colecci\u00f3n dentro de un l\u00edmite razonable de 20 documentos por p\u00e1gina, l\u00edmite que es configurable. De excederse el l\u00edmite, la shell de MongoDB habilita un <a href=\"https://docs.mongodb.org/manual/tutorial/iterate-a-cursor/\" target=\"_blank\">cursor</a>.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 14, la shell de comandos responde devolviendo los documentos que coincidan con el patr\u00f3n de b\u00fasqueda empleado, en un formato que, dependiendo de la longitud del documento, puede llegar a ser incomprensible :/ .</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 15, se resuelve el problema anterior, anexando el m\u00e9todo <code>pretty()</code> al cursor que retorna la consulta, y puede evidenciarse que se lee en un formato m\u00e1s legible cuando necesitas por ejemplo, revisar la integridad de un documento.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 39, se evidencia que pueden ejecutarse sentencias Javascript b\u00e1sicas para insertar, modificar u obtener documentos. Son permitidos los bucles y condicionales asi como tambi\u00e9n la gran mayor\u00eda de \"clases\" de Javascript ES5.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 41, el m\u00e9todo <code><a href=\"https://docs.mongodb.org/manual/reference/method/db.collection.count/\" target=\"_blank\">count()</a></code> permite obtener el n\u00famero de documentos almacenado en una colecci\u00f3n. En el caso de SQL, ser\u00eda algo como <code>SELECT COUNT(*) FROM &lt;table&gt;;</code></li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 43, igual que en la l\u00ednea 13, usa el m\u00e9todo <code>find()</code>, pero esta vez con un par\u00e1metro que es el de consulta. MongoDB realiza siempre la coincidencia parcial de uno o m\u00e1s documentos.</li>\n\t<li style=\"text-align:justify;\">En la l\u00ednea 45, el m\u00e9todo <a href=\"https://docs.mongodb.org/manual/tutorial/remove-documents/\" target=\"_blank\"><code>remove()</code></a> elimina los documentos que tengan coincidencia exacta con la selecci\u00f3n. Si se desea eliminar \u00fanicamente la primera coincidencia se debe especificar en la segunda opci\u00f3n, el n\u00famero de documentos que deseas eliminar.</li>\n</ul>\n\u00a1Uff, demasiada teor\u00eda! Pero que [espero sea] suficiente para los siguientes posts. ;)\n\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "curioscriptades", "datos", "free", "javascript", "json", "nosql", "tecnologia"], "title": "PLANETAS DEL UNIVERSO NOSQL. TAXONOM\u00cdA U ORIENTACIONES", "date": "Tue, 03 Nov 2015 21:33:42 +0000", "content": "&lt; script src=\"my own\" title=\"planetas del universo nosql\" &gt;\n<p style=\"text-align:justify;\">As\u00ed como en el sistema solar, en el sistema del cuerpo humano y hasta en el sistema nervioso hay todo un complejo e intrincado conjunto de elementos interactuantes, en el <a href=\"https://jotaeseymas.wordpress.com/2015/10/09/nuestro-insolito-universo-del-nosql/\" target=\"_blank\">Universo NoSQL</a> existe toda una categorizaci\u00f3n compleja para \u00bfclasificar? :/ las funcionalidades internas de los diferentes DBMS NoSQL existentes.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Las orientaciones NoSQL son diversas, tan amplias como las matem\u00e1ticas y la imaginaci\u00f3n humana. Para los efectos del presente post, solo voy a mencionar tres de \u00e9stas, pero existen muchas, muchas m\u00e1s:</p>\n\n<h2 style=\"text-align:justify;\">ORIENTADO A PARES CLAVE-VALOR</h2>\n<p style=\"text-align:justify;\">Un par clave-valor es simplemente la forma m\u00e1s sencilla de escalar una base de datos, y cuando me refiero a escalar, me refiero espec\u00edficamente a la capacidad de aumentar sostenidamente el almacenamiento, recolecci\u00f3n, peticiones, concurrencia y el manejo de transacciones en un per\u00edodo espec\u00edfico.</p>\n\n\n[caption id=\"attachment_845\" align=\"aligncenter\" width=\"298\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/josmetiquetas.png\"><img class=\" wp-image-845\" src=\"https://jotaeseymas.files.wordpress.com/2015/11/josmetiquetas.png?w=150\" alt=\"Pares valuados con claves referenciadas\" width=\"298\" height=\"145\" /></a> <strong>Pares valuados con claves referenciadas</strong>[/caption]\n<p style=\"text-align:justify;\">El ejemplo m\u00e1s claro de una base de datos orientada a pares clave-valor es <a href=\"http://redis.io/\" target=\"_blank\">Redis</a>, aunque existen otros como <a href=\"https://cassandra.apache.org/\" target=\"_blank\">Apache Cassandra</a> que implementa su API en C++ y Javascript.</p>\n\n<h2>ORIENTADO A DOCUMENTOS</h2>\n<p style=\"text-align:justify;\">Un \"documento\" contiene la informaci\u00f3n de forma <em>semiestructurada</em>, esto es, un objeto <a href=\"http://json.org/\" target=\"_blank\">JSON</a> o <a href=\"http://bsonspec.org/\" target=\"_blank\">BSON</a> (Binary JSON) con la complejidad que se requiera implementar de forma nativa para la aplicaci\u00f3n que se est\u00e9 desarrollando. Ordenando la informaci\u00f3n segun los tipos de datos b\u00e1sicos de la especificaci\u00f3n JSON o BSON que se est\u00e9 utilizando</p>\n\n\n[caption id=\"attachment_846\" align=\"aligncenter\" width=\"269\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png\"><img class=\" wp-image-846\" src=\"https://jotaeseymas.files.wordpress.com/2015/11/formatear-visualizacion-documento-json-en-chrome-y-firefox.png?w=147\" alt=\"Documento JSON t\u00edpico\" width=\"269\" height=\"274\" /></a> <strong>Documento JSON t\u00edpico</strong>[/caption]\n<p style=\"text-align:justify;\">El ejemplo m\u00e1s claro de una base de datos orientada a documentos es <a href=\"https://www.mongodb.org\" target=\"_blank\">MongoDB</a>, sin embargo existen otros manejadores derivados como <a href=\"http://couchdb.apache.org/\" target=\"_blank\">CouchDB</a> que implementa m\u00e9todos de su API de acceso a datos en Javascript directamente (como una API REST nativa).</p>\n\n<h2 style=\"text-align:justify;\">ORIENTADO A GRAFOS</h2>\n<p style=\"text-align:justify;\">La teor\u00eda de grafos viene del matem\u00e1tico Leonard Euler, que puedes consultar en este enlace. La idea es que la informaci\u00f3n sea almacenada en un nodo o v\u00e9rtice con propiedades internas, y que la relaci\u00f3n la exprese un grafo dirigido. Esta forma de almacenamiento permite establecer rutas y una comprensi\u00f3n m\u00e1s profunda de los datos.</p>\n\n\n[caption id=\"attachment_847\" align=\"aligncenter\" width=\"296\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/grafo2.png\"><img class=\" wp-image-847\" src=\"https://jotaeseymas.files.wordpress.com/2015/11/grafo2.png?w=150\" alt=\"Grafos t\u00edpicos \" width=\"296\" height=\"254\" /></a> <strong>Grafos t\u00edpicos</strong>[/caption]\n<p style=\"text-align:justify;\">Ejemplos de bases de datos orientadas a grafos son <a href=\"http://orientdb.com/orientdb/\" target=\"_blank\">OrientDB</a> y <a href=\"https://www.arangodb.com/\" target=\"_blank\">ArangoDB</a>. DBMS utilizados principalmente por cient\u00edficos de datos y algunas compa\u00f1\u00edas que trabajan con anal\u00edticas de datos. Estas \u00faltimas, no solamente comprenden el uso de grafos, sino tambi\u00e9n a documentos y clave-valor. La versatilidad de estas herramientas permite modelos m\u00e1s flexibles y resilientes de almacenamiento, t\u00edpico de los <a href=\"http://www.reactivemanifesto.org/es\" target=\"_blank\">sistemas reactivos</a> ;)</p>\n<p style=\"text-align:justify;\"><strong>Posdata</strong>: pendiente por publicar un post de profundizaci\u00f3n del manejo de ambas herramientas :twisted:</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 03 Nov 2015 20:57:53 +0000"}, {"tags": [], "date": "Tue, 03 Nov 2015 21:06:40 +0000"}, {"tags": [], "date": "Tue, 03 Nov 2015 21:23:26 +0000"}, {"tags": [], "date": "Sun, 29 Nov 2015 22:02:11 +0000"}, {"tags": ["algoritmos", "aprender", "datos", "expresiones-regulares", "formato", "free", "google", "html", "javascript", "json", "lenguaje-de-programacion", "mozilla-firefox", "mozilla-labs", "nodeameste", "nuevo", "proyectos", "tecnologia"], "title": "WEBSCRAPING CON SLIMER.JS. PARTE 1. WEBSCRAPING", "date": "Sun, 29 Nov 2015 23:34:33 +0000", "content": "&lt; script src=\"my own\" title=\"webscraping con slimer. parte 1. webscraping\" &gt;\n\nLa tierra tiembla, eso es un hecho... ^^'\n\nhttp://www.youtube.com/watch?v=Oc1_Lo4w78g\n<p style=\"text-align:justify;\">Pero m\u00e1s all\u00e1 de eso, me preocupa que en Venezuela haya temblado tan seguido y que la gente est\u00e9 tan \"tranquila\" :mrgreen:, es como para ponerse a pensar. Como yo pienso demasiado y muy seguido, me entr\u00f3 la curiosidad de curucutear una tecnolog\u00eda de la que habl\u00e9 hace bastante tiempo en este <a href=\"https://jotaeseymas.wordpress.com/2015/05/06/los-fantasmas-pelean-en-el-navegador-phantomjs-vs-slimerjs/\" target=\"_blank\">post</a>, se trata de <a href=\"http://slimerjs.org/\" target=\"_blank\">Slimer.js</a>, sin profundizar mucho en la documentaci\u00f3n, eso lo dejo a ustedes :-)</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Aprovechando la p\u00e1gina de <a href=\"http://www.funvisis.gob.ve\" target=\"_blank\">Funvisis</a> (Fundaci\u00f3n Venezolana de Investigaciones Sismol\u00f3gicas, valga la cu\u00f1a ;-) ), la cual tiene una informaci\u00f3n interesante sobre los sismos m\u00e1s recientes en mi bonito tricolor, y de la mano de Slimer.js, voy a hacerle un <a href=\"https://es.wikipedia.org/wiki/Web_scraping\" target=\"_blank\">webscraping</a> a la p\u00e1gina, y \"jugar\" ( :twisted: ) posteriormente con el JSON generado, hacer una API REST, persistirla en <a href=\"http://mongodb.org/\" target=\"_blank\">MongoDB</a>, y tal vez subirla a <a href=\"https://www.heroku.com/\" target=\"_blank\">Heroku</a>...</p>\n\n<h2 style=\"text-align:justify;\">Manos a la ubre...</h2>\n<p style=\"text-align:justify;\">Slimer.js es bastante completo, tiene [casi] todas las funcionalidades de su competidor <a href=\"http://phantomjs.org/\" target=\"_blank\">Phantom.js</a> (o es al rev\u00e9s la cosa :?: ), salvo que adolece de una buena documentaci\u00f3n :'( , pero por lo que puedo entender, la gran mayor\u00eda de las funciones escritas en Phantom.js, se ejecutan del mismo modo en Slimer.js. La secci\u00f3n de la p\u00e1gina sobre la cual vamos a trabajar es esta:</p>\n\n\n[caption id=\"attachment_857\" align=\"aligncenter\" width=\"263\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/funvisis.png\" rel=\"attachment wp-att-857\"><img class=\" wp-image-857\" src=\"https://jotaeseymas.files.wordpress.com/2015/11/funvisis.png?w=134\" alt=\"Lista de sismos m\u00e1s recientes\" width=\"263\" height=\"295\" /></a> <strong>Lista de sismos m\u00e1s recientes en Funvisis<br /></strong>[/caption]\n<p style=\"text-align:justify;\">Partiendo del hecho de que la informaci\u00f3n est\u00e1 estructurada adecuadamente, podemos recibir cada entrada as\u00ed:</p>\n\n\n[code lang=\"js\" title=\"Archivo: app.js\" collapse=\"true\"]\n/*Clase Javascript para registrar una entrada de sismo*/\nfunction Sismo(data_array) {\n\tthis.fecha = data_array[0]; \t\t// fecha\n\tthis.hora = data_array[1];\t\t\t// hora\n\tthis.latitud = data_array[2];\t\t// latitud\n\tthis.longitud = data_array[3];\t\t// longitud\n\tthis.profundidad = data_array[4];\t// profundidad\n\tthis.magnitud = data_array[5];\t\t// magnitud\n\tthis.localizacion = data_array[6];\t// localizacion\n};\n[/code]\n\n<p style=\"text-align:justify;\">Luego la parte pesada, usando Slimer.js. Para esto usamos el objeto <a href=\"http://docs.slimerjs.org/current/api/webpage.html\" target=\"_blank\"><code>webpage</code></a> que se encarga de simular el comportamiento de renderizado de una p\u00e1gina web como si fuera un navegador (recuerda que Slimer.js est\u00e1 basado en <a href=\"https://developer.mozilla.org/es/docs/Gecko\" target=\"_blank\">Gecko</a> y <a href=\"https://developer.mozilla.org/es/docs/XUL\" target=\"_blank\">XUL</a> :-) )</p>\n\n\n[code lang=\"js\" title=\"Archivo: app.js\" collapse=\"true\" highlight=\"1,2,7,9,12,26,30,31\"]\nvar page = require(&quot;webpage&quot;).create(); //Instancia &quot;webpage&quot; de Slimer\npage.settings = {\n\tjavascriptEnabled: false, //No cargar scripts de la p\u00e1gina\n\tloadImages: false,\t\t//No cargar im\u00e1genes de la p\u00e1gina\n\tplainTextAllContext: true //webpage.plainText es String en vez de DOM HTML\n};\npage.open(&quot;http://www.funvisis.gob.ve/sis_reciente.php&quot;).then(function(status) {\n\tif (status == &quot;success&quot;) {\n\t\tconsole.log(&quot;Datos de &quot;+ page.title);\n\t\tconsole.log(&quot;Actualizado al: &quot;+ new Date());\n\t\tconsole.log(&quot;&gt;=========================================================&lt;&quot;);\n\t\tvar data = page.plainText.match(/((.+\\t)+)/gm); //Array con la data a ser procesada\n\t\tvar index = 0;\n\t\t/*B\u00fasqueda: String donde inician los datos significativos*/\n\t\twhile(true) {\n\t\t\tif (/^\\d+\\/\\d+\\/\\d+/.test(data[index]) || index == data.length) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\tvar sismos = [];\n\t\t/*Iteraci\u00f3n: Transformamos el arreglo en un JSON v\u00e1lido*/\n\t\tfor (var i = index; i &lt; data.length; i++) {\n\t\t\tsismos.push(new Sismo(data[i].split('\\t')));\n\t\t}\n\t\tconsole.log(JSON.stringify(sismos));\n\t} else {\n\t\tconsole.log(&quot;Pagina no encontrada :\\( &quot;);\n\t}\n\tpage.close();\n\tslimer.exit();\n});\n[/code]\n\nNo hay misterio en el procesamiento de la data, no dir\u00e9 m\u00e1s 8-) <strong><span style=\"color:#7cbbbb;\">#nailedit</span></strong>...\n<p style=\"text-align:justify;\">En la l\u00ednea 1 se instancia el objeto <a href=\"http://docs.slimerjs.org/current/api/webpage.html\" target=\"_blank\"><code>webpage</code></a> de Slimer.js que como dije antes, sirve para simular el comportamiento de renderizado de una p\u00e1gina web, mientras que en la l\u00ednea 2, quitamos la obtenci\u00f3n de informaci\u00f3n irrelevante para nuestro caso. Ya en la l\u00ednea 6, empieza el juego XD .</p>\n<p style=\"text-align:justify;\">La l\u00ednea 12 es por sentido com\u00fan, ya que generalmente, las celdas de las filas en el contenido de las tablas en HTML5 cuando son instanciadas en formato de texto plano, Javascript las separa con un caract\u00e9r de tabulador, no as\u00ed con las celdas de la cabecera de la tabla :D , para m\u00e1s informaci\u00f3n sobre el uso de expresiones regulares vean estos <a href=\"https://jotaeseymas.wordpress.com/?s=expresiones+regulares\" target=\"_blank\">posts</a>.</p>\n<p style=\"text-align:justify;\">Luego de obtener la data que interesa, cerramos el cliente <a href=\"http://blog.arhg.net/2009/10/what-is-headless-browser.html\" target=\"_blank\"><em>headless-browser</em></a> y salimos del script en las pen\u00faltimas l\u00edneas.</p>\n\n<h2 style=\"text-align:justify;\">Se me olvidaba...</h2>\nLa instalaci\u00f3n de Slimer.js es trivial si tienes <a href=\"http://nodejs.org\" target=\"_blank\">Node.js</a> y cualquier sistema GNU/Linux (yo tengo Debian 8 Jessie):\n\n[code lang=\"bash\"]\n$ sudo npm -g install slimerjs\n[/code]\n\n<p style=\"text-align:justify;\">O como usuario <code>root</code> si no tienes permisos <code>sudo</code>. Igualmente la ejecuci\u00f3n del script es igualmente trivial:</p>\n\n\n[code lang=\"bash\"]\n$ slimerjs app.js\n[/code]\n\n[caption id=\"attachment_862\" align=\"aligncenter\" width=\"709\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/captura-de-pantalla-de-2015-11-29-185017.png\" rel=\"attachment wp-att-862\"><img class=\" wp-image-862\" src=\"https://jotaeseymas.files.wordpress.com/2015/11/captura-de-pantalla-de-2015-11-29-185017.png?w=150\" alt=\"Nada amigable, por ahora ^^'\" width=\"709\" height=\"137\" /></a> <strong>Nada amigable, por ahora ^^'</strong>[/caption]\n<p style=\"text-align:justify;\">Sumado a esto, y si la ejecuci\u00f3n es adecuada, te saldr\u00e1n dos ventanas, una con el logo de Slimer.js y otra con el \"renderizado\" de la p\u00e1gina seg\u00fan lo que hayas desarrollado en el script, pero puedes ignorarlas tranquilamente. Por el momento, solo tenemos un flujo <a href=\"http://json.org/\" target=\"_blank\">JSON</a> con toda la informaci\u00f3n de la tabla, luego sigo temblando, perd\u00f3n, pensando ;-)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Sun, 29 Nov 2015 22:38:32 +0000"}, {"tags": [], "date": "Sun, 29 Nov 2015 23:21:29 +0000"}, {"tags": ["y-sin-jquery", "aprender", "datos", "formato", "frontend", "html", "javascript", "javascripteando-ando", "json", "sin-jquery", "tecnologia", "zepto"], "title": "USO DE TEMPLATES HANDLEBARS CON ZEPTO. MITAD II. RUTAS, \"HELPERS\" Y \"PARTIALS\"", "date": "Mon, 30 Nov 2015 07:00:18 +0000", "content": "&lt; script src=\"my own\" title=\"uso de templates handlebars con zepto\"&gt;\n\n[caption id=\"attachment_777\" align=\"aligncenter\" width=\"238\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg\" rel=\"attachment wp-att-777\"><img class=\" wp-image-777\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/handlebars-behind-scenes-retina-preview.jpg?w=150\" alt=\"Bigotes con estilo!!!\" width=\"238\" height=\"238\" /></a> <strong>Bigotes con estilo!!!</strong>[/caption]\n<p style=\"text-align:justify;\">\u00bfUn post con bigotes al comienzo? Suena interesante\u2026 <span class=\"wp-smiley wp-emoji wp-emoji-mrgreen\" title=\":mrgreen:\">:mrgreen:</span></p>\n<p style=\"text-align:justify;\">En el <a href=\"https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/\" target=\"_blank\">post</a> anterior, habl\u00e9 de algunas de las caracter\u00edsticas m\u00e1s comunes de esta librer\u00eda para templates, a continuaci\u00f3n la segunda parte donde aplico otras caracter\u00edsticas m\u00e1s avanzadas.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n\n<h2 style=\"text-align:justify;\">CAMBIOS APLICADOS</h2>\n<p style=\"text-align:justify;\">He hecho varios cambios en la estructura inicial del proyecto respecto al post anterior para ilustrar las funcionalidades que vamos a discutir aqu\u00ed. Para empezar, separ\u00e9 el c\u00f3digo fuente en dos archivos: <code>index.html</code> que ser\u00e1 la base de nuestra app, mientras que <code>template-app.js</code> contiene el c\u00f3digo fuente de la generaci\u00f3n de la data y nuevas funcionalidades como ya podr\u00e1n detallar en el c\u00f3digo fuente m\u00e1s adelante:</p>\n\n\n[code lang=\"html\" title=\"Archivo: index.html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;link rel=&quot;stylesheet&quot; href=&quot;entireframework.min.css&quot;&gt;\n\t&lt;title&gt;Ejemplo Handlebars&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h1&gt;Lista de usuarios con Handlebars&lt;/h1&gt;\n\n\n&lt;div class=&quot;container&quot;&gt;\n\n&lt;div class=&quot;template&quot;&gt;&lt;/div&gt;\n\n\t&lt;/div&gt;\n\n\n\t&lt;!-- Templates e instancia de Javascript --&gt;\n\t&lt;script src=&quot;handlebars-v3.0.0.js&quot;&gt;&lt;/script&gt;\n\t&lt;script id=&quot;userlist&quot; type=&quot;text/x-handlebars-template&quot;&gt;\n\t\t{{#display userList cards=4}}\n\t\t\t{{&gt; card}}\n\t\t{{/display}}\n\t&lt;/script&gt;\n\t&lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;faker.min.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;template-app.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\nY el otro archivo:\n\n[code lang=\"js\" title=\"Archivo: template-app.js\" collapse=\"true\"]\n$(function(){\n\n\tHandlebars.registerPartial(&quot;fullName&quot;, &quot;{{lastName}}, {{firstName}}&quot;);\n\n\tHandlebars.registerPartial(&quot;card&quot;, &quot;\n&lt;div style=\\&quot;border: 1px solid {{#if enabled}}green{{else}}red{{/if}}; margin: 10px;\\&quot;&gt;\n&lt;h2&gt;{{&gt; fullName}}&lt;/h2&gt;\n\n&lt;strong&gt;{{address}}&lt;/strong&gt;\n\n&lt;em&gt;Tel\u00e9fono: {{phone}}&lt;/em&gt;\n&lt;hr&gt;\n\n{{#with company}}\n&lt;blockquote style=\\&quot;font-style: italic;\\&quot;&gt;&lt;strong&gt;{{job}}&lt;/strong&gt;\n{{motto}}\n&lt;/blockquote&gt;\n\n{{/with}}&lt;/div&gt;\n\n&quot;);\n\n\tHandlebars.registerHelper(&quot;display&quot;, function(list, options) {\n\t\tvar i = 0, j = 0, arr = [], sub = [],\n\t\t\t\tlen = options.hash['cards'], out = &quot;&quot;;\n\t\twhile (i &lt; list.length) {\n\t\t\twhile(j &lt; len) {\n\t\t\t\tsub.push(list[i]);\n\t\t\t\tj++; i++;\n\t\t\t};\n\t\t\tarr.push(sub); j = 0; sub = [];\n\t\t};\n\t\tfor (i = 0; i &lt; arr.length; i++) {\n\t\t\tout += &quot;\n&lt;div class=\\&quot;row\\&quot;&gt;&quot;;\n\t\t\tfor (j = 0; j &lt; len; j++) {\n\t\t\t\tout += &quot;\n&lt;div class=\\&quot;col c&quot;+arr.length+&quot;\\&quot;&gt;&quot; + options.fn(arr[i][j]) + &quot;&lt;/div&gt;\n\n&quot;;\n\t\t\t};\n\t\t\tout += &quot;&lt;/div&gt;\n\n&quot;;\n\t\t};\n\t\treturn out;\n\t});\n\n\t//espa\u00f1ol\n\tfaker.locale = 'es';\n\n\tvar listaUsuarios = []; //arreglo de usuarios;\n\n\tfor (var i = 0; i &lt; 12; i++) {\n\t\t//crea un \u00fanico usuario cada vez que se declara la variable\n\t\tvar usuario = {\n\t\t\tfirstName: faker.name.firstName(),\n\t\t\tlastName: faker.name.lastName(),\n\t\t\taddress: faker.address.streetAddress(),\n\t\t\tphone: faker.phone.phoneNumber(),\n\t\t\tcompany: {\n\t\t\t\tjob: faker.company.companyName(),\n\t\t\t\tmotto: faker.company.catchPhrase()\n\t\t\t},\n\t\t\tenabled: faker.random.number() ? true : false\n\t\t};\n\t\t//Se agrega al arreglo de usuarios\n\t\tlistaUsuarios.push(usuario);\n\t};\n\n\t//Se encapsula la lista\n\tvar lista = { userList: listaUsuarios };\n\n\t//se convierte de sem\u00e1ntica Handlebars a HTML plano\n\tvar source = $('#userlist').html(),\n\n\t//se precompila el template HTML para insertar datos\n\ttemplate = Handlebars.compile(source);\n\n\t//se insertan datos y se a\u00f1aden al cuerpo HTML\n\t$('.template').append(template(lista));\n});\n\n[/code]\n\n<p style=\"text-align:justify;\">Inclu\u00ed el framework <a href=\"http://mincss.com/\" target=\"_blank\">min.css</a> para darle formato a la fuente de la p\u00e1gina y tener un sistema de grillas sencillo que haga el trabajo, me gust\u00f3 bastante ese framework :D .</p>\n\n<h2 style=\"text-align:justify;\">RUTAS A OBJETOS ANIDADOS</h2>\n<p style=\"text-align:justify;\">Handlebars cuenta con la capacidad de inclu\u00edr objetos anidados complejos dentro del contexto de un template espec\u00edfico o de varios anidados. Pueden apreciar en el Javascript el uso del helper <code>{{#with}}</code>, el cual indica que un contexto de un atributo determinado, contiene un objeto anidado que puede ser aplicado para [casi] cualquier nivel de recursi\u00f3n, evitando colisiones entre los distintos espacios de nombres. ^^'</p>\n\n<h2 style=\"text-align:justify;\">REGISTRO DE \"HELPERS\"</h2>\n<p style=\"text-align:justify;\">Los helpers son las funciones que posee Handlebars para realizar iteraciones, anidar bloques y ejecutar condicionales, comienzan con un s\u00edmbolo (\"<code>#</code>\"). Sumado a las que Handlebars posee, se pueden registrar cualquier cantidad de helpers adicionales, que no son m\u00e1s que una l\u00f3gica Javascript de presentaci\u00f3n y adecuaci\u00f3n de un contexto dentro de un template. Para registrar helpers, se usa la funci\u00f3n <code>Handlebars.registerHelper()</code>, que acepta dos par\u00e1metros: un array con el o los objetos a ser mostrados y un objeto hash con algunas opciones de configuraci\u00f3n sobre el contexto. Puedes visitar la <a href=\"http://handlebarsjs.com/builtin_helpers.html\" target=\"_blank\">documentaci\u00f3n</a> para saber m\u00e1s sobre los helpers. ^^'</p>\n<p style=\"text-align:justify;\">Algo realmente agradable de los helpers es que son totalmente parametrizables. En el template del archivo <code>index.html</code>, pueden ver que aparte de iterar sobre la lista encapsulada, permite mediante el parametro <code>cards</code>, modificar el n\u00famero de cuadros que aparecen en la grilla, las posibilidades son infinitas con semejante poder.</p>\n\n<h2 style=\"text-align:justify;\">REGISTRO DE \"PARTIALS\" TEMPLATES</h2>\n<p style=\"text-align:justify;\">Un \"partial template\" es un template reusable en m\u00faltiples sitios de nuestra app, que incluso, puede tener cierta l\u00f3gica de presentaci\u00f3n, combinando o formateando uno o m\u00e1s atributos del contexto del template. Pueden ver en la l\u00ednea 3 del archivo template-app.js un ejemplo de esto, combinando ambos atributos y us\u00e1ndolos en otro template o partial template seg\u00fan se necesite. Los partial templates tienen la ventaja de que son anidables. Comienzan con un s\u00edgno <em>mayor que</em> (\"<code>&gt;</code>\"). En la l\u00ednea 5 del Javascript, vemos que el partial template registrado arriba se usa debajo sin ning\u00fana declaraci\u00f3n adicional, y a su vez, el partial template registrado debajo se usa en <code>index.html</code>.</p>\n\n<h2 style=\"text-align:justify;\">Y AHORA \u00bfQU\u00c9 TENEMOS?</h2>\nPara que se hagan una idea de lo que hicimos, vamos a ver algunas capturas configurando el par\u00e1metro <code>cards</code> con 2, 3 y 4 elementos por fila:\n\n[caption id=\"attachment_876\" align=\"aligncenter\" width=\"297\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/handlebars-2-por-fila.png\" rel=\"attachment wp-att-876\"><img class=\" wp-image-876\" src=\"https://jotaeseymas.files.wordpress.com/2015/11/handlebars-2-por-fila.png?w=138\" alt=\"Usando cards = 2 en index.html\" width=\"297\" height=\"323\" /></a> <strong>Usando cards = 2 en index.html</strong>[/caption]\n\n[caption id=\"attachment_877\" align=\"aligncenter\" width=\"290\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/handlebars-3-por-fila.png\" rel=\"attachment wp-att-877\"><img class=\"wp-image-877 \" src=\"https://jotaeseymas.files.wordpress.com/2015/11/handlebars-3-por-fila.png?w=150\" alt=\"handlebars-3-por-fila\" width=\"290\" height=\"236\" /></a> <strong>Usando cards = 3 en index.html</strong>[/caption]\n\n[caption id=\"attachment_878\" align=\"aligncenter\" width=\"286\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/11/handlebars-4-por-fila.png\" rel=\"attachment wp-att-878\"><img class=\"wp-image-878 \" src=\"https://jotaeseymas.files.wordpress.com/2015/11/handlebars-4-por-fila.png?w=150\" alt=\"handlebars-4-por-fila\" width=\"286\" height=\"207\" /></a> <strong>Usando cards = 4 en index.html</strong>[/caption]\n\nViendo un ejemplo sencillo como este, no me queda duda de que Handlebars tiene un buen bigote que vale la pena mover \u00a1Feliz bigote! ;)\n\n[caption id=\"attachment_784\" align=\"aligncenter\" width=\"329\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif\" rel=\"attachment wp-att-784\"><img class=\" wp-image-784\" src=\"https://jotaeseymas.files.wordpress.com/2015/08/mustache-fast.gif?w=150\" alt=\"XD XD XD\" width=\"329\" height=\"204\" /></a> XD XD XD[/caption]\n\n&lt;/script&gt;"}, {"tags": [], "date": "Mon, 30 Nov 2015 06:52:08 +0000"}, {"tags": [], "date": "Mon, 30 Nov 2015 06:52:23 +0000"}, {"tags": [], "date": "Mon, 30 Nov 2015 06:52:39 +0000"}, {"tags": ["algoritmos", "angularjs", "aprender", "base-de-datos", "datos", "formularios", "frontend", "html", "la-piedra-angular", "libreria-angular", "nosql", "proyectos", "tecnologia", "tutorial"], "title": "LIBRERIA ANGULAR. PARTE 4,5. PROVEYENDO E INTEGRANDO", "date": "Sat, 12 Dec 2015 04:29:04 +0000", "content": "&lt; script src=\"my own\" title=\"parte 4,5. proveyendo e integrando\" &gt;\n\nVayamos al grano... \u00a1PERDOOO\u00d3N :'( !\n\nhttps://www.youtube.com/watch?v=8eYHvrgPqQ0\n<p style=\"text-align:justify;\">Me he tardado demasiado con los posts, con el blog, y con muchas cosas en general, el a\u00f1o se va a acabar y no se respira aire navide\u00f1o (todav\u00eda :roll: ). Incre\u00edble que este a\u00f1o se haya ido volando, han pasado 5 meses desde que escrib\u00ed el \u00faltimo <a href=\"https://jotaeseymas.wordpress.com/2015/08/27/libreria-angular-parte-4-validando/\" target=\"_blank\">post</a> de la serie... Pero bueno, basta de <a href=\"http://www.wordreference.com/es/en/translation.asp?spen=ch%C3%A1chara\" target=\"_blank\">ch\u00e1charas</a> y a lo que vamos, que para eso estoy :mrgreen:</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">He hecho muchas modificaciones sobre el c\u00f3digo fuente, tantas que por poco y hago un nuevo proyecto en el <a href=\"https://github.com/ChinuxParibus/libreria-angular\" target=\"_blank\">Gato-Pulpo</a> con tantas modificaciones de fondo y algunas de forma. Son tantas modificaciones que no caben en un post, pero ya ustedes se dar\u00e1n cuenta viendo el repo jejeje ^^' . A manera de hacer el post suficientemente corto, empecemos de una vez con las modificaciones relevantes para este post, las dem\u00e1s ir\u00e1n saliendo paulatinamente.</p>\n\n<h2 style=\"text-align:justify;\">Antes de empezar</h2>\n<ul>\n\t<li style=\"text-align:justify;\">Actualic\u00e9 la versi\u00f3n de Angular.js a la 1.3.20 (la m\u00e1s reciente al momento de escribir este post), tambi\u00e9n el componente ngRoute (igual la 1.3.20).</li>\n\t<li style=\"text-align:justify;\">Actualic\u00e9 la versi\u00f3n de Dexie.js a la 1.2 (la m\u00e1s reciente al momento de escribir este post).</li>\n\t<li style=\"text-align:justify;\">Las modificaciones de estas versiones NO afectan lo que hemos visto en toda la serie.</li>\n</ul>\nUna vez dicho lo anterior, \u00a1hora de empezar!\n<h2>Proveyendo</h2>\n<p style=\"text-align:justify;\">El objeto <code><a href=\"https://code.angularjs.org/1.3.20/docs/api/auto/service/$provide\" target=\"_blank\">$provide</a></code> de Angular.js es el objeto m\u00e1s utilizado por todo el framework, ya que es la base (o un wrapper) para definir otros modulos que crean contenido, nuevos patrones de dise\u00f1o, entre otras funcionalidades. La siguiente tabla resume, en ingl\u00e9s, todo lo que se puede hacer con los <a href=\"https://code.angularjs.org/1.3.20/docs/guide/providers\" target=\"_blank\">providers</a>:</p>\n\n[caption id=\"attachment_883\" align=\"aligncenter\" width=\"477\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/angular-provide-resume.png\" rel=\"attachment wp-att-883\"><img class=\" wp-image-883\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/angular-provide-resume.png?w=150\" alt=\"\u00bfAlgunos les suenan conocidos?\" width=\"477\" height=\"124\" /></a> <strong>\u00bfAlgunos les suenan conocidos? XD [Cortes\u00eda de angularjs.org :roll: ]<br /></strong>[/caption]\n<p style=\"text-align:justify;\">Hay dos maneras de crear un <code>$provider</code>, la primera es la m\u00e1s f\u00e1cil: usando la sintaxis de angular (<code>$factory</code>, <code>$service</code>, <code>$value</code>, <code>$constant</code>), al respecto de las dos primeras, ya hablamos de ellas en <a href=\"https://jotaeseymas.wordpress.com/?s=libreria+angular\" target=\"_blank\">posts</a> anteriores a este tutorial, y respecto a las dos \u00faltimas, hay un <a href=\"http://ilikekillnerds.com/2014/11/constants-values-global-variables-in-angularjs-the-right-way/\" target=\"_blank\">art\u00edculo</a> muy interesante respecto a la forma \"correcta\" de usar y entender estos <em>providers</em>.</p>\n<p style=\"text-align:justify;\">Un <code>$valueProvider</code> (todos los <em>providers</em> terminan en la palabra \"Provider\", sean definidos expl\u00edcitamente o no) es un objeto que almacena un valor modificable de manera global, sin afectar directamente el <code>$rootScope</code>. Mientras que un <code>$constantProvider</code> es un objeto de s\u00f3lo lectura que tiene la misma caracter\u00edstica de estar disponible globalmente.</p>\n\n\n[code lang=\"js\" title=\"Archivo: app/config.js\" collapse=\"true\" firstline=\"2\" highlight=\"3,5\"]\n...\nlibreria.value('$msg', 'Agregado a la lista!'); //$valueProvider\n\nlibreria.constant('DB', new Dexie('libreria-angular')); //$constantProvider\n...\n[/code]\n\nLa segunda forma de definir un <em>provider</em>:\n\n[code lang=\"js\" title=\"Archivo: app/provider.js\" collapse=\"true\" firstline=\"3\" highlight=\"5,6\"]\n...\n//Provider de tablas para la estructura de la base de datos\nlibreria.provider('tablas', [function() { //$tablasProvider\n\tvar self = this; // cambio de scope, &quot;this&quot; ahora es local\n...\n[/code]\n\n<p style=\"text-align:justify;\">La l\u00ednea 6 es importante porque cada <em>provider</em> definido expl\u00edcitamente, debe sobreescribir el m\u00e9todo <code>$get</code> del objeto <code>$provide</code>, eso implica que dicho m\u00e9todo y todos los dem\u00e1s dentro del provider, van a cambiar de <code>$scope</code> sin que podamos advertirlo, a menos que hagamos la persistencia del <code>$scope</code> local de la funci\u00f3n dentro del m\u00e9todo. Sin profundizar mucho, ac\u00e1 la implementacion de dicho m\u00e9todo (est\u00e1 dentro de un objeto, por eso la sintaxis):</p>\n\n\n[code lang=\"js\" title=\"Archivo: app/provider.js\" collapse=\"true\" firstline=\"53\" highlight=\"55\"]\n...\n\t//M\u00e9todo proveedor que registra y revela los m\u00e9todos del provider\n\t$get: function() {\n\t\treturn {\n\t\t\tsetCollectionToMap: self.setCollectionToMap(key, name),\n\t\t\tgetCollectionFromMap: self.getCollectionFromMap(key),\n\t\t\tsetDataToMap: self.setDataToMap(key, data),\n\t\t\tgetDataFromMap: self.getDataToMap(key),\n\t\t\tgetMap: self.getMap()\n\t\t};\n\t}\n...\n[/code]\n\n<p style=\"text-align:justify;\">En una fase de configuraci\u00f3n, los <em>providers</em> son sumamente \u00fatiles, ya que pueden realizar m\u00e9todos antes de que incluso, otras instancias del mismo objeto sean utilizadas dentro de la aplicaci\u00f3n, dicho en otras palabras, podemos \"pre-arrancar\" la aplicaci\u00f3n y ejecutar otras funciones (como configurar una base de datos, una autenticaci\u00f3n, o sincronizar datos con API REST, por ejemplo) antes de iniciar realmente la aplicaci\u00f3n como tal. Puedes ver el archivo <a href=\"https://github.com/ChinuxParibus/libreria-angular/blob/master/app/config.js\" target=\"_blank\">config.js</a> y darte una idea de lo \u00fatil de los <em>providers</em>.</p>\n\n<h2>Controlando</h2>\n<p style=\"text-align:justify;\">Reescrib\u00ed los controladores para usar directamente el servicio <code>$crud</code> seg\u00fan corresponda. Antes estaba contra un array sin persistencia, ahora est\u00e1 persistida en la base de datos IndexedDB generada con Dexie.js. Adicionalmente, cre\u00e9 un nuevo controlador, que emite un aviso que indica una operaci\u00f3n satisfactoria, usando el <code>$valueProvider</code> creado en la fase de configuraci\u00f3n.</p>\n\n\n[code lang=\"js\" title=\"Archivo: app/controllers.js\" collapse=\"true\" firstline=\"70\"]\n...\nlibreria.controller('AvisoCtrl', ['$scope', '$msg', function ($scope, $msg) {\n\t$scope.mensaje = $msg;\n}]);\n...\n[/code]\n\n<h2>Enrutando</h2>\n<p style=\"text-align:justify;\">En vez de usar dos templates distintos para la lista de libros seleccionada (inicialmente y v\u00eda filtro de categor\u00edas), us\u00e9 el mismo template para ambas rutas, con la salvedad de que el filtro de b\u00fasqueda fuera aplicable a ambas de forma transparente.</p>\n\n\n[code lang=\"js\" title=\"Archivo: app/router.js\" collapse=\"true\" firstline=\"9\"]\n...\n\t.when('/categorias/:indice', {\n\t\ttemplateUrl: rootDir+'/libros.html',\n\t\tcontroller: 'LibrosCtrl'\n\t})\n...\n[/code]\n\n<h2>Fabricando</h2>\n<p style=\"text-align:justify;\">Los m\u00e9todos que realizaban operaciones contra el array de categor\u00edas y de libros fueron eliminados de sus respectivos <em>factories</em>, para dejar que los <em>controllers</em> hagan las operaciones de persistencia directa con la base de datos a trav\u00e9s del servicio <code>$crud</code> (del cual habl\u00e9 en un <a href=\"https://jotaeseymas.wordpress.com/2015/06/09/libreria-angular-parte-35-sirviendo/\" target=\"_blank\">post</a> anterior). No hay mucho m\u00e1s que decir ^^'</p>\n\n<h2 style=\"text-align:justify;\">Sirviendo</h2>\n<p style=\"text-align:justify;\">El archivo <a href=\"https://github.com/ChinuxParibus/libreria-angular/blob/master/app/service.js\" target=\"_blank\">service.js</a> es el que m\u00e1s modificaciones ha sufrido, empezando porque tuve que aprender a usar la API Q+ de Promises que tiene Angular.js (no es f\u00e1cil, pero es muy \u00fatil XD ), particularmente el llenado inicial de la base de datos es un c\u00f3digo bastante complejo si no conoces los conceptos que involucra la programaci\u00f3n as\u00edncrona y trabajar con <a href=\"https://jotaeseymas.wordpress.com/2015/03/07/promesas-promesas/\" target=\"_blank\">Promises en Javascript</a>:</p>\n\n\n[code lang=\"js\" title=\"Archivo: app/service.js\" collapse=\"true\" firstline=\"44\" highlight=\"51\"]\n...\n\t/* Llenar ambas tablas */\n\tvar P = [\n\t\tself.obtenerTodo('listaLibros'),    // [0]\n\t\tself.obtenerTodo('listaCategorias') // [1]\n\t];\n\n\t$q.all(P).then(function (data) {\n\t\tif (data[0].length == 0) { // LLenar tabla listaLibros\n\t\t\tself.llenar('listaLibros', libreria.listaLibros, libreria.Libro);\n\t\t}\n\t\tif (data[1].length == 0) { // Llenar tabla listaCategorias\n\t\t\tself.llenar('listaCategorias', catalogo.listaCategorias, catalogo.Categoria);\n\t\t}\n\t});\n...\n[/code]\n\n<p style=\"text-align:justify;\">Por mencionar un ejemplo: <code>$q.all()</code> recibe un array de Promises y las ejecuta al tiempo, para sumarlas en una \u00fanica Promise que contiene un hash de valores que retornan ambas Promises ( o_O )... En fin, puedes consultar la <a href=\"https://code.angularjs.org/1.3.20/docs/api/ng/service/$q\" target=\"_blank\">documentaci\u00f3n</a> si te parece enredado :P</p>\n\n<h2 style=\"text-align:justify;\">Integrando</h2>\n<p style=\"text-align:justify;\">\u00a1Uf, pero que largo ha quedado! Si has llegado hasta ac\u00e1, te felicito, he ac\u00e1 los resultados:</p>\n\n\n[caption id=\"attachment_894\" align=\"aligncenter\" width=\"512\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-libros.png\" rel=\"attachment wp-att-894\"><img class=\" wp-image-894\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-libros.png?w=150\" alt=\"Lista de libros tra\u00eddos desde la base de datos\" width=\"512\" height=\"372\" /></a> <strong>Lista de libros extra\u00eddos desde la base de datos IndexedDB<br /></strong>[/caption]\n\n[caption id=\"attachment_891\" align=\"aligncenter\" width=\"513\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-confirmacion.png\" rel=\"attachment wp-att-895\"><img class=\"wp-image-891\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-confirmacion.png?w=150\" alt=\"\" width=\"513\" height=\"171\" /></a> <strong>Obtenemos confirmaci\u00f3n al a\u00f1adir un nuevo libro con el m\u00e9todo addLibro()...</strong>[/caption]\n\n[caption id=\"attachment_895\" align=\"aligncenter\" width=\"513\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro.png\" rel=\"attachment wp-att-895\"><img class=\" wp-image-895\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro.png?w=150\" alt=\"Vemos la persistencia reflejada en la base de datos\" width=\"513\" height=\"260\" /></a> <strong>y vemos la persistencia reflejada en la base de datos!</strong>[/caption]\n\n[caption id=\"attachment_893\" align=\"aligncenter\" width=\"513\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-guardar-categoria.png\" rel=\"attachment wp-att-893\"><img class=\" wp-image-893\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-guardar-categoria.png?w=150\" alt=\"A\u00f1adimos nueva categor\u00eda...\" width=\"513\" height=\"171\" /></a> <strong>A\u00f1adimos nueva categor\u00eda...</strong>[/caption]\n\n[caption id=\"attachment_890\" align=\"aligncenter\" width=\"513\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-categorias.png\" rel=\"attachment wp-att-890\"><img class=\" wp-image-890\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-categorias.png?w=150\" alt=\"... y vemos el cambio reflejado ^^'\" width=\"513\" height=\"294\" /></a> <strong>... y nuevamente vemos el cambio reflejado</strong> ^^'[/caption]\n\n[caption id=\"attachment_896\" align=\"aligncenter\" width=\"513\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro-nueva-categoria.png\" rel=\"attachment wp-att-896\"><img class=\" wp-image-896\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-nuevo-libro-nueva-categoria.png?w=150\" alt=\"A\u00f1adimos un nuevo libro de la nueva categor\u00eda creada\" width=\"513\" height=\"171\" /></a> <strong>A\u00f1adimos un nuevo libro de la nueva categor\u00eda creada</strong>[/caption]\n\n[caption id=\"attachment_892\" align=\"aligncenter\" width=\"514\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-final.png\" rel=\"attachment wp-att-892\"><img class=\" wp-image-892\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/persistencia-final.png?w=150\" alt=\"Resultado final de las operaciones sobre la base de datos XD\" width=\"514\" height=\"185\" /></a> <strong>Resultado final de las operaciones sobre la base de datos XD</strong>[/caption]\n<p style=\"text-align:justify;\">Parece que con toda la informaci\u00f3n que he adquirido, quisiera extender el tutorial jejeje ^^' , pero por ahora, aplausos para m\u00ed que sumo +0,5 a la cuenta.</p>\n<p style=\"text-align:justify;\">Gracias por la espera y por la paciencia ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Sat, 12 Dec 2015 02:48:41 +0000"}, {"tags": [], "date": "Sat, 12 Dec 2015 04:06:53 +0000"}, {"tags": [], "date": "Sat, 12 Dec 2015 04:06:58 +0000"}, {"tags": [], "date": "Sat, 12 Dec 2015 04:07:05 +0000"}, {"tags": [], "date": "Sat, 12 Dec 2015 04:07:10 +0000"}, {"tags": [], "date": "Sat, 12 Dec 2015 04:07:18 +0000"}, {"tags": [], "date": "Sat, 12 Dec 2015 04:07:26 +0000"}, {"tags": [], "date": "Sat, 12 Dec 2015 04:07:33 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 08:14:38 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 08:14:43 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 08:14:46 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 08:14:49 +0000"}, {"tags": ["algoritmos", "aprender", "expresiones-regulares", "javascript", "lenguaje-de-programacion", "sin-jquery", "tecnologia", "vanilla-js"], "title": "JAVASCRIPT 101. FUNCIONES DE ORDEN SUPERIOR", "date": "Sun, 13 Dec 2015 09:19:53 +0000", "content": "&lt; script src=\"my own\" title=\"javascript 101. funciones de orden superior\" &gt;\n<p style=\"text-align:justify;\">En la teor\u00eda formal de funciones, aquellas que son de Orden Superior, son aquellas <a href=\"https://es.wikipedia.org/wiki/Funci%C3%B3n_de_orden_superior\" target=\"_blank\">funciones</a> que apuntan a un subconjunto de datos generado por otra(s) funcion(es), o cuyo origen es un subconjunto de datos de la misma naturaleza. Esto en <a href=\"https://es.wikipedia.org/wiki/Programaci%C3%B3n_funcional\" target=\"_blank\">programaci\u00f3n funcional</a> no es m\u00e1s que una funci\u00f3n que puede recibir otras funciones como par\u00e1metros o que puede retornar una funci\u00f3n. Esto es una caracter\u00edstica muy aprovechable en lenguajes de programaci\u00f3n funcionales como Javascript :roll: .</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Espero hayas estudiado bastante, es hora de un examen... Aqui tienes :twisted:</p>\n\n\n[caption id=\"attachment_902\" align=\"aligncenter\" width=\"514\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/parte-1-nosuperior.png\" rel=\"attachment wp-att-902\"><img class=\" wp-image-902\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/parte-1-nosuperior.png?w=150\" alt=\"Da como miedito... :(\" width=\"514\" height=\"120\" /></a> <strong>Da como miedito...</strong> :([/caption]\n<p style=\"text-align:justify;\">Y pues bueno, como estudiamos bastante Javascript ( :? ehm...), pero no tenemos ni idea de que va el rollo de las Funciones de Orden Superior, lo hacemos a la manera en que conocemos, la forma Vanilla JS XD :</p>\n\n\n[code lang=\"js\" collapse=\"true\" title=\"Usando Vanilla JS\"]\n/* Se obtiene la frase */\nvar frase = document.querySelector('#trabalenguas').innerHTML;\n\n/* Se separa la frase por espacios (signos de puntuaci\u00f3n inclu\u00eddos)*/\nvar arrayPalabras = frase.split(' ');\n\nconsole.time('Forma 1. Vanilla JS');\nvar aux = []; //Auxiliar para guardar las palabras sin signos de puntuaci\u00f3n\narrayPalabras.forEach(function(palabra) {\n\t/* Se eliminan los signos de puntuaci\u00f3n */\n\taux.push(palabra.replace(/(\\w+)[\\.,]?/i, '$1'));\n});\narrayPalabras = aux; // Array limpio\n\nvar arrayMayusculas = [];\narrayPalabras.forEach(function(palabra) {\n\t/* Cada palabra a may\u00fasculas */\n\tarrayMayusculas.push(palabra.toUpperCase());\n});\n\nconsole.log('Respuesta 1:', arrayMayusculas);\n\nvar contador = {}; //&quot;Mapa&quot; de palabras a contar\narrayPalabras.forEach(function(palabra) {\n\t/* Cada palabra a min\u00fasculas para facilitar conteo */\n\tpalabra = palabra.toLowerCase();\n\t/* notaci\u00f3n &quot;Array&quot; de &quot;Object&quot;. Validando que el atributo exista */\n\tif (typeof contador[palabra] !== 'undefined') {\n\t\tcontador[palabra]++; // conteo \u00fanico por atributo dentro del objeto\n\t} else {\n\t\tcontador[palabra] = 1; // se crea el atributo dentro del objeto\n\t}\n});\n\nconsole.log('Respuesta 2:', contador);\n\nvar arraySeleccion = [];\narrayPalabras.forEach(function(palabra) {\n\t/* true en palabras como &quot;Casa&quot; o &quot;casa&quot; */\n\tif (/^[Cc]/.test(palabra))\n\t\tarraySeleccion.push(palabra);\n});\n\narraySeleccion.sort(); // Se ordena el Array de forma ascendente\n\nvar i = 0;\nwhile(i &amp;lt; arraySeleccion.length){ // B\u00fasqueda lineal\n\t/* true si es id\u00e9ntica a siguiente posici\u00f3n */\n\tif(arraySeleccion[i] === arraySeleccion[i + 1])\n\t\tarraySeleccion.splice(i--, 1); // Se elimina posici\u00f3n anterior\n\ti++;\n}\n\nconsole.log('Respuesta 3:', arraySeleccion);\nconsole.timeEnd('Forma 1. Vanilla JS');\n[/code]\n\n<p style=\"text-align:justify;\">\u00a1Voil\u00e1! Un \"poco trivial\", \u00bfeh? ^^' Primero veamos los resultados y luego explico un poco de que va el post, claro:</p>\n\n\n[caption id=\"attachment_904\" align=\"aligncenter\" width=\"512\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-1.png\" rel=\"attachment wp-att-904\"><img class=\" wp-image-904\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-1.png?w=150\" alt=\"\u00bf6.26milisegundos? Nada mal \u00bfeh? :D\" width=\"512\" height=\"58\" /></a> <strong>\u00bf6.26 milisegundos? Nada mal \u00bfeh?</strong> :D[/caption]\n<p style=\"text-align:justify;\"><code>console.time()</code> es un objeto del navegador que sirve para hacer profiling b\u00e1sico (cuanto tiempo tarda tu c\u00f3digo en ejecutarse), para mas detalles puedes visitar este <a href=\"https://jotaeseymas.wordpress.com/2015/02/27/la-incomprendida-consola-de-javascript/\" target=\"_blank\">enlace</a>. Pero el meollo no es ese, sino explicar la ventaja de usar funciones de orden superior. La funci\u00f3n <a href=\"https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array/forEach\" target=\"_blank\"><code>forEach()</code></a> es un ejemplo claro de estas funciones: recibe una funci\u00f3n como par\u00e1metro que ser\u00e1 ejecutada por cada elemento existente dentro del Array, es decir, no se ejecutar\u00e1 sobre los valores <code><strong>null</strong></code>, <code><strong>NaN</strong></code>, cadenas vac\u00edas o <code><strong>undefined</strong></code>; nos queda de perlas para lo que queremos hacer y tiene un rendimiento decente si consideramos que son pocas l\u00edneas de c\u00f3digo, pero la cosa se complica. Ahora imag\u00ednate que la prueba cambia dr\u00e1sticamente:</p>\n\n\n[caption id=\"attachment_903\" align=\"aligncenter\" width=\"513\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/parte-2-superior.png\" rel=\"attachment wp-att-903\"><img class=\" wp-image-903\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/parte-2-superior.png?w=150\" alt=\"\u00bf\u00a1 perd\u00f3n !? o_O\" width=\"513\" height=\"123\" /></a> <strong>\u00bf\u00a1 perd\u00f3n !?</strong> o_O[/caption]\n<p style=\"text-align:justify;\">Afortunadamente, Javascript cuenta con muchas m\u00e1s funciones de orden superior que podemos usar. Mmm, digamos que ahora si estudiamos de verdad XD</p>\n\n\n[code lang=\"js\" collapse=\"true\" title=\"Usando funciones de orden superior\"]\n/* Se obtiene la frase */\nvar frase = document.querySelector('#trabalenguas').innerHTML;\n\n/* Se separa la frase por espacios (signos de puntuaci\u00f3n inclu\u00eddos)*/\nvar arrayPalabras = frase.split(' ');\n\nconsole.time('Forma 2. Funciones de orden superior');\n/* Array.map() ejecuta la funci\u00f3n dada como par\u00e1metro sobre cada elemento del Array.\n * Retorna: Un nuevo arreglo\n * Utilidad: Transformar los valores del arreglo en un nuevo formato\n */\narrayPalabras = arrayPalabras.map(function(palabra){\n\treturn palabra.replace(/(\\w+)[\\.,]?/i, '$1');\n});\n\nvar arrayMayusculas = arrayPalabras.map(function(palabra){\n\treturn palabra.toUpperCase();\n});\n\nconsole.log('Respuesta 1:', arrayMayusculas);\n\n/* Array.reduce() ejecuta la funci\u00f3n dada como par\u00e1metro sobre cada elemento del Array,\n * con la peculiaridad de que el valor se va acumulando de acuerdo con la definici\u00f3n de \n * la funci\u00f3n dada\n * Retorna: Una colecci\u00f3n con el(los) valor(es) acumulado(s) (Object o Array)\n * Utilidad: Transformaciones complejas sobre Arrays o totalizaci\u00f3n de valores\n */\nvar contador = arrayPalabras.reduce(function(contador, palabra){\n\tpalabra = palabra.toLowerCase();\n\tcontador[palabra] = (+contador[palabra] || 0) + 1;\n\treturn contador;\n}, {});\n\nconsole.log('Respuesta 2:', contador);\n\n/* Array.filter() ejecuta la funci\u00f3n dada como par\u00e1metro sobre cada elemento del Array.\n * Retorna: Un Array con los valores que resulten true de la evaluaci\u00f3n\n * Utilidad: Selecci\u00f3n de valores de un Array seg\u00fan una condici\u00f3n dada\n */\nvar arraySeleccion = arrayPalabras.filter(function(palabra) {\n\treturn /^[Cc]/.test(palabra);\n});\n\n/* Ejemplo de Array.reduce() que devuelve un Array */\narraySeleccion = arraySeleccion.reduce(function(arrayUnico, palabra) {\n\tif(arrayUnico.indexOf(palabra) === -1) {\n\t\tarrayUnico.push(palabra);\n\t}\n\treturn arrayUnico;\n}, []);\n\nconsole.log('Respuesta 3:', arraySeleccion);\nconsole.timeEnd('Forma 2. Funciones de orden superior');\n[/code]\n\n<p style=\"text-align:justify;\">Ya no es tan trivial como en el primer caso. La sintaxis es realmente compleja y un poco \"truculenta\" de entender si no entiendes los conceptos tras bastidores de la programaci\u00f3n funcional, pero siempre puedes visitar la documentaci\u00f3n de <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\" target=\"_blank\"><code>map()</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\" target=\"_blank\"><code>reduce()</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\" target=\"_blank\"><code>filter()</code></a>, o de otras funciones de las que dispones en Javascript.</p>\n<p style=\"text-align:justify;\">Aunque sea dif\u00edcil de entender al principio, tiene su recompensa :mrgreen:</p>\n\n\n[caption id=\"attachment_905\" align=\"aligncenter\" width=\"516\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-2.png\" rel=\"attachment wp-att-905\"><img class=\" wp-image-905\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/resultados-parte-2.png?w=150\" alt=\"\u00bf3.23 milisegundos? \u00a1Whoa! :o\" width=\"516\" height=\"55\" /></a> <strong>\u00bf3.63 milisegundos? \u00a1Whoa!</strong> :o[/caption]\n<h2>Conclusi\u00f3n</h2>\n<p style=\"text-align:justify;\">Usar o no usar funciones de orden superior... No es una cuesti\u00f3n trivial ni sencilla de resolver...</p>\n<p style=\"text-align:justify;\">Por un lado, usar Vanilla JS siempre es m\u00e1s simple y razonablemente comprensible para depuraciones futuras, sin embargo, m\u00e1s l\u00edneas de c\u00f3digo implican mayor consumo de memoria, reduciendo el rendimiento de tu aplicaci\u00f3n. Mientras que usando funciones de orden superior obtienes un rendimiento visiblemente mejorado, comparado con un procesamiento <em>trocho y mocho</em>, a expensas de dejar un c\u00f3digo un poco ofuscado para aquellos que no conocen aspectos b\u00e1sicos de programaci\u00f3n funcional, reduciendo la posibilidad de ser mantenible o depurable.</p>\n<p style=\"text-align:justify;\">\u00bfQu\u00e9 elegir\u00edas t\u00fa? ;)</p>\n&lt;/script&gt;"}, {"tags": ["base-de-datos", "daas", "datos", "ddd", "formato", "frontend", "javascript", "javascripteando-ando", "jexia", "json", "lenguaje-de-programacion", "nosql", "nuevo", "proyectos", "tecnologia"], "title": "API REST SIN UNA L\u00cdNEA DE C\u00d3DIGO... DEL LADO BACKEND!. PARTE 1. BACKEND", "date": "Sun, 13 Dec 2015 19:40:48 +0000", "content": "<p style=\"text-align:justify;\">&lt; script src=\"my own\" title=\"api rest sin una l&amp;iacute;nea de c&amp;oacute;digo\"&gt;</p>\n<p style=\"text-align:justify;\">Entender el estilo arquitect\u00f3nico <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer\" target=\"_blank\">REST</a> es retador, ya que requiere entender ampliamente (por ejemplo) la transmisi\u00f3n y recepci\u00f3n sin estados que maneja el protocolo (en este caso, HTTP) seleccionado. Tanto m\u00e1s retador es desarrollar una API REST enteramente Backend para interactuar con tu aplicaci\u00f3n Frontend (que casi siempre es la que requiere un poco m\u00e1s de atenci\u00f3n ^^' ).</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a href=\"http://www.jexia.com\" target=\"_blank\">JEXIA</a> es una empresa con un modelo de negocio realmente revolucionario. Usando tecnolog\u00edas libres como <a href=\"http://nodejs.org\" target=\"_blank\">Node.js</a>, <a href=\"http://mongodb.org/\" target=\"_blank\">MongoDB</a> y <a href=\"http://redis.io/\" target=\"_blank\">Redis</a>) y siendo una empresa holandesa con pocos d\u00edas de creada (Noviembre XD ), su lema es:</p>\n\n<blockquote>\n<p class=\"theme-title opacityRun\">\"Build <strong>REST</strong>ful <strong>API</strong>s without writing a single line of code\"</p>\n</blockquote>\n<p class=\"theme-title opacityRun\" style=\"text-align:justify;\">\u00a1Me pareci\u00f3 incre\u00edble para ser cierto! As\u00ed que decid\u00ed darle un vistazo, y francamente no me decepcion\u00f3. Apenas me registr\u00e9 el 1\u00b0 de Diciembre para recibir el acceso a la versi\u00f3n <em>beta</em> privada, y el 3 de Diciembre me lleg\u00f3 la clave p\u00fablica y la clave privada por email, junto con un <a href=\"http://docs.jexia.com/\" target=\"_blank\">enlace</a> p\u00fablico a un manual de instrucciones bien documentado.</p>\n<p class=\"theme-title opacityRun\" style=\"text-align:justify;\">Ya puedo vislumbrar las posibilidades... :twisted:</p>\n\n<ul>\n\t<li class=\"theme-title opacityRun\" style=\"text-align:justify;\">Aplicaciones m\u00f3viles con notificaciones en <em>tiempo real</em>.</li>\n\t<li class=\"theme-title opacityRun\" style=\"text-align:justify;\">Persistencia de eventos, logs, etc.</li>\n\t<li class=\"theme-title opacityRun\" style=\"text-align:justify;\">Aplicaciones de mensajer\u00eda tipo <a href=\"https://es.wikipedia.org/wiki/M2M\" target=\"_blank\">M2M</a>.</li>\n\t<li class=\"theme-title opacityRun\" style=\"text-align:justify;\">Plataformas <a href=\"https://en.wikipedia.org/wiki/Data_as_a_service\" target=\"_blank\">DaaS</a> (Big Data).</li>\n\t<li class=\"theme-title opacityRun\" style=\"text-align:justify;\">Aplicaciones <a href=\"https://en.wikipedia.org/wiki/Data-driven_programming\" target=\"_blank\">DDD</a>.</li>\n\t<li class=\"theme-title opacityRun\" style=\"text-align:justify;\">Encuestas :D</li>\n</ul>\n<p style=\"text-align:justify;\">Con respecto a la \u00faltima opci\u00f3n, pens\u00e9 en probar la conexi\u00f3n y la plataforma de <strong><span style=\"color:#fab700;\">JEXIA</span></strong> para hacer una aplicaci\u00f3n sencilla de encuesta sobre preferencias por g\u00e9neros musicales (que ver\u00e1n en una entrega posterior :mrgreen: ). Voy a mostrar los pasos para el registro y configuraci\u00f3n de tus apps:</p>\n\n\n[caption id=\"attachment_912\" align=\"aligncenter\" width=\"511\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/1-registro.png\" rel=\"attachment wp-att-912\"><img class=\" wp-image-912\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/1-registro.png?w=150\" alt=\"1. Registro\" width=\"511\" height=\"208\" /></a> <strong>1. Registro (102 aplicaciones registradas a la fecha de mi registro </strong>:o<strong> )<br /></strong>[/caption]\n\n[caption id=\"attachment_913\" align=\"aligncenter\" width=\"512\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/2-perfil.png\" rel=\"attachment wp-att-913\"><img class=\" wp-image-913\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/2-perfil.png?w=150\" alt=\"2. Modificaci\u00f3n del perfil\" width=\"512\" height=\"198\" /></a> <strong>2. Modificaci\u00f3n del perfil (l\u00e1stima que no haya foto, todav\u00eda :P )<br /></strong>[/caption]\n\n[caption id=\"attachment_914\" align=\"aligncenter\" width=\"512\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/4-1-crearapp.png\" rel=\"attachment wp-att-914\"><img class=\" wp-image-914\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/4-1-crearapp.png?w=150\" alt=\"3. Creamos una data app\" width=\"512\" height=\"174\" /></a> <strong>3. Creamos una data app</strong>[/caption]\n\n[caption id=\"attachment_915\" align=\"aligncenter\" width=\"511\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/4-2-claves-de-app.png\" rel=\"attachment wp-att-915\"><img class=\" wp-image-915\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/4-2-claves-de-app.png?w=150\" alt=\"5. La primera data-app activa las claves p\u00fablica y privada\" width=\"511\" height=\"208\" /></a> <strong>4. Una sola data-app activa las claves p\u00fablica y privada (dice \"secret\" por algo :P )<br /></strong>[/caption]\n<p style=\"text-align:justify;\">Cada <em>data-app</em> puede tener m\u00faltiples <em>data-sets</em>. En mi caso, registr\u00e9 dos <em>data-sets</em>: uno llamado <code>opciones</code> que contendr\u00e1 la lista de g\u00e9neros musicales, y otro llamado <code>resultados</code> que almacenar\u00e1 los resultados \"serializados\" (ehm... :? ) de cada votaci\u00f3n de la encuesta.</p>\n\n\n[caption id=\"attachment_916\" align=\"aligncenter\" width=\"511\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/5-1-campos-opciones.png\" rel=\"attachment wp-att-916\"><img class=\" wp-image-916\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/5-1-campos-opciones.png?w=150\" alt=\"5. Registramos un data-set y los campos que tendr\u00e1 cada objeto (en JSON)\" width=\"511\" height=\"235\" /></a> <strong>5. Se registran los data-set con los campos que tendr\u00e1 cada objeto (en JSON)...</strong>[/caption]\n\n[caption id=\"attachment_917\" align=\"aligncenter\" width=\"512\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/5-2-campos-resultados.png\" rel=\"attachment wp-att-917\"><img class=\" wp-image-917\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/5-2-campos-resultados.png?w=150\" alt=\"...donde podemos especificar los campos, tipos de datos...\" width=\"512\" height=\"215\" /></a> <strong>... adem\u00e1s se pueden especificar los tipos de datos...</strong>[/caption]\n\n[caption id=\"attachment_918\" align=\"aligncenter\" width=\"512\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/6-validaciones.png\" rel=\"attachment wp-att-918\"><img class=\" wp-image-918\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/6-validaciones.png?w=150\" alt=\"... y hasta \u00a1validaciones Javascript!\" width=\"512\" height=\"256\" /></a> <strong>... y hasta \u00a1validaciones Javascript!</strong>[/caption]\n<p style=\"text-align:justify;\">Una vez registrados los data-sets de tu aplicaci\u00f3n, <strong><span style=\"color:#fab700;\">JEXIA</span></strong> permite que cada data-set pueda ser manipulado via requests HTTP (GET, PUT o DELETE previa autenticaci\u00f3n con la llave p\u00fablica y la llave privada) o directamente desde la interfaz REST de cada data-set:</p>\n\n\n[caption id=\"attachment_919\" align=\"aligncenter\" width=\"513\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/7-manejo-de-rest.png\" rel=\"attachment wp-att-919\"><img class=\" wp-image-919\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/7-manejo-de-rest.png?w=150\" alt=\"7. Interfaz REST para testing y mocking de datos.\" width=\"513\" height=\"246\" /></a> <strong>6. Interfaz REST para testing y/o mocking de datos.</strong>[/caption]\n<p style=\"text-align:justify;\">Con dicha interfaz, podemos crear la data que queramos. Seg\u00fan la arquitectura REST bajo HTTP, el comando POST sirve para crear datos (<strong>C</strong>reate), GET para obtener datos (<strong>R</strong>ead), PUT para modificar datos (<strong>U</strong>pdate) y DELETE para eliminar datos (<strong>D</strong>elete), cumpli\u00e9ndose las especificaciones de una arquitectura RESTful: <strong>CRUD</strong> completo, atomicidad, sem\u00e1ntica y sin persistencia de estados.</p>\n\n\n[caption id=\"attachment_920\" align=\"aligncenter\" width=\"511\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/8-1-data-de-prueba-opciones.png\" rel=\"attachment wp-att-920\"><img class=\" wp-image-920\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/8-1-data-de-prueba-opciones.png?w=150\" alt=\"7. Lista de opciones (haciendo &quot;mocking&quot;)\" width=\"511\" height=\"354\" /></a> <strong>7. Lista de opciones (haciendo \"mocking\")</strong>[/caption]\n\n[caption id=\"attachment_921\" align=\"aligncenter\" width=\"512\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/8-2-data-de-prueba-resultados.png\" rel=\"attachment wp-att-921\"><img class=\" wp-image-921\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/8-2-data-de-prueba-resultados.png?w=150\" alt=\"8. Lista de resultados (algunos haciendo mocking, otros insertados desde el Frontend)\" width=\"512\" height=\"365\" /></a> <strong>8. Lista de resultados (algunos \"mocked up\", otros insertados desde el Frontend)</strong>[/caption]\n<p style=\"text-align:justify;\">Y \u00a1voil\u00e1! Tenemos nuestra API RESTful sin escribir una l\u00ednea de c\u00f3digo. En una pr\u00f3xima entrega, mostrar\u00e9 la aplicaci\u00f3n Frontend que interact\u00faa con la data-app.</p>\n<p style=\"text-align:justify;\">Mis felicitaciones a <strong><span style=\"color:#fab700;\">JEXIA</span></strong> por su excelente plataforma. Hasta entonces, \u00a1felices API RESTfuls! ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Sun, 13 Dec 2015 18:36:55 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 18:37:53 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 18:40:12 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 18:43:59 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 18:49:37 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 18:54:37 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 18:55:57 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 19:05:15 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 19:16:05 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 19:17:27 +0000"}, {"tags": [], "date": "Sun, 13 Dec 2015 19:43:42 +0000"}, {"tags": ["aprender", "curioscriptades", "datos", "es6", "google", "javascript", "jquery", "lenguaje-de-programacion", "post-format-link", "tdd", "zepto"], "title": "ENCUESTA SOBRE JAVASCRIPT", "date": "Sun, 13 Dec 2015 21:27:34 +0000", "content": "&lt; script src=\"other pages\" title=\"encuesta sobre javascript\" &gt;\n<p style=\"text-align:justify;\">Recientemente, los muchachos de <a href=\"https://ponyfoo.com/articles/javascript-developer-survey-results\" target=\"_blank\">Ponyfoo</a> publicaron los resultados de una encuesta donde las preguntas eran referentes a Javascript (uso de ES5 / ES6, frameworks, librer\u00edas, etc.). Leyendo la encuesta, puedo observar datos muy interesantes respecto a las preferencias de los desarrolladores, particularmente resalto los resultados sobre el uso de pruebas manuales / automatizadas (que no se ha extendido del todo :? ), la preferencia de <a href=\"https://lodash.com/\" target=\"_blank\">lodash</a> sobre <a href=\"http://jquery.com/\" target=\"_blank\">jQuery</a> 2.0 y la mejor (en mi opinion :mrgreen: ) es que los desarrolladores prefieren escribir c\u00f3digo Javascript sobre navegadores nuevos y actualizados. Interesante, \u00bfno? ;)</p>\n\n\n[caption id=\"attachment_282\" align=\"aligncenter\" width=\"511\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png\" rel=\"attachment wp-att-282\"><img class=\" wp-image-282\" src=\"https://jotaeseymas.files.wordpress.com/2015/04/ie-not-supported.png?w=150\" alt=\"juasjuasjuas...\" width=\"511\" height=\"252\" /></a> <strong>Librer\u00edas como <a href=\"http://zeptojs.com\" target=\"_blank\">Zepto.js</a> ya no dan soporte a navegadores viejos y anticuados... </strong>^^'<strong><br /></strong>[/caption]\n\n&lt;/script&gt;"}, {"tags": ["aprender", "base-de-datos", "datos", "formato", "free", "javascript", "jexia", "json", "lenguaje-de-programacion", "nodeameste", "nosql", "sql", "tecnologia"], "title": "ACERCA DE: ORM BOOKSHELF", "date": "Tue, 15 Dec 2015 07:20:43 +0000", "content": "&lt; script src=\"my own\" title=\"acerca de: orm bookshelf\"&gt;\n<p style=\"text-align:justify;\"><strong>Bookshelf</strong> quiere decir <em>librero</em> o <em>librer\u00eda</em> (bueno, no como la <a href=\"https://jotaeseymas.wordpress.com/2015/12/11/libreria-angular-parte-45-proveyendo-e-integrando/\" target=\"_blank\">Angular</a> :roll: ), mientras que <strong>ORM</strong> es el acr\u00f3nimo en ingl\u00e9s para <a href=\"https://en.wikipedia.org/wiki/Object-relational_mapping\" target=\"_blank\"><em>Object Relational Mapping</em></a>, que quiere decir (m\u00e1s o menos) \"Mapeo de Objetos Relacionales\" (\u00a1\u00a1que mal ingl\u00e9s!! :mrgreen: ).</p>\n<p style=\"text-align:justify;\">Que no, que el ingl\u00e9s se me da muy poco, y no, no es mi rollo... Pero Javascript si es mi rollo :P</p>\n<!--more-->\n<p style=\"text-align:justify;\"><a href=\"http://bookshelfjs.org/\" target=\"_blank\">Bookshelf.js</a> es un ORM para <a href=\"http://nodejs.org\" target=\"_blank\">Node.js</a>, que en el argot inform\u00e1tico, significa que relaciona objetos de una forma a otra y los \"mapea\" en memoria RAM. Para el caso particular de este ORM, transforma las filas de una tabla SQL de los <a href=\"http://www.webopedia.com/TERM/R/RDBMS.html\" target=\"_blank\">RDBMS</a> MySQL, SQLite 3 o <a href=\"http://www.postgresql.org/\" target=\"_blank\">PostgreSQL</a> en objetos <a href=\"http://json.org/\" target=\"_blank\">JSON</a>. Y te preguntar\u00e1s: \"aj\u00e1, pero la versi\u00f3n 9 de PostgreSQL puede transformar filas a JSON usando SQL, \u00bfpara qu\u00e9 necesito un ORM?\". \u00bfQuieres una raz\u00f3n?, te doy 5 XD :</p>\n\n<ol>\n\t<li style=\"text-align:justify;\">Un ORM no solo es un \"transformador\" de filas a objetos, tambi\u00e9n sirve para abstraer a lenguajes de programaci\u00f3n, el dialecto SQL.</li>\n\t<li style=\"text-align:justify;\">Puedes definir enteramente l\u00f3gicas de programaci\u00f3n y de recursividad que no podr\u00edas definir ni con el SQL m\u00e1s potente :D .</li>\n\t<li style=\"text-align:justify;\">Le restas carga a la base de datos principal, ya que solo necesitas una consulta y no varias (como el caso t\u00edpico de los JOINS con m\u00faltiples tablas).</li>\n\t<li style=\"text-align:justify;\">La administraci\u00f3n del cach\u00e9 de un ORM es envidiable, pudiendo realizar operaciones m\u00e1s r\u00e1pidas que con SQL convencional (como hacer un SELECT de varios millones de filas).</li>\n\t<li style=\"text-align:justify;\">Algunos ORM (como Bookshelf.js) son multiplataforma e independientes de la base de datos, por lo que se hace transparente el cambio de RDBMS para el c\u00f3digo fuente.</li>\n</ol>\n<p style=\"text-align:justify;\">Bookshelf.js est\u00e1 basado en <a href=\"http://knexjs.org/\" target=\"_blank\">knex.js</a> y en <a href=\"https://lodash.com/\" target=\"_blank\">lodash</a>, la primera es un constructor de consultas SQL que funciona para una importante cantidad de RDBMS, y la segunda... bueno, es una librer\u00eda que no necesita mucha <a href=\"https://jotaeseymas.wordpress.com/2015/06/13/manipulacion-de-datos-en-javascript/\" target=\"_blank\">presentaci\u00f3n</a> :) . Para ilustrar algunos usos de este ORM, he creado una base de datos en PostgreSQL usando los datos de estados, municipios, parroquias y ciudades de mi amado pa\u00eds Venezuela que encontr\u00e9 en esta <a href=\"https://github.com/joserafael/venezuela/blob/master/config/schema/venezuela.sql\" target=\"_blank\">p\u00e1gina</a>, muy completos y actualizados hasta la fecha.</p>\n<p style=\"text-align:justify;\">Para usar Bookshelf.js, lo instalamos junto con su dependencia principal (previa <a href=\"https://jotaeseymas.wordpress.com/2015/06/16/nodeameste/\" target=\"_blank\">instalaci\u00f3n</a> de Node.js), as\u00ed como el driver nativo de Node.js con el que trabajar\u00edamos:</p>\n\n\n[code lang=\"bash\" gutter=\"false\"]$ npm install bookshelf knex pg[/code]\n\n<p style=\"text-align:justify;\">Para MySQL el driver es <code><strong>mysql</strong></code>, para SQLite 3 es <code><strong>sqlite3</strong></code> y para MariaDB es <code><strong>mariasql</strong></code> ^^'</p>\n<p style=\"text-align:justify;\">Una vez instalando, \u00a1hora de picar c\u00f3digo! He aqu\u00ed algunas consultas ejemplo, pero pueden consultar la p\u00e1gina del ORM para una documentaci\u00f3n detallada y muchos m\u00e1s ejemplos.</p>\nCreamos el m\u00f3dulo de conexi\u00f3n a la base de datos:\n\n[code lang=\"js\" title=\"Archivo: config.js\" collapse=\"true\"]\nvar config = require('knex')({\n\tclient: 'pg', // PostgreSQL\n\tconnection: {\n\t\thost: '127.0.0.1', // colocar &quot;localhost&quot; no funciona\n\t\tuser: 'postgres',\n\t\tpassword: 'postgres', // NO hacer esto en casa ;)\n\t\tdatabase: 'venezuela',\n\t\tcharset: 'utf-8'\n\t}\n});\nmodule.exports = require('bookshelf')(config);\n[/code]\n\nLuego creamos los modelos (representaciones JSON de las tablas SQL):\n\n[code lang=\"js\" title=\"Archivo: models.js\" collapse=\"true\"]\nvar db = require('./config');\n\nvar Ciudades = db.Model.extend({\n\ttableName: 'ciudades',\n})\n\nvar Parroquias = db.Model.extend({\n\ttableName: 'parroquias',\n});\n\nvar Municipios = db.Model.extend({\n\ttableName: 'municipios',\n\tparroquias: function() {\n\t\treturn this.hasMany(Parroquias);\n\t}\n});\n\nvar Estados = db.Model.extend({\n\ttableName: 'estados',\n\tmunicipios: function() {\n\t\treturn this.hasMany(Municipios);\n\t},\n\tciudades: function() {\n\t\treturn this.hasMany(Ciudades);\n\t}\n});\n\nmodule.exports = {\n\t&quot;Ciudades&quot;: Ciudades,\n\t&quot;Parroquias&quot;: Parroquias,\n\t&quot;Municipios&quot;: Municipios,\n\t&quot;Estados&quot;: Estados\n}\n[/code]\n\nY finalmente, procedemos a los ejemplos :) :\n\n[code lang=\"js\" title=\"Archivo: queries.js\" collapse=\"true\"]\nvar models = require('./models');\n\nconsole.info('=====================================\\nInicializaci\u00f3n del m\u00f3dulo\\n');\n\nmodels.Estados.count().then(function (counter) {\n\tconsole.info('Encontrados',counter,'estados!');\n});\n\nmodels.Municipios.count().then(function (counter) {\n\tconsole.info('Encontrados',counter,'municipios!');\n});\n\nmodels.Parroquias.count().then(function (counter) {\n\tconsole.info('Encontrados',counter,'parroquias!');\n});\n\nmodels.Ciudades.count().then(function (counter) {\n\tconsole.info('Encontrados',counter,'ciudades!');\n});\n\n/* Todas las capitales de Venezuela ordenadas por Estado */\nmodels.Ciudades.where('es_capital', true).fetchAll().then(function (data) {\n\tvar rows = data.toJSON();\n\tconsole.info('\\n* * * Capitales de Venezuela ordenadas por Estado * * *\\n');\n\trows.forEach(function (ciudad) {\n\t\tmodels.Estados.where('id_estado', ciudad['estado_id']).fetch().then(function (data) {\n\t\t\tvar estado = data.toJSON();\n\t\t\tconsole.info('La capital del estado',estado['nombre_estado'],'es',ciudad['nombre_ciudad']);\n\t\t});\n\t});\n});\n\n/* Todos los municipios del Estado M\u00e9rida */\nmodels.Estados.where('nombre_estado', 'M\u00e9rida').fetch().then(function (data) {\n\tvar ref = data.toJSON();\n\tmodels.Municipios.where('estado_id', ref['id_estado']).fetchAll().then(function (data) {\n\t\tvar rows = data.toJSON();\n\t\tconsole.info('\\n* * * Municipios del Estado M\u00e9rida * * *\\n');\n\t\trows.forEach(function (municipio) {\n\t\t\tconsole.info('Municipio',municipio['nombre_municipio']);\n\t\t});\n\t});\n});\n\n/* Todas las parroquias de Distrito Capital */\nmodels.Estados.where('nombre_estado', 'Distrito Capital').fetch().then(function (data) {\n\tvar ref = data.toJSON();\n\tmodels.Municipios.where('estado_id', ref['id_estado']).fetch().then(function (data) {\n\t\tvar ref = data.toJSON();\n\t\tconsole.info('\\n* * * Parroquias del Distrito Capital * * *\\n');\n\t\tmodels.Parroquias.where('municipio_id', ref['id_municipio']).fetchAll().then(function (data) {\n\t\t\tvar rows = data.toJSON();\n\t\t\trows.forEach(function (parroquia) {\n\t\t\t\tconsole.info('Parroquia',parroquia['nombre_parroquia']);\n\t\t\t});\n\t\t});\n\t});\n});\n[/code]\n\n<p style=\"text-align:justify;\">Pueden consultar la documentaci\u00f3n del ORM para m\u00e1s detalles y para ejemplos de consultas m\u00e1s complejas. Luego ejecutamos la aplicaci\u00f3n en el entorno de Node usando el comando <code>node app.js</code>. He aqu\u00ed los resultados:</p>\n\n\n[code lang=\"bash\" collapse=\"true\" title=\"Resultados\"]\n=====================================\nInicializaci\u00f3n del m\u00f3dulo\n\nEncontrados 25 estados!\nEncontrados 335 municipios!\nEncontrados 498 ciudades!\nEncontrados 1138 parroquias!\n\n* * * Capitales de Venezuela ordenadas por Estado * * *\n\nLa capital del estado Amazonas es Puerto Ayacucho\nLa capital del estado Anzo\u00e1tegui es Barcelona\nLa capital del estado Apure es San Fernando de Apure\nLa capital del estado Aragua es Maracay\nLa capital del estado Barinas es Barinas\nLa capital del estado Bol\u00edvar es Ciudad Bol\u00edvar\nLa capital del estado Carabobo es Valencia\nLa capital del estado Cojedes es San Carlos\nLa capital del estado Delta Amacuro es Tucupita\nLa capital del estado Distrito Capital es Caracas\nLa capital del estado Falc\u00f3n es Coro\nLa capital del estado Gu\u00e1rico es San Juan de Los Morros\nLa capital del estado Lara es Barquisimeto\nLa capital del estado M\u00e9rida es M\u00e9rida\nLa capital del estado Miranda es Los Teques\nLa capital del estado Nueva Esparta es La Asunci\u00f3n\nLa capital del estado Portuguesa es Guanare\nLa capital del estado T\u00e1chira es San Cristobal\nLa capital del estado Monagas es Matur\u00edn\nLa capital del estado Trujillo es Trujillo\nLa capital del estado Sucre es Cuman\u00e1\nLa capital del estado Yaracuy es San Felipe\nLa capital del estado Zulia es Maracaibo\nLa capital del estado Vargas es La Guaira\n\n* * * Municipios del Estado M\u00e9rida * * *\n\nMunicipio Alberto Adriani\nMunicipio Andr\u00e9s Bello\nMunicipio Antonio Pinto Salinas\nMunicipio Aricagua\nMunicipio Arzobispo Chac\u00f3n\nMunicipio Campo El\u00edas\nMunicipio Caracciolo Parra Olmedo\nMunicipio Cardenal Quintero\nMunicipio Guaraque\nMunicipio Julio C\u00e9sar Salas\nMunicipio Justo Brice\u00f1o\nMunicipio Libertador\nMunicipio Miranda\nMunicipio Obispo Ramos de Lora\nMunicipio Padre Noguera\nMunicipio Pueblo Llano\nMunicipio Rangel\nMunicipio Rivas D\u00e1vila\nMunicipio Santos Marquina\nMunicipio Sucre\nMunicipio Tovar\nMunicipio Tulio Febres Cordero\nMunicipio Zea\n\n* * * Parroquias del Distrito Capital * * *\n\nParroquia Altagracia\nParroquia Ant\u00edmano\nParroquia Caricuao\nParroquia Catedral\nParroquia Coche\nParroquia El Junquito\nParroquia El Para\u00edso\nParroquia El Recreo\nParroquia El Valle\nParroquia La Candelaria\nParroquia La Pastora\nParroquia La Vega\nParroquia Macarao\nParroquia San Agust\u00edn\nParroquia San Bernardino\nParroquia San Jos\u00e9\nParroquia San Juan\nParroquia San Pedro\nParroquia Santa Rosal\u00eda\nParroquia Santa Teresa\nParroquia Sucre (Catia)\nParroquia 23 de enero\n[/code]\n\n<p style=\"text-align:justify;\">Obviamente, no todo es color de rosa, pues una significativa desventaja de este ORM es la complejidad a la que pueden llegar las consultas, y eso no es algo trivial. Sin embargo, sigue pareciendo una buena alternativa para tu app Node.js, \u00bfno crees? ;)</p>\n<p style=\"text-align:justify;\">P.D.: He realizado una peque\u00f1a aplicaci\u00f3n usando este ORM para subir los estados, municipios, parroquias y ciudades de Venezuela en una data-app en <a href=\"http://www.jexia.com\" target=\"_blank\">JEXIA</a> para un prototipo de app orientada a datos :twisted:</p>\n&lt;/script&gt;"}, {"tags": ["y-sin-jquery", "aprender", "formato", "free", "frontend", "html", "javascripteando-ando", "post-format-aside", "sin-jquery", "tecnologia"], "title": "ANIMACIONES CSS... SIN USAR CSS", "date": "Wed, 16 Dec 2015 17:57:44 +0000", "content": "&lt; script src=\"my own\" title=\"animaciones css sin usar css\"&gt;\n\nYo y mis t\u00edtulos \"controversiales\" :mrgreen:\n<p style=\"text-align:justify;\">En realidad no lo es tanto, ya que en HTML5 tenemos el tag <code><strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas\" target=\"_blank\">&lt;canvas&gt;</a></strong></code> que permite toda una gama de cosas que con la versi\u00f3n anterior de HTML no era posible, un ejemplo de ello son las animaciones gr\u00e1ficas sin usar CSS3. Ahora bien, mi punto ac\u00e1 no es discutir respecto a si es la mejor forma de realizar animaciones, solo probar que es posible usando solo Javascript.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Para hacer esto a\u00fan m\u00e1s sencillo, tenemos la librer\u00eda <a href=\"https://visionmedia.github.io/move.js/#\" target=\"_blank\">Move.js</a> la cual se encarga de realizar por nosotros lo que har\u00edamos con CSS3 convencional, o bien usando <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes\" target=\"_blank\">@keyframes</a>, o bien usando <a href=\"http://sass-lang.com/\" target=\"_blank\">SASS</a> u otro pre-procesador de CSS3. El uso de la librer\u00eda es bastante sencillo, usando un patr\u00f3n <a href=\"https://es.wikipedia.org/wiki/Interfaz_fluida\" target=\"_blank\">fluent</a>, concatena funciones para realizar la animaci\u00f3n. En este caso, vamos a crear un \"page loader\" que rote en la pantalla.</p>\n\n\n[caption id=\"attachment_944\" align=\"aligncenter\" width=\"148\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/loader.png\" rel=\"attachment wp-att-944\"><img class=\"wp-image-944 size-full\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/loader.png\" alt=\"Un loader sencillo\" width=\"148\" height=\"136\" /></a> <strong>Un loader sencillo </strong>^^'[/caption]\n<p style=\"text-align:justify;\">Usando Move.js solo tenemos que escribir unas pocas l\u00edneas, mientras que con @keyframes ..., pues la historia es otra. Ac\u00e1 pueden ver los resultados y darse una idea de lo que estoy diciendo XD .</p>\nhttp://codepen.io/ChinuxParibus/pen/KVVbvL\n\nDescomenten el CSS y comenten el JS, o jueguen como quieran :D\n<p style=\"text-align:justify;\">Tal vez, la desventaja m\u00e1s notoria de Move.js es no permitir animaciones \"infinitas\", muy \u00fatil para este tipo de casos en los que necesitamos realizar una animaci\u00f3n c\u00edclica, pero para animaciones m\u00e1s complejas, el CSS puro, se vuelve claramente una desventaja por si solo.</p>\n<p style=\"text-align:justify;\">\u00a1A moverse! ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Wed, 16 Dec 2015 17:31:14 +0000"}, {"tags": [], "date": "Tue, 29 Dec 2015 01:05:01 +0000"}, {"tags": [], "date": "Tue, 29 Dec 2015 01:05:11 +0000"}, {"tags": [], "date": "Tue, 29 Dec 2015 01:05:16 +0000"}, {"tags": ["y-sin-jquery", "base-de-datos", "daas", "datos", "ddd", "frontend", "javascript", "javascripteando-ando", "jexia", "json", "lenguaje-de-programacion", "nosql", "nuevo", "proyectos", "tecnologia"], "title": "API REST SIN UNA L\u00cdNEA DE C\u00d3DIGO\u2026 DEL LADO BACKEND!. PARTE 2. FRONTEND", "date": "Tue, 29 Dec 2015 01:24:22 +0000", "content": "&lt; script src=\u201dmy own\u201d title=\u201dapi rest sin una l&amp;iacute;nea de c&amp;oacute;digo\u201d&gt;\n<p style=\"text-align:justify;\">Entender el estilo arquitect\u00f3nico <a href=\"https://en.wikipedia.org/wiki/Representational_state_transfer\" target=\"_blank\">REST</a> es retador, ya que requiere entender ampliamente (por ejemplo) la transmisi\u00f3n y recepci\u00f3n sin estados que maneja el protocolo (en este caso, HTTP) seleccionado. Tanto m\u00e1s retador es desarrollar una API REST enteramente Backend para interactuar con tu aplicaci\u00f3n Frontend (que casi siempre es la que requiere un poco m\u00e1s de atenci\u00f3n <span class=\"wp-smiley wp-emoji wp-emoji-blush\" title=\"^^\u2019\">^^\u2019</span> ).</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">En este caso, vamos a prestarle m\u00e1s atenci\u00f3n a la aplicaci\u00f3n Frontend realizada para el ejemplo del <a href=\"https://jotaeseymas.wordpress.com/2015/12/13/api-rest-sin-una-linea-de-codigo-del-lado-backend-parte-1-backend/\" target=\"_blank\">post</a> anterior a esta serie, en en cual creamos una data-app con <a href=\"http://www.jexia.com\" target=\"_blank\"><span style=\"color:#fab700;\"><strong>JEXIA</strong></span></a>. Para esta aplicaci\u00f3n, us\u00e9 <a href=\"http://minifiedjs.com/\" target=\"_blank\">Minified.js</a>, y <a href=\"http://mincss.com/\" target=\"_blank\">min.css</a>, dos herramientas que est\u00e1n que ni pintadas para hacer <a href=\"https://jotaeseymas.wordpress.com/2015/04/29/jugar-con-javascript-pero-sin-javascript/\" target=\"_blank\">mockups</a> y otras cosillas<span style=\"color:#7cbbbb;\"> <strong>#porai</strong></span>. \u00a1Manos a la ubre!</p>\n<p style=\"text-align:justify;\">El c\u00f3digo de la interfaz es sencillo:</p>\n\n\n[code lang=\"html\" title=\"Archivo: index.html\" collapse=\"true\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;link rel=&quot;stylesheet&quot; href=&quot;entireframework.min.css&quot;&gt;\n\t&lt;title&gt;Ejemplo con Minified&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div&gt;&lt;span id=&quot;notificacion&quot;&gt;&lt;/span&gt;&lt;/div&gt;\n\n\n&lt;div class=&quot;container&quot;&gt;\n\n&lt;h2&gt;\u00bfCu\u00e1les son tus gustos musicales?&lt;/h2&gt;\n\n\n&lt;div id=&quot;lista&quot;&gt;&lt;/div&gt;\n\n\t\t&lt;button id=&quot;seleccionar&quot; class=&quot;btn btn-b btn-sm&quot;&gt;&lt;i&gt;\u2713&lt;/i&gt; Listo!&lt;/button&gt;\n\t\t&lt;button id=&quot;calcular&quot; class=&quot;btn btn-b btn-sm&quot;&gt;&lt;i&gt;\u25f4&lt;/i&gt; Ver resultados&lt;/button&gt;\n\t&lt;/div&gt;\n\n\n&lt;div id=&quot;form&quot; class=&quot;container&quot;&gt;\n\t\t&lt;input type=&quot;text&quot; name=&quot;nombre&quot; id=&quot;nombre&quot; placeholder=&quot;Ingrese su nombre&quot;&gt;&amp;nbsp;&lt;button class=&quot;btn btn-b btn-sm&quot; id=&quot;procesar&quot;&gt;&lt;i&gt;\u2713&lt;/i&gt;Procesar!&lt;/button&gt;\n\t&lt;/div&gt;\n\n\n&lt;div class=&quot;container&quot; id=&quot;result&quot;&gt;&lt;/div&gt;\n\n\t&lt;script src=&quot;minified.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;api.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">El c\u00f3digo Javascript que procesa la informaci\u00f3n haciendo peticiones a la API REST es un poco m\u00e1s complejo:</p>\n\n\n[code lang=\"js\" title=\"Archivo: api.js\" collapse=\"true\"]\nvar MINI = require('minified');\n\nvar $ = MINI.$, $$ = MINI.$$, HTML = MINI.HTML;\n\nvar auth = {\n\tkey: 'd0847280b3734ffb15b496caf2839a8a',\n\tsecret: '*secret key*'\n}\nvar baseUrl = 'http://4a2d78b0-9ddf-11e5-a58a-89db67e6a459.app.jexia.com';\n\n$(function() {\n\t$('#nombre').set('value', '');\n\n\tvar toggleForm = $('#form').toggle(\n\t\t{'$$slide': 0},\n\t\t{'$$slide': 1},\n\t\t500\n\t);\n\n\tvar toggleAlert = $('#notificacion').toggle(\n\t\t{'$$fade': 0},\n\t\t{'$$fade': 1},\n\t\t500\n\t);\n\n\tvar toggleResult = $('#result').toggle(\n\t\t{'$$fade': 0},\n\t\t{'$$fade': 1},\n\t\t500\n\t);\n\n\tfunction notificar(objMensaje) {\n\t\t$('#notificacion').ht(errorTm, objMensaje);\n\t\ttoggleAlert(); setTimeout(toggleAlert, 3000);\n\t};\n\n\tfunction reiniciarFormulario(lista, elegidos) {\n\t\ttoggleForm();\n\t\t$('#nombre').set('value', '');\n\t\tlista.each(function (item, index){\n\t\t\titem.disabled = false;\n\t\t\titem.checked = false;\n\t\t});\n\t\telegidos = [];\n\t};\n\n\tvar opcionesTm = '\n&lt;div class=&quot;row&quot;&gt;{{each}}\n&lt;div class=&quot;col c2&quot;&gt;&lt;input type=&quot;checkbox&quot; id=&quot;{{this.opcion}}&quot; value=&quot;{{this.opcion}}&quot; {{if !this.habilitada}}disabled=&quot;true&quot;{{/if}}&gt;&lt;label for=&quot;{{this.opcion}}&quot;&gt;&amp;nbsp;{{this.texto}}&lt;/label&gt;&lt;/div&gt;\n\n{{/each}}&lt;/div&gt;\n\n';\n\n\tvar errorTm = '\n&lt;div class=&quot;msg {{type}}&quot;&gt;{{msg}}&lt;/div&gt;\n\n';\n\n\tvar resultTm = '{{var total = datos.Pop + datos.Rock + datos.Clasica + datos.Jazz;}}\n&lt;h2&gt;Total: {{total}} voto{{if total &gt; 1 || total == 0}}s{{/if}}&lt;/h2&gt;\n&lt;div class=&quot;row&quot;&gt;{{each clave, valor: datos}}{{var w = (valor * 100)/total;}}\n&lt;div class=&quot;col c3&quot;&gt;\n&lt;div&gt;{{clave}}: {{valor}} voto{{if valor &gt; 1 || valor == 0}}s{{/if}} / {{w::#.00}}%&lt;/div&gt;\n&lt;div style=&quot;width: {{w::#.00}}%; background-color: green;&quot;&gt;&amp;nbsp;&lt;/div&gt;\n&lt;/div&gt;\n\n{{/each}}&lt;/div&gt;\n\n';\n\n\tvar settings, opciones = [], key = '-';\n\t$.request('POST', baseUrl, auth).then(function(text) {\n\t\t\tvar data = $.parseJSON(text);\n\t\t\tsettings = { headers: { 'Authorization': 'Bearer ' + data.token } };\n\t\t\treturn $.request('GET', baseUrl + '/opciones', null, settings);\n\t\t}\n\t).then(function (text) {\n\t\t\tvar data = $.parseJSON(text);\n\t\t\t$('#lista').add(HTML(opcionesTm, data));\n\t\t\tvar elegidos = [], lista = $('input[type=checkbox]');\n\n\t\t\t$('#seleccionar').onClick(function() {\n\t\t\t\tlista.each(function (item, index) {\n\t\t\t\t\tif (item.checked) elegidos.push(item.value);\n\t\t\t\t});\n\t\t\t\tif (elegidos.length === 0) {\n\t\t\t\t\tnotificar({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tmsg: 'Seleccione al menos una opcion'\n\t\t\t\t\t});\n\t\t\t\t}\telse {\n\t\t\t\t\tlista.each(function (item, index){\n\t\t\t\t\t\titem.disabled = true;\n\t\t\t\t\t});\n\t\t\t\t\ttoggleForm();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#procesar').onClick(function (){\n\t\t\t\tvar nombre = $('#nombre').get('value');\n\t\t\t\tif(nombre) {\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tnombre: nombre,\n\t\t\t\t\t\telegidos: elegidos.join(key)\n\t\t\t\t\t};\n\t\t\t\t\t$.request('POST', baseUrl + '/resultados', data, settings)\n\t\t\t\t\t.then(function (text){\n\t\t\t\t\t\tnotificar({\n\t\t\t\t\t\t\ttype: 'done',\n\t\t\t\t\t\t\tmsg: 'Sus datos han sido procesados exitosamente! \u263a'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTimeout(reiniciarFormulario(lista, elegidos), 1500);\n\t\t\t\t\t}).error(function (code, text){\n\t\t\t\t\t\tvar data = $.parseJSON(text);\n\t\t\t\t\t\tnotificar({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tmsg: 'Error ' + code + ': ' + data.summary\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t$('#nombre').set('+error');\n\t\t\t\t\tnotificar({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tmsg: 'El nombre es requerido para el registro'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#calcular').onClick(function () {\n\t\t\t\ttoggleResult();\n\t\t\t\t$.request('GET', baseUrl + '/resultados', null, settings)\n\t\t\t\t.then(function (text) {\n\t\t\t\t\tvar data = $.parseJSON(text);\n\t\t\t\t\tvar graphData = [];\n\t\t\t\t\t$(data).each(function (item, index){\n\t\t\t\t\t\tgraphData.push(item.elegidos.split(key));\n\t\t\t\t\t});\n\t\t\t\t\tgraphData = $(graphData).array().reduce(function(count, elem){\n\t\t\t\t\t\telem = elem === '1' ? 'Pop' :\telem === '2' ? 'Rock' :\telem === '3' ? 'Clasica' : 'Jazz';\n      \t\t\t\tcount[elem] = (+count[elem] || 0) + 1; return count;\n\t\t\t\t\t}, {});\n\t\t\t\t\t$('#result').ht(resultTm, {datos: graphData});\n\t\t\t\t})\n\t\t\t\t.error(function (code, text) {\n\t\t\t\t\tvar data = $.parseJSON(text);\n\t\t\t\t\tnotificar({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\tmsg: 'Error ' + code + ': ' + data.summary\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t)\n\t.error(\n\t\tfunction(code, text){\n\t\t\tvar data = $.parseJSON(text);\n\t\t\tnotificar({\n\t\t\t\ttype: 'error',\n\t\t\t\tmsg: 'Error ' + code + ': ' + data.message\n\t\t\t});\n\t\t}\n\t);\n});\n[/code]\n\nVeamos los resultados en el navegador:\n\n[caption id=\"attachment_953\" align=\"aligncenter\" width=\"525\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/9-1-app-minified-encuesta.png\" rel=\"attachment wp-att-953\"><img class=\"wp-image-953\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/9-1-app-minified-encuesta.png?w=150\" alt=\"9.1-app-minified-encuesta\" width=\"525\" height=\"175\" /></a> <strong>Se cargan los resultados de la primera data-app creada (musica)</strong>[/caption]\n\n[caption id=\"attachment_954\" align=\"aligncenter\" width=\"525\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/9-2-notificacion.png\" rel=\"attachment wp-att-954\"><img class=\"wp-image-954\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/9-2-notificacion.png?w=150\" alt=\"9.2-notificacion\" width=\"525\" height=\"175\" /></a> <strong>Validaci\u00f3n en caso de no marcar ninguna opci\u00f3n </strong>^^'[/caption]\n\n[caption id=\"attachment_955\" align=\"aligncenter\" width=\"525\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/9-3-valida-la-seleccion.png\" rel=\"attachment wp-att-955\"><img class=\"wp-image-955\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/9-3-valida-la-seleccion.png?w=150\" alt=\"9.3-valida-la-seleccion\" width=\"525\" height=\"175\" /></a> <strong>Seleccionamos algunas opciones e ingresamos un nombre (\u00a1important\u00edsimo! </strong>:roll:<strong> )</strong>[/caption]\n\n[caption id=\"attachment_956\" align=\"aligncenter\" width=\"525\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/9-4-notificacion-con-error.png\" rel=\"attachment wp-att-956\"><img class=\"wp-image-956\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/9-4-notificacion-con-error.png?w=150\" alt=\"9.4-notificacion-con-error\" width=\"525\" height=\"175\" /></a> <strong>Validamos nuevamente que el nombre sea el correcto y que adem\u00e1s no est\u00e9 vac\u00edo</strong> :D[/caption]\n\n[caption id=\"attachment_957\" align=\"aligncenter\" width=\"525\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/9-5-procesamiento-via-post.png\" rel=\"attachment wp-att-957\"><img class=\"wp-image-957\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/9-5-procesamiento-via-post.png?w=150\" alt=\"9.5-procesamiento-via-POST\" width=\"525\" height=\"175\" /></a> <strong>Se almacenan los resultados en <span style=\"color:#fab700;\">JEXIA</span> via POST</strong>[/caption]\n\n[caption id=\"attachment_958\" align=\"aligncenter\" width=\"525\"]<a href=\"https://jotaeseymas.files.wordpress.com/2015/12/9-6-request-a-resultados-y-template.png\" rel=\"attachment wp-att-958\"><img class=\"wp-image-958\" src=\"https://jotaeseymas.files.wordpress.com/2015/12/9-6-request-a-resultados-y-template.png?w=150\" alt=\"9.6-REQUEST-a-resultados-y-template\" width=\"525\" height=\"175\" /></a> <strong>Gracias a los templates de Minified.js, podemos ver los resultados din\u00e1micamente, totalizando los datos guardados en la API REST </strong>:D<strong><br /></strong>[/caption]\n<p style=\"text-align:justify;\">\u00bfVerdad que no fue tan dif\u00edcil? Sabiendo que es posible, ahora podemos usar esta grandiosa app para lo que se nos ocurra, aprovechando las capacidades de su beta privada...</p>\n\u00a1Felices API RESTfuls! ;)\n\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 29 Dec 2015 01:05:22 +0000"}, {"tags": [], "date": "Tue, 29 Dec 2015 01:05:27 +0000"}, {"tags": [], "date": "Tue, 29 Dec 2015 01:05:32 +0000"}, {"tags": ["base-de-datos", "ddd", "frontend", "html", "javascript", "javier-garzas", "jexia", "lenguaje-de-programacion", "libreria-angular", "post-format-link", "sin-categoria"], "title": "\u00a1FELIZ A\u00d1O NUEVO!", "date": "Thu, 07 Jan 2016 02:36:01 +0000", "content": "&lt; script src=\"my own\" title=\"feliz a&amp;ntilde;o nuevo\" &gt;\n<h2 style=\"text-align:center;\">FELIZ A\u00d1O NUEVO queridos lectores y lectoras ^^'</h2>\n<p style=\"text-align:justify;\">Darles las gracias no es suficiente. Este peque\u00f1o proyecto que naci\u00f3 de las ganas de convertir <em><a href=\"https://es.wikipedia.org/wiki/A_Series_of_Unfortunate_Events\" target=\"_blank\">una\u00a0serie de eventos desafortunados</a></em> (Copyleft Lemony Snicket ;) ) en algo positivo, se ha\u00a0vuelto para m\u00ed prioritario conservar, en especial cuando ves los\u00a0<a href=\"https://jotaeseymas.wordpress.com/2015/annual-report/\" target=\"_blank\">n\u00fameros</a>. Si, esas cifras bonitas que representan cantidades y nos sirven a los <em>programadores</em> (no se si deba llamarme as\u00ed... :roll: ) para usar en el c\u00f3digo fuente...</p>\n<p style=\"text-align:justify;\">NO, definitivamente agradecer no es suficiente, les debo muchos posts, mucho trabajo (si el otro de verdad me lo permite :mrgreen: ) que m\u00e1s o menos se resumen as\u00ed, sin ning\u00fan orden en particular...</p>\n\n<ul>\n\t<li style=\"text-align:justify;\">Can.js es una librer\u00eda que me interesa mucho probar, ya que tiene un comportamiento similar a lo que har\u00edas con directivas personalizadas en Angular.js, pero con mucha m\u00e1s sem\u00e1ntica.</li>\n\t<li style=\"text-align:justify;\">Gulp: nunca\u00a0he trabajado con un automatizador de tareas,\u00a0<del>puede que sea</del> es un excelente momento para aprender :D</li>\n\t<li style=\"text-align:justify;\">A\u00fan me falta por estudiar una librer\u00eda de la gente de Typicode, y algunos posts de la serie Librer\u00eda Angular XD</li>\n\t<li style=\"text-align:justify;\">Mucho m\u00e1s frontend con Polymer, Famo.us, Lumx y Kendo UI</li>\n\t<li style=\"text-align:justify;\">Completar la serie acerca de\u00a0TDD</li>\n\t<li style=\"text-align:justify;\">Comprender el complejo mundo de la programaci\u00f3n orientada a datos usando d3.js, Highcharts, y tal vez, Canvas jijiji ^^' ...</li>\n\t<li style=\"text-align:justify;\">\u00a1Backbone.js no se me puede escapar! :)</li>\n\t<li style=\"text-align:justify;\">Probar lo m\u00e1s \"reciente\"\u00a0de Google en bases de datos del Navegador: Lovefield...</li>\n\t<li style=\"text-align:justify;\">Mas Node.js: Browserify, SASS, require, integraci\u00f3n con MongoDB y alguna otra locura :roll:</li>\n\t<li style=\"text-align:justify;\">Si a\u00fan no me han cancelado la beta privada de <strong>JEXIA</strong>, escribir m\u00e1s aplicaciones posibles para esa plataforma :twisted:</li>\n</ul>\nHay trabajo por hacer en este 2016, pero gracias a su motivaci\u00f3n por inspirarme...\n\n\u00a1A trabajar! ;)\n\n&lt;/script&gt;"}, {"tags": ["aprender", "curioscriptades", "free", "html", "javascript", "lenguaje-de-programacion", "mozilla-firefox", "nuevo", "post-format-link", "tecnologia", "tutorial"], "title": "LOS SUPERHEROES DE JAVASCRIPT", "date": "Mon, 11 Jan 2016 19:01:46 +0000", "content": "&lt; script src=\"other pages\" title=\"los superheroes de javascript\"&gt;\n\n<section class=\"init one invert\">\n<div class=\"inner\">\n<h2>Superhero.js</h2>\n<p style=\"text-align:justify;\">Crear, probar y mantener una aplicaci\u00f3n Javascript de proporciones enormes en c\u00f3digo fuente, no es para nada sencillo, especialmente cuando tienes a disposici\u00f3n toda una amplia gama de recursos en internet para escoger. Pero lejos de ser una ventaja, tener tanta informaci\u00f3n es tan cr\u00edtico como saber buscarla, y en el amplio mar de informaci\u00f3n que es Internet, es muy dif\u00edcil. Esta <a href=\"http://superherojs.com/\" target=\"_blank\">p\u00e1gina</a>, es una colecci\u00f3n de los mejores recursos multimedia (art\u00edculos, videos y presentaciones) que la comunidad global de desarrolladores Javascript ha encontrado y organizado de forma agradable, y a tu disposici\u00f3n.</p>\n\n</div>\n</section>&lt;/script&gt;"}, {"tags": ["aprender", "consejo", "curioscriptades", "ensenar", "frontend", "html", "javascript", "lenguaje-de-programacion", "maestro", "post-format-status", "proyectos", "tutorial"], "title": "A MANERA DE DISCULPA. O DE COMO NO DEBE SER UN POST...", "date": "Tue, 26 Jul 2016 19:51:53 +0000", "content": "&lt; script src=\"my own\" title=\"a manera de disculpa\" &gt;\n<p style=\"text-align:justify;\">Porque no todo lo que brilla es oro...</p>\n<p style=\"text-align:justify;\"><!--more-->Siempre he intentado, en la medida de lo posible, ser simple en cuanto a la generaci\u00f3n de contenidos en mi blog, porque las personas que a diario consultan las entradas lo est\u00e1n esperando y as\u00ed lo he asumido. La prueba de esto es que a pesar de que en 2 meses no he publicado absolutamente nada desde el post acerca de Knockout.js, las visitas contin\u00faan aumentando progresivamente (cosa que les agradezco profundamente :D ).</p>\n<p style=\"text-align:justify;\">Sin embargo, revisando un poco los contenidos de mi blog, encuentro que aquel que tiene la cantidad m\u00e1s baja de visitas es precisamente el \u00faltimo post que escrib\u00ed...\n\n</p>\n\n\n[caption id=\"attachment_982\" align=\"aligncenter\" width=\"611\"]<a href=\"https://jotaeseymas.files.wordpress.com/2016/07/captura-de-pantalla-de-2016-07-26-152550.png\"><img class=\" wp-image-982\" src=\"https://jotaeseymas.files.wordpress.com/2016/07/captura-de-pantalla-de-2016-07-26-152550.png?w=150\" alt=\"Esto... desmotiva un poco :(\" width=\"611\" height=\"171\" /></a> <strong>Esto... desmotiva un poco :(</strong>[/caption]\n\nRevisando un poco m\u00e1s al detalle, me encuentro con varios errores (y razones) por las cuales un post que <del>considero</del> consideraba completo tiene tan pocas visitas, por enumerar algunas:\n<ol>\n \t<li style=\"text-align:justify;\"><strong>Contenido prolongado:</strong> Seamos honestos a [casi] nadie le gusta hacer scroll en un post super largo que no dice mucho de lo que se est\u00e1 haciendo, solo bromear y exprimir el cerebro de quien lee.</li>\n \t<li style=\"text-align:justify;\"><strong>Poca documentaci\u00f3n del c\u00f3digo: </strong>Mi culpa, dividir una librer\u00eda que sirve para tantas cosas, aunque no es justificaci\u00f3n, es m\u00e1s que un error, denota una falta de sentido com\u00fan.</li>\n \t<li style=\"text-align:justify;\"><strong>Nula justificaci\u00f3n t\u00e9cnica del prop\u00f3sito de la librer\u00eda:</strong> No lo hice, o no hice la tarea como deber\u00eda ser, pudiendo asumir que investigu\u00e9 adecuadamente, no inclu\u00ed aquellas caracter\u00edsticas que hacen genial la librer\u00eda.</li>\n \t<li style=\"text-align:justify;\"><strong>Miedo a parecer ignorante:</strong> Lo admito, parecer ignorante o que no se de lo que estoy escribiendo es uno de mis peores temores, sin embargo, eso no justifica que tengas que \"aparentar\" que sabes.</li>\n</ol>\n<p style=\"text-align:justify;\">Por lo dem\u00e1s, creo que es justo eliminar la entrada, y cuando tenga un tiempo m\u00e1s de uso con la librer\u00eda (y un poco m\u00e1s de tiempo para m\u00ed, ya saben, el laburo y eso :/ ), hacer lo que considero justo con vosotros, realizar una [\u00f3 varias] entrada(s) simple(s) acerca de la librer\u00eda, de su arquitectura, de justificar la frase de que ninguna librer\u00eda es la Panacea de la tecnolog\u00eda que va a resolver todos los problemas.</p>\n<p style=\"text-align:justify;\">Perd\u00f3n por la demora en la generaci\u00f3n de contenidos, agradezco mucho sus visitas ;)</p>\n<p style=\"text-align:justify;\">Muchas ideas en la cabeza y poco tiempo para ejecutarlas...</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 26 Jul 2016 19:30:32 +0000"}, {"tags": ["algoritmos", "aprender", "curioscriptades", "datos", "formato", "free", "javascript", "lenguaje-de-programacion", "nuevo", "post-format-link", "vanilla-js"], "title": "UN JUEGO EN EL QUE NO TODO ES TAN F\u00c1CIL COMO PARECE", "date": "Sat, 06 Aug 2016 15:59:28 +0000", "content": "&lt; script src=\"other pages\" title=\"un juego en el que no todo es tan facil como parece &gt;\n<p style=\"text-align:justify;\">Los \"juegos de rol de c\u00f3digo\" (por llamarlos de alguna manera) han proliferado bastante ultimamente, tanto para m\u00f3viles como para web. Desde <a href=\"http://www.hackedapp.com/\">HackedApp</a>, el primer juego de c\u00f3digo del mundo, hasta juegos algo m\u00e1s elaborados como los que mostr\u00e9 hace alg\u00fan tiempo <a href=\"https://jotaeseymas.wordpress.com/2015/05/21/donde-jugar-con-javascript/\">aqu\u00ed</a>, han demostrado ser adictivos incluso para aquellos curiosos que quieren aprender a programar en Javascript. Sin embargo, hay juegos m\u00e1s adictivos que otros...</p>\n<p style=\"text-align:justify;\"><!--more--></p>\nPregunto: \u00bfson ideas m\u00edas o este <a href=\"https://alf.nu/ReturnTrue\">juego</a> es extremadamente adictivo?... 8-)\n\n<span style=\"color:#d25349;\"><strong>ADVERTENCIA: No todo es tan f\u00e1cil como parece, al menos a simple vista :twisted:</strong> </span>\n\n\u00a1Divi\u00e9rtanse! ;)\n\n&lt;/script&gt;"}, {"tags": ["aprender", "datos", "formato", "free", "frontend", "html", "javascript", "javascripteando-ando", "json", "lenguaje-de-programacion", "sin-jquery", "tecnologia", "validacion"], "title": "DEJA TUS APLICACIONES EN LA LONA. PARTE 1. GENERALIDADES", "date": "Sat, 06 Aug 2016 23:34:45 +0000", "content": "&lt; script src=\"my own\" title=\"parte 1. generalidades\" &gt;\n\nLuego de la tormenta, viene la calma, o eso dicen <strong><span style=\"color:#7cbbbb;\">#porai</span></strong>...\n<p style=\"text-align:justify;\">Luego de una <a href=\"https://jotaeseymas.wordpress.com/2016/07/26/a-manera-de-disculpa-o-de-como-no-debe-ser-un-post/\">disculpa</a> m\u00e1s que merecida a vosotros que consultan este humilde blog, debo relatar (como debe ser ^^' ) mi historia de amor y dolor con una librer\u00eda que aunque pudiera parecer complicada, es un tanto m\u00e1s sencilla de usar de lo que parece y muy \u00fatil.</p>\nhttp://www.youtube.com/watch?v=-uaqsuvIew8\n\n<!--more-->\n\nSe trata pues de <a href=\"http://knockoutjs.com/\">Knockout.js</a> XD .\n<p style=\"text-align:justify;\">Knockout es una librer\u00eda que pretende ser una limpia y extensible base para construir interfaces de usuario con interacciones sofisticadas sin perderse en muchas l\u00edneas de c\u00f3digo dedicadas a manejadores de eventos y actualizaciones manuales del <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model\">DOM</a>, bueno, eso es lo que dice en su p\u00e1gina web :oops: .</p>\n<p style=\"text-align:justify;\">Knockout se enfoca en 4 puntos clave:</p>\n\n<ol>\n \t<li style=\"text-align:justify;\">Enlaces (o <em>bindings</em>) declarativos de datos con elementos del DOM, con una sintaxis sencilla de entender.</li>\n \t<li style=\"text-align:justify;\">\"Refrescamiento autom\u00e1tico\" de los <em>bindings</em> observados con el estado de la data de forma precisa.</li>\n \t<li style=\"text-align:justify;\">Detecci\u00f3n de scopes, estableciendo relaciones entre el modelo de datos y la interfaz.</li>\n \t<li style=\"text-align:justify;\"><em>Templates</em> y componentes, que permiten amplificar y flexibilizar el desarrollo de interfaces de usuario sin alguna otra librer\u00eda adicional.</li>\n</ol>\n<p style=\"text-align:justify;\">Knockout.js utiliza un patr\u00f3n de dise\u00f1o <a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel\">MVVM</a> (Modelo - Vista - Vista-Modelo), el cual permite la observaci\u00f3n autom\u00e1tica de valores y cambios de estado en el DOM, capturar eventos, y dise\u00f1ar mecanismos de interacci\u00f3n complejos.</p>\n<p style=\"text-align:justify;\">Como comentario personal, me gust\u00f3 mucho la forma en que reduces c\u00f3digo al momento de declarar atributos que manejan eventos autom\u00e1ticamente, y la manera en la que interact\u00faan estos atributos con los datos. Aunque no es un concepto nuevo, el <a href=\"http://www.lucaongaro.eu/blog/2012/12/02/easy-two-way-data-binding-in-javascript/\">two-way data binding</a> en una aplicaci\u00f3n web actual es pr\u00e1cticamente impensable (claro, a menos que se trate de una p\u00e1gina est\u00e1tica o una <a href=\"http://codigofacilito.com/articulos/progressive-apps\">aplicaci\u00f3n web progresiva</a>).</p>\n<p style=\"text-align:justify;\">Para ilustrar esto, pondr\u00e9 un ejemplo sencillo:</p>\n\n\n[code lang=\"html\" title=\"Ejemplo de Sintaxis de Knockout.js\" collapse=\"true\" highlight=\"11,15,19,20,21,23\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;title&gt;Ejemplo Knockout.js&lt;/title&gt;\n\t&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/picnicss/6.1.2/picnic.min.css&quot;&gt;\n&lt;/head&gt;\n&lt;body class=&quot;container&quot;&gt;\n\n&lt;section class=&quot;flex two-300&quot;&gt;\n\t\t&lt;label&gt;&lt;input type=&quot;text&quot; placeholder=&quot;Ingresa un mensaje&quot; data-bind=&quot;value: nombre, valueUpdate: 'keyup'&quot;&gt;&lt;/label&gt;\n\t&lt;/section&gt;\n\n\n&lt;h2 data-bind=&quot;visible: nombre()&quot;&gt;Hola &lt;span data-bind=&quot;text: nombre&quot;&gt;&lt;/span&gt;&lt;/h2&gt;\n\n\t&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js&quot;&gt;&lt;/script&gt;\n\t&lt;script&gt;\n\t\tvar ViewModel = function (nombre) {\n\t\t\tvar self = this;\n\t\t\tself.nombre = ko.observable(nombre);\n\t\t}\n\t\tko.applyBindings(new ViewModel(&quot;Mundo!&quot;));\n\t&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">El ejemplo es simple, solo cuando se escribe en el <code>&lt;input&gt;</code>, aparece un mensaje con lo que escribas, actualizado autom\u00e1ticamente. Algunos elementos que resaltar.</p>\n\n<ul>\n \t<li style=\"text-align:justify;\">En la l\u00ednea 11,\u00a0 el atributo <code>data-bind</code> es el que usa Knockout para establecer los bindings necesarios, all\u00ed se utilizan uno o varios de esos bindings que puedes ver en su <a href=\"http://knockoutjs.com/documentation/introduction.html\">documentaci\u00f3n</a>.\n<ul>\n \t<li style=\"text-align:justify;\">El binding <code>value</code> permite mostrar cualquier valor en un elemento del DOM (generalmente un elemento <code>&lt;input&gt;</code> ).</li>\n \t<li style=\"text-align:justify;\">El binding <code>valueUpdate</code> permite capturar el evento necesario para actualizar el valor de acuerdo al binding declarado. En este caso, capturar\u00e1 el evento <code>'keyup'</code> de Javascript.</li>\n</ul>\n</li>\n \t<li style=\"text-align:justify;\">En la l\u00ednea 15, hay dos bindings en dos elementos distintos:\n<ul>\n \t<li style=\"text-align:justify;\">El binding <code>visible</code> permite que un elemento del DOM sea mostrado seg\u00fan una condici\u00f3n, si \u00e9sta evalua a true, entonces el elemento del DOM es mostrado.</li>\n \t<li style=\"text-align:justify;\">El binding <code>text</code> permite que un valor aparezca como texto plano dentro del DOM. La diferencia de \u00e9ste con el</li>\n</ul>\n</li>\n \t<li style=\"text-align:justify;\">En la l\u00ednea 19, se declara la Vista-Modelo como una funci\u00f3n instanciable, en la que se colocar\u00e1n todos los atributos que se observar\u00e1n en la vista.</li>\n \t<li style=\"text-align:justify;\">En la l\u00ednea 20, se almacena el scope, que es un tipo de patr\u00f3n muy com\u00fan en una arquitectura MVVM.</li>\n \t<li style=\"text-align:justify;\">En la l\u00ednea 21, se declara un atributo que va a almacenar el estado del <code>&lt;input&gt;</code> donde se declar\u00f3 el binding <code>value</code>.</li>\n \t<li style=\"text-align:justify;\">En la l\u00ednea 23, se aplican todos los bindings declarados sobre la vista.</li>\n</ul>\n<p style=\"text-align:justify;\">Pr\u00f3ximamente estar\u00e9 publicando m\u00e1s cosas espec\u00edficas sobre esta librer\u00eda, as\u00ed como su implementaci\u00f3n en un proyecto m\u00e1s complejo. \u00a1A noquear aplicaciones! ;)</p>\n&lt;/script&gt;"}, {"tags": ["y-sin-jquery", "algoritmos", "aprender", "can-js", "formato", "frontend", "html", "javascript", "javascripteando-ando", "nuevo", "sin-jquery", "tecnologia", "tutorial", "web-components", "zepto"], "title": "CONZEPTO: CON JAVASCRIPT \u00a1PUEDES!. USO DE CAN.JS", "date": "Tue, 09 Aug 2016 18:05:48 +0000", "content": "&lt; script src=\"my own\" title=\"uso de can.js\" &gt;\n<p style=\"text-align:justify;\">Aprendiendo un poco sobre el modelo de desarrollo basado en <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\" target=\"_blank\">Web Components</a>, me encuentro con que existen muchos frameworks en la actualidad que intentan emular este estilo de desarrollo que considero ser\u00e1 el futuro inmediato. Por mencionar algunos est\u00e1 <a href=\"https://www.polymer-project.org/1.0/\" target=\"_blank\">Polymer</a>, <a href=\"http://aurelia.io/\" target=\"_blank\">Aurelia</a>, <a href=\"http://x-tag.github.io/\" target=\"_blank\">X-Tag</a> (de los que espero hacer posts m\u00e1s adelante XD ), <a href=\"https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/\" target=\"_blank\">Knockout.js</a> y uno que \"puede\" ser bastante prometedor, as\u00ed que me arriesgu\u00e9 a probarlo...</p>\nhttp://www.youtube.com/watch?v=QUQsqBqxoR4\n\n<!--more-->\n<p style=\"text-align:justify;\"><a href=\"https://canjs.com/\" target=\"_blank\">Can.js</a> es un framework que utiliza diferentes formas de fabricar widgets o componentes de interfaz de usuario (o incluso aplicaciones enteras y complejas), orientado en su gran mayor\u00eda (pero no limitativo) al desarrollo basado en componentes, utilizando una API consistente y lo mejor (<span style=\"color:#d25349;\"><strong>#IMO</strong></span>), es que no necesariamente te restringe a trabajar con jQuery \u00a1yeah :mrgreen: !</p>\n\n<h2 style=\"text-align:justify;\">Desarrollo de la aplicaci\u00f3n</h2>\n<p style=\"text-align:justify;\">Como mi \"relaci\u00f3n\" con esa librer\u00eda es de amor y dolor (pero m\u00e1s dolor que amor :/ ), decid\u00ed usar el framework con <a href=\"http://zeptojs.com/\" target=\"_blank\">Zepto.js</a>. Dicho esto, hice una calculadora sencilla con apenas dos componentes: un <em>display</em> que contendr\u00e1 todas las operaciones que se escriban, y un bot\u00f3n que seg\u00fan la etiqueta que contenga, a\u00f1adir\u00e1 al <em>display</em> un d\u00edgito o una operaci\u00f3n. \u00a1Comenc\u00e9mos!</p>\n<p style=\"text-align:justify;\">En la vista principal tengo:</p>\n[code lang=\"html\" title=\"Archivo: index.html\" collapse=\"true\" highlight=\"9,14,16\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\t&lt;meta charset=&quot;UTF-8&quot;&gt;\n\t&lt;title&gt;Ejemplo Can Component&lt;/title&gt;\n\t\t&lt;link rel=&quot;stylesheet&quot; href=&quot;entireframework.min.css&quot;&gt;\n&lt;/head&gt;\n&lt;body style=&quot;margin: 0 auto; width: 80%&quot;&gt;\n\t&lt;script id=&quot;tpl-btn&quot; type=&quot;text/mustache&quot;&gt;\n\t\t&lt;display&gt;&lt;/display&gt;\n\t\t{{#each botones}}\n\t\t\t&lt;boton&gt;&lt;/boton&gt;\n\t\t{{/each}}\n\t&lt;/script&gt;\n&lt;div id=&quot;app&quot; style=&quot;width:200px; text-align: center;&quot;&gt;&lt;/div&gt;\n&lt;script src=&quot;zepto.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;event.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;ajax.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;can.zepto.min.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;can.stache.js&quot;&gt;&lt;/script&gt;\n\t&lt;script src=&quot;calculadora.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n<p style=\"text-align:justify;\">De las l\u00edneas 9 a 14 est\u00e1 el template de la aplicaci\u00f3n (Can.js lo compila y renderiza con <a href=\"https://mustache.github.io/\" target=\"_blank\">mustache</a>, el padre de <a href=\"https://jotaeseymas.wordpress.com/2015/08/29/uso-de-templates-handlebars-con-zepto-mitad-i-sintaxis-iteraciones-y-condicionales/\" target=\"_blank\">Handlebars</a> :D ), y dichas l\u00edneas son insertadas en la l\u00ednea 16. Lo dem\u00e1s son las inserciones de las librer\u00edas necesarias para el funcionamiento de Can.js con Zepto.js (valga decir que en su p\u00e1gina web puedes descargar una versi\u00f3n personalizada del framework con <a href=\"https://dojotoolkit.org/\" target=\"_blank\">Dojo</a>, <a href=\"http://mootools.net/\" target=\"_blank\">Mootools</a>, <a href=\"http://yuilibrary.com/\" target=\"_blank\">YUI</a> o jQuery ^^' ).</p>\n<p style=\"text-align:justify;\">Ahora, respecto a los componentes tengo:</p>\n[code lang=\"js\" title=\"Archivo: calculadora.js | Componente: display\" collapse=\"true\" firstline=\"45\"]\n...\ncan.Component.extend({\n\ttag: &quot;display&quot;,\n\ttemplate: can.stache(&quot;&lt;input type='text' id='display' disabled='disabled' style='margin-bottom:20px;margin-top:10px;text-align: right;font-family:Courier;width:90%' value=''/&gt;&quot;)\n});\n...\n[/code]\n<p style=\"text-align:justify;\"><code><a href=\"https://canjs.com/docs/can.Component.html\" target=\"_blank\">can.Component</a></code> permite crear componentes como objetos planos de Javascript a renderizar, mientras que el atributo <code>tag</code> es simplemente el nombre del componente como ser\u00e1 renderizado en la vista, y el atributo <code>template</code> es la vista que tendr\u00e1 el componente, dentro del cual se pueden definir estilos, data de prueba, bindings con otros componentes, etc\u00e9tera. Luego, usando <code><a href=\"https://canjs.com/docs/can.stache.html\" target=\"_blank\">can.stache</a></code>, se compila un template dentro de la vista.</p>\n<p style=\"text-align:justify;\">El componente bot\u00f3n es algo m\u00e1s \"complejo\":</p>\n[code lang=\"js\" title=\"Archivo: calculadora.js | Componente: boton\" collapse=\"true\"]\ncan.Component.extend({\n\ttag: &quot;boton&quot;,\n\ttemplate: can.stache(&quot;&lt;button id={{value}} class='btn btn-sm btn-info' style='width:46px;'&gt;{{value}}&lt;/button&gt;&quot;),\n\tviewModel: {\n\t\tagregarCalculo: function (paso) {\n\t\t\tvar cadena = $(&quot;#display&quot;).val();\n\t\t\tcadena = cadena === 0 ? paso : cadena + paso;\n\t\t\t$(&quot;#display&quot;).val(cadena);\n\t\t},\n\t\tprocesarCalculo: function () {\n\t\t\tvar operacion = $(&quot;#display&quot;).val();\n\t\t\tif (operacion.indexOf(&quot;%&quot;) !== -1) {\n\t\t\t\tvar terminos = operacion.split('%');\n\t\t\t\t$(&quot;#display&quot;).val(( parseFloat(terminos[0]) * parseFloat(terminos[1]) ) / 100);\n\t\t\t}\telse {\n\t\t\t\t$(&quot;#display&quot;).val(eval(operacion));\n\t\t\t}\n\t\t}\n\t},\n\tevents: {\n\t\tclick: function () {\n\t\t\tswitch (this.element[0].innerText) {\n\t\t\t\tcase &quot;C&quot;:\n\t\t\t\t\t$(&quot;#display&quot;).val('');\n\t\t\t\t\tbreak;\n\t\t\t\tcase &quot;=&quot;:\n\t\t\t\t\tthis.viewModel.procesarCalculo();\n\t\t\t\t\tbreak;\n\t\t\t\tcase &quot;\u25c0&quot;:\n\t\t\t\t\tif ($(&quot;#display&quot;).val().length &gt; 0)\n\t\t\t\t\t\t$(&quot;#display&quot;).val($(&quot;#display&quot;).val().substring(0, $(&quot;#display&quot;).val().length-1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase &quot;\u2117&quot;:\n\t\t\t\t\t$(&quot;#display&quot;).val(&quot;-----&gt; OFF &lt;-----   &quot;);\n\t\t\t\t\tsetTimeout(function (){\n\t\t\t\t\t\t$(&quot;body&quot;).hide();\n\t\t\t\t\t}, 2000);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.viewModel.agregarCalculo(this.element[0].innerText);\n\t\t\t}\n\t\t}\n\t}\n});\n...\n[/code]\n<p style=\"text-align:justify;\">En este componente entran en juego dos nuevos atributos de can.Component. El atributo <a href=\"https://canjs.com/docs/can.Component.prototype.viewModel.html\" target=\"_blank\"><code>viewModel</code></a>, que permite definir alg\u00fan comportamiento adicional para un componente en particular, y <a href=\"https://canjs.com/docs/can.Component.prototype.events.html\" target=\"_blank\"><code>events</code></a>, que contendr\u00e1 los <em>handlers</em> para los diferentes eventos que se produzcan en el componente.</p>\n<p style=\"text-align:justify;\">Por lo dem\u00e1s pueden ver el demo <a href=\"https://chinuxparibus.github.io/post-canjs/\" target=\"_blank\">ac\u00e1</a>.</p>\n\n<h2 style=\"text-align:justify;\">Instrucciones de uso de la calculadora</h2>\n<ul>\n\t<li style=\"text-align:justify;\">El bot\u00f3n<span style=\"color:#d25349;\"><strong> C</strong></span> sirve para \"limpiar\" el <em>display</em>.</li>\n\t<li style=\"text-align:justify;\">El bot\u00f3n <span style=\"color:#d25349;\"><strong>%</strong></span> calcula porcentajes (no <em>m\u00f3dulos</em>). Si escriben 25%3, calcular\u00e1n el 3% de 25.</li>\n\t<li style=\"text-align:justify;\">El bot\u00f3n <span style=\"color:#d25349;\"><strong>\u2117 </strong></span>\"apaga\" la calculadora (bueno, la oculta :oops: ).</li>\n\t<li style=\"text-align:justify;\">El bot\u00f3n <span style=\"color:#d25349;\"><strong>=</strong></span> muestra el resultado de la operaci\u00f3n escrita.</li>\n\t<li style=\"text-align:justify;\">Los dem\u00e1s botones a\u00f1aden un d\u00edgito o la operaci\u00f3n que corresponda.</li>\n</ul>\n<p style=\"text-align:justify;\">Me gust\u00f3 mucho desarrollar en esta librer\u00eda, sobre todo el hecho de que no te limita a trabajar con jQuery y que est\u00e1 basado en componentes. Lo importante es que puedas desarrollar aplicaciones. Con Javascript, <em><strong>\u00a1puedes!</strong></em> ;) .</p>\n&lt;/script&gt;"}, {"tags": ["nodeameste"], "title": "T\u00d3MATELA CON CALMA... Y GULP", "date": "Wed, 10 Aug 2016 21:28:49 +0000", "content": "&lt; script src=\"my own\" title=\"tomatela con calma y gulp\" &gt;\n<p style=\"text-align:justify;\">Para nadie es un secreto que comenzar desde cero con un proyecto web en <a href=\"https://nodejs.org/en/\" target=\"_blank\">Node.js</a>, por muy sencillo que parezca, termina a largo plazo complic\u00e1ndose, bien sea porque no existe un flujo de trabajo adecuado, porque no se conocen herramientas que permitan automatizar un poco el trabajo o bien recibimos un c\u00f3digo ya hecho con documentaci\u00f3n igual a <em>menos cero</em> y un cliente hab\u00eda pedido una demostraci\u00f3n para ayer...</p>\n\n\n[caption id=\"\" align=\"aligncenter\" width=\"560\"]<img class=\"\" src=\"http://s2.quickmeme.com/img/d6/d6a1143f571184db25f94613edd43b40af6d3a629221aba00d9efdcfef5efd84.jpg\" width=\"560\" height=\"357\" /> <strong>Ehm, pues, bueno... ^^'</strong>[/caption]\n\n<!--more-->\n<h2 style=\"text-align:justify;\">\u00bfEntonces, qu\u00e9 puedo hacer?</h2>\n<p style=\"text-align:justify;\"><a href=\"http://gulpjs.com\" target=\"_blank\">Gulp</a> es una herramienta de automatizaci\u00f3n de tareas que en gran medida resuelve varios de los inconvenientes que normalmente se presentan especialmente con los archivos Javascript, CSS y HTML est\u00e1ticos (a.k.a. <em>assets</em>) en un proyecto web:</p>\n\n<ul>\n \t<li style=\"text-align:justify;\">Previsualizaci\u00f3n autom\u00e1tica de cambios en assets.</li>\n \t<li style=\"text-align:justify;\">Minificaci\u00f3n de assets (reducir el tama\u00f1o de un archivo, aumenta la velocidad del request que se utiliza para incluirlo).</li>\n \t<li style=\"text-align:justify;\">Concatenaci\u00f3n de archivos (para minimizar el n\u00famero de requests).</li>\n \t<li style=\"text-align:justify;\">Cacheado avanzado de assets.</li>\n \t<li style=\"text-align:justify;\">Compilado de CSS din\u00e1micos (SASS, LESS y otros).</li>\n \t<li style=\"text-align:justify;\">Generaci\u00f3n (tipo boilerplate) de sitios web est\u00e1ticos.</li>\n \t<li style=\"text-align:justify;\">Renderizado y pre-renderizado de templates (usando HAML, Jade u otros).</li>\n \t<li style=\"text-align:justify;\">Generaci\u00f3n de data de pruebas mediante <em>mock-objects.</em></li>\n \t<li style=\"text-align:justify;\">Compila Javascript ES6 a Javascript ES5.</li>\n \t<li style=\"text-align:justify;\">Compresi\u00f3n y descompresi\u00f3n autom\u00e1tica de im\u00e1genes.</li>\n \t<li style=\"text-align:justify;\">Automatizar tareas de testing (en desarrollos TDD).</li>\n \t<li style=\"text-align:justify;\">Generaci\u00f3n autom\u00e1tica de documentaci\u00f3n de c\u00f3digo.</li>\n \t<li style=\"text-align:justify;\">Conversi\u00f3n de archivos Markdown a HTML (para blogs est\u00e1ticos, por ejemplo).</li>\n \t<li style=\"text-align:justify;\">Y mucho, mucho m\u00e1s...</li>\n</ul>\n[caption id=\"\" align=\"aligncenter\" width=\"560\"]<a href=\"https://img.vivaolinux.com.br/imagens/artigos/comunidade/gulp.jpg\"><img src=\"https://img.vivaolinux.com.br/imagens/artigos/comunidade/gulp.jpg\" width=\"560\" height=\"280\" /></a> <strong>Si, todo eso lo hace Gulp :idea:</strong>[/caption]\n<p style=\"text-align:justify;\">Si le\u00edste el anuncio con voz de informercial pues bien por ti o_O . Pero si, en general es un problema el hecho de que tengamos tantos archivos en una aplicaci\u00f3n o p\u00e1gina, mucho m\u00e1s si nos la dejaron legada as\u00ed que...</p>\n<p style=\"text-align:justify;\"><img class=\"aligncenter\" src=\"https://lh3.googleusercontent.com/-oYTGI-yMFKw/Vxh9oUJh6BI/AAAAAAAAAws/IpvlLgc6pqYZPJ6IRkJt7JTUtangD6l0w/w506-h750/meme1456530637gen.jpg\" width=\"560\" height=\"560\" /></p>\n<p style=\"text-align:justify;\">Para esta demostraci\u00f3n, solo instalar\u00e9 cuatro plugins, que ilustrar\u00e1n como Gulp puede resolver tres tareas importantes en el flujo de trabajo:</p>\n\n<ol>\n \t<li>Minificaci\u00f3n y compresi\u00f3n de archivos Javascript.</li>\n \t<li>Concatenaci\u00f3n de archivos CSS y JS.</li>\n \t<li>Previsualizaci\u00f3n autom\u00e1tica de cambios en assets.</li>\n</ol>\n<p style=\"text-align:justify;\">Lo primero que haremos ser\u00e1 instalar Gulp en la ra\u00edz de nuestro proyecto. En este caso, usar\u00e9 un <a href=\"http://www.andreagalanti.it/flatfy/\" target=\"_blank\">layout</a> de una p\u00e1gina web est\u00e1tica gratuito y con muchos <em>assets</em>:</p>\n\n\n[code lang=\"shell\"]$ npm install gulp --save[/code]\n\nLuego instalamos los plugins que necesitamos:\n<ul>\n \t<li><a href=\"https://www.npmjs.com/package/gulp-uglify/\" target=\"_blank\"><code>gulp-uglify</code></a> har\u00e1 la mayor parte del trabajo, minificar\u00e1 los archivos que le indiquemos.</li>\n \t<li><a href=\"https://www.npmjs.com/package/gulp-concat/\" target=\"_blank\"><code>gulp-concat</code></a> concatenar\u00e1 los archivos Javascript que le indiquemos, generando uno solo.</li>\n \t<li><a href=\"https://www.npmjs.com/package/gulp-css\" target=\"_blank\"><code>gulp-css</code></a> har\u00e1 lo mismo que <span style=\"color:#d25349;\"><code>gulp-concat</code></span> pero con los archivos CSS.</li>\n \t<li><a href=\"https://www.npmjs.com/package/gulp-watch/\" target=\"_blank\"><code>gulp-watch</code></a> observar\u00e1 los cambios que se hagan en los archivos que le indiquemos.</li>\n</ul>\n\n[code lang=\"shell\"]$ npm install gulp-uglify gulp-concat gulp-css gulp-watch --save[/code]\n\n<p style=\"text-align:justify;\">A continuaci\u00f3n, en la ra\u00edz de nuestro proyecto, creamos un archivo llamado <code>gulpfile.js</code>, y colocamos las tareas como deseamos ejecutarlas:</p>\n\n\n[code lang=\"js\" title=\"Archivo: gulpfile.js\" collapse=\"true\" highlight=\"7,8,9,11,12,13,27,28,31\"]\nvar gulp = require('gulp'),\n  uglify = require('gulp-uglify'),\n  concat = require('gulp-concat'),\n  cssmin = require('gulp-css');\n\n// Minificamos los archivos CSS\ngulp.task('css', function() {\n gulp.src([\n  './css/*.css',\n ])\n .pipe(concat('all.min.css'))\n .pipe(cssmin())\n .pipe(gulp.dest('./css'));\n});\n\n// Minificamos los archivos JS\ngulp.task('scripts', function () {\n gulp.src([\n  './js/*.js'\n ])\n .pipe(concat('all.min.js'))\n .pipe(uglify())\n .pipe(gulp.dest('./js'));\n});\n\ngulp.task('watch', function () {\n  gulp.watch('./js/*.js', ['scripts']);\n  gulp.watch('./css/*.css', ['css']);\n});\n\ngulp.task('default', ['css', 'scripts', 'watch']);\n[/code]\n\n<p style=\"text-align:justify;\">En la l\u00ednea 7, definimos una tarea a ser automatizada, declarando que tenga como origen, los archivos que est\u00e1n en la ruta definida en la l\u00ednea 9, seguidamente, usamos un <a href=\"https://nodejs.org/dist/latest-v4.x/docs/api/stream.html\" target=\"_blank\">flujo</a> para llevar todos esos archivos a un \u00fanico archivo por medio de <span style=\"color:#d25349;\"><code>concat()</code></span> en la l\u00ednea 11 y ser\u00e1 minificado y escrito en la ruta declarada en la l\u00ednea 13. El procedimiento es similar tanto para los archivos CSS como para los archivos Javascript.</p>\n<p style=\"text-align:justify;\">Luego en las l\u00edneas 27 y 28 simult\u00e1neamente se observar\u00e1 cualquier cambio realizado a cualquier archivo dentro de la ruta declarada, y de existir un cambio, se ejecutar\u00e1 la(s) tarea(s) definida(s). Finalmente, en la l\u00ednea 31, se declara como tarea por defecto, el orden de ejecuci\u00f3n de las tareas declaradas en el archivo. Es importante definir el orden, en especial si se est\u00e1 usando gulp-watch, ya que este orden influir\u00e1 en la observaci\u00f3n de los cambios en los archivos.</p>\n<p style=\"text-align:justify;\">Puedes declarar tantas tareas como desees, siempre que te sean \u00fatiles y te ayuden a acelerar el trabajo, \u00a1genial! XD . Ahora que tienes gran parte de tus tareas automatizadas... T\u00f3matela con calma... ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Wed, 10 Aug 2016 14:43:12 +0000"}, {"tags": ["javascripteando-ando"], "title": "DEJA TUS APLICACIONES EN LA LONA. PARTE 2. BINDINGS DE APARIENCIA", "date": "Fri, 12 Aug 2016 20:23:51 +0000", "content": "&lt; script src=\u201dmy own\u201d title=\u201dparte 2. bindings de apariencia\u201d &gt;\n<p style=\"text-align:justify;\">En un <a href=\"https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/\" target=\"_blank\">post</a> anterior, hab\u00eda descrito muy por encima lo que <a href=\"http://knockoutjs.com\" target=\"_blank\">Knockout.js</a> puede hacer a trav\u00e9s de su arquitectura MVVM. En este post voy a definir y utilizar los <em>bindings</em> de apariencia que provee Knockout por medio de un ejemplo pr\u00e1ctico... \u00a1A pelear se ha dicho!</p>\nhttp://www.youtube.com/watch?v=G6r1dAire0Y\n\n<!--more-->\n<h2>Bindings de apariencia</h2>\n<p style=\"text-align:justify;\">Knockout permite colocar elementos en el DOM y enlazarlos con determinados tipos de comportamiento que corresponden a las secciones de nuestra maqueta HTML o de los CSS que hayamos definido. En el ejemplo del post anterior vimos algunos de estos bindings:</p>\n\n<ul>\n \t<li style=\"text-align:justify;\">El binding <code>text</code> permite que un valor aparezca como texto plano dentro del DOM.</li>\n \t<li style=\"text-align:justify;\">El binding <code>visible</code> permite que un elemento del DOM sea mostrado seg\u00fan una condici\u00f3n.</li>\n</ul>\nAhora veremos algunos nuevos bindings.\n<ul>\n \t<li style=\"text-align:justify;\">El binding <a href=\"http://knockoutjs.com/documentation/html-binding.html\" target=\"_blank\"><code>html</code></a> permite insertar contenido HTML dentro de un elemento del DOM.</li>\n \t<li style=\"text-align:justify;\">El binding <a href=\"http://knockoutjs.com/documentation/style-binding.html\" target=\"_blank\"><code>style</code></a> permite insertar clases CSS dentro de un elemento del DOM.</li>\n \t<li style=\"text-align:justify;\">El binding <a href=\"http://knockoutjs.com/documentation/css-binding.html\" target=\"_blank\"><code>css</code></a> permite asociar clases y estilos CSS de forma condicional a un elemento del DOM.</li>\n \t<li style=\"text-align:justify;\">El binding <a href=\"http://knockoutjs.com/documentation/attr-binding.html\" target=\"_blank\"><code>attr</code></a> permite insertar atributos HTML que correspondan a un elemento espec\u00edfico del DOM.</li>\n</ul>\nA continuaci\u00f3n ilustro el uso de estos <em>bindings</em> con un ejemplo sencillo.\n\n[code lang=\"html\" collapse=\"true\" title=\"Ejemplo Knockout\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\u00a0\u00a0 \u00a0&lt;meta charset=&quot;UTF-8&quot;&gt;\n\u00a0\u00a0 \u00a0&lt;title&gt;Ejemplo Knockout&lt;/title&gt;\n\u00a0\u00a0 \u00a0&lt;style&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0.myClass {font-size: 32px;}\n\u00a0\u00a0 \u00a0&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\u00a0\u00a0 \u00a0&lt;h1 data-bind=&quot;html: getNombre()&quot;&gt;&lt;/h1&gt;\n\n\u00a0\u00a0 \u00a0&lt;!-- los bindings se separan con &quot;,&quot; como si fueran atributos de un objeto --&gt;\n\u00a0\u00a0 \u00a0&lt;!-- En el caso particular del binding &quot;style&quot;, los atributos se especifican en formato camelCase --&gt;\n\u00a0\u00a0 \u00a0&lt;p data-bind=&quot;style: { marginBottom: 0, paddingBottom: '1em' }, css: 'myClass'&quot;&gt;Este texto fue personalizado con clases CSS y estilos&lt;/p&gt;\n\n\u00a0\u00a0 \u00a0&lt;p data-bind=&quot;attr: { id: 'myCustomId' }&quot;&gt;Este p\u00e1rrafo est\u00e1 referenciado por un id personalizado.&lt;/p&gt;\n\n\u00a0\u00a0 \u00a0&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0function ViewModel() {\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0var self = this;\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0self.nombre = 'Chinux Paribus';\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0self.getNombre = function() {\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0return 'Hola &lt;em&gt;' + self.nombre + '&lt;/em&gt;!';\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0};\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0};\n\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0ko.applyBindings(new ViewModel());\n\u00a0\u00a0 \u00a0&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\n<p style=\"text-align:justify;\">Los bindings de apariencia se vuelven \u00fatiles cuando existen estados complejos en nuestra aplicaci\u00f3n o interfaz que no dependen necesariamente de elementos del DOM sino m\u00e1s bien de datos recibidos v\u00eda AJAX, base de datos u otros requests HTTP :mrgreen: .</p>\n<p style=\"text-align:justify;\">En el caso del binding <code><strong>attr</strong></code>, por ejemplo, es \u00fatil colocar id's \u00fanicos generados aleatoriamente o que dependan de otros datos para diferenciarlos (para asignar un diferente handler de eventos por elementos, por ejemplo). En el caso del binding <code><strong>html</strong></code>, puedes insertar un HTML que haya sido generado din\u00e1micamente por otra aplicaci\u00f3n o secci\u00f3n de \u00e9sta.</p>\n<p style=\"text-align:justify;\">Tanto el binding <code><strong>css</strong></code> como el binding <code><strong>style</strong></code> son muy \u00fatiles cuando se est\u00e1n utilizando efectos de transici\u00f3n, ya que est\u00e1n cambiando constantemente los atributos CSS como <code>width</code> o <code>position</code>, permitiendo crear animaciones de forma sencilla y sin usar mucho c\u00f3digo Javascript.</p>\n<p style=\"text-align:justify;\">Seguir\u00e9 con las ilustraciones de los bindings de Knockout hasta trabajar en un proyecto un tanto m\u00e1s complejo.</p>\n<p style=\"text-align:justify;\">\u00a1A noquear aplicaciones! ;)</p>\n&lt;/script&gt;"}, {"tags": ["y-sin-jquery", "aprender", "ddd", "formato", "free", "frontend", "google", "html", "javascript", "lenguaje-de-programacion", "mozilla-firefox", "mozilla-labs", "sin-jquery", "tecnologia", "vanilla-js", "web-components"], "title": "JAVASCRIPT 101: ENTENDIENDO WEB COMPONENTS", "date": "Tue, 16 Aug 2016 18:58:14 +0000", "content": "&lt; script src=\"other pages\" title=\"entendiendo web components\" &gt;\n<p style=\"text-align:justify;\">\u00a1Ah, aquellos d\u00edas en los que <a href=\"https://jotaeseymas.wordpress.com/2015/03/27/tal-vez-no-necesites-jquery/\" target=\"_blank\">no exist\u00eda \"<em>jotacueri\"</em></a>! La programaci\u00f3n en Javascript estaba repleta de referencias a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document\" target=\"_blank\"><code>document</code></a>, a <a href=\"https://developer.mozilla.org/es/docs/Web/API/Window\" target=\"_blank\"><code>window</code></a>, muchos arrays, muchos callbacks y no exist\u00eda nada m\u00e1s. <strong><span style=\"color:#7cbbbb;\">#Porai</span></strong> dec\u00edan que los desarrolladores en Javascript de verdad no usaban (\"y no usan\") frameworks o librer\u00edas... Aquellos d\u00edas... 8-)</p>\nhttp://www.youtube.com/watch?v=JNM2tV3PA_8\n\n<!--more-->\n<h2>Probablemente, esos d\u00edas vuelvan...</h2>\n<p style=\"text-align:justify;\">Previo a la llegada de <a href=\"https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/\" target=\"_blank\">ES6</a>, en Enero de 2015 fue presentado por la <a href=\"https://www.w3.org/\" target=\"_blank\">W3C</a>, un borrador que conten\u00eda la especificaci\u00f3n de varios est\u00e1ndares para \"modularizar la web\" usando solamente HTML5, CSS3 y Javascript para contribuir al desarrollo de componentes interoperables, autocontenidos y sin ninguna dependencia externa, as\u00ed naci\u00f3 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\" target=\"_blank\">Web Components</a>.</p>\n\n<h2 style=\"text-align:justify;\">\u00bfQu\u00e9 es Web Components?</h2>\nSeg\u00fan <a href=\"https://developer.mozilla.org/es/\" target=\"_blank\">MDN</a>:\n<blockquote>\"<strong>Web Components</strong> consiste en varias tecnolog\u00edas separadas. Puedes pensar en <strong>Web Components</strong> como widgets reutilizables de interfaz de usuario, desarrollados con tecnolog\u00eda web (HTML5, CSS3 y Javascript). Est\u00e1n autocontenidos dentro del navegador y no necesitan ninguna dependencia externa como jQuery o Dojo. Un Web Component existente no necesita ser implementado usando codificaci\u00f3n adicional, simplemente a\u00f1adiendo el c\u00f3digo que lo contiene dentro de una p\u00e1gina HTML. Web Components utiliza funciones nativas del navegador, tanto nuevas como aquellas en fase beta.\"\n\n-- Mozilla Developer Network.</blockquote>\nDichas tecnolog\u00edas son:\n<ol>\n\t<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements\" target=\"_blank\">Custom Elements</a>: Crea tags personalizadas que son reconocidas en el DOM.</li>\n\t<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\" target=\"_blank\">HTML templates</a>: Fusiona data con marcado HTML sin requerir compilaci\u00f3n previa.</li>\n\t<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM\" target=\"_blank\">Shadow DOM</a>: Encapsula HTML Templates, Javascript y CSS3 dentro del DOM.</li>\n\t<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components/HTML_Imports\" target=\"_blank\">HTML Imports</a>: Empaqueta Web Components. No ser\u00e1 soportado por Mozilla Firefox.</li>\n</ol>\n<p style=\"text-align:justify;\">M\u00e1s de un a\u00f1o despu\u00e9s, y a\u00fan con la llegada de ES6 y sus nuevas caracter\u00edsticas, en la actualidad <em>Web Components</em> continua siendo un borrador &gt;:( , sin embargo no ha pasado desapercibido este a\u00f1o. A la gran suma de frameworks, librer\u00edas y complementos (a.k.a. Polyfills) existentes, Web Components ha aportado algunas librer\u00edas (e ideas) adicionales. A saber (en orden de relevancia de b\u00fasquedas en <a href=\"https://www.google.com/trends/explore?date=all&amp;q=polymer.js,x-tag,Bosonic,webcomponents.js\" target=\"_blank\">Google</a>):</p>\n\n<ol>\n\t<li style=\"text-align:justify;\"><a href=\"http://bosonic.github.io/index.html\" target=\"_blank\">Bosonic</a>: comunitaria.</li>\n\t<li style=\"text-align:justify;\"><a href=\"https://www.polymer-project.org/1.0/\" target=\"_blank\">Polymer</a>: de Google.</li>\n\t<li style=\"text-align:justify;\"><a href=\"http://x-tag.github.io/\" target=\"_blank\">x-tag</a>: de Mozilla.</li>\n\t<li style=\"text-align:justify;\"><a href=\"http://webcomponents.org/\" target=\"_blank\">webcomponents.js</a>: de Google, como <em>polyfill</em> gratuito para Polymer, pero usado en todos los dem\u00e1s proyectos anteriores. :mrgreen:</li>\n</ol>\n<p style=\"text-align:justify;\">Pronto espero estar desarrollando componentes y probando este est\u00e1ndar. Aunque es una pena que mi navegador favorito no soporte del todo Web Components, tengo fe en que en alg\u00fan momento lo har\u00e1 ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 16 Aug 2016 18:48:21 +0000"}, {"tags": ["api", "aprender", "datos", "ddd", "free", "javascript", "json", "la-via-api", "lenguaje-de-programacion", "rest", "tecnologia"], "title": "ACERCA DE: API REST", "date": "Mon, 22 Aug 2016 16:58:29 +0000", "content": "&lt; script src=\"my own\" title=\"acerca de api rest\" &gt;\n<p style=\"text-align:justify;\">Para un t\u00edtulo que no deja nada a la imaginaci\u00f3n, es mejor poner un poco de m\u00fasica XD .</p>\nhttp://www.youtube.com/watch?v=fyMhvkC3A84\n\n<!--more-->\n<p style=\"text-align:justify;\">Pese a la gran cantidad de informaci\u00f3n que existe en internet respecto a este tema, pareciera que a\u00fan persisten dudas en cuanto a conceptos sobre <a href=\"https://es.wikipedia.org/wiki/Interfaz_de_programaci%C3%B3n_de_aplicaciones\" target=\"_blank\">API</a> REST. Al respecto, hice una <a href=\"http://slides.com/ch1nux/deck/live#/\" target=\"_blank\">presentaci\u00f3n</a> (que no alcanc\u00e9 a <strong><em>presentar</em></strong>, valga la \"rebuznancia\" :'( )</p>\n\n<h2 style=\"text-align:justify;\">\u00bfQu\u00e9 <strong>NO</strong> es API REST?</h2>\nAntes de empezar, aclaremos algo, una API <a href=\"https://es.wikipedia.org/wiki/Representational_State_Transfer\" target=\"_blank\">REST</a>:\n<ol>\n \t<li><strong><span style=\"color:#d25349;\">NO</span></strong> es un CRUD...</li>\n \t<li><strong><span style=\"color:#d25349;\">NO</span></strong> es una aplicaci\u00f3n...</li>\n \t<li><strong><span style=\"color:#d25349;\">NO</span></strong> es un lenguaje de programaci\u00f3n...</li>\n \t<li><strong><span style=\"color:#d25349;\">NO</span></strong> es un protocolo...</li>\n \t<li><strong><span style=\"color:#d25349;\">NO</span></strong> es una API...</li>\n</ol>\n[caption id=\"\" align=\"aligncenter\" width=\"521\"]<img class=\"\" src=\"https://s3.amazonaws.com/media-p.slid.es/uploads/530852/images/2734081/powerrangers.gif\" width=\"521\" height=\"292\" /> <strong>Cada vez que oigo alguna de las de arriba es como...</strong>[/caption]\n\nAclarado esto, hablemos pues de API REST :bear:\n<h2>\u00bfQu\u00e9 <strong>SI</strong> es API REST?</h2>\n<div class=\"sl-block\">\n<div class=\"sl-block-content\" dir=\"ui\">\n<ol>\n \t<li><strong>RE</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer (Transferencia de Estado Representacional).</li>\n \t<li>Es un estilo arquitect\u00f3nico.</li>\n \t<li>Tiene su propia sem\u00e1ntica, independiente de los lenguajes de programaci\u00f3n.</li>\n \t<li>Basado en el Protocolo <a href=\"https://es.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" target=\"_blank\">HTTP</a>.</li>\n \t<li>Cualquier API puede o no, estar basada en \u00e9ste.</li>\n \t<li>Creado por Roy Fielding, PhD en Computaci\u00f3n de la Universidad Irvin de California, en el a\u00f1o 2000.</li>\n \t<li>Ideal para sistemas distribuidos.</li>\n</ol>\nEn general, API REST posee 4 caracter\u00edsticas distintivas:\n<ol>\n \t<li style=\"text-align:justify;\">Cliente-Servidor: Todas las API REST [deben usar] usan arquitectura Cliente-Servidor.</li>\n \t<li style=\"text-align:justify;\">No posee estados: El manejo de las variables y de su estado durante las transacciones no es guardado durante la misma, es decir, la transacci\u00f3n contiene todos los datos necesarios para ejecutarse.</li>\n \t<li style=\"text-align:justify;\">Recursos uniformes y bien definidos: Es regla general que cada fuente de datos posea su definici\u00f3n espec\u00edfica (Ejemplo: <code>http://dominio.com/fuentedatos/proceso?parametro1=valor1</code> ).</li>\n \t<li style=\"text-align:justify;\">Sintaxis universal de acceso a recursos: Utiliza la sintaxis de identificaci\u00f3n de acceso a recursos del protocolo HTTP/HTTPS 1.1 (pr\u00f3ximamente 2.0), esto es, al menos, los verbos HTTP <code><span style=\"color:#d25349;\">GET</span></code>, <code><span style=\"color:#d25349;\">POST</span></code>, <code><span style=\"color:#d25349;\">PUT</span></code> y <code><span style=\"color:#d25349;\">DELETE</span></code>.</li>\n</ol>\n</div>\n</div>\nExisten 4 tipos de API REST actualmente:\n<table>\n<thead>\n<tr>\n<th>Tipo</th>\n<th>Recurso</th>\n<th>Petici\u00f3n/\nDifusi\u00f3n</th>\n<th>Ancho de Banda/\nTransacciones</th>\n<th>Rendimiento</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Orientada a Datos</td>\n<td>Colecciones de datos preprocesados</td>\n<td>R\u00e1pida/Lenta</td>\n<td>Poco/Muy Alto</td>\n<td>Alto</td>\n</tr>\n<tr>\n<td>Orientada a Servicios</td>\n<td>M\u00e9todos que arrojan datos</td>\n<td>Lenta/Muy lenta</td>\n<td>Mucho/Alto</td>\n<td>Depende de la conexi\u00f3n cliente-servidor</td>\n</tr>\n<tr>\n<td>Orientada a Hypermedia</td>\n<td>Multimedia (video, audio, streamings)</td>\n<td>Lenta/Muy r\u00e1pida</td>\n<td>Mucho/Muy bajo</td>\n<td>Bajo (generalmente cacheado)</td>\n</tr>\n<tr>\n<td>Orientada a Detecci\u00f3n</td>\n<td>Colecciones de datos sin procesar</td>\n<td>\"Tiempo real\"</td>\n<td>Mucho/Muy alto</td>\n<td>Muy alto</td>\n</tr>\n</tbody>\n</table>\n<p style=\"text-align:justify;\">La clasificaci\u00f3n anterior responde a varios par\u00e1metros, a saber:</p>\n\n<ul>\n \t<li style=\"text-align:justify;\"><strong>RECURSO</strong>: Corresponde a la forma de los datos que almacena o procesa la API REST.</li>\n \t<li style=\"text-align:justify;\"><strong>PETICI\u00d3N/DIFUSI\u00d3N</strong>: La petici\u00f3n corresponde a la velocidad con la que los datos son accedidos en general desde el cliente, y la difusi\u00f3n corresponde a la velocidad con la que la API REST es capaz de servir su informaci\u00f3n a m\u00faltiples clientes.</li>\n \t<li style=\"text-align:justify;\"><strong>ANCHO DE BANDA/TRANSACCIONES</strong>: El ancho de banda corresponde al consumo que requiere normalmente la API REST para responder a peticiones, mientras que las transacciones corresponde a la tasa de transferencia de paquetes HTTP desde el servidor hacia el cliente (diferente del par\u00e1metro DIFUSI\u00d3N).</li>\n \t<li style=\"text-align:justify;\"><strong>RENDIMIENTO</strong>: Corresponde \u00fanicamente al volumen general de informaci\u00f3n que procesa y env\u00eda la API REST en t\u00e9rminos de la velocidad de conexi\u00f3n.</li>\n</ul>\n<p style=\"text-align:justify;\">Era importante aclararlo de forma resumida, ya que muchas veces, no hay una fuente de informaci\u00f3n consistente... (si, Wikipedia, hablo de ti... :evil: ).</p>\n<p style=\"text-align:justify;\">Espero sea \u00fatil para referencias futuras de consulta r\u00e1pida... ;)</p>\n&lt;/script&gt;"}, {"tags": ["aprender", "arquitectura", "bower", "datos", "formato", "free", "frontend", "javascript", "javascripteando-ando", "jquery", "json", "nodeameste", "nuevo", "tecnologia"], "title": "ENTENDIENDO LA ARQUITECTURA FRONT-END USANDO BOWER", "date": "Tue, 06 Sep 2016 05:16:19 +0000", "content": "&lt; script src=\"my own\" title=\"arquitectura front-end\"&gt;\n<p style=\"text-align:justify;\">Hace muchos a\u00f1os atr\u00e1s, la programaci\u00f3n web front-end se limitaba a escribir interminables l\u00edneas de c\u00f3digo inentendible en Javascript (que s\u00ed, que no es <a href=\"https://web.archive.org/web/20040625050003/http://developer.netscape.com/docs/technote/index.html?content=javascript/eventhandler/eventhandler.htm\" target=\"_blank\">nuevo</a>). Gracias a Dios, se ha avanzado tanto en este campo que ya se habla de <a href=\"https://www.oreilly.com/ideas/defining-front-end-architecture\" target=\"_blank\">arquitectura front-end</a>, por la complejidad que pueden alcanzar las aplicaciones Javascript en la actualidad.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\"><a href=\"https://scotch.io/tutorials/javascript-transpilers-what-they-are-why-we-need-them\">Transpiladores</a>, lenguajes h\u00edbridos (como <a href=\"http://opalang.org/\" target=\"_blank\">Opa</a>, <a href=\"https://www.rust-lang.org/en-US/\" target=\"_blank\">Rust</a>, <a href=\"https://www.dartlang.org/\" target=\"_blank\">Dart</a>, <a href=\"http://www.scala-js.org/\" target=\"_blank\">Scala</a>, <a href=\"http://ceylon-lang.org/\" target=\"_blank\">Ceylon</a>... ^^' ) que compilan a Javascript, <a href=\"https://rethinkdb.com/faq/\" target=\"_blank\">NoSQL</a>, aplicaciones <a href=\"http://ionicframework.com/\" target=\"_blank\">h\u00edbridas</a> o de <a href=\"http://electron.atom.io/\" target=\"_blank\">escritorio</a>, y bueno, tambi\u00e9n est\u00e1 <del>React.js</del> ( &gt;:( ya hablar\u00e9 de eso en otro post); todo un ecosistema de aplicaciones en Javascript sin mencionar las interacciones que se pueden aplicar (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\" target=\"_blank\">Canvas</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API\" target=\"_blank\">WebGL</a>, <a href=\"https://developer.mozilla.org/en-US/docs/WebAPI\" target=\"_blank\">WebAPI</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Worker\" target=\"_blank\">Workers</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Push_API\" target=\"_blank\">PushAPI</a>, y un muy largo etc\u00e9tera :idea: ) pero este post no se trata de eso... \u00bfde qu\u00e9 iba? :roll: \u00a1Ah, si!</p>\n<p style=\"text-align:justify;\">Un problema caracter\u00edstico de las aplicaciones Javascript es la complejidad con la que muchas veces se interrelacionan las dependencias. Pueden darse casos en los que se use <strong><em>jotacueri </em></strong>con una gran dependencia de plugins que a su vez dependen de este, por lo que la librer\u00eda se convierte entonces en una dependencia cr\u00edtica. En este caso particular, hacer un \"control de versiones\" a la librer\u00eda, puede resultar un tremendo dolor de cabeza.</p>\n<p style=\"text-align:justify;\">Afortunadamente, existen en la actualidad, herramientas como <a href=\"https://bower.io/\" target=\"_blank\">bower.io</a> que facilitan el manejo de dependencias dentro de nuestra interfaz de usuario, que adem\u00e1s permite el control de versiones, la migraci\u00f3n de m\u00f3dulos y dependencias a otro proyecto as\u00ed como tambi\u00e9n la centralizaci\u00f3n de nuestras librer\u00edas.</p>\n<p style=\"text-align:justify;\">El \u00fanico requisito para instalar bower es simplemente tener <a href=\"https://nodejs.org/en/\" target=\"_blank\">Node.js</a> instalado, :mrgreen: entonces ejecutamos:</p>\n\n<pre>$ sudo npm -g install bower</pre>\nO como usuario root sin el <code>sudo.</code>\n\nUna vez instalado vamos a nuestro proyecto y ya podemos usarlo:\n<pre>$ bower &lt;comando&gt; &lt;paquete&gt;*</pre>\n<p style=\"text-align:justify;\">Donde <code>&lt;paquete&gt;</code> significa la librer\u00eda, framework o m\u00f3dulo que vayamos a instalar, y <code>&lt;comando&gt;</code> significa uno de estos comandos:</p>\n\n<table>\n<thead>\n<tr>\n<th>&lt;comando&gt;</th>\n<th>significado</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>init</code></td>\n<td>Inicia un proyecto en bower (crea un archivo bower.json en la ra\u00edz del proyecto</td>\n</tr>\n<tr>\n<td><code>install</code></td>\n<td>Instala un paquete o dependencia con bower (por defecto lo guarda en la carpeta bower_components en la ra\u017ai del proyecto, si \u00e9sta no existe se crear\u00e1)</td>\n</tr>\n<tr>\n<td><code>uninstall</code></td>\n<td>desinstala un paquete o dependencia con bower, as\u00ed como todas sus dependencias</td>\n</tr>\n<tr>\n<td><code>list</code></td>\n<td>Muestra todos los paquetes instalados con su respectivo \u00e1rbol de dependencias</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>Controla las versiones de bower.json en los diferentes paquetes, tambi\u00e9n imprime la versi\u00f3n de bower actual</td>\n</tr>\n<tr>\n<td><code>update</code></td>\n<td>Actualiza un paquete a la versi\u00f3n m\u00e1s reciente de dicho paquete (dando opci\u00f3n al usuario si desea actualizar tambi\u00e9n las dependencias de este paquete)</td>\n</tr>\n<tr>\n<td><code>link</code></td>\n<td>Enlaza una librer\u00eda o paquete instalada globalmente con npm dentro del proyecto (en el directorio bower_components)</td>\n</tr>\n<tr>\n<td><code>search</code></td>\n<td>Busca paquetes dentro del repositorio de bower.io</td>\n</tr>\n</tbody>\n</table>\nPuedes ver m\u00e1s comandos en la especificaci\u00f3n de su <a href=\"https://bower.io/docs/api/\" target=\"_blank\">API</a>.\n<p style=\"text-align:justify;\">Ahora vamos con un ejemplo de la gesti\u00f3n de dependencias de bower. Este es un proyecto en el que estoy trabajando actualmente y ac\u00e1 ejecut\u00e9 el comando <code>bower list</code>:</p>\n\n\n[caption id=\"attachment_1074\" align=\"aligncenter\" width=\"801\"]<a href=\"https://jotaeseymas.files.wordpress.com/2016/09/proyecto-bower1.png\"><img class=\"wp-image-1074 size-full\" src=\"https://jotaeseymas.files.wordpress.com/2016/09/proyecto-bower1.png\" alt=\"proyecto-bower\" width=\"801\" height=\"228\" /></a> <strong>Son pocas dependencias pero pueden ser m\u00e1s, muchas m\u00e1s...</strong> :twisted:[/caption]\n<p style=\"text-align:justify;\">En algunos casos, especifica el hash del \u00faltimo push a Github del paquete, en otros casos especifica la versi\u00f3n instalada y una versi\u00f3n actual que puedes instalar usando <code>bower update</code>, y en otros casos te especifica la incompatibilidad de algunas dependencias con otras versiones anteriores del paquete (lo cual me parece genial por si se te ocurre cometer alguna burrada ^^' )</p>\n<p style=\"text-align:justify;\">En general, que existan herramientas as\u00ed, me parece simplemente maravilloso, porque ya no estamos en la edad de las cavernas, donde el oscurantismo en torno a Javascript reinaba en los ordenadores... Ahora entiendo porque el logo de bower es un ave, \u00a1si con bower la gesti\u00f3n de dependencias ya es cosa de volar! ;)</p>\n\n\n[caption id=\"\" align=\"aligncenter\" width=\"259\"]<img class=\"\" src=\"https://camo.githubusercontent.com/aad5f0385a2d8524cb366a1bad62bc74e797743a/687474703a2f2f692e696d6775722e636f6d2f516d47485067632e706e67\" width=\"259\" height=\"259\" /> <strong>\u00a1A volar! XD</strong>[/caption]\n\n&lt;/script&gt;"}, {"tags": [], "date": "Tue, 06 Sep 2016 05:06:45 +0000"}, {"tags": ["aprender", "datos", "ddd", "formato", "free", "frontend", "html", "javascript", "javascripteando-ando", "jexia", "sin-jquery", "tecnologia", "tutorial"], "title": "DEJA TUS APLICACIONES EN LA LONA. PARTE 3. BINDINGS DE CONTROL DE FLUJO", "date": "Mon, 12 Sep 2016 21:29:28 +0000", "content": "&lt; script src=\"my own\" title=\"parte 3. bindings de control de flujo\"&gt;\n\n\u00a1Hola de nuevo\u00a0 :mrgreen: !\n<p style=\"text-align:justify;\">En un <a href=\"https://jotaeseymas.wordpress.com/2016/08/12/deja-tus-aplicaciones-en-la-lona-parte-2-bindings-de-apariencia/\" target=\"_blank\">post</a> anterior, mostr\u00e9 los bindings de apariencia de los que dispone <a href=\"http://knockoutjs.com\" target=\"_blank\">Knockout.js</a> para mostrar texto, etiquetas HTML y clases CSS condicionales. En este post, mostrar\u00e9 los binding de control de flujo para datos. \u00a1Estoy indetenible!\u00a0 :twisted:</p>\nhttp://www.youtube.com/watch?v=2zNSgSzhBfM\n\n<!--more-->\n<p style=\"text-align:justify;\">Por defecto, Knockout.js no tiene la posibilidad de manejar requests HTTP, ya que es una librer\u00eda orientada al desarrollo de componentes de interfaz de usuario, \u00bf<a href=\"https://jotaeseymas.wordpress.com/2016/08/06/deja-tus-aplicaciones-en-la-lona/\" target=\"_blank\">recuerdan</a>? Sin embargo, eso no limita la posiblidad de que pueda integrarse junto con otras librer\u00edas para complementarle.</p>\n<p style=\"text-align:justify;\">En este post, usar\u00e9 Minified.js como librer\u00eda para manejar los requests HTTP (podr\u00eda ser <strong><em>jotacueri</em></strong> pero ya saben lo que <a href=\"https://jotaeseymas.wordpress.com/2015/03/27/tal-vez-no-necesites-jquery/\" target=\"_blank\">pienso</a>\u00a0 :roll: ) hacia un servicio web que ten\u00eda hecho en <a href=\"http://jexia.com/\" target=\"_blank\"><strong><span style=\"color:#fab700;\">JEXIA</span></strong></a>.</p>\n\n<h2 style=\"text-align:justify;\">Bindings de control de flujo</h2>\n<p style=\"text-align:justify;\">La mayor\u00eda de las veces, es necesario utilizar rutinas que permita de forma din\u00e1mica, mostrar una tabla con una lista de datos obtenidos v\u00eda HTTP, AJAX, JSON u otra, considerando ademas que dichos atributos de esos datos influir\u00e1n directamente en la manera en la que se muestra la tabla en su conjunto (ordenar por columna ascendente o descentente, b\u00fasqueda parcial, cosas <a href=\"https://jotaeseymas.wordpress.com/2015/02/01/filtro-de-busqueda-en-angular-js/\" target=\"_blank\">as\u00ed</a>...\u00a0 XD ), visibilidad y estilos CSS.</p>\nKnockout.js dispone de los siguientes bindings para controlar el flujo de datos:\n<ul>\n \t<li style=\"text-align:justify;\">El binding <a href=\"http://knockoutjs.com/documentation/foreach-binding.html\" target=\"_blank\"><code>foreach</code></a> permite iterar sobre una lista (generalmente un Array observable) y convertirla en datos asociados a elementos del DOM.</li>\n \t<li style=\"text-align:justify;\">El binding <a href=\"http://knockoutjs.com/documentation/if-binding.html\" target=\"_blank\"><code>if</code></a> permite visibilidad condicional y desvinculaci\u00f3n permanente o temporal de un elemento del DOM y tiene su binding equivalente con \"l\u00f3gica negativa\": <a href=\"http://knockoutjs.com/documentation/ifnot-binding.html\" target=\"_blank\"><code>ifnot</code></a>.</li>\n \t<li style=\"text-align:justify;\">El binding <a href=\"http://knockoutjs.com/documentation/with-binding.html\" target=\"_blank\"><code>with</code></a> permite navegar entre scopes de diferentes objetos dentro del \u00e1rbol de objetos que exista en la lista o datos.</li>\n</ul>\nVeamos un ejemplo:\n\n[code lang=\"html\" collapse=\"true\" title=\"Archivo: control_flujo.html\" highlight=\"22,24,27\"]\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;es&quot;&gt;\n&lt;head&gt;\n\u00a0\u00a0 \u00a0&lt;meta charset=&quot;UTF-8&quot;&gt;\n\u00a0\u00a0 \u00a0&lt;title&gt;Ejemplo Knockout&lt;/title&gt;\n\u00a0\u00a0 \u00a0&lt;style&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0.no-visible {\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0background-color: #D25349;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0color: white;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0}\n\u00a0\u00a0 \u00a0&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\u00a0\u00a0 \u00a0&lt;table&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;thead&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;tr&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;th&gt;ID Estado&lt;/th&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;th&gt;Estado&lt;/th&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;th&gt;Visibilidad&lt;/th&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;/tr&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;/thead&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;tbody data-bind=&quot;foreach: estados;&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;!-- Condiciones arbitrarias para ilustrar el uso del binding &quot;if&quot; --&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;tr data-bind=&quot;if: nombre_estado[0] === 'A' || id_estado &gt; 12, css: {'no-visible': !visibilidad.esVisible};&quot;&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;td style=&quot;text-align: center;&quot;&gt;&lt;span data-bind=&quot;text: id_estado;&quot;&gt;&lt;/span&gt;&lt;/td&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;td style=&quot;text-align: center;&quot;&gt;&lt;span data-bind=&quot;text: nombre_estado;&quot;&gt;&lt;/span&gt;&lt;/td&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;td style=&quot;text-align: center;&quot; data-bind=&quot;with: visibilidad;&quot;&gt;&lt;span data-bind=&quot;text: esVisible ? 'Si' : 'No';&quot;&gt;&lt;/span&gt;&lt;/td&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;/tr&gt;\n\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0&lt;/tbody&gt;\n\u00a0\u00a0 \u00a0&lt;/table&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;http://minifiedjs.com/download/minified.js&quot;&gt;&lt;/script&gt;\n\u00a0\u00a0 \u00a0&lt;script src=&quot;control_flujo.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n[/code]\n\nEn el archivo Javascript tenemos:\n\n[code lang=\"js\" collapse=\"true\" title=\"Archivo: control_flujo.js\" highlight=\"39\"]\n// Se instancia el core de minified con lo que se va a utilizar\nvar $ = require('minified').$,\n\n// Usado para la conexi\u00f3n a JEXIA\n\t\tauth = {\n\t\t\tkey: '59bdc1086ba8f9c1b11ad54652ab9413',\n\t\t\tsecret: '38bda16cc69a8e6e50af89256e58e69dc725b63252a7c968'\n\t\t},\n\t\tbaseUrl = 'http://f9315280-a20a-11e5-9220-c76468a2eab4.app.jexia.com';\n\n// Autenticaci\u00f3n con JEXIA\n$.request('POST', baseUrl, auth).then(function(text) {\n\tvar data = $.parseJSON(text),\n\t\t\tsettings = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': 'Bearer ' + data.token,\n\t\t\t\t\t'Access-Control-Allow-Origin': '*'\n\t\t\t\t}\n\t\t\t};\n\t\treturn $.request('GET', baseUrl + '/estados', null, settings);\n\t}\n).then(function (text) {\n\tvar data = $.parseJSON(text);\n\n// Para ilustraci\u00f3n del binding &quot;with&quot;\n\t$(data).each(function (item) {\n\t\titem.visibilidad = {\n\t\t\tesVisible: Math.random() &gt; 0.5\n\t\t}\n\t});\n\n\tko.applyBindings(new ViewModel(data));\n});\n\n// Bindings a ser utilizados por Knockout.js\nfunction ViewModel(data) {\n\tvar self = this;\n\n\tself.estados = ko.observableArray(data);\n}\n[/code]\n\n<p style=\"text-align:justify;\">En la l\u00ednea 22 del HTML, aplicamos el binding <code><strong>foreach</strong></code>, el cual opera sobre el atributo estados, definido en el ViewModel, luego, en la l\u00ednea 24, definimos condiciones arbitrarias para ilustrar el uso del binding <code><strong>if</strong></code>. Finalmente, en la l\u00ednea 27, aplicamos el binding <code><strong>with</strong></code>, que permite acceder al atributo <code>esVisible</code> desde el scope del atributo <code>visibilidad</code>, definido en el tambi\u00e9n en el VIewModel.</p>\n<p style=\"text-align:justify;\">Poco hacemos en el Javascript aparte de manejar los requests HTTP a la lista en <strong><span style=\"color:#fab700;\">JEXIA</span></strong> y pas\u00e1rselos al ViewModel. En la l\u00ednea 39, definimos que el array de datos sea observable, esto significa que cada valor del array cambiar\u00e1 seg\u00fan los bindings que hayamos definido en el mismo o en otro ViewModel, lo cual permite realizar acciones complejas como ordenamientos seg\u00fan eventos o b\u00fasquedas parciales.</p>\n<p style=\"text-align:justify;\">Seguiremos informando, \u00a1hasta la pr\u00f3xima pelea!\u00a0 ;) .</p>\n&lt;/script&gt;"}, {"tags": ["sin-categoria"], "date": null, "content": "Famo.us + Angular.js https://famo.us/integrations/angular/#/intro\nKendoUI + Angular.js http://www.telerik.com/kendo-ui"}, {"tags": ["algoritmos", "aprender", "curioscriptades", "es6", "google", "javascript", "lenguaje-de-programacion", "mozilla-firefox", "post-format-aside", "tecnologia"], "title": "JAVASCRIPT MARXISTA. POR UN LENGUAJE SIN CLASES", "date": "Thu, 15 Sep 2016 19:25:28 +0000", "content": "&lt; script src=\"other pages\" title=\"por un lenguaje sin clases\"&gt;\n\n<strong><span style=\"color:#d25349;\">SI</span></strong>, as\u00ed, sin m\u00e1s ni menos...\n\n<!--more-->\n<p style=\"text-align:justify;\">Para nadie es un secreto que la <a href=\"https://jotaeseymas.wordpress.com/2015/06/18/senoras-y-senores-el-futuro-esta-aqui/\" target=\"_blank\">nueva</a> sintaxis de Javascript ES2015 es apetecible para aquellos puristas del paradigma de programaci\u00f3n Orientada a Objetos (con la inclusi\u00f3n de la palabra reservada <strong><span style=\"color:#d25349;\"><code>class</code></span></strong>), lo que quiere decir que se tiene una opcionalidad mayor al momento de escribir \"clases\" (recordemos que la la POO tradicional en lenguajes como Java o Ruby es muy diferente a la de Javascript).</p>\n<p style=\"text-align:justify;\">Disfrazar lo evidente es completamente in\u00fatil, y pese a esa opcionalidad de la que ahora disponemos para trabajar en la nueva versi\u00f3n del lenguaje, la herencia de prototipos de objeto sigue siendo lo que \"trabaja\" tras bambalinas mientras no exista otro mecanismo en la cadena de herencia Javascript (enti\u00e9ndase: DOM, navigator, window, etc.).</p>\n<p style=\"text-align:justify;\">Vaya que si les gusta <a href=\"http://marxist.js.org/\" target=\"_blank\">inventar</a> a la gente... :roll:</p>\n&lt;/script&gt;"}, {"tags": ["algoritmos", "aprender", "datos", "free", "frontend", "html", "javascript", "javascripteando-ando", "jexia", "json", "la-via-api", "lenguaje-de-programacion", "proyectos", "sin-jquery", "tecnologia"], "title": "\u00bfQU\u00c9 NO SE PUEDE ESTAR MOTIVADO? COELHO.JS \u00a1EN TRES HORAS!", "date": "Mon, 03 Oct 2016 18:14:32 +0000", "content": "&lt; script src=\"my own\" title=\"coelho.js en tres horas\" &gt;\n\n\u00bfQui\u00e9n dijo que uno no se pod\u00eda mantener motivado durante el trabajo?\n\nhttp://www.youtube.com/watch?v=ThZSrMGb7Wo\n<p style=\"text-align:justify;\">Estamos llegando al final del a\u00f1o y a\u00fan encuentro motivos para seguir trabajando, programando y, claro, escribiendo de lo que me gusta (Javascript, por supuesto XD ).</p>\n<p style=\"text-align:justify;\">Bas\u00e1ndome en los eventos de programaci\u00f3n que constantemente hacen en otros pa\u00edses (<em>hackathons</em> les dicen), en el cual generalmente se debe desarrollar una aplicaci\u00f3n en pocos d\u00edas, me pareci\u00f3 interesante plantearme la posibilidad de desarrollar una aplicaci\u00f3n en cuesti\u00f3n de horas, no de d\u00edas, usando las aplicaciones y tecnolog\u00edas que conozco.</p>\n<p style=\"text-align:justify;\"><!--more--></p>\n<p style=\"text-align:justify;\">Entonces naci\u00f3 <a href=\"https://chinuxparibus.github.io/coelho.js/\" target=\"_blank\">Coelho.js</a>...</p>\n\n\n[caption id=\"attachment_1091\" align=\"aligncenter\" width=\"477\"]<a href=\"https://jotaeseymas.files.wordpress.com/2016/10/fullpage-coelho.png\"><img class=\"wp-image-1091 size-full\" src=\"https://jotaeseymas.files.wordpress.com/2016/10/fullpage-coelho.png\" alt=\"fullpage-coelho\" width=\"477\" height=\"329\" /></a> <strong>Aunque no sea mi escritor favorito pero, fue lo que se me ocurri\u00f3...</strong>[/caption]\n<p style=\"text-align:justify;\">En un grupo de <a href=\"https://telegram.org/\" target=\"_blank\">Telegram</a> sobre <a href=\"https://telegram.me/vzlajs\" target=\"_blank\">Javascript</a> ten\u00edan una discusi\u00f3n sobre si deb\u00edan seguir estudiando una carrera o dedicarse de lleno a ser programador freelance, y disertaban sobre las motivaciones acerca de dicha decisi\u00f3n. El punto es que mientras ellos escrib\u00edan y escrib\u00edan, me motiv\u00e9 a hacer una aplicaci\u00f3n de frases aleatorias (hay cientos de ellas en el <a href=\"https://github.com/search?l=JavaScript&amp;q=quotes&amp;type=Repositories&amp;utf8=%E2%9C%93\" target=\"_blank\">gato-pulpo</a>) usando <a href=\"https://jotaeseymas.wordpress.com/2015/03/05/base-de-datos-en-el-navegador-parte-1-la-teoria/\" target=\"_blank\">LocalStorage</a> (manejado con Store.js, les debo el enlace ^^' ) como almac\u00e9n (cach\u00e9) de datos y una peque\u00f1a API REST en <span style=\"color:#fab700;\"><a style=\"color:#fab700;\" href=\"http://jexia.com/\" target=\"_blank\"><strong>JEXIA</strong></a></span> para guardar las frases, mi siempre <a href=\"https://jotaeseymas.wordpress.com/2015/10/21/jquery-no-es-el-unico-probando-minified-js/\" target=\"_blank\">fiel</a> navaja suiza <a href=\"http://minifiedjs.com/\" target=\"_blank\">Minified.js</a> como librer\u00eda Javascript y <a href=\"http://siimple.juanes.xyz/\" target=\"_blank\">Siimple</a>, un framework CSS muy bueno que vi por ah\u00ed.</p>\n<p style=\"text-align:justify;\">Tuve algunos problemas durante el debug de la app ya que <a href=\"https://developer.mozilla.org/es/docs/Web/HTTP/Access_control_CORS\" target=\"_blank\">CORS</a> me estaba ocasionando muchos problemas (demasiados para ser una aplicaci\u00f3n de 3 horas :oops: ), as\u00ed que utilic\u00e9 un proxy llamado <a href=\"http://crossorigin.me/\" target=\"_blank\">crossorigin.me</a> (f*ck yourself CORS\u00a0 :twisted: ) el cual permite hacer Cross Origin Requests de dominios <code>http</code> hacia <code>https</code> y viceversa, y como plus adicional, us\u00e9 <a href=\"http://www.favicon.cc/\" target=\"_blank\">Favicon Generator</a> para el \u00edcono de la aplicaci\u00f3n.</p>\nAprend\u00ed un mont\u00f3n en el proceso:\n<ul>\n \t<li>API REST usando un BaaS confiable como <span style=\"color:#fab700;\"><a style=\"color:#fab700;\" href=\"http://jexia.com/\" target=\"_blank\"><strong>JEXIA</strong></a></span>.</li>\n \t<li>Eventos de LocalStorage en el navegador.</li>\n \t<li>Programaci\u00f3n as\u00edncrona (Promises).</li>\n \t<li>CORS (y como \"violarlo\" <em>*risa malvada*</em>).</li>\n \t<li>M\u00e1s sobre landing pages.</li>\n</ul>\n<p style=\"text-align:justify;\"><strong style=\"text-align:justify;\">NOTA:</strong> Si no genera la frase o aparece un error, en consola, solo actualiza la p\u00e1gina (sigo trabajando en aprender a gestionar los eventos en el uso de LocalStorage, seguramente har\u00e9 un post cuando aprenda a hacerlo) ;)</p>\n&lt;/script&gt;"}, {"tags": [], "date": "Mon, 03 Oct 2016 16:59:51 +0000"}, {"tags": ["algoritmos", "aprender", "curioscriptades", "expresiones-regulares", "formato", "javascript", "lenguaje-de-programacion", "post-format-link", "tecnologia", "wat"], "title": "UN LARGO Y EMOCIONANTE VIAJE POR JAVASCRIPT EN 6 CARACTERES", "date": "Sat, 08 Oct 2016 13:53:30 +0000", "content": "&lt; script src=\"other pages\" title=\"solo 6 car\u00e1cteres\" &gt;\n<p style=\"text-align:justify;\">\u00bfQu\u00e9 sentir\u00edas si te dijera que puedes programar en Javascript solo con 6 caracteres?\u00a0 :twisted:</p>\n<!--more-->\n<p style=\"text-align:justify;\"><strong>SI</strong>, es lo hermoso (y extra\u00f1o) de este lenguaje, que al ser un lenguaje de scripting, tiene en su haber cosas muy particulares y potentes con las que puedes hacer cosas incre\u00edbles solo con los caracteres par\u00e9ntesis <code><strong>( )</strong></code>, corchetes <code><strong>[ ]</strong></code>, exclamaci\u00f3n <code><strong>!</strong></code> y adici\u00f3n <code><strong>+</strong></code>, por ejemplo:</p>\n\n\n[code lang=\"js\" collapse=\"true\" title=\"Copia y pega este c\u00f3digo en tu consola de navegador\"]\n[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(+(!+[]+!+[]+!+[]+[!+[]+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]+!+[]])+(!![]+[])[+[]]+(![]+[])[+[]]+([]+[])[(![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]()[+!+[]+[!+[]+!+[]]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]])()\n[/code]\n\n<p style=\"text-align:justify;\">Tranquilo, no es un virus, es algo ch\u00e9vere. Si no me crees, entonces mira este <a href=\"http://www.jazcash.com/a-javascript-journey-with-only-six-characters/\" target=\"_blank\">enlace</a>\u00a0 ;)</p>\n&lt;/script&gt;"}, {"tags": ["y-sin-jquery", "algoritmos", "aprender", "datos", "google", "javascript", "lenguaje-de-programacion", "libros", "post-format-status", "proyectos", "sin-categoria", "tutorial"], "title": "PRIMER POST DEL A\u00d1O. \u00a1FELIZ A\u00d1O NUEVO!", "date": "Sun, 01 Jan 2017 18:32:33 +0000", "content": "&lt; script src=\"my own\" title=\"feliz a&amp;ntilde;o nuevo\" &gt;\n\nSer\u00e9 breve en mi introducci\u00f3n: \u00a1Feliz a\u00f1o nuevo 2017!\n<p style=\"text-align:justify;\">Incre\u00edble (hasta para m\u00ed) que hayan transcurrido casi 2 a\u00f1os desde que <a href=\"https://jotaeseymas.wordpress.com/2015/01/18/dicen-que-el-universo/\" target=\"_blank\" rel=\"noopener\">inici\u00e9</a> este proyecto, inicialmente por diversi\u00f3n y curiosidad, pero al ver la cantidad de visitas y visitantes \u00fanicos... \u00a1Oye, que la cosa debe ir en serio!</p>\n\n\n[caption id=\"attachment_1105\" align=\"aligncenter\" width=\"423\"]<a href=\"https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-120801.png\"><img class=\"wp-image-1105 \" src=\"https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-120801.png\" alt=\"\u00a1Dupliqu\u00e9 la cantidad de visitas! XD #madrem\u00edawilly\" width=\"423\" height=\"286\" /></a> <strong>\u00a1Dupliqu\u00e9 la cantidad de visitas! XD #madrem\u00edawilly</strong>[/caption]\n\n<!--more-->\n<p style=\"text-align:justify;\">Algunas publicaciones me han tra\u00eddo mucha <a href=\"https://jotaeseymas.wordpress.com/2015/01/22/selects-dependientes-con-angular-js/\" target=\"_blank\" rel=\"noopener\">satisfacci\u00f3n</a>, otras no <a href=\"https://jotaeseymas.wordpress.com/2016/07/26/a-manera-de-disculpa-o-de-como-no-debe-ser-un-post/\" target=\"_blank\" rel=\"noopener\">tanto</a>, pero lo realmente importante es que ustedes han continuado all\u00ed, manteniendo este humilde intento de satisfacer mi curiosidad por Javascript como su referencia personal o <em>chuleta</em> como le decimos en Venezuela. Aunque en ocasiones, esa curiosidad se haya apagado moment\u00e1neamente.</p>\n\n\n[caption id=\"attachment_1106\" align=\"aligncenter\" width=\"426\"]<a href=\"https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-113842.png\"><img class=\" wp-image-1106\" src=\"https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-113842.png\" alt=\"5 meses de inactividad es un crimen de lesa humanidad :'(\" width=\"426\" height=\"141\" /></a> <strong>5 meses de inactividad en un blog es un crimen de lesa humanidad :'(</strong>[/caption]\n<p style=\"text-align:justify;\">Adem\u00e1s, dej\u00e9 una cantidad considerable de promesas sin cumplir (\u00a1PERD\u00d3OOOON! :'( )</p>\n\n\n[caption id=\"attachment_1107\" align=\"aligncenter\" width=\"840\"]<a href=\"https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-110429.png\"><img class=\"size-full wp-image-1107\" src=\"https://jotaeseymas.files.wordpress.com/2017/01/captura-de-pantalla-de-2017-01-01-110429.png\" alt=\"Pues si... Hay mucho de que hablar... Much\u00edsimo!!\" width=\"840\" height=\"383\" /></a> <strong>Pues si. Hay mucho de que hablar, escribir, leer e investigar... \u00a1Much\u00edsimo!</strong>[/caption]\n<p style=\"text-align:justify;\">Sin embargo, esa inactividad me hizo reflexionar sobre el prop\u00f3sito de un blog (ciertamente puedes ganar dinero con \u00e9l, pero no deber\u00eda ser el prop\u00f3sito principal), el cual no es otro que compartir conocimiento, independientemente de si escribes sobre Javascript, cocina, cine o <a href=\"http://blog.crespo.org.ve/\" target=\"_blank\" rel=\"noopener\">Python</a>.</p>\nPero una vez cumplido, no hay m\u00e1s all\u00e1 salvo reunir el conocimiento adquirido, elevar tus ganas de seguir adelante y buscar otra meta/sue\u00f1o/prop\u00f3sito.\n\n&nbsp;\n\nhttp://www.youtube.com/watch?v=7FSYmlKCQ_Q\n<p style=\"text-align:justify;\">Agradecido estoy por [casi] dos a\u00f1os maravillosos de una experiencia tan gratificante como lo es escribir sobre lo que te gusta y te apasiona. As\u00ed que este es, con mucha satisfacci\u00f3n, la \u00faltima publicaci\u00f3n en este blog.</p>\n<p style=\"text-align:justify;\">\u00a1Gracias por todo y ahora nos leeremos en <a href=\"https://jotaeseymas.surge.sh\" target=\"_blank\" rel=\"noopener\">Surge</a>, que mi Trello est\u00e1 lleno de cosas interesantes por escribir y no se escriben solas! ;)</p>\n<p style=\"text-align:justify;\">Un abrazo a todos desde Caracas, Venezuela...</p>\n<p style=\"text-align:justify;\">Jhony Grillet</p>\n&lt;/script&gt;"}]